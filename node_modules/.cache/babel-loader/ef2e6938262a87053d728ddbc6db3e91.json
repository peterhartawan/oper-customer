{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/order-client/detail-order-page.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/order-client/detail-order-page.vue","mtime":1628175042628},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport OrderBar from \"../../../components/order/order-bar\";\nimport router from \"../../../router\";\nimport { mapGetters } from 'vuex';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport Swal from 'sweetalert2';\nimport Order from \"./order\";\nexport default {\n  data: function data() {\n    return {\n      dropDown: null,\n      alt: require(\"@/assets/images/avatar-2.jpg\"),\n      form: {\n        placeholderName: 'Select Driver',\n        disableSelect: false,\n        driver_userid: '',\n        fullscreen_loading: false,\n        statusButtonEdit: null,\n        statusButtonAssign: null\n      }\n    };\n  },\n  components: {\n    Order: Order,\n    OrderBar: OrderBar\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    order: getter.GET_ORDER_DETAIL,\n    button: getter.GET_BUTTON,\n    path: getter.GET_PATH,\n    dropdownDriver: getter.GET_DRIVER_A_LIST,\n    identerpriseS: getter.GET_ID_ENTERPRISE,\n    templateS: getter.GET_TEMPLATE_ID,\n    loading: getter.GET_LOADING\n  })), {}, {\n    buttonStatuz: function buttonStatuz() {\n      return this.form.fullscreen_loading = this.button;\n    },\n    status: function status() {\n      if (this.order.order_status === 1) {\n        return \"ORDER_OPEN\";\n      }\n\n      if (this.order.order_status === 2) {\n        return \"ORDER_INPROGRESS\";\n      }\n\n      if (this.order.order_status === 3) {\n        return \"ORDER_COMPLETED\";\n      }\n\n      if (this.order.order_status === 4) {\n        return \"ORDER_MOVED\";\n      }\n\n      if (this.order.order_status === 5) {\n        return \"ORDER_CANCELED\";\n      }\n\n      if (this.order.order_status === 6) {\n        return \"ORDER_DELETED\";\n      }\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var userProfile;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.$store.dispatch(action.DROPDOWN_D_AVAILABLE, this.identerpriseS);\n\n            case 2:\n              if (this.dropdownDriver.data.length == 0) {\n                this.form.placeholderName = 'No Driver Available';\n                this.form.disableSelect = true;\n              } else {\n                this.dropDown = this.dropdownDriver.data;\n              }\n\n              userProfile = JSON.parse(localStorage.getItem('user'));\n              userProfile.idrole === 5 || userProfile.idrole == 3 ? this.form.statusButtonEdit = true : this.form.statusButtonEdit = false, userProfile.idrole === 5 || userProfile.idrole == 4 ? this.form.statusButtonAssign = true : this.form.statusButtonAssign = false;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.$store.dispatch(action.DROPDOWN_DRIVER, null);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    edit: function edit() {\n      this.$store.commit(mutation.ID_ORDER, this.order.idorder);\n      router.replace('/edit-order');\n    },\n    // async remoteMethod2(query) {\n    //     let trimName = query.trim()\n    // if (trimName.length > 0) {\n    //     await this.$store.commit(mutation.SET_LOADING, true);\n    //     await this.$store.dispatch(action.DROPDOWN_DRIVER, trimName);\n    // } else {\n    //     await this.$store.commit(mutation.SET_LOADING, true);\n    //     await this.$store.dispatch(action.DROPDOWN_DRIVER, trimName);\n    // }\n    //  this.dropDown = this.dropdownDriver;\n    // },\n    saveButton: function saveButton() {\n      var obj = {\n        driver_userid: this.form.driver_userid,\n        idorder: this.order.idorder\n      };\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch(action.ASSIGN_ORDER_CLIENT, obj);\n    },\n    enterpriseDriver: function enterpriseDriver() {},\n    backLCorp: function backLCorp() {\n      router.replace('/order/open');\n    },\n    buttonSearch: function buttonSearch() {},\n    imgAlt: function imgAlt(event) {\n      event.target.src = this.alt;\n    }\n  }\n};",{"version":3,"sources":["detail-order-page.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <!--<vue-scroll class=\"page-typography\">-->\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n        <order-bar />\n        <div class=\"card-base card-shadow--medium bg-white\">\n            <el-form v-if=\"form.statusButtonAssign\">\n                <div class=\"grid-content\">\n                    <el-form-item prop=\"task_template_id\">\n                        <span style=\"font-size: 16px\">\n                            <b style=\"padding-left: 0.8em\"> Assign Order</b> <span style=\"padding-left: 1.9em\"></span>\n                        </span> :\n                        <el-select\n                        filterable\n                        remote\n                        reserve-keyword\n                        :disabled=\"form.disableSelect\"\n                        :loading=\"loading\"\n                        v-model=\"form.driver_userid\"\n                        :placeholder=\"form.placeholderName\" >\n                            <el-option\n                                    v-for=\"item in dropDown\"\n                                    :key=\"item.id\"\n                                    :label=\"item.name\"\n                                    :value=\"item.id\"></el-option>\n                        </el-select>\n                    </el-form-item>\n                </div>\n            </el-form>\n\n            <el-row :gutter=\"20\">\n                <el-col :span=\"11\">\n                    <el-row :gutter=\"20\" class=\"line margin-top-25\">\n                        <el-col :span=\"8\">\n                            <div class=\"avatar2 align-vertical text-center\">\n                                <img src=\"../../../assets/images/avatar-2.jpg\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\n                            </div>\n                        </el-col>\n                        <el-col :span=\"16\" style=\"overflow-wrap: break-word\">\n                            <span class=\"p-name\">{{ order.user_fullname }}</span>\n                            <span class=\"p\">{{order.user_phonenumber}}</span>\n                            <span class=\"p\">{{order.email}}</span>\n                        </el-col>\n                    </el-row>\n                </el-col>\n                <el-col :span=\"13\">\n                    <h3 class=\"margin-bottom-1 margin-top-0 margin-left-10\"> DETAIL </h3>\n                    <el-row :gutter=\"30\">\n                        <el-col :span=\"8\">\n                            <dl>\n\n                                <dt>TRANSACTION ID</dt>\n                                <dd>{{ order.trx_id }}</dd>\n\n                                <dt>BOOKING TIME</dt>\n                                <dd>{{ order.booking_time }}</dd>\n                            </dl>\n                        </el-col>\n                        <el-col :span=\"8\">\n                            <dl>\n                                <dt> TYPE </dt>\n                                <dd>{{ order.enterprise.enterprise_type.name }}</dd>\n\n                                <dt>PLACE</dt>\n                                <dd>{{order.enterprise.office_address}}</dd>\n                            </dl>\n                        </el-col>\n                        <el-col :span=\"8\">\n                            <dl>\n                                <dt>VEHICLE</dt>\n                                <dd> {{ order.vehicle_type }} </dd>\n\n                                <dt>POLICE NO.</dt>\n                                <dd> {{ order.client_vehicle_license }} </dd>\n                            </dl>\n                        </el-col>\n                    </el-row>\n                </el-col>\n            </el-row>\n            <hr>\n\n            <el-row class=\"margin-top-25\">\n                <el-col :span=\"11\">\n                    <h3>TASK AND TEMPLATE</h3>\n                    <!--<h1 class=\"font-size-40\">Lorem Ipsum</h1>-->\n                </el-col>\n\n                <el-col :span=\"8\" class=\"line\">\n                    <dl>\n                        <dt>MESSAGE</dt>\n                        <dd style=\"overflow-wrap: break-word\">{{ `${order.message}` }}</dd>\n                    </dl>\n                </el-col>\n                <el-col :span=\"5\" class=\"text-center\">\n                    <span class=\"p font-weight-600 margin-bottom-10\">STATUS</span>\n                    <div>\n                        <img src=\"../../../assets/oper_asset/open.png\" alt=\"\" style=\"width: 20%\">\n                        <span class=\"p margin-top-10\">OPEN</span>\n                    </div>\n                </el-col>\n            </el-row>\n\n            <el-row>\n                <el-col :span=\"24\">\n                    <el-table\n                            :data=\"templateS.tasks\"\n                            stripe\n                            style=\"width: 100%\">\n                        <el-table-column\n                                prop=\"name\"\n                                label=\"Task Name\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"description\"\n                                label=\"Task Description\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"last_update_status\"\n                                label=\"Last Update\">\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n\n            <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n                <el-col :span=\"10\">\n                    <el-button\n                            type=\"info\"\n                            size=\"small\"\n                            @click=\"backLCorp\">\n                        <span class=\"padding-left-10 padding-right-10\"> Back </span>\n                    </el-button>\n                    <el-button\n                            type=\"primary\"\n                            size=\"small\"\n                            v-if=\"form.statusButtonEdit\"\n                            @click=\"edit\">\n                        <span class=\"padding-left-10 padding-right-10\">Edit </span>\n                    </el-button>\n                </el-col>\n                <el-col :lg=\"{span: 2, offset: 11}\" v-if=\"form.statusButtonAssign\">\n                    <el-button\n                            size=\"small\"\n                            @click=\"saveButton\"\n                            v-loading.fullscreen.lock=\"buttonStatuz\"\n                            type=\"success\">\n                        <span class=\"padding-left-10 padding-right-10\"> Dispatch </span>\n                    </el-button>\n                </el-col>\n            </el-row>\n        </div>\n    </div>\n    <!--</vue-scroll>-->\n</template>\n\n<script>\n    import  OrderBar from '../../../components/order/order-bar'\n    import router from '../../../router'\n    import { mapGetters } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as action from '../../../store/action-types'\n    import * as mutation from '../../../store/mutation-types'\n    import Swal from 'sweetalert2'\n    import Order from \"./order\";\n\n    export default {\n        data() {\n            return {\n                dropDown: null,\n                alt: require(\"@/assets/images/avatar-2.jpg\"),\n                form: {\n                    placeholderName     : 'Select Driver',\n                    disableSelect       : false,\n                    driver_userid       : '',\n                    fullscreen_loading  : false,\n                    statusButtonEdit    : null,\n                    statusButtonAssign  : null,\n                }\n            }\n        },\n        components: {\n            Order,\n            OrderBar\n        },\n        computed: {\n            ...mapGetters({\n                order           : getter.GET_ORDER_DETAIL,\n                button          : getter.GET_BUTTON,\n                path            : getter.GET_PATH,\n                dropdownDriver  : getter.GET_DRIVER_A_LIST,\n                identerpriseS   : getter.GET_ID_ENTERPRISE,\n                templateS       : getter.GET_TEMPLATE_ID,\n                loading         : getter.GET_LOADING,\n            }),\n            buttonStatuz: function  () {\n                return this.form.fullscreen_loading = this.button\n            },\n            status(){\n                if(this.order.order_status === 1 ) {return \"ORDER_OPEN\" }\n                if(this.order.order_status === 2 ) {return \"ORDER_INPROGRESS\" }\n                if(this.order.order_status === 3 ) {return \"ORDER_COMPLETED\" }\n                if(this.order.order_status === 4 ) {return \"ORDER_MOVED\" }\n                if(this.order.order_status === 5 ) {return \"ORDER_CANCELED\" }\n                if(this.order.order_status === 6 ) {return \"ORDER_DELETED\" }\n            },\n        },\n       async created() {\n            await this.$store.dispatch(action.DROPDOWN_D_AVAILABLE, this.identerpriseS);\n           if(this.dropdownDriver.data.length == 0) {\n               this.form.placeholderName = 'No Driver Available'\n               this.form.disableSelect = true\n           }else {\n               this.dropDown = this.dropdownDriver.data;\n           }\n            let userProfile = JSON.parse(localStorage.getItem('user'));\n            ( userProfile.idrole === 5 || userProfile.idrole == 3) ? this.form.statusButtonEdit =  true : this.form.statusButtonEdit = false,\n            ( userProfile.idrole === 5 || userProfile.idrole == 4) ? this.form.statusButtonAssign =  true : this.form.statusButtonAssign = false\n        },\n        async mounted() {\n            await this.$store.dispatch(action.DROPDOWN_DRIVER, null)\n        },\n        methods:    {\n            edit(){\n                this.$store.commit(mutation.ID_ORDER, this.order.idorder)\n                router.replace('/edit-order')\n            },\n            // async remoteMethod2(query) {\n            //     let trimName = query.trim()\n            // if (trimName.length > 0) {\n            //     await this.$store.commit(mutation.SET_LOADING, true);\n            //     await this.$store.dispatch(action.DROPDOWN_DRIVER, trimName);\n            // } else {\n            //     await this.$store.commit(mutation.SET_LOADING, true);\n            //     await this.$store.dispatch(action.DROPDOWN_DRIVER, trimName);\n            // }\n            //  this.dropDown = this.dropdownDriver;\n            // },\n            saveButton(){\n                let obj = {\n                    driver_userid   : this.form.driver_userid,\n                    idorder         : this.order.idorder\n                };\n                this.$store.commit(mutation.BUTTON_STATUS, true)\n                this.$store.dispatch(action.ASSIGN_ORDER_CLIENT, obj)\n            },\n            enterpriseDriver(){\n            },\n            backLCorp(){\n                router.replace('/order/open')\n            },\n            buttonSearch() {\n            },\n            imgAlt(event) {\n                event.target.src = this.alt;\n            },\n        },\n\n    }\n\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"../../../assets/scss/_variables\";\n    hr {\n        border-top : 1px solid $line-color\n    }\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n    .thumbnail {\n        border-radius: 0px;\n        position: relative;\n        width: 290px;\n        height: 300px;\n        overflow: hidden;\n    }\n\n    .thumbnail img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        height: 100%;\n        width: auto;\n        -webkit-transform: translate(-50%, -50%);\n        -ms-transform: translate(-50%, -50%);\n        transform: translate(-50%, -50%);\n    }\n\n    .thumbnail img.portrait {\n        width: 100%;\n        height: auto;\n    }\n\n    .h3 {\n        display: inline;\n    }\n    .p {\n        display: block;\n    }\n    .p-name {\n        display: block;\n        font-size: 2em;\n        font-weight: bold;\n        margin-top: 10px\n    }\n    .line {\n        border-right: 1px solid $line-color;\n    }\n    .word-wrap {\n        word-wrap: break-word;\n        overflow-wrap: break-word;\n    }\n\n    .center {\n        text-align: center;\n        vertical-align: middle;\n        line-height: 470px;\n    }\n\n    .middle {\n        text-align: center;\n        vertical-align: middle;\n        line-height: 280px;\n    }\n    .avatar2 {\n        img {\n            border: 1px solid transparentize($text-color, .9);\n            box-sizing: border-box;\n            width: 120px;\n            height: 120px;\n            border-radius: 50%;\n            transition: all .5s .25s;\n        }\n    }\n\n</style>"],"sourceRoot":"src/views/pages/order-client"}]}