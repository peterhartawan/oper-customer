{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/order-client/edit-order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/order-client/edit-order.vue","mtime":1640440454988},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444342},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1640440454211}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nexport default {\n  data: function data() {\n    var validateVehicleNum = function validateVehicleNum(rule, value, callback) {\n      if (!value.match(/^[A-Z0-9 _]*[A-Z0-9][A-Z0-9 _]*$/g)) {\n        callback(new Error('Please Input Valid Vehicle Number'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePhone = function validatePhone(rule, value, callback) {\n      if ((value + '').length > 13) {\n        callback(new Error('Phone must be less than 13 digits'));\n      } else {\n        if ((value + '').length < 10) {\n          callback(new Error('Phone must be more than 10 digits'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    return {\n      options: null,\n      vehicle_brands: null,\n      origin: '',\n      destination: '',\n      form: {\n        fullscreen_loading: false,\n        task_template_id: '',\n        booking_time: '',\n        origin_latitude: '',\n        origin_longitude: '',\n        destination_latitude: '',\n        destination_longitude: '',\n        client_vehicle_license: '',\n        user_fullname: '',\n        user_phonenumber: '',\n        vehicle_owner: '',\n        vehicle_brand: '',\n        vehicle_type: '',\n        vehicle_transmission: '',\n        vehicle_year: '',\n        vehicle_color: '',\n        message: '',\n        order_type: '',\n        idorder: '',\n        origin_name: '',\n        destination_name: '',\n        tasks: null\n      },\n      rules: {\n        task_templatex_id: [{\n          required: true,\n          message: 'Please Input Task Template ID',\n          trigger: ['blur', 'change']\n        }],\n        booking_time: [{\n          required: true,\n          message: 'Please Input Date & Time',\n          trigger: ['blur', 'change', 'focus']\n        }],\n        origin_latitude: [{\n          required: true,\n          message: 'Please Input Origin Latitude',\n          trigger: ['blur', 'change']\n        }],\n        origin_longitude: [{\n          required: true,\n          message: 'Please Input Origin Longitude',\n          trigger: ['blur', 'change']\n        }],\n        destination_latitude: [{\n          required: true,\n          message: 'Please Input Destination Latitude',\n          trigger: ['blur', 'change']\n        }],\n        destination_longitude: [{\n          required: true,\n          message: 'Please Input Destination Longitude',\n          trigger: ['blur', 'change']\n        }],\n        client_vehicle_license: [{\n          required: true,\n          message: 'Please Input Vehicle License',\n          trigger: ['blur', 'change']\n        }, {\n          validator: validateVehicleNum,\n          trigger: ['change', 'blur']\n        }],\n        user_fullname: [{\n          required: true,\n          message: 'Please Input FullName',\n          trigger: ['blur', 'change']\n        }],\n        user_phonenumber: [{\n          required: true,\n          message: 'Please Input Phone Number',\n          trigger: ['blur', 'change']\n        }, {\n          validator: validatePhone,\n          trigger: ['change', 'blur']\n        }],\n        vehicle_owner: [{\n          required: true,\n          message: 'Please Input Vehicle Owner',\n          trigger: ['blur', 'change']\n        }],\n        vehicle_brand: [{\n          required: true,\n          message: 'Please Input Vehicle Brand',\n          trigger: ['blur', 'change']\n        }],\n        vehicle_type: [{\n          required: true,\n          message: 'Please Input Vehicle Type',\n          trigger: ['blur', 'change']\n        }],\n        vehicle_transmission: [{\n          required: true,\n          message: 'Please Input Vehicle Transmission',\n          trigger: ['blur', 'change']\n        }],\n        vehicle_year: [{\n          required: true,\n          message: 'Please Input Vehicle Year',\n          trigger: ['blur', 'change']\n        }],\n        vehicle_color: [{\n          required: true,\n          message: 'Please Input Vehicle Color',\n          trigger: ['blur', 'change']\n        }],\n        message: [{\n          required: true,\n          message: 'Please Input Message',\n          trigger: ['blur', 'change']\n        }],\n        order_type: [{\n          required: true,\n          message: 'Please Input Order Type',\n          trigger: ['blur', 'change']\n        }]\n      }\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.$store.commit(mutation.BUTTON_STATUS, true);\n\n          _this.$store.dispatch(action.UPDATE_ORDER_CLIENT, _this.form);\n        } else {\n          return false;\n        }\n      });\n    },\n    addButton: function addButton() {\n      this.form.inspectors.push({\n        key: Date.now(),\n        name: '',\n        phone: ''\n      });\n    },\n    isCancel: function isCancel() {\n      this.$router.replace('/order/detail');\n    },\n    removeDomain: function removeDomain(item) {\n      var index = this.form.inspectors.indexOf(item);\n\n      if (index !== -1) {\n        this.form.inspectors.splice(index, 1);\n      }\n    },\n    remoteMethod: function remoteMethod(query) {},\n    isNumber: function isNumber(evt) {\n      evt = evt ? evt : window.event;\n      var charCode = evt.which ? evt.which : evt.keyCode;\n\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n        evt.preventDefault();\n        ;\n      } else {\n        return true;\n      }\n    },\n    originL: function originL(val) {\n      this.form.origin_longitude = val.longitude;\n      this.form.origin_latitude = val.latitude;\n      this.form.origin_name = val.name;\n    },\n    destionationL: function destionationL(val) {\n      this.form.destination_longitude = val.longitude;\n      this.form.destination_latitude = val.latitude;\n      this.form.destination_name = val.name;\n    },\n    vehicleBrand: function vehicleBrand(val) {\n      this.$store.dispatch(action.VEHICLE_TYPE, val);\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var links = this.vehicleTypeS;\n      var results = queryString ? links.filter(this.createFilter(queryString)) : links; // call callback function to return suggestions\n\n      cb(results);\n    },\n    createFilter: function createFilter(queryString) {\n      return function (link) {\n        return link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    taskT: function () {\n      var _taskT = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(value) {\n        var wah;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$store.dispatch(action.TEMPLATE_ID, value);\n\n              case 2:\n                wah = _context.sent;\n                this.form.tasks = wah.tasks;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function taskT(_x) {\n        return _taskT.apply(this, arguments);\n      }\n\n      return taskT;\n    }()\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    error: getter.GET_ERROR,\n    button: getter.GET_BUTTON,\n    templateTasks: getter.GET_TEMPLATE_LIST,\n    data: getter.GET_TEMPLATE_ID,\n    idorder: getter.GET_ID_ORDER,\n    vehicleTypeS: getter.GET_VEHICLE_TYPE\n  })), {}, {\n    buttonStatuz: function buttonStatuz() {\n      return this.form.fullscreen_loading = this.button;\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var obj, data, wah, dataLoc, dataVehicle;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.$store.dispatch(action.TEMPLATE_LIST, 1);\n              obj = {\n                id: this.idorder,\n                path: 'order/open'\n              };\n              _context2.next = 4;\n              return this.$store.dispatch(action.ID_ORDER_CLIENT, obj);\n\n            case 4:\n              data = _context2.sent;\n              this.form.task_template_id = data.task_template_task_template_id;\n              this.form.booking_time = data.booking_time;\n              this.form.origin_latitude = data.origin_latitude;\n              this.form.origin_longitude = data.origin_longitude;\n              this.form.destination_latitude = data.destination_latitude;\n              this.form.destination_longitude = data.destination_longitude;\n              this.form.client_vehicle_license = data.client_vehicle_license;\n              this.form.user_fullname = data.user_fullname;\n              this.form.user_phonenumber = data.user_phonenumber;\n              this.form.vehicle_owner = data.vehicle_owner;\n              this.form.vehicle_brand = data.vehicle_brand_id;\n              this.form.vehicle_type = data.vehicle_type;\n              this.form.vehicle_transmission = data.vehicle_transmission;\n              this.form.vehicle_year = data.vehicle_year;\n              this.form.vehicle_color = data.vehicle_color;\n              this.form.message = data.message;\n              this.form.order_type = data.order_type;\n              this.form.idorder = data.idorder;\n              this.form.origin_name = data.origin_name;\n              this.form.destination_name = data.destination_name;\n              this.origin = data.origin_name;\n              this.destination = data.destination_name;\n              _context2.next = 29;\n              return this.$store.dispatch(action.TEMPLATE_ID, data.task_template_task_template_id);\n\n            case 29:\n              wah = _context2.sent;\n              // this.form.task_template_id = wah.task_template_name\n              this.form.tasks = wah.tasks;\n              _context2.next = 33;\n              return this.$store.dispatch(action.DROPDOWN_LOCATION);\n\n            case 33:\n              dataLoc = _context2.sent;\n              this.options = dataLoc;\n              _context2.next = 37;\n              return this.$store.dispatch(action.VEHICLE_BRAND);\n\n            case 37:\n              dataVehicle = _context2.sent;\n              this.vehicle_brands = dataVehicle;\n\n            case 39:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["edit-order.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <!--<vue-scroll class=\"page-typography\">-->\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n        <div class=\"card-base card-shadow--medium bg-white\">\n            <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n                <el-row>\n                    <el-col :span=\"24\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"booking_time\">\n                                <el-date-picker\n                                        v-model=\"form.booking_time\"\n                                        type=\"datetime\"\n                                        placeholder=\"Booking Time\"\n                                        value-format=\"yyyy-MM-dd HH:mm:ss\"\n                                        size=\"large\"\n                                        prefix-icon=\"el-icon-date\">\n                                </el-date-picker>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"24\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"message\" >\n                                <el-input\n                                        type=\"textarea\"\n                                        v-model=\"form.message\"\n                                        placeholder=\"Order Message\"\n                                        :autosize=\"{ minRows: 5, maxRows: 7}\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-col>\n                            <p>User</p>\n                            <hr>\n                        </el-col>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"user_fullname\">\n                                <el-input\n                                        placeholder=\"Name\"\n                                        v-model=\"form.user_fullname\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"12\">\n                        <el-form-item prop=\"user_phonenumber\">\n                            <el-input\n                                    placeholder=\"Phone\"\n                                    v-on:keypress.native=\"isNumber\"\n                                    v-model=\"form.user_phonenumber\"></el-input>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-col>\n                            <p>Locations</p>\n                            <hr>\n                        </el-col>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"origin_latitude\">\n                                <el-select\n                                        v-model=\"origin\"\n                                        @change=\"originL\"\n                                        filterable\n                                        placeholder=\"Select Origin\" >\n                                    <el-option\n                                            v-for=\"item in options\"\n                                            :key=\"item.value\"\n                                            :label=\"item.name\"\n                                            :value=\"item\"></el-option>\n                                </el-select>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"12\">\n                        <el-form-item prop=\"destination_latitude\">\n                            <el-select\n                                    v-model=\"destination\"\n                                    @change=\"destionationL\"\n                                    placeholder=\"Select Destination\" >\n                                <el-option\n                                        v-for=\"item in options\"\n                                        :key=\"item.value\"\n                                        :label=\"item.name\"\n                                        :value=\"item\"></el-option>\n                            </el-select>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-col>\n                            <p>Vehicle</p>\n                            <hr>\n                        </el-col>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"8\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"vehicle_brand\">\n                                <el-select\n                                        style=\"width: 100%\"\n                                        v-model=\"form.vehicle_brand\"\n                                        @change=\"vehicleBrand\"\n                                        filterable\n                                        placeholder=\"Vehicle Brand\" >\n                                    <el-option\n                                            v-for=\"item in vehicle_brands\"\n                                            :key=\"item.id\"\n                                            :label=\"item.brand_name\"\n                                            :value=\"item.id\"></el-option>\n                                </el-select>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"vehicle_type\">\n                                <el-autocomplete\n                                        class=\"inline-input\"\n                                        v-model=\"form.vehicle_type\"\n                                        :fetch-suggestions=\"querySearch\"\n                                        placeholder=\"Vehicle Type\"\n                                        :trigger-on-focus=\"false\"\n                                        style=\"width: 100%\"\n                                ></el-autocomplete>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"vehicle_transmission\">\n                                <el-select\n                                        v-model=\"form.vehicle_transmission\"\n                                        style=\"width: 100%\"\n                                        placeholder=\"Select Vehicle Transmission\" >\n                                    <el-option label=\"Manual\" value=\"Manual\"></el-option>\n                                    <el-option label=\"Automatic\" value=\"Automatic\"></el-option>\n                                </el-select>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"8\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"client_vehicle_license\">\n                                <el-input\n                                        placeholder=\"Vehicle Number\"\n                                        v-model=\"form.client_vehicle_license\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <el-form-item prop=\"vehicle_owner\">\n                            <el-input  placeholder=\"Vehicle Owner / License\" v-model=\"form.vehicle_owner\"></el-input>\n                        </el-form-item>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <el-form-item prop=\"vehicle_year\">\n                            <el-input\n                                    placeholder=\"Vehicle Year\"\n                                    v-on:keypress.native=\"isNumber\"\n                                    v-model=\"form.vehicle_year\"></el-input>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-col>\n                            <p>Template & Task</p>\n                            <hr>\n                        </el-col>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"24\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"task_template_id\">\n                                <el-select\n                                        v-model=\"form.task_template_id\"\n                                        @change=\"taskT\"\n                                        :remote-method=\"remoteMethod\"\n                                        placeholder=\"Select Template\" >\n                                    <el-option\n                                            v-for=\"item in templateTasks\"\n                                            :key=\"item.task_template_id\"\n                                            :label=\"item.task_template_name\"\n                                            :value=\"item.task_template_id\"></el-option>\n                                </el-select>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-col>\n                            <p><b> Description </b> <span style=\"padding-left: 1.8em\"> : Description of template</span></p>\n                        </el-col>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-table\n                                :data=\"form.tasks\"\n                                stripe\n                                style=\"width: 100%\">\n                            <el-table-column\n                                    prop=\"name\"\n                                    label=\"Task Name\">\n                            </el-table-column>\n                            <el-table-column\n                                    prop=\"description\"\n                                    label=\"Task Description\">\n                            </el-table-column>\n                        </el-table>\n                    </el-col>\n                </el-row>\n                <el-row >\n                    <el-col :lg=\"{offset:18, span:6}\" style=\"display: flex; justify-content: flex-end; margin-top: 20px\">\n                        <div class=\"grid-content\">\n                            <el-form-item>\n                                <el-button @click=\"isCancel\">Cancel</el-button>\n                                <el-button\n                                        type=\"success\"\n                                        v-loading.fullscreen.lock=\"buttonStatuz\"\n                                        @click=\"onSubmit('form')\">Save</el-button>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n            </el-form>\n        </div>\n    </div>\n    <!--</vue-scroll>-->\n</template>\n\n<script>\n\n    import { mapGetters } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as action from '../../../store/action-types'\n    import * as mutation from '../../../store/mutation-types'\n\n    export default {\n        data() {\n            let validateVehicleNum = (rule, value, callback) => {\n                if(!value.match(/^[A-Z0-9 _]*[A-Z0-9][A-Z0-9 _]*$/g)) {\n                    callback(new Error('Please Input Valid Vehicle Number'))\n                } else {\n                    callback()\n                }\n            };\n            let validatePhone = (rule, value, callback) => {\n                if((value+'').length > 13 ) {\n                    callback(new Error('Phone must be less than 13 digits'))\n                } else {\n                    if((value+'').length < 10){\n                        callback(new Error('Phone must be more than 10 digits'))\n                    }else {\n                        callback()\n                    }\n                }\n            };\n            return {\n                options                     : null,\n                vehicle_brands              : null,\n                origin                      : '',\n                destination                 : '',\n                form: {\n                    fullscreen_loading      : false,\n                    task_template_id        : '',\n                    booking_time            : '',\n                    origin_latitude         : '',\n                    origin_longitude        : '',\n                    destination_latitude    : '',\n                    destination_longitude   : '',\n                    client_vehicle_license  : '',\n                    user_fullname           : '',\n                    user_phonenumber        : '',\n                    vehicle_owner           : '',\n                    vehicle_brand           : '',\n                    vehicle_type            : '',\n                    vehicle_transmission    : '',\n                    vehicle_year            : '',\n                    vehicle_color           : '',\n                    message                 : '',\n                    order_type              : '',\n                    idorder                 : '',\n                    origin_name             : '',\n                    destination_name        : '',\n                    tasks                   : null\n                },\n                rules: {\n                    task_templatex_id: [\n                        { required: true, message:'Please Input Task Template ID', trigger: ['blur','change']}\n                    ],\n                    booking_time: [\n                        { required: true, message:'Please Input Date & Time', trigger: ['blur','change', 'focus']},\n                    ],\n                    origin_latitude: [\n                        { required: true, message:'Please Input Origin Latitude', trigger: ['blur','change']}\n                    ],\n                    origin_longitude:  [\n                        { required: true, message:'Please Input Origin Longitude', trigger: ['blur','change']}\n                    ],\n                    destination_latitude: [\n                        { required: true, message: 'Please Input Destination Latitude', trigger: ['blur','change']}\n                    ],\n                    destination_longitude: [\n                        { required: true, message: 'Please Input Destination Longitude', trigger: ['blur','change']}\n                    ],\n                    client_vehicle_license: [\n                        { required: true, message:'Please Input Vehicle License', trigger: ['blur','change']},\n                        { validator: validateVehicleNum, trigger:['change', 'blur'] }\n                    ],\n                    user_fullname: [\n                        { required: true, message: 'Please Input FullName', trigger: ['blur','change']}\n                    ],\n                    user_phonenumber:   [\n                        { required: true, message: 'Please Input Phone Number', trigger: ['blur','change']},\n                        { validator: validatePhone, trigger:['change', 'blur'] }\n                    ],\n                    vehicle_owner:   [\n                        { required: true, message: 'Please Input Vehicle Owner', trigger: ['blur','change']}\n                    ],\n                    vehicle_brand:   [\n                        { required: true, message: 'Please Input Vehicle Brand', trigger: ['blur','change'] }\n                    ],\n                    vehicle_type:   [\n                        { required: true, message: 'Please Input Vehicle Type', trigger: ['blur','change'] }\n                    ],\n                    vehicle_transmission:   [\n                        { required: true, message: 'Please Input Vehicle Transmission', trigger: ['blur','change'] }\n                    ],\n                    vehicle_year:   [\n                        { required: true, message: 'Please Input Vehicle Year', trigger: ['blur','change'] }\n                    ],\n                    vehicle_color:   [\n                        { required: true, message: 'Please Input Vehicle Color', trigger: ['blur','change'] }\n                    ],\n                    message:   [\n                        { required: true, message: 'Please Input Message', trigger: ['blur','change'] }\n                    ],\n                    order_type:   [\n                        { required: true, message: 'Please Input Order Type', trigger: ['blur','change'] }\n                    ]\n                }\n            }\n        },\n        methods: {\n            onSubmit(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        this.$store.commit(mutation.BUTTON_STATUS, true)\n                        this.$store.dispatch(action.UPDATE_ORDER_CLIENT, this.form)\n                    } else {\n                        return false;\n                    }\n                });\n            },\n            addButton() {\n                this.form.inspectors.push({\n                    key: Date.now(),\n                    name:'',\n                    phone:''\n                })\n            },\n            isCancel(){\n                this.$router.replace('/order/detail')\n            },\n            removeDomain(item){\n                let index = this.form.inspectors.indexOf(item);\n                if(index !== -1) {\n                    this.form.inspectors.splice(index, 1);\n                }\n            },\n            remoteMethod(query) {\n            },\n            isNumber(evt) {\n                evt = (evt) ? evt : window.event;\n                var charCode = (evt.which) ? evt.which : evt.keyCode;\n                if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\n                    evt.preventDefault();;\n                } else {\n                    return true;\n                }\n            },\n            originL(val){\n                this.form.origin_longitude  = val.longitude\n                this.form.origin_latitude   = val.latitude\n                this.form.origin_name       = val.name\n            },\n            destionationL(val){\n                this.form.destination_longitude  = val.longitude\n                this.form.destination_latitude   = val.latitude\n                this.form.destination_name       = val.name\n            },\n            vehicleBrand(val){\n                this.$store.dispatch(action.VEHICLE_TYPE, val)\n            },\n            querySearch(queryString, cb) {\n                var links = this.vehicleTypeS;\n                var results = queryString ? links.filter(this.createFilter(queryString)) : links;\n                // call callback function to return suggestions\n                cb(results);\n            },\n            createFilter(queryString) {\n                return (link) => {\n                    return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n                };\n            },\n           async taskT(value){\n               let wah = await this.$store.dispatch(action.TEMPLATE_ID, value)\n               this.form.tasks = wah.tasks\n            }\n        },\n        computed: {\n            ...mapGetters({\n                error           : getter.GET_ERROR,\n                button          : getter.GET_BUTTON,\n                templateTasks   : getter.GET_TEMPLATE_LIST,\n                data            : getter.GET_TEMPLATE_ID,\n                idorder         : getter.GET_ID_ORDER,\n                vehicleTypeS    : getter.GET_VEHICLE_TYPE\n            }),\n            buttonStatuz: function  () {\n                return this.form.fullscreen_loading = this.button\n            }\n        },\n        async created(){\n            this.$store.dispatch(action.TEMPLATE_LIST, 1)\n            let obj = {\n                id      : this.idorder,\n                path    : 'order/open'\n            }\n            let data = await this.$store.dispatch(action.ID_ORDER_CLIENT, obj)\n                this.form.task_template_id        = data.task_template_task_template_id\n                this.form.booking_time            = data.booking_time\n                this.form.origin_latitude         = data.origin_latitude\n                this.form.origin_longitude        = data.origin_longitude\n                this.form.destination_latitude    = data.destination_latitude\n                this.form.destination_longitude   = data.destination_longitude\n                this.form.client_vehicle_license  = data.client_vehicle_license\n                this.form.user_fullname           = data.user_fullname\n                this.form.user_phonenumber        = data.user_phonenumber\n                this.form.vehicle_owner           = data.vehicle_owner\n                this.form.vehicle_brand           = data.vehicle_brand_id\n                this.form.vehicle_type            = data.vehicle_type\n                this.form.vehicle_transmission    = data.vehicle_transmission\n                this.form.vehicle_year            = data.vehicle_year\n                this.form.vehicle_color           = data.vehicle_color\n                this.form.message                 = data.message\n                this.form.order_type              = data.order_type\n                this.form.idorder                 = data.idorder\n                this.form.origin_name             = data.origin_name\n                this.form.destination_name        = data.destination_name\n                this.origin                       = data.origin_name\n                this.destination                  = data.destination_name\n\n            let wah = await this.$store.dispatch(action.TEMPLATE_ID, data.task_template_task_template_id)\n                // this.form.task_template_id = wah.task_template_name\n                this.form.tasks = wah.tasks\n            let dataLoc = await this.$store.dispatch(action.DROPDOWN_LOCATION)\n                this.options = dataLoc;\n            let dataVehicle = await this.$store.dispatch(action.VEHICLE_BRAND)\n                this.vehicle_brands = dataVehicle\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n</style>\n"],"sourceRoot":"src/views/pages/order-client"}]}