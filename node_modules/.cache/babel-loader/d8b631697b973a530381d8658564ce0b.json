{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/driver/list-driver.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/driver/list-driver.vue","mtime":1628175042621},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Affix from \"@/components/Affix\";\nimport { mapGetters } from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport Swal from 'sweetalert2';\nexport default {\n  name: \"ListDriver\",\n  data: function data() {\n    return {\n      currentPage: 1,\n      input: \"\",\n      affixEnabled: true,\n      indexT: 1,\n      vendorId: null,\n      input4: '',\n      status: 1,\n      spanPIN: 8,\n      form: {\n        name: '',\n        status: '',\n        nik: '',\n        phone: '',\n        email: '',\n        driver_type: '',\n        gender: '',\n        address: '',\n        birthdate: '',\n        photo: '',\n        id: '',\n        first_login: ''\n      },\n      payload: {\n        reason_suspend: \"\",\n        users_id: null,\n        iddriver: ''\n      },\n      select: [{\n        name: \"ACTIVE\",\n        status: 1\n      }, {\n        name: \"INACTIVE\",\n        status: 2\n      }, {\n        name: \"SUSPENDED\",\n        status: 3\n      }]\n    };\n  },\n  components: {\n    Affix: Affix\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    listData: getter.GET_LIST_DRIVER,\n    paginate: getter.GET_PAGINATE_DRIVER,\n    totalDriver: getter.GET_DRIVER_TOTAL,\n    dropDown: getter.GET_DROPDOWN_DRIVER,\n    driverAcc: getter.GET_TOTAL_ACCOUNT_DRIVER,\n    loading: getter.GET_BUTTON,\n    buttonDelete: getter.GET_BUTTON_DELETE,\n    buttonResendPIN: getter.GET_BUTTON_RESEND_PIN,\n    buttonActive: getter.GET_BUTTON_ACTIVE,\n    buttonSuspend: getter.GET_BUTTON_SUSPEND,\n    buttonEdit: getter.GET_BUTTON_EDIT\n  })), {}, {\n    paginator: function paginator() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    },\n    forTotal: function forTotal() {\n      if (this.listData) {\n        return this.totalDriver;\n      }\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.$store.dispatch(action.TOTAL_ACCOUNT_DRIVER);\n\n            case 2:\n              this.$store.commit(mutation.BUTTON_STATUS, true);\n              this.dataBeforeCreated();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    searchChange: function () {\n      var _searchChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(v) {\n        var trimName;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                trimName = this.input4.trim();\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context2.next = 4;\n                return this.$store.dispatch(action.LIST_DATA_DRIVER, {\n                  page: 1,\n                  typedispatcher: this.type,\n                  q: trimName,\n                  status: this.status\n                });\n\n              case 4:\n                this.firstData();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function searchChange(_x) {\n        return _searchChange.apply(this, arguments);\n      }\n\n      return searchChange;\n    }(),\n    handlePageChange: function () {\n      var _handlePageChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(page) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.currentPage = page;\n                _context3.next = 3;\n                return this.$store.dispatch(action.LIST_DATA_DRIVER, {\n                  page: this.currentPage,\n                  q: this.input4,\n                  status: this.status\n                });\n\n              case 3:\n                this.firstData();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handlePageChange(_x2) {\n        return _handlePageChange.apply(this, arguments);\n      }\n\n      return handlePageChange;\n    }(),\n    Create: function Create() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$router.push({\n        name: \"NewDriver\"\n      });\n    },\n    filterStatus: function () {\n      var _filterStatus = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(status) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.status = status;\n                _context4.next = 4;\n                return this.$store.dispatch(action.LIST_DATA_DRIVER, {\n                  page: 1,\n                  q: this.input4,\n                  status: this.status\n                });\n\n              case 4:\n                this.firstData();\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function filterStatus(_x3) {\n        return _filterStatus.apply(this, arguments);\n      }\n\n      return filterStatus;\n    }(),\n    openDialog: function openDialog(data) {\n      this.form.name = data.name;\n      this.form.status = data.status === 1 ? 'ACTIVE' : data.status === 2 ? 'INACTIVE' : 'SUSPENDED';\n      this.form.nik = data.nik;\n      this.form.phone = data.phonenumber;\n      this.form.photo = data.profile_picture;\n      this.form.email = data.email;\n      this.form.driver_type = data.drivertype.name;\n      this.form.gender = data.gender === 1 ? 'Male' : 'Female';\n      this.form.address = data.address;\n      this.form.birthdate = data.birthdate;\n      this.form.id = data.id;\n      this.payload.iddriver = data.iddriver;\n      this.form.first_login = data.is_first_login;\n      this.form.first_login === 1 ? this.spanPIN = 10 : this.spanPIN = 8;\n    },\n    getId: function getId(id) {\n      this.$store.dispatch(action.DATA_ID_DRIVER, id.users_id);\n    },\n    imgAlt: function imgAlt(event) {\n      event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\n    },\n    resendPIN: function resendPIN() {\n      var obj = {\n        pin_type: '/driver/resend-pin',\n        id: this.form.id\n      };\n      this.$store.commit(mutation.SET_RESEND_PIN_BUTTON, true);\n      this.$store.dispatch(action.RESEND_PIN, obj);\n    },\n    editButton: function editButton() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$store.dispatch(action.EDIT_DRIVER, this.form.id);\n    },\n    deleteB: function deleteB() {\n      var _this = this;\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\"\n      }).then(function (result) {\n        if (result.value) {\n          _this.payload.users_id = _this.form.id;\n\n          _this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n\n          _this.$store.dispatch(action.DELETE_DRIVER, _this.payload);\n\n          _this.dataBeforeCreated();\n        }\n      });\n    },\n    activeButton: function activeButton() {\n      var _this2 = this;\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, activate it!\"\n      }).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(result) {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (!result.value) {\n                    _context5.next = 7;\n                    break;\n                  }\n\n                  _this2.payload.users_id = _this2.form.id;\n\n                  _this2.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n\n                  _this2.$store.commit(mutation.BUTTON_STATUS, true);\n\n                  _context5.next = 6;\n                  return _this2.$store.dispatch(action.ACTIVATE_DRIVER, _this2.payload);\n\n                case 6:\n                  _this2.dataBeforeCreated();\n\n                case 7:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x4) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    suspendButton: function () {\n      var _suspendButton = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var _yield$Swal$fire, reason;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Swal.fire({\n                  title: 'Enter the reason of suspending',\n                  input: 'text',\n                  showCancelButton: true,\n                  confirmButtonColor: '#3085d6',\n                  cancelButtonColor: '#d33',\n                  confirmButtonText: 'Yes, suspend it!',\n                  inputValidator: function inputValidator(value) {\n                    if (!value) {\n                      return 'You need to write something!';\n                    }\n                  }\n                });\n\n              case 2:\n                _yield$Swal$fire = _context6.sent;\n                reason = _yield$Swal$fire.value;\n\n                if (!reason) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                // this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.payload.reason_suspend = reason;\n                this.payload.users_id = this.form.id;\n                this.$store.commit(mutation.SET_BUTTON_SUSPEND, true);\n                _context6.next = 10;\n                return this.$store.dispatch(action.SUSPEND_DRIVER, this.payload);\n\n              case 10:\n                this.dataBeforeCreated();\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function suspendButton() {\n        return _suspendButton.apply(this, arguments);\n      }\n\n      return suspendButton;\n    }(),\n    firstData: function firstData() {\n      if (this.listData.length > 0) {\n        var data = this.listData[0];\n        this.form.name = data.name;\n        this.form.status = data.status === 1 ? 'ACTIVE' : data.status === 2 ? 'INACTIVE' : 'SUSPENDED';\n        this.form.nik = data.nik;\n        this.form.phone = data.phonenumber;\n        this.form.photo = data.profile_picture;\n        this.form.email = data.email;\n        this.form.driver_type = data.drivertype.name;\n        this.form.gender = data.gender === 1 ? 'Male' : 'Female';\n        this.form.address = data.address;\n        this.form.birthdate = data.birthdate;\n        this.form.id = data.id;\n        this.payload.iddriver = data.iddriver;\n        this.form.first_login = data.is_first_login;\n        this.form.first_login === 1 ? this.spanPIN = 10 : this.spanPIN = 8;\n      }\n    },\n    dataBeforeCreated: function () {\n      var _dataBeforeCreated = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.$store.dispatch(action.LIST_DATA_DRIVER, {\n                  page: this.currentPage,\n                  q: this.input4,\n                  status: this.status\n                });\n\n              case 2:\n                this.firstData();\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function dataBeforeCreated() {\n        return _dataBeforeCreated.apply(this, arguments);\n      }\n\n      return dataBeforeCreated;\n    }()\n  }\n};",{"version":3,"sources":["list-driver.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA,OAAA,KAAA,MAAA,oBAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,KAAA,MAAA;AACA,OAAA,KAAA,MAAA;AACA,OAAA,KAAA,QAAA;AACA,OAAA,IAAA,MAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,CADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,IAHA;AAIA,MAAA,MAAA,EAAA,CAJA;AAKA,MAAA,QAAA,EAAA,IALA;AAMA,MAAA,MAAA,EAAA,EANA;AAOA,MAAA,MAAA,EAAA,CAPA;AAQA,MAAA,OAAA,EAAA,CARA;AASA,MAAA,IAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,GAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA,EAJA;AAKA,QAAA,KAAA,EAAA,EALA;AAMA,QAAA,WAAA,EAAA,EANA;AAOA,QAAA,MAAA,EAAA,EAPA;AAQA,QAAA,OAAA,EAAA,EARA;AASA,QAAA,SAAA,EAAA,EATA;AAUA,QAAA,KAAA,EAAA,EAVA;AAWA,QAAA,EAAA,EAAA,EAXA;AAYA,QAAA,WAAA,EAAA;AAZA,OATA;AAuBA,MAAA,OAAA,EAAA;AACA,QAAA,cAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAvBA;AA4BA,MAAA,MAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,MAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,MAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,MAAA,EAAA;AAFA,OATA;AA5BA,KAAA;AA2CA,GA9CA;AA+CA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GA/CA;AAkDA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,QAAA,EAAA,MAAA,CAAA,eADA;AAEA,IAAA,QAAA,EAAA,MAAA,CAAA,mBAFA;AAGA,IAAA,WAAA,EAAA,MAAA,CAAA,gBAHA;AAIA,IAAA,QAAA,EAAA,MAAA,CAAA,mBAJA;AAKA,IAAA,SAAA,EAAA,MAAA,CAAA,wBALA;AAMA,IAAA,OAAA,EAAA,MAAA,CAAA,UANA;AAOA,IAAA,YAAA,EAAA,MAAA,CAAA,iBAPA;AAQA,IAAA,eAAA,EAAA,MAAA,CAAA,qBARA;AASA,IAAA,YAAA,EAAA,MAAA,CAAA,iBATA;AAUA,IAAA,aAAA,EAAA,MAAA,CAAA,kBAVA;AAWA,IAAA,UAAA,EAAA,MAAA,CAAA;AAXA,GAAA,CADA;AAcA,IAAA,SAdA,uBAcA;AACA,aAAA,KAAA,QAAA;AACA,KAhBA;AAiBA,IAAA,QAjBA,sBAiBA;AACA,aAAA,KAAA,MAAA;AACA,KAnBA;AAoBA,IAAA,QApBA,sBAoBA;AACA,UAAA,KAAA,QAAA,EAAA;AACA,eAAA,KAAA,WAAA;AACA;AACA;AAxBA,IAlDA;AA6EA,EAAA,OA7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA8EA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,oBAAA,CA9EA;;AAAA;AA+EA,mBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;AACA,mBAAA,iBAAA;;AAhFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmFA,EAAA,OAAA,EAAA;AACA,IAAA,YADA;AAAA,oGACA,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,QAFA,GAEA,KAAA,MAAA,CAAA,IAAA,EAFA;AAGA,qBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;AAHA;AAAA,uBAIA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,gBAAA,EAAA;AACA,kBAAA,IAAA,EAAA,CADA;AAEA,kBAAA,cAAA,EAAA,KAAA,IAFA;AAGA,kBAAA,CAAA,EAAA,QAHA;AAIA,kBAAA,MAAA,EAAA,KAAA;AAJA,iBAAA,CAJA;;AAAA;AAUA,qBAAA,SAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAYA,IAAA,gBAZA;AAAA,wGAYA,IAZA;AAAA;AAAA;AAAA;AAAA;AAaA,qBAAA,WAAA,GAAA,IAAA;AAbA;AAAA,uBAcA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,gBAAA,EAAA;AACA,kBAAA,IAAA,EAAA,KAAA,WADA;AAEA,kBAAA,CAAA,EAAA,KAAA,MAFA;AAGA,kBAAA,MAAA,EAAA,KAAA;AAHA,iBAAA,CAdA;;AAAA;AAkBA,qBAAA,SAAA;;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoBA,IAAA,MApBA,oBAoBA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,KAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA;AAIA,KA1BA;AA2BA,IAAA,YA3BA;AAAA,oGA2BA,MA3BA;AAAA;AAAA;AAAA;AAAA;AA4BA,qBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;AACA,qBAAA,MAAA,GAAA,MAAA;AA7BA;AAAA,uBA8BA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,gBAAA,EAAA;AACA,kBAAA,IAAA,EAAA,CADA;AAEA,kBAAA,CAAA,EAAA,KAAA,MAFA;AAGA,kBAAA,MAAA,EAAA,KAAA;AAHA,iBAAA,CA9BA;;AAAA;AAkCA,qBAAA,SAAA;;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoCA,IAAA,UApCA,sBAoCA,IApCA,EAoCA;AACA,WAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,WAAA,IAAA,CAAA,MAAA,GAAA,IAAA,CAAA,MAAA,KAAA,CAAA,GAAA,QAAA,GAAA,IAAA,CAAA,MAAA,KAAA,CAAA,GAAA,UAAA,GAAA,WAAA;AACA,WAAA,IAAA,CAAA,GAAA,GAAA,IAAA,CAAA,GAAA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,WAAA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,eAAA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,WAAA,IAAA,CAAA,WAAA,GAAA,IAAA,CAAA,UAAA,CAAA,IAAA;AACA,WAAA,IAAA,CAAA,MAAA,GAAA,IAAA,CAAA,MAAA,KAAA,CAAA,GAAA,MAAA,GAAA,QAAA;AACA,WAAA,IAAA,CAAA,OAAA,GAAA,IAAA,CAAA,OAAA;AACA,WAAA,IAAA,CAAA,SAAA,GAAA,IAAA,CAAA,SAAA;AACA,WAAA,IAAA,CAAA,EAAA,GAAA,IAAA,CAAA,EAAA;AACA,WAAA,OAAA,CAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AACA,WAAA,IAAA,CAAA,WAAA,GAAA,IAAA,CAAA,cAAA;AACA,WAAA,IAAA,CAAA,WAAA,KAAA,CAAA,GAAA,KAAA,OAAA,GAAA,EAAA,GAAA,KAAA,OAAA,GAAA,CAAA;AACA,KAnDA;AAoDA,IAAA,KApDA,iBAoDA,EApDA,EAoDA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,cAAA,EAAA,EAAA,CAAA,QAAA;AACA,KAtDA;AAuDA,IAAA,MAvDA,kBAuDA,KAvDA,EAuDA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,GAAA,GAAA,OAAA,uCAAA;AACA,KAzDA;AA0DA,IAAA,SA1DA,uBA0DA;AACA,UAAA,GAAA,GAAA;AACA,QAAA,QAAA,EAAA,oBADA;AAEA,QAAA,EAAA,EAAA,KAAA,IAAA,CAAA;AAFA,OAAA;AAIA,WAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,qBAAA,EAAA,IAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,EAAA,GAAA;AACA,KAjEA;AAkEA,IAAA,UAlEA,wBAkEA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,KAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,WAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AACA,KArEA;AAsEA,IAAA,OAtEA,qBAsEA;AAAA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,eADA;AAEA,QAAA,IAAA,EAAA,mCAFA;AAGA,QAAA,IAAA,EAAA,SAHA;AAIA,QAAA,gBAAA,EAAA,IAJA;AAKA,QAAA,kBAAA,EAAA,SALA;AAMA,QAAA,iBAAA,EAAA,MANA;AAOA,QAAA,iBAAA,EAAA;AAPA,OAAA,EAQA,IARA,CAQA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,QAAA,GAAA,KAAA,CAAA,IAAA,CAAA,EAAA;;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA,IAAA;;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,aAAA,EAAA,KAAA,CAAA,OAAA;;AACA,UAAA,KAAA,CAAA,iBAAA;AACA;AACA,OAfA;AAgBA,KAvFA;AAwFA,IAAA,YAxFA,0BAwFA;AAAA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,eADA;AAEA,QAAA,IAAA,EAAA,mCAFA;AAGA,QAAA,IAAA,EAAA,SAHA;AAIA,QAAA,gBAAA,EAAA,IAJA;AAKA,QAAA,kBAAA,EAAA,SALA;AAMA,QAAA,iBAAA,EAAA,MANA;AAOA,QAAA,iBAAA,EAAA;AAPA,OAAA,EAQA,IARA;AAAA,2EAQA,kBAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,MAAA,CAAA,KADA;AAAA;AAAA;AAAA;;AAEA,kBAAA,MAAA,CAAA,OAAA,CAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,EAAA;;AACA,kBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA,IAAA;;AACA,kBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;;AAJA;AAAA,yBAKA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,eAAA,EAAA,MAAA,CAAA,OAAA,CALA;;AAAA;AAMA,kBAAA,MAAA,CAAA,iBAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARA;;AAAA;AAAA;AAAA;AAAA;AAkBA,KA3GA;AA4GA,IAAA,aA5GA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA+GA,IAAA,CAAA,IAAA,CAAA;AACA,kBAAA,KAAA,EAAA,gCADA;AAEA,kBAAA,KAAA,EAAA,MAFA;AAGA,kBAAA,gBAAA,EAAA,IAHA;AAIA,kBAAA,kBAAA,EAAA,SAJA;AAKA,kBAAA,iBAAA,EAAA,MALA;AAMA,kBAAA,iBAAA,EAAA,kBANA;AAOA,kBAAA,cAAA,EAAA,wBAAA,KAAA,EAAA;AACA,wBAAA,CAAA,KAAA,EAAA;AACA,6BAAA,8BAAA;AACA;AACA;AAXA,iBAAA,CA/GA;;AAAA;AAAA;AA8GA,gBAAA,MA9GA,oBA8GA,KA9GA;;AAAA,qBA4HA,MA5HA;AAAA;AAAA;AAAA;;AA6HA;AACA,qBAAA,OAAA,CAAA,cAAA,GAAA,MAAA;AACA,qBAAA,OAAA,CAAA,QAAA,GAAA,KAAA,IAAA,CAAA,EAAA;AACA,qBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA,IAAA;AAhIA;AAAA,uBAiIA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,cAAA,EAAA,KAAA,OAAA,CAjIA;;AAAA;AAkIA,qBAAA,iBAAA;;AAlIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqIA,IAAA,SArIA,uBAqIA;AACA,UAAA,KAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,QAAA,CAAA,CAAA,CAAA;AACA,aAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,aAAA,IAAA,CAAA,MAAA,GAAA,IAAA,CAAA,MAAA,KAAA,CAAA,GAAA,QAAA,GAAA,IAAA,CAAA,MAAA,KAAA,CAAA,GAAA,UAAA,GAAA,WAAA;AACA,aAAA,IAAA,CAAA,GAAA,GAAA,IAAA,CAAA,GAAA;AACA,aAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,WAAA;AACA,aAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,eAAA;AACA,aAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,aAAA,IAAA,CAAA,WAAA,GAAA,IAAA,CAAA,UAAA,CAAA,IAAA;AACA,aAAA,IAAA,CAAA,MAAA,GAAA,IAAA,CAAA,MAAA,KAAA,CAAA,GAAA,MAAA,GAAA,QAAA;AACA,aAAA,IAAA,CAAA,OAAA,GAAA,IAAA,CAAA,OAAA;AACA,aAAA,IAAA,CAAA,SAAA,GAAA,IAAA,CAAA,SAAA;AACA,aAAA,IAAA,CAAA,EAAA,GAAA,IAAA,CAAA,EAAA;AACA,aAAA,OAAA,CAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AACA,aAAA,IAAA,CAAA,WAAA,GAAA,IAAA,CAAA,cAAA;AACA,aAAA,IAAA,CAAA,WAAA,KAAA,CAAA,GAAA,KAAA,OAAA,GAAA,EAAA,GAAA,KAAA,OAAA,GAAA,CAAA;AACA;AACA,KAvJA;AAwJA,IAAA,iBAxJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAyJA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,gBAAA,EAAA;AACA,kBAAA,IAAA,EAAA,KAAA,WADA;AAEA,kBAAA,CAAA,EAAA,KAAA,MAFA;AAGA,kBAAA,MAAA,EAAA,KAAA;AAHA,iBAAA,CAzJA;;AAAA;AA6JA,qBAAA,SAAA;;AA7JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnFA,CAAA","sourcesContent":["<template>\n  <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <div class=\"container mb-200\">\n      <p class=\"font-weight-600\">ACCOUNT</p>\n      <el-row :gutter=\"50\">\n        <el-col :span=\"19\" v-if=\"driverAcc !== null\">\n          <el-card shadow=\"always\" :body-style=\"{padding: '5px'}\" class=\"card-border\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"8\">\n                <div class=\"line\">\n                  <p class=\"pb-20 font-weight-600 mt-8\">TOTAL DRIVER</p>\n                  <span class=\"font-size-44 font-weight-600\">{{driverAcc.total_driver}}</span>\n                </div>\n              </el-col>\n              <el-col :span=\"8\">\n                <div class=\"line\">\n                  <p class=\"pb-20 font-weight-600 mt-8\">ACTIVE ACCOUNT</p>\n                  <span class=\"font-size-44 font-weight-600\">{{driverAcc.total_driver_active}}</span>\n                </div>\n              </el-col>\n              <el-col :span=\"8\">\n                <div class=\"text-center\">\n                  <p class=\"pb-20 font-weight-600 mt-8\">SUSPENDED ACCOUNT</p>\n                  <span class=\"font-size-44 font-weight-600\">{{driverAcc.total_driver_suspend}}</span>\n                </div>\n              </el-col>\n            </el-row>\n          </el-card>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button @click=\"Create()\" shadow=\"always\" :body-style=\"{padding: '10px'}\" class=\"card-border plus-bg text-center\">\n            <i class=\"mdi mdi-plus font-size-60 font-weight-500 white-text\"></i>\n            <span class=\"text-p\">Add New</span>\n            <span class=\"text-p\">Driver</span>\n          </el-button>\n        </el-col>\n      </el-row>\n\n      <p class=\"font-weight-600 mt-40\">INFO</p>\n      <el-row class=\"mt-20\">\n        <el-card shadow=\"always\" class=\"card-border\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"12\" class=\"line-not-center\">\n                    <div class=\"avatar2 align-vertical text-center\">\n                        <img :src=\"form.photo\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\" >\n                        <h1 class=\"name-of\">{{ form.name }}</h1>\n                        <span>{{ form.status }}</span>\n                    </div>\n                    <el-row type=\"flex\" justify=\"center\" :gutter=\"20\">\n                        <el-col :span=\"9\">\n                            <div style=\"overflow-wrap: break-word\">\n                                <dl>\n                                    <dt>NIK</dt>\n                                    <dd>{{form.nik}}</dd>\n\n                                    <dt>PHONE</dt>\n                                    <dd>{{form.phone}}</dd>\n\n                                    <dt>EMAIL</dt>\n                                    <dd>{{form.email}}</dd>\n\n                                    <dt>DRIVER TYPE</dt>\n                                    <dd>{{ form.driver_type }}</dd>\n                                </dl>\n                            </div>\n                        </el-col>\n                        <el-col :span=\"9\">\n                            <div>\n                                <dl>\n                                    <dt>GENDER</dt>\n                                    <dd>{{form.gender}}</dd>\n\n                                    <dt>ADDRESS</dt>\n                                    <dd>{{form.address}}</dd>\n\n                                    <dt>BIRTHDAY</dt>\n                                    <dd>{{form.birthdate}}</dd>\n                                </dl>\n                            </div>\n                        </el-col>\n                    </el-row>\n\n                    <el-row type=\"flex\"  justify=\"center\" class=\"mt-10\">\n                        <el-col :span=\"6\"><el-button @click=\"editButton()\" type=\"info\" size=\"small\" class=\"small-edit\">Edit</el-button></el-col>\n                        <el-col :span=\"spanPIN\">\n                            <el-button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    :loading=\"buttonSuspend\"\n                                    @click=\"suspendButton\"\n                                    v-if=\"status === 1\">\n                                Suspend\n                            </el-button>\n                            <el-button\n                                    type=\"success\"\n                                    size=\"small\"\n                                    :loading=\"buttonResendPIN\"\n                                    @click=\"resendPIN\"\n                                    v-if=\"form.first_login === 1 && status === 1\">\n                                Resend PIN\n                            </el-button>\n                            <el-button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    :loading=\"buttonDelete\"\n                                    @click=\"deleteB\"\n                                    v-if=\"status === 3\">\n                                Delete\n                            </el-button>\n                            <el-button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    :loading=\"buttonActive\"\n                                    @click=\"activeButton\"\n                                    v-if=\"status === 3\">\n                                Active\n                            </el-button>\n                        </el-col>\n                    </el-row>\n                </el-col>\n\n                <el-col :span=\"12\">\n                    <el-row type=\"flex\"  justify=\"center\" :gutter=\"20\" class=\"mt-10\">\n                        <el-col :span=\"10\">\n                            <el-input\n                                    size=\"mini\"\n                                    placeholder=\"Search\"\n                                    @keyup.native=\"searchChange\"\n                                    v-model=\"input4\">\n                                <i slot=\"suffix\" class=\"el-input__icon el-icon-search\"></i>\n                            </el-input>\n                        </el-col>\n\n                        <el-col :span=\"6\">\n                            <el-select @change=\"filterStatus\" v-model=\"status\" filterable size=\"mini\" placeholder=\"All Status\">\n                                <el-option\n                                        v-for=\"item in select\"\n                                        :key=\"item.status\"\n                                        :label=\"item.name\"\n                                        :value=\"item.status\">\n                                </el-option>\n                            </el-select>\n                        </el-col>\n                    </el-row>\n\n                    <div class=\"contacts-list box grow scrollable only-y\" v-loading=\"loading\">\n                        <el-row>\n                            <div v-for=\"c in listData\" :key=\"c.id\" class=\"flex contact\" @click=\"openDialog(c)\">\n                                <div class=\"avatar align-vertical el-col el-col-4\">\n                                    <img :src=\"c.profile_picture\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\n                                </div>\n                                <div class=\"info box grow flex el-col el-col-20\">\n                                    <div class=\"name box grow flex column justify-center p-10 scrollable only-x\">\n                                        <div class=\"fullname fs-18\"><strong>{{c.name}}</strong></div>\n                                        <div class=\"phone fs-14 secondary-text\">{{c.phonenumber}}</div>\n                                        <div class=\"email fs-14 secondary-text\">{{c.email}}</div>\n                                    </div>\n                                    <div class=\"phone align-vertical p-10 green\" v-if=\"c.status === 1\"><span class=\"align-vertical-middle font-weight-600\">ACTIVE</span></div>\n                                    <div class=\"phone align-vertical p-10\" v-if=\"c.status === 2\"><span class=\"align-vertical-middle font-weight-600\">IN ACTIVE</span></div>\n                                    <div class=\"phone align-vertical p-10 red\" v-if=\"c.status === 3\"><span class=\"align-vertical-middle font-weight-600\">SUSPANDED</span></div>\n                                </div>\n                            </div>\n                        </el-row>\n                        <div class=\"grid-content\">\n                            <el-pagination\n                                    background\n                                    layout=\"prev, pager, next\"\n                                    @current-change=\"handlePageChange\"\n                                    :total=\"forTotal\"\n                            ></el-pagination>\n                        </div>\n                    </div>\n                </el-col>\n\n            </el-row>\n        </el-card>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\n    import Affix from \"@/components/Affix\";\n    import { mapGetters } from \"vuex\";\n    import * as getter from \"../../../store/getters-types\";\n    import * as action from \"../../../store/action-types\";\n    import * as mutation from '../../../store/mutation-types';\n    import Swal from 'sweetalert2'\n\nexport default {\n  name: \"ListDriver\",\n  data() {\n    return {\n      currentPage   : 1,\n      input         : \"\",\n      affixEnabled  : true,\n      indexT        : 1,\n      vendorId      : null,\n      input4        : '',\n      status        : 1,\n      spanPIN       : 8,\n      form: {\n            name: '',\n            status: '',\n            nik: '',\n            phone: '',\n            email: '',\n            driver_type: '',\n            gender: '',\n            address: '',\n            birthdate: '',\n            photo: '',\n            id: '',\n            first_login: '',\n      },\n      payload: {\n          reason_suspend: \"\",\n          users_id: null,\n          iddriver: ''\n      },\n      select: [\n                {\n                    name: \"ACTIVE\",\n                    status: 1,\n                },\n                 {\n                    name: \"INACTIVE\",\n                    status: 2,\n                },\n                {\n                    name: \"SUSPENDED\",\n                    status: 3\n                }\n            ],\n        };\n      },\n      components: {\n        Affix\n      },\n      computed: {\n        ...mapGetters({\n            listData        : getter.GET_LIST_DRIVER,\n            paginate        : getter.GET_PAGINATE_DRIVER,\n            totalDriver     : getter.GET_DRIVER_TOTAL,\n            dropDown        : getter.GET_DROPDOWN_DRIVER,\n            driverAcc       : getter.GET_TOTAL_ACCOUNT_DRIVER,\n            loading         : getter.GET_BUTTON,\n            buttonDelete    : getter.GET_BUTTON_DELETE,\n            buttonResendPIN : getter.GET_BUTTON_RESEND_PIN,\n            buttonActive    : getter.GET_BUTTON_ACTIVE,\n            buttonSuspend   : getter.GET_BUTTON_SUSPEND,\n            buttonEdit      : getter.GET_BUTTON_EDIT\n        }),\n        paginator() {\n          return this.paginate;\n        },\n        indexTam() {\n          return this.indexT;\n        },\n        forTotal() {\n          if (this.listData) {\n            return this.totalDriver;\n          }\n        }\n      },\n\n  async created() {\n      await this.$store.dispatch(action.TOTAL_ACCOUNT_DRIVER);\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.dataBeforeCreated()\n  },\n\n  methods: {\n      async searchChange(v){\n          let trimName = this.input4.trim();\n          this.$store.commit(mutation.BUTTON_STATUS, true);\n          await this.$store.dispatch(action.LIST_DATA_DRIVER, {\n              page: 1,\n              typedispatcher    : this.type,\n              q                 : trimName,\n              status            : this.status\n          });\n          this.firstData()\n      },\n      async handlePageChange(page) {\n        this.currentPage = page;\n        await this.$store.dispatch(action.LIST_DATA_DRIVER, {\n            page    : this.currentPage,\n            q       : this.input4,\n            status  : this.status});\n        this.firstData();\n      },\n      Create() {\n        this.$store.commit(mutation.BUTTON_STATUS, false);\n        this.$router.push({\n            name: \"NewDriver\"\n\n        });\n      },\n      async filterStatus(status){\n          this.$store.commit(mutation.BUTTON_STATUS, true);\n          this.status = status;\n          await this.$store.dispatch(action.LIST_DATA_DRIVER, {\n             page    : 1,\n             q       : this.input4,\n             status  : this.status});\n          this.firstData();\n        },\n      openDialog(data){\n          this.form.name        = data.name;\n          this.form.status      = (data.status === 1) ? 'ACTIVE' : (data.status === 2) ? 'INACTIVE' : 'SUSPENDED'\n          this.form.nik         = data.nik;\n          this.form.phone       = data.phonenumber;\n          this.form.photo       = data.profile_picture;\n          this.form.email       = data.email;\n          this.form.driver_type = data.drivertype.name;\n          this.form.gender      = (data.gender === 1) ? 'Male' : 'Female';\n          this.form.address     = data.address;\n          this.form.birthdate   = data.birthdate;\n          this.form.id          = data.id;\n          this.payload.iddriver = data.iddriver;\n          this.form.first_login = data.is_first_login;\n          (this.form.first_login === 1) ? this.spanPIN = 10 : this.spanPIN = 8;\n      },\n      getId(id) {\n         this.$store.dispatch(action.DATA_ID_DRIVER, id.users_id);\n      },\n      imgAlt(event) {\n        event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\n      },\n      resendPIN() {\n          let obj = {\n              pin_type: '/driver/resend-pin',\n              id: this.form.id\n          };\n          this.$store.commit(mutation.SET_RESEND_PIN_BUTTON, true);\n          this.$store.dispatch(action.RESEND_PIN, obj)\n      },\n      editButton(){\n          this.$store.commit(mutation.BUTTON_STATUS, false);\n          this.$store.dispatch(action.EDIT_DRIVER, this.form.id);\n      },\n      deleteB() {\n          Swal.fire({\n              title: \"Are you sure?\",\n              text: \"You won't be able to revert this!\",\n              type: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: \"Yes, delete it!\"\n          }).then(result => {\n              if (result.value) {\n                  this.payload.users_id = this.form.id;\n                  this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n                  this.$store.dispatch(action.DELETE_DRIVER, this.payload);\n                  this.dataBeforeCreated();\n              }\n          });\n      },\n      activeButton() {\n          Swal.fire({\n              title: \"Are you sure?\",\n              text: \"You won't be able to revert this!\",\n              type: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: \"Yes, activate it!\"\n          }).then(async result => {\n              if (result.value) {\n                  this.payload.users_id = this.form.id;\n                  this.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n                  this.$store.commit(mutation.BUTTON_STATUS, true);\n                  await this.$store.dispatch(action.ACTIVATE_DRIVER, this.payload);\n                  this.dataBeforeCreated();\n              }\n             \n          });\n      },\n      async suspendButton() {\n          const {\n              value: reason\n          } = await Swal.fire({\n              title: 'Enter the reason of suspending',\n              input: 'text',\n              showCancelButton: true,\n              confirmButtonColor: '#3085d6',\n              cancelButtonColor: '#d33',\n              confirmButtonText: 'Yes, suspend it!',\n              inputValidator: (value) => {\n                  if (!value) {\n                      return 'You need to write something!'\n                  }\n              }\n          });\n          if (reason) {\n              // this.$store.commit(mutation.BUTTON_STATUS, true);\n              this.payload.reason_suspend = reason;\n              this.payload.users_id = this.form.id;\n              this.$store.commit(mutation.SET_BUTTON_SUSPEND, true);\n              await this.$store.dispatch(action.SUSPEND_DRIVER, this.payload)\n              this.dataBeforeCreated();\n          }\n      },\n      firstData(){\n          if(this.listData.length > 0){\n              let data              = this.listData[0];\n              this.form.name        = data.name;\n              this.form.status      = (data.status === 1) ? 'ACTIVE' : (data.status === 2) ? 'INACTIVE' : 'SUSPENDED'\n              this.form.nik         = data.nik;\n              this.form.phone       = data.phonenumber;\n              this.form.photo       = data.profile_picture;\n              this.form.email       = data.email;\n              this.form.driver_type = data.drivertype.name;\n              this.form.gender      = (data.gender === 1) ? 'Male' : 'Female';\n              this.form.address     = data.address;\n              this.form.birthdate   = data.birthdate;\n              this.form.id          = data.id;\n              this.payload.iddriver = data.iddriver;\n              this.form.first_login = data.is_first_login;\n              (this.form.first_login === 1) ? this.spanPIN = 10 : this.spanPIN = 8;\n          }\n      },\n      async dataBeforeCreated(){\n          await this.$store.dispatch(action.LIST_DATA_DRIVER, {\n              page  : this.currentPage,\n              q     : this.input4,\n              status: this.status});\n          this.firstData()\n      }\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"../../../assets/scss/_variables\";\n    .card-border {\n        border-radius: 11px;\n    }\n    .line-not-center {\n        border-right: 1px solid $text-color-info;\n    }\n    .line {\n        border-right: 1px solid $text-color-info;\n        text-align: center;\n    }\n    .text-p {\n        display: block;\n        color: white;\n        font-weight: 600;\n    }\n    .plus-bg {\n        background-color: #a31424;\n        height: 139px;\n\n    }\n    .avatar {\n        img {\n            border: 1px solid transparentize($text-color, .9);\n            box-sizing: border-box;\n            width: 60px;\n            height: 60px;\n            border-radius: 50%;\n            transition: all .5s .25s;\n        }\n    }\n    .avatar2 {\n        img {\n            border: 1px solid transparentize($text-color, .9);\n            box-sizing: border-box;\n            width: 120px;\n            height: 120px;\n            border-radius: 50%;\n            transition: all .5s .25s;\n        }\n    }\n    .name-of {\n        margin-bottom: 10px;\n        color: #a31424;\n    }\n    .contacts-list {\n        //margin: 0 auto;\n        height: 500px;\n        width: 100%;\n        max-width: 965px;\n        padding: 0px 30px;\n        box-sizing: border-box;\n        .contact {\n            margin: 10px 0;\n            padding: 5px;\n            box-sizing: border-box;\n            cursor: pointer;\n            border-bottom: 1px solid $text-color-info;\n        }\n    }\n    .small-edit {\n        width: 90px;\n    }\n    .green {\n        color :green;\n    }\n    .red {\n        color: red;\n    }\n\n\n    /*.card-base {*/\n    /*padding: 20px;*/\n    /*}*/\n\n    /*.el-row {*/\n    /*// display: flex;*/\n    /*// align-items: center;*/\n    /*// justify-content: center;*/\n    /*padding: 0px 10px;*/\n    /*margin-bottom: 20px;*/\n\n    /*&:last-child {*/\n        /*margin-bottom: 0;*/\n    /*}*/\n    /*}*/\n\n    /*.el-col {*/\n    /*border-radius: 5px;*/\n    /*}*/\n\n    /*.el-select {*/\n    /*width: 100%;*/\n    /*}*/\n</style>\n"],"sourceRoot":"src/views/pages/driver"}]}