{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\components\\enterprise\\popup_admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\components\\enterprise\\popup_admin.vue","mtime":1647032354117},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport router from \"../../router\";\nimport * as getter from \"../../store/getters-types\";\nimport * as action from \"../../store/action-types\";\nimport Swal from 'sweetalert2';\nimport * as mutation from \"../../store/mutation-types\";\nexport default {\n  props: ['identerprise', 'picture'],\n  data: function data() {\n    return {\n      currentPage: 1,\n      dialogTableVisible: false,\n      form: {\n        search: ''\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    paginate: getter.GET_PAGINATE_DISPATCHER,\n    enterprise: getter.ENTERPRISE,\n    loading: getter.GET_BUTTON\n  })), {}, {\n    paginato: function paginato() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    },\n    admin: function admin() {\n      var idrole = JSON.parse(localStorage.getItem('user')).idrole;\n\n      if (idrole === 1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }),\n  methods: {\n    handlePageChange: function () {\n      var _handlePageChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(page) {\n        var obj;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.currentPage = page;\n                obj = {\n                  role: 4,\n                  page: this.currentPage\n                };\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context.next = 5;\n                return this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handlePageChange(_x) {\n        return _handlePageChange.apply(this, arguments);\n      }\n\n      return handlePageChange;\n    }(),\n    addButton: function addButton() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      router.push(\"/new-admin-enterprise/\".concat(this.enterprise.identerprise));\n    },\n    editAdmin: function editAdmin(e) {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$store.commit(mutation.SET_DATA_ADMIN_ENTERPRISE, e);\n      this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise);\n      router.push('/edit-admin');\n    },\n    indexMethod: function indexMethod(index) {\n      return index + this.paginato.fromP;\n    },\n    buttonSearch: function buttonSearch() {\n      this.$store.dispatch(action.SEARCH_DISPATCHER, this.form.search);\n    },\n    getId: function () {\n      var _getId = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {\n        var _this = this;\n\n        var obj;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.dialogTableVisible = false;\n                obj = {\n                  id: id.id,\n                  identerprise: this.identerprise\n                };\n                Swal.fire({\n                  title: 'Are you sure?',\n                  text: \"You want to assign to dispatcher!\",\n                  type: 'warning',\n                  showCancelButton: true,\n                  confirmButtonColor: '#3085d6',\n                  cancelButtonColor: '#d33',\n                  confirmButtonText: 'Yes, assign it!'\n                }).then(function (result) {\n                  if (result.value) {\n                    _this.$store.dispatch(action.ASSIGN_TO_ENTERPRISE, obj);\n                  } else {\n                    _this.dialogTableVisible = true;\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getId(_x2) {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }()\n  }\n};",{"version":3,"sources":["popup_admin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<span>\r\n    <div class=\"hoverhand\" slot=\"reference\">\r\n        <div v-if='enterprise.admins[0].profile_picture == \"\" || enterprise.admins[0].profile_picture == null'>\r\n            <img @click=\"dialogTableVisible = admin\" src=\"../../../src/assets/images/avatar-2.jpg\" class=\"avatar\">\r\n        </div>\r\n        <div v-else>\r\n            <img @click=\"dialogTableVisible = admin\" :src=\"enterprise.admins[0].profile_picture\" class=\"avatar\">\r\n        </div>\r\n    </div>\r\n    <el-dialog :visible.sync=\"dialogTableVisible\" title=\"Admin Enterprise\">\r\n        <el-row>\r\n                <el-button type=\"danger\" style=\"background-color: #D50000;\" @click=\"addButton\">\r\n                    Add New Admin\r\n                </el-button>\r\n        </el-row>\r\n        <div v-for=\"(domain) in enterprise.admins\" :key=\"domain.key\">\r\n            <el-row :gutter=\"20\" style=\"margin-top: 20px\">\r\n                <el-col :span=\"8\">\r\n                    <b>Admin Name</b>\r\n                    <br>\r\n                    {{ domain.name}}\r\n                </el-col>\r\n                <el-col :span=\"5\">\r\n                    <b>Admin Mobile Phone</b>\r\n                    <br>\r\n                    {{ domain.phonenumber}}\r\n                </el-col>\r\n                <el-col :span=\"9\">\r\n                    <b>Admin Email</b>\r\n                    <br>\r\n                    <span style=\"word-break: break-all\">{{ domain.email}}</span>\r\n                </el-col>\r\n                <el-col :span=\"2\">\r\n                    <el-button type=\"success\" @click=\"editAdmin(domain)\" icon=\"el-icon-edit\" style=\"padding: 12px\"></el-button>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n    </el-dialog>\r\n</span>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    mapGetters\r\n} from 'vuex'\r\nimport router from '../../router'\r\nimport * as getter from '../../store/getters-types'\r\nimport * as action from '../../store/action-types'\r\nimport Swal from 'sweetalert2'\r\nimport * as mutation from '../../store/mutation-types'\r\n\r\nexport default {\r\n    props: ['identerprise', 'picture'],\r\n    data() {\r\n        return {\r\n            currentPage: 1,\r\n            dialogTableVisible: false,\r\n            form: {\r\n                search: ''\r\n            }\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            paginate: getter.GET_PAGINATE_DISPATCHER,\r\n            enterprise: getter.ENTERPRISE,\r\n            loading: getter.GET_BUTTON,\r\n        }),\r\n        paginato() {\r\n            return this.paginate\r\n        },\r\n        indexTam() {\r\n            return this.indexT\r\n        },\r\n        admin() {\r\n            let idrole = JSON.parse(localStorage.getItem('user')).idrole\r\n            if (idrole === 1) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async handlePageChange(page) {\r\n            this.currentPage = page;\r\n            let obj = {\r\n                role: 4,\r\n                page: this.currentPage\r\n            };\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            await this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\r\n        },\r\n        addButton() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            router.push(`/new-admin-enterprise/${this.enterprise.identerprise}`)\r\n        },\r\n        editAdmin(e) {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$store.commit(mutation.SET_DATA_ADMIN_ENTERPRISE, e);\r\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n            router.push('/edit-admin')\r\n        },\r\n        indexMethod(index) {\r\n            return index + this.paginato.fromP;\r\n        },\r\n        buttonSearch() {\r\n            this.$store.dispatch(action.SEARCH_DISPATCHER, this.form.search)\r\n        },\r\n        async getId(id) {\r\n            this.dialogTableVisible = false\r\n            let obj = {\r\n                id: id.id,\r\n                identerprise: this.identerprise\r\n            }\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"You want to assign to dispatcher!\",\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, assign it!'\r\n            }).then((result) => {\r\n                if (result.value) {\r\n                    this.$store.dispatch(action.ASSIGN_TO_ENTERPRISE, obj)\r\n                } else {\r\n                    this.dialogTableVisible = true\r\n                }\r\n            })\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.table-box {\r\n    overflow: auto;\r\n}\r\n\r\n.el-pagination {\r\n    padding-top: 20px;\r\n}\r\n\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    padding: 0px 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.image {\r\n    max-width: 100%;\r\n    height: 150px;\r\n    display: block;\r\n}\r\n\r\n.vl {\r\n    border-left: 3px solid #f2f2f2;\r\n    height: 90%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.avatar {\r\n    border-radius: 50%;\r\n    max-width: 80px;\r\n    height: 80px;\r\n    border: 1px solid #fff;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    box-shadow: 0 2px 5px 0 rgba(49, 49, 93, 0.1),\r\n        0 1px 2px 0 rgba(0, 0, 0, 0.08);\r\n    transition: box-shadow 0.5s;\r\n}\r\n\r\n.left {\r\n    text-align: left;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.middle {\r\n    margin-top: -30px\r\n}\r\n\r\n.drive-acount {\r\n    height: 39px;\r\n    margin-top: -11px;\r\n    margin-bottom: -10px;\r\n}\r\n\r\n.hoverhand:hover {\r\n    cursor: pointer;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/enterprise"}]}