{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\store\\modules\\enterprise\\action.js","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\store\\modules\\enterprise\\action.js","mtime":1644413760259},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import _defineProperty from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _action$LIST_DATA_COR;\n\nimport * as action from \"../../action-types\";\nimport * as mutation from \"../../mutation-types\";\nimport localAxios from \"../../../services/http/client\";\nimport swal from 'sweetalert2';\nimport * as typeS from \"../../../services/path_service\";\nimport router from \"../../../router\";\nexport default (_action$LIST_DATA_COR = {}, _defineProperty(_action$LIST_DATA_COR, action.LIST_DATA_COR, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, payload) {\n    var commit, dispatch, token, _yield$localAxios$get, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit, dispatch = _ref.dispatch;\n            _context.prev = 1;\n            token = localStorage.getItem('token');\n            _context.next = 5;\n            return localAxios.get(\"\".concat(typeS.enterprise_page).concat(payload.page, \"&status=\\n                \").concat(payload.status, \"&typeenterprise=\").concat(payload.typeenterprise, \"&q=\").concat(payload.enterprise_name), {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get = _context.sent;\n            data = _yield$localAxios$get.data;\n            objList = {\n              dataList: data.data.data,\n              nextC: data.data.next_page_url,\n              prevC: data.data.prev_page_url,\n              firstP: data.data.first_page_url,\n              fromPA: data.data.from,\n              totalPE: data.data.total\n            };\n            commit(mutation.SET_LIST_COR, objList);\n            commit(mutation.BUTTON_STATUS, false);\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.DATA_ERROR, _context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.CREATE_DATA_CORP, function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3, payloads) {\n    var commit, dispatch, token, i, len, picolo, formData, _yield$localAxios$pos, data;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref3.commit, dispatch = _ref3.dispatch;\n            _context2.prev = 1;\n            token = localStorage.getItem('token');\n            len = payloads.inspectors, picolo = [];\n\n            for (i = 0; i < len.length; i++) {\n              picolo.push({\n                name: len[i].name,\n                phone: len[i].phone\n              });\n            }\n\n            formData = new FormData();\n            formData.append('name', payloads.name);\n            formData.append('image_logo', payloads.photo);\n            formData.append('site_url', payloads.site_url);\n            formData.append('description', payloads.description);\n            formData.append('email', payloads.email);\n            formData.append('identerprise_type', payloads.id_enterprise_type);\n            formData.append('idvendor', payloads.id_vendor);\n            formData.append('office_phone', payloads.office_phone);\n            formData.append('office_address', payloads.office_address);\n            formData.append('pic_name', payloads.pic_name);\n            formData.append('pic_phone', payloads.pic_phone);\n            formData.append('pic_email', payloads.pic_email);\n            formData.append('admin_name', payloads.admin_name);\n            formData.append('admin_phone', payloads.admin_phone);\n            formData.append('admin_email', payloads.admin_email);\n\n            for (i = 0; i < picolo.length; i++) {\n              formData.append('inspectors[' + i + '][name]', picolo[i].name);\n              formData.append('inspectors[' + i + '][phone]', picolo[i].phone);\n            }\n\n            _context2.next = 24;\n            return localAxios.post(typeS.enterprise, formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 24:\n            _yield$localAxios$pos = _context2.sent;\n            data = _yield$localAxios$pos.data;\n            commit(mutation.SET_ENTERPRISE_RES, {\n              enterpriseC: data.data,\n              adminEnter: data.data.admins\n            });\n            commit(mutation.BUTTON_STATUS, false);\n            router.replace({\n              path: '/detail-enterprise/' + data.data.identerprise\n            });\n            _context2.next = 36;\n            break;\n\n          case 31:\n            _context2.prev = 31;\n            _context2.t0 = _context2[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context2.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context2.t0);\n\n          case 36:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 31]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.DATA_ID_CORP, function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5, payload) {\n    var commit, dispatch, token, _yield$localAxios$get2, data;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref5.commit, dispatch = _ref5.dispatch;\n            _context3.prev = 1;\n            token = localStorage.getItem('token');\n            _context3.next = 5;\n            return localAxios.get(typeS.enterprise + '/' + payload, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get2 = _context3.sent;\n            data = _yield$localAxios$get2.data;\n            commit(mutation.SET_ENTERPRISE_RES, {\n              enterpriseC: data.data,\n              adminEnter: data.data.admins\n            });\n            commit(mutation.BUTTON_STATUS, false);\n            return _context3.abrupt(\"return\", data.data);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.DATA_ERROR, _context3.t0);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 12]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref6.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.UPDATE_CORP, function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7, payload) {\n    var commit, dispatch, token, formData, _yield$localAxios$pos2, data;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref7.commit, dispatch = _ref7.dispatch;\n            _context4.prev = 1;\n            token = localStorage.getItem('token');\n            formData = new FormData();\n            formData.append('name', payload.name);\n\n            if (payload.photo) {\n              formData.append('image_logo', payload.photo);\n            }\n\n            formData.append('site_url', payload.site_url);\n            formData.append('description', payload.description);\n            formData.append('email', payload.email);\n            formData.append('identerprise_type', payload.id_enterprise_type);\n            formData.append('idvendor', payload.id_vendor);\n            formData.append('office_phone', payload.office_phone);\n            formData.append('office_address', payload.office_address);\n            formData.append('pic_name', payload.pic_name);\n            formData.append('pic_phone', payload.pic_phone);\n            formData.append('pic_email', payload.pic_email);\n            formData.append('_method', 'put');\n            _context4.next = 19;\n            return localAxios.post(typeS.enterprise + '/' + payload.id, formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 19:\n            _yield$localAxios$pos2 = _context4.sent;\n            data = _yield$localAxios$pos2.data;\n            commit(mutation.SET_ENTERPRISE_RES, {\n              enterpriseC: data.data,\n              adminEnter: data.data.admins\n            });\n            commit(mutation.BUTTON_STATUS, false);\n            router.replace({\n              path: '/detail-enterprise/' + data.data.identerprise\n            });\n            _context4.next = 31;\n            break;\n\n          case 26:\n            _context4.prev = 26;\n            _context4.t0 = _context4[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context4.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context4.t0);\n\n          case 31:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 26]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref8.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.DELETE_CORP_ID, function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref9, payload) {\n    var commit, dispatch, token, _yield$localAxios$del, data;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            commit = _ref9.commit, dispatch = _ref9.dispatch;\n            _context5.prev = 1;\n            token = localStorage.getItem('token');\n            _context5.next = 5;\n            return localAxios.delete(typeS.enterprise + '/' + payload, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$del = _context5.sent;\n            data = _yield$localAxios$del.data;\n            router.replace('/enterprise');\n            _context5.next = 12;\n            break;\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](1);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 10]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref10.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.NEW_ADMIN_ENTERPRISE, function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(_ref11, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$pos3, data;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            commit = _ref11.commit, dispatch = _ref11.dispatch;\n            _context6.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              identerprise: payload.identerprise,\n              admin_name: payload.admin_name,\n              admin_email: payload.admin_email,\n              admin_mobile_number: payload.admin_phonenumber\n            });\n            _context6.next = 6;\n            return localAxios.post('/enterprise/admin', jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$pos3 = _context6.sent;\n            data = _yield$localAxios$pos3.data;\n            dispatch(action.DATA_ID_CORP, payload.identerprise);\n            router.replace({\n              path: '/detail-enterprise/' + payload.identerprise\n            });\n            commit(mutation.SET_LOADING, false);\n            swal.fire('Successfully created new admin!', '', 'success');\n            _context6.next = 19;\n            break;\n\n          case 14:\n            _context6.prev = 14;\n            _context6.t0 = _context6[\"catch\"](1);\n            commit(mutation.SET_LOADING, false);\n            swal(_context6.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context6.t0);\n\n          case 19:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 14]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref12.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.UPDATE_ADMIN_CLIENT, function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref13, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$put, data;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            commit = _ref13.commit, dispatch = _ref13.dispatch;\n            _context7.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              name: payload.name,\n              email: payload.email,\n              phonenumber: payload.phone.toString()\n            });\n            _context7.next = 6;\n            return localAxios.put(typeS.user + payload.idAdmin, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$put = _context7.sent;\n            data = _yield$localAxios$put.data;\n            dispatch(action.DATA_ID_CORP, payload.identer);\n            commit(mutation.BUTTON_STATUS, false);\n            router.replace({\n              path: '/detail-enterprise/' + payload.identer\n            });\n            swal.fire(data.message, '', 'success');\n            _context7.next = 19;\n            break;\n\n          case 14:\n            _context7.prev = 14;\n            _context7.t0 = _context7[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context7.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context7.t0);\n\n          case 19:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 14]]);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref14.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.SUSPEND_ENTERPRISE, function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref15, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$pos4, data;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            commit = _ref15.commit, dispatch = _ref15.dispatch;\n            _context8.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              reason_suspend: payload.reason_suspend,\n              identerprise: payload.identerprise\n            });\n            _context8.next = 6;\n            return localAxios.post('/enterprise/suspend', jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$pos4 = _context8.sent;\n            data = _yield$localAxios$pos4.data;\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.LIST_DATA_COR);\n            router.replace({\n              path: '/enterprise'\n            });\n            _context8.next = 18;\n            break;\n\n          case 13:\n            _context8.prev = 13;\n            _context8.t0 = _context8[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context8.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context8.t0);\n\n          case 18:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[1, 13]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref16.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.ACTIVATE_ENTERPRISE, function () {\n  var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(_ref17, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$pos5, data;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            commit = _ref17.commit, dispatch = _ref17.dispatch;\n            _context9.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              identerprise: payload.identerprise\n            });\n            _context9.next = 6;\n            return localAxios.post('/enterprise/activate', jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$pos5 = _context9.sent;\n            data = _yield$localAxios$pos5.data;\n            dispatch(action.LIST_DATA_COR);\n            commit(mutation.BUTTON_STATUS, false);\n            router.replace({\n              path: '/enterprise'\n            });\n            _context9.next = 18;\n            break;\n\n          case 13:\n            _context9.prev = 13;\n            _context9.t0 = _context9[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context9.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context9.t0);\n\n          case 18:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[1, 13]]);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref18.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.SUSPEND_ADMIN_ENTERPRISE, function () {\n  var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(_ref19, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$put2, data;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            commit = _ref19.commit, dispatch = _ref19.dispatch;\n            _context10.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              reason_suspend: payload.reason_suspend\n            });\n            _context10.next = 6;\n            return localAxios.put('/user/suspend/' + payload.idadmin, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$put2 = _context10.sent;\n            data = _yield$localAxios$put2.data;\n            swal.fire('Success!', '', 'success');\n            dispatch(action.DATA_ID_CORP, payload.identerprise);\n            router.replace({\n              path: '/detail-enterprise/' + payload.identerprise\n            });\n            commit(mutation.BUTTON_STATUS, false);\n            _context10.next = 19;\n            break;\n\n          case 14:\n            _context10.prev = 14;\n            _context10.t0 = _context10[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context10.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context10.t0);\n\n          case 19:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[1, 14]]);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref20.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.ACTIVATE_ADMIN_ENTERPRISE, function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(_ref21, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$put3, data;\n\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            commit = _ref21.commit, dispatch = _ref21.dispatch;\n            _context11.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              foo: null\n            });\n            _context11.next = 6;\n            return localAxios.put('/user/activate/' + payload.idadmin, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$put3 = _context11.sent;\n            data = _yield$localAxios$put3.data;\n            swal.fire('Success!', '', 'success');\n            dispatch(action.DATA_ID_CORP, payload.identerprise);\n            router.replace({\n              path: '/detail-enterprise/' + payload.identerprise\n            });\n            commit(mutation.BUTTON_STATUS, false);\n            _context11.next = 19;\n            break;\n\n          case 14:\n            _context11.prev = 14;\n            _context11.t0 = _context11[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context11.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context11.t0);\n\n          case 19:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[1, 14]]);\n  }));\n\n  return function (_x21, _x22) {\n    return _ref22.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DATA_COR, action.DELETE_ADMIN_ENTERPRISE, function () {\n  var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(_ref23, payload) {\n    var commit, dispatch, token, _yield$localAxios$del2, data;\n\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            commit = _ref23.commit, dispatch = _ref23.dispatch;\n            _context12.prev = 1;\n            token = localStorage.getItem('token');\n            _context12.next = 5;\n            return localAxios.delete('/user/delete/' + payload.idadmin, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$del2 = _context12.sent;\n            data = _yield$localAxios$del2.data;\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.DATA_ID_CORP, payload.identerprise);\n            router.replace({\n              path: '/detail-enterprise/' + payload.identerprise\n            });\n            swal.fire('Success!', '', 'success');\n            _context12.next = 18;\n            break;\n\n          case 13:\n            _context12.prev = 13;\n            _context12.t0 = _context12[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context12.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context12.t0);\n\n          case 18:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[1, 13]]);\n  }));\n\n  return function (_x23, _x24) {\n    return _ref24.apply(this, arguments);\n  };\n}()), _action$LIST_DATA_COR);",{"version":3,"sources":["C:/Users/ASUS/Documents/GitHub/oper-customer/src/store/modules/enterprise/action.js"],"names":["action","mutation","localAxios","swal","typeS","router","LIST_DATA_COR","payload","commit","dispatch","token","localStorage","getItem","get","enterprise_page","page","status","typeenterprise","enterprise_name","headers","data","objList","dataList","nextC","next_page_url","prevC","prev_page_url","firstP","first_page_url","fromPA","from","totalPE","total","SET_LIST_COR","BUTTON_STATUS","DATA_ERROR","CREATE_DATA_CORP","payloads","len","inspectors","picolo","i","length","push","name","phone","formData","FormData","append","photo","site_url","description","email","id_enterprise_type","id_vendor","office_phone","office_address","pic_name","pic_phone","pic_email","admin_name","admin_phone","admin_email","post","enterprise","SET_ENTERPRISE_RES","enterpriseC","adminEnter","admins","replace","path","identerprise","response","message","DATA_ID_CORP","UPDATE_CORP","id","DELETE_CORP_ID","delete","NEW_ADMIN_ENTERPRISE","jsonData","JSON","stringify","admin_mobile_number","admin_phonenumber","SET_LOADING","fire","UPDATE_ADMIN_CLIENT","phonenumber","toString","put","user","idAdmin","identer","SUSPEND_ENTERPRISE","reason_suspend","ACTIVATE_ENTERPRISE","SUSPEND_ADMIN_ENTERPRISE","idadmin","ACTIVATE_ADMIN_ENTERPRISE","foo","DELETE_ADMIN_ENTERPRISE"],"mappings":"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","sourcesContent":["import * as action from '../../action-types'\r\nimport * as mutation from '../../mutation-types'\r\nimport localAxios from '../../../services/http/client'\r\nimport swal from 'sweetalert2'\r\nimport * as typeS from '../../../services/path_service'\r\nimport router from '../../../router'\r\n\r\n\r\n\r\n\r\nexport default {\r\n    async [action.LIST_DATA_COR]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token')\r\n            let { data } = await localAxios.get(\r\n                `${typeS.enterprise_page}${payload.page}&status=\r\n                ${payload.status}&typeenterprise=${payload.typeenterprise}&q=${payload.enterprise_name}`,\r\n                {\r\n                    headers: { 'Authorization': 'Bearer ' + token }\r\n                });\r\n            let objList = {\r\n                dataList: data.data.data,\r\n                nextC: data.data.next_page_url,\r\n                prevC: data.data.prev_page_url,\r\n                firstP: data.data.first_page_url,\r\n                fromPA: data.data.from,\r\n                totalPE: data.data.total\r\n            }\r\n            commit(mutation.SET_LIST_COR, objList);\r\n            commit(mutation.BUTTON_STATUS, false)\r\n        } catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false);\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.CREATE_DATA_CORP]({ commit, dispatch }, payloads) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            let i, len = payloads.inspectors, picolo = []\r\n            for (i = 0; i < len.length; i++) {\r\n                picolo.push({\r\n                    name: len[i].name,\r\n                    phone: len[i].phone\r\n                })\r\n            }\r\n            const formData = new FormData()\r\n            formData.append('name', payloads.name)\r\n            formData.append('image_logo', payloads.photo)\r\n            formData.append('site_url', payloads.site_url)\r\n            formData.append('description', payloads.description)\r\n            formData.append('email', payloads.email)\r\n            formData.append('identerprise_type', payloads.id_enterprise_type)\r\n            formData.append('idvendor', payloads.id_vendor)\r\n            formData.append('office_phone', payloads.office_phone)\r\n            formData.append('office_address', payloads.office_address)\r\n            formData.append('pic_name', payloads.pic_name)\r\n            formData.append('pic_phone', payloads.pic_phone)\r\n            formData.append('pic_email', payloads.pic_email)\r\n            formData.append('admin_name', payloads.admin_name)\r\n            formData.append('admin_phone', payloads.admin_phone)\r\n            formData.append('admin_email', payloads.admin_email)\r\n            for (i = 0; i < picolo.length; i++) {\r\n                formData.append('inspectors[' + i + '][name]', picolo[i].name)\r\n                formData.append('inspectors[' + i + '][phone]', picolo[i].phone)\r\n            }\r\n            \r\n            let { data } = await localAxios.post(typeS.enterprise,\r\n                formData,\r\n                {\r\n                    headers: { 'Content-Type': 'multipart/form-data', 'Authorization': 'Bearer ' + token }\r\n                })\r\n            commit(mutation.SET_ENTERPRISE_RES, {\r\n                enterpriseC: data.data,\r\n                adminEnter: data.data.admins\r\n            })\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            router.replace({ path: '/detail-enterprise/' + data.data.identerprise })\r\n\r\n        } catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message, '', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n\r\n        }\r\n    },\r\n    async [action.DATA_ID_CORP]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            let { data } = await localAxios.get(typeS.enterprise + '/' + payload,\r\n                {\r\n                    headers: { 'Authorization': 'Bearer ' + token }\r\n                })\r\n\r\n            commit(mutation.SET_ENTERPRISE_RES, {\r\n                enterpriseC: data.data,\r\n                adminEnter: data.data.admins\r\n            });\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            return data.data\r\n        }\r\n        catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.UPDATE_CORP]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            const formData = new FormData()\r\n            formData.append('name', payload.name)\r\n            if(payload.photo){\r\n                formData.append('image_logo', payload.photo)\r\n            }\r\n            formData.append('site_url', payload.site_url)\r\n            formData.append('description', payload.description)\r\n            formData.append('email', payload.email)\r\n            formData.append('identerprise_type', payload.id_enterprise_type)\r\n            formData.append('idvendor', payload.id_vendor)\r\n            formData.append('office_phone', payload.office_phone)\r\n            formData.append('office_address', payload.office_address)\r\n            formData.append('pic_name', payload.pic_name)\r\n            formData.append('pic_phone', payload.pic_phone)\r\n            formData.append('pic_email', payload.pic_email)\r\n            formData.append('_method', 'put')\r\n\r\n            let { data } = await localAxios.post(typeS.enterprise + '/' + payload.id,\r\n            formData,\r\n            {\r\n                headers: { 'Content-Type': 'multipart/form-data', 'Authorization': 'Bearer ' + token }\r\n            })\r\n            commit(mutation.SET_ENTERPRISE_RES, {\r\n                enterpriseC: data.data,\r\n                adminEnter: data.data.admins\r\n            })\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            router.replace({ path: '/detail-enterprise/' + data.data.identerprise })\r\n        }\r\n        catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message, '', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.DELETE_CORP_ID]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            let { data } = await localAxios.delete(typeS.enterprise + '/' + payload, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token\r\n                }\r\n            })\r\n            router.replace('/enterprise')\r\n        } catch (err) {\r\n\r\n        }\r\n    },\r\n    async [action.NEW_ADMIN_ENTERPRISE]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            const jsonData = JSON.stringify({\r\n                identerprise: payload.identerprise,\r\n                admin_name: payload.admin_name,\r\n                admin_email: payload.admin_email,\r\n                admin_mobile_number: payload.admin_phonenumber,\r\n            });\r\n\r\n            let { data } = await localAxios.post('/enterprise/admin',\r\n                jsonData,\r\n                {\r\n                    headers: { 'Authorization': 'Bearer ' + token }\r\n                })\r\n            dispatch(action.DATA_ID_CORP, payload.identerprise)\r\n            router.replace({ path: '/detail-enterprise/' + payload.identerprise })\r\n            commit(mutation.SET_LOADING, false);\r\n            swal.fire(\r\n                'Successfully created new admin!',\r\n                '',\r\n                'success')\r\n        } catch (err) {\r\n            commit(mutation.SET_LOADING, false);\r\n            swal(err.response.data.message, '', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.UPDATE_ADMIN_CLIENT]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            let jsonData = JSON.stringify({\r\n                name: payload.name,\r\n                email: payload.email,\r\n                phonenumber: payload.phone.toString()\r\n            })\r\n            let { data } = await localAxios.put(typeS.user + payload.idAdmin,\r\n                jsonData, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + token\r\n                    }\r\n                })\r\n            dispatch(action.DATA_ID_CORP, payload.identer)\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            router.replace({ path: '/detail-enterprise/' + payload.identer })\r\n            swal.fire(\r\n                data.message,\r\n                '',\r\n                'success')\r\n        }\r\n        catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message, '', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.SUSPEND_ENTERPRISE]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            const jsonData = JSON.stringify({\r\n                reason_suspend: payload.reason_suspend,\r\n                identerprise: payload.identerprise\r\n            });\r\n\r\n            let { data } = await localAxios.post('/enterprise/suspend',\r\n                jsonData,\r\n                {\r\n                    headers: { 'Authorization': 'Bearer ' + token }\r\n                })\r\n                commit(mutation.BUTTON_STATUS, false)\r\n            dispatch(action.LIST_DATA_COR)\r\n            router.replace({ path: '/enterprise' })\r\n\r\n        } catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message, '', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.ACTIVATE_ENTERPRISE]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            const jsonData = JSON.stringify({\r\n                identerprise: payload.identerprise,\r\n            });\r\n\r\n            let { data } = await localAxios.post('/enterprise/activate',\r\n                jsonData,\r\n                {\r\n                    headers: { 'Authorization': 'Bearer ' + token }\r\n                })\r\n            dispatch(action.LIST_DATA_COR)\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            router.replace({ path: '/enterprise' })\r\n\r\n        } catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message, '', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.SUSPEND_ADMIN_ENTERPRISE]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            const jsonData = JSON.stringify({\r\n                reason_suspend: payload.reason_suspend,\r\n            });\r\n            let { data } = await localAxios.put('/user/suspend/' + payload.idadmin,\r\n                jsonData,\r\n                {\r\n                    headers: { 'Authorization': 'Bearer ' + token }\r\n                })\r\n            swal.fire(\r\n                'Success!',\r\n                '',\r\n                'success')\r\n            dispatch(action.DATA_ID_CORP, payload.identerprise)\r\n            router.replace({ path: '/detail-enterprise/' + payload.identerprise })\r\n            commit(mutation.BUTTON_STATUS, false)\r\n        } catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message, '', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.ACTIVATE_ADMIN_ENTERPRISE]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            const jsonData = JSON.stringify({\r\n                foo: null,\r\n            });\r\n\r\n            let { data } = await localAxios.put('/user/activate/' + payload.idadmin,\r\n            jsonData,\r\n                {\r\n                    headers: { 'Authorization': 'Bearer ' + token }\r\n                })\r\n            swal.fire(\r\n                'Success!',\r\n                '',\r\n                'success')\r\n            dispatch(action.DATA_ID_CORP, payload.identerprise)\r\n            router.replace({ path: '/detail-enterprise/' + payload.identerprise })\r\n            commit(mutation.BUTTON_STATUS, false)\r\n        } catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message, '', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.DELETE_ADMIN_ENTERPRISE]({ commit, dispatch }, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            let { data } = await localAxios.delete('/user/delete/' + payload.idadmin,\r\n                {\r\n                    headers: { 'Authorization': 'Bearer ' + token }\r\n                })\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            dispatch(action.DATA_ID_CORP, payload.identerprise)\r\n            router.replace({ path: '/detail-enterprise/' + payload.identerprise })\r\n            swal.fire(\r\n                'Success!',\r\n                '',\r\n                'success')\r\n        } catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message, '', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n};\r\n"]}]}