{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\ui\\Element\\ElementTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\ui\\Element\\ElementTag.vue","mtime":1644413760777},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ThemePicker from '@/components/theme-picker';\nexport default {\n  name: 'ElementTag',\n  data: function data() {\n    return {\n      dynamicTags: ['Tag 1', 'Tag 2', 'Tag 3'],\n      inputVisible: false,\n      inputValue: '',\n      code1: \"\\n<el-tag\\n  :key=\\\"tag\\\"\\n  v-for=\\\"tag in dynamicTags\\\"\\n  closable\\n  :disable-transitions=\\\"false\\\"\\n  @close=\\\"handleClose(tag)\\\">\\n  {{tag}}\\n</el-tag>\\n<el-input\\n  class=\\\"input-new-tag\\\"\\n  v-if=\\\"inputVisible\\\"\\n  v-model=\\\"inputValue\\\"\\n  ref=\\\"saveTagInput\\\"\\n  size=\\\"mini\\\"\\n  @keyup.enter.native=\\\"handleInputConfirm\\\"\\n  @blur=\\\"handleInputConfirm\\\"\\n>\\n</el-input>\\n<el-button v-else class=\\\"button-new-tag\\\" size=\\\"small\\\" @click=\\\"showInput\\\">+ New Tag</el-button>\\n\\n<style>\\n  .el-tag + .el-tag {\\n    margin-left: 10px;\\n  }\\n  .button-new-tag {\\n    margin-left: 10px;\\n    height: 32px;\\n    line-height: 30px;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n  }\\n  .input-new-tag {\\n    width: 90px;\\n    margin-left: 10px;\\n    vertical-align: bottom;\\n  }\\n</style>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        dynamicTags: ['Tag 1', 'Tag 2', 'Tag 3'],\\n        inputVisible: false,\\n        inputValue: ''\\n      };\\n    },\\n    methods: {\\n      handleClose(tag) {\\n        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\\n      },\\n\\n      showInput() {\\n        this.inputVisible = true;\\n        this.$nextTick(_ => {\\n          this.$refs.saveTagInput.$refs.input.focus();\\n        });\\n      },\\n\\n      handleInputConfirm() {\\n        let inputValue = this.inputValue;\\n        if (inputValue) {\\n          this.dynamicTags.push(inputValue);\\n        }\\n        this.inputVisible = false;\\n        this.inputValue = '';\\n      }\\n    }\\n  }\\n</script>\"\n    };\n  },\n  methods: {\n    handleClose: function handleClose(tag) {\n      this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n    },\n    showInput: function showInput() {\n      var _this = this;\n\n      this.inputVisible = true;\n      this.$nextTick(function (_) {\n        _this.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n    handleInputConfirm: function handleInputConfirm() {\n      var inputValue = this.inputValue;\n\n      if (inputValue) {\n        this.dynamicTags.push(inputValue);\n      }\n\n      this.inputVisible = false;\n      this.inputValue = '';\n    }\n  },\n  components: {\n    ThemePicker: ThemePicker\n  }\n};",{"version":3,"sources":["ElementTag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,WAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,OAAA,CADA;AAEA,MAAA,YAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA,EAHA;AAIA,MAAA,KAAA;AAJA,KAAA;AA8EA,GAjFA;AAkFA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,GADA,EACA;AACA,WAAA,WAAA,CAAA,MAAA,CAAA,KAAA,WAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA,CAAA;AACA,KAHA;AAKA,IAAA,SALA,uBAKA;AAAA;;AACA,WAAA,YAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AACA,OAFA;AAGA,KAVA;AAYA,IAAA,kBAZA,gCAYA;AACA,UAAA,UAAA,GAAA,KAAA,UAAA;;AACA,UAAA,UAAA,EAAA;AACA,aAAA,WAAA,CAAA,IAAA,CAAA,UAAA;AACA;;AACA,WAAA,YAAA,GAAA,KAAA;AACA,WAAA,UAAA,GAAA,EAAA;AACA;AAnBA,GAlFA;AAuGA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA;AAvGA,CAAA","sourcesContent":["<template>\r\n\t<vue-scroll class=\"page-element-tag\">\r\n\t\t<div class=\"page-header\">\r\n\t\t\t<h1>Element Tag\r\n\t\t\t\t<theme-picker style=\"float:right\"></theme-picker>\r\n\t\t\t</h1>\r\n\t\t\t<h4><a href=\"http://element.eleme.io/#/en-US/component/tag\" target=\"_blank\"><i class=\"mdi mdi-book-open-page-variant\"></i> see from the complete documentation</a></h4>\r\n\t\t</div>\r\n\t\t<div class=\"card-base card-shadow--medium demo-box bg-white\">\r\n\t\t\t<el-collapse value=\"1\">\r\n\t\t\t\t<el-collapse-item title=\"Edit Dynamically\" name=\"1\">\r\n\t\t\t\t\t<el-tag\r\n\t\t\t\t\t:key=\"tag\"\r\n\t\t\t\t\tv-for=\"tag in dynamicTags\"\r\n\t\t\t\t\tclosable\r\n\t\t\t\t\t:disable-transitions=\"false\"\r\n\t\t\t\t\t@close=\"handleClose(tag)\">\r\n\t\t\t\t\t{{tag}}\r\n\t\t\t\t\t</el-tag>\r\n\t\t\t\t\t<el-input\r\n\t\t\t\t\tclass=\"input-new-tag\"\r\n\t\t\t\t\tv-if=\"inputVisible\"\r\n\t\t\t\t\tv-model=\"inputValue\"\r\n\t\t\t\t\tref=\"saveTagInput\"\r\n\t\t\t\t\tsize=\"mini\"\r\n\t\t\t\t\t@keyup.enter.native=\"handleInputConfirm\"\r\n\t\t\t\t\t@blur=\"handleInputConfirm\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t</el-input>\r\n\t\t\t\t\t<el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\r\n\t\t\t\t</el-collapse-item>\r\n\t\t\t\t<el-collapse-item title=\"Code\" name=\"2\">\r\n\t\t\t\t\t<pre v-highlightjs=\"code1\"><code class=\"html\"></code></pre>\r\n\t\t\t\t</el-collapse-item>\r\n\t\t\t</el-collapse>\r\n\t\t</div>\r\n\t</vue-scroll>\r\n</template>\r\n\r\n<script>\r\nimport ThemePicker from '@/components/theme-picker'\r\n\r\nexport default {\r\n\tname: 'ElementTag',\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tdynamicTags: ['Tag 1', 'Tag 2', 'Tag 3'],\r\n\t\t\tinputVisible: false,\r\n\t\t\tinputValue: '',\r\n\t\t\tcode1: \r\n`\r\n<el-tag\r\n  :key=\"tag\"\r\n  v-for=\"tag in dynamicTags\"\r\n  closable\r\n  :disable-transitions=\"false\"\r\n  @close=\"handleClose(tag)\">\r\n  {{tag}}\r\n</el-tag>\r\n<el-input\r\n  class=\"input-new-tag\"\r\n  v-if=\"inputVisible\"\r\n  v-model=\"inputValue\"\r\n  ref=\"saveTagInput\"\r\n  size=\"mini\"\r\n  @keyup.enter.native=\"handleInputConfirm\"\r\n  @blur=\"handleInputConfirm\"\r\n>\r\n</el-input>\r\n<el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\r\n\r\n<style>\r\n  .el-tag + .el-tag {\r\n    margin-left: 10px;\r\n  }\r\n  .button-new-tag {\r\n    margin-left: 10px;\r\n    height: 32px;\r\n    line-height: 30px;\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n  .input-new-tag {\r\n    width: 90px;\r\n    margin-left: 10px;\r\n    vertical-align: bottom;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        dynamicTags: ['Tag 1', 'Tag 2', 'Tag 3'],\r\n        inputVisible: false,\r\n        inputValue: ''\r\n      };\r\n    },\r\n    methods: {\r\n      handleClose(tag) {\r\n        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\r\n      },\r\n\r\n      showInput() {\r\n        this.inputVisible = true;\r\n        this.$nextTick(_ => {\r\n          this.$refs.saveTagInput.$refs.input.focus();\r\n        });\r\n      },\r\n\r\n      handleInputConfirm() {\r\n        let inputValue = this.inputValue;\r\n        if (inputValue) {\r\n          this.dynamicTags.push(inputValue);\r\n        }\r\n        this.inputVisible = false;\r\n        this.inputValue = '';\r\n      }\r\n    }\r\n  }\r\n<\\/script>`\r\n\t\t\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n      handleClose(tag) {\r\n        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\r\n      },\r\n\r\n      showInput() {\r\n        this.inputVisible = true;\r\n        this.$nextTick(_ => {\r\n          this.$refs.saveTagInput.$refs.input.focus();\r\n        });\r\n      },\r\n\r\n      handleInputConfirm() {\r\n        let inputValue = this.inputValue;\r\n        if (inputValue) {\r\n          this.dynamicTags.push(inputValue);\r\n        }\r\n        this.inputVisible = false;\r\n        this.inputValue = '';\r\n      }\r\n    },\r\n\tcomponents: {\r\n\t\tThemePicker\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.demo-box {\r\n\tpadding: 20px;\r\n\tmargin-bottom: 20px;\r\n}\r\npre {\r\n  margin: 0;\r\n  background: white;\r\n}\r\ncode {\r\n\tpadding: 0;\r\n}\r\n\r\n@media (max-width: 768px) {code{font-size: 70%;}}\r\n\r\n.el-tag + .el-tag {\r\n    margin-left: 10px;\r\n  }\r\n  .button-new-tag {\r\n    margin-left: 10px;\r\n    height: 32px;\r\n    line-height: 30px;\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n  .input-new-tag {\r\n    width: 90px;\r\n    margin-left: 10px;\r\n    vertical-align: bottom;\r\n  }\r\n</style>\r\n\r\n"],"sourceRoot":"src/views/ui/Element"}]}