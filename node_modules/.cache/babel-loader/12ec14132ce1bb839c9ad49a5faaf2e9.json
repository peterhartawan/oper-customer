{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/attendance/list-attendance-employee.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/attendance/list-attendance-employee.vue","mtime":1628175042618},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.string.pad-start\";\nimport _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport swal from 'sweetalert2';\nexport default {\n  name: \"Attendance\",\n  data: function data() {\n    return {\n      dialogVisible: false,\n      currentPage: 1,\n      input: \"\",\n      affixEnabled: true,\n      indexT: \"\",\n      userid: null,\n      date: null,\n      radio: null,\n      month: null,\n      tableData: null,\n      totalData: null,\n      mapMark: null,\n      markers: [],\n      mapLine: null,\n      path: [],\n      markDefault: {\n        lat: -6.21462,\n        lng: 106.84513\n      },\n      resultTrack: null,\n      image_url: null,\n      info_marker: null,\n      infowindow: {\n        lat: 0,\n        lng: 0,\n        name: null\n      },\n      orangeIcon: require(\"@/assets/images/orange-dot.png\"),\n      redIcon: require(\"@/assets/images/red-dot.png\"),\n      blueDot: require(\"@/assets/images/blue-dot.png\"),\n      window_open: false\n    };\n  },\n  components: {\n    Affix: Affix\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    listData: getter.GET_LIST_ATT,\n    paginate: getter.GET_PAGINATE_ATT,\n    dropDown: getter.GET_DROPDOWN_EMPLOYEE,\n    filterAttendance: getter.GET_FILTER_ATT,\n    attTotal: getter.GET_ATT_TOTAL,\n    filterTotal: getter.GET_FILTER_TOTAL,\n    button: getter.GET_BUTTON,\n    loading: getter.GET_LOADING,\n    attendance: getter.GET_TRACKING_ATTENDANCE\n  })), {}, {\n    paginator: function paginator() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    },\n    disableRadio1: function disableRadio1() {\n      if (this.radio == 2) {\n        return true;\n      } else if (this.radio == 1) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    disableRadio2: function disableRadio2() {\n      if (this.radio == 1) {\n        return true;\n      } else if (this.radio == 2) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    dateExport: function dateExport() {\n      if (this.date) {\n        var foo = {\n          startdate: this.date[0],\n          duedate: this.date[1]\n        };\n        return foo;\n      } else if (this.month == 99) {\n        var _foo = {\n          startdate: this.forToday,\n          duedate: this.forToday\n        };\n        return _foo;\n      } else {\n        return null;\n      }\n    },\n    forToday: function forToday() {\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      var yyyy = today.getFullYear();\n      today = yyyy + '-' + mm + '-' + dd;\n      return today;\n    }\n  }),\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.$store.commit(mutation.BUTTON_STATUS, false);\n\n            case 2:\n              _context.next = 4;\n              return this.$store.commit(mutation.SET_LOADING, true);\n\n            case 4:\n              _context.next = 6;\n              return this.$store.dispatch(action.LIST_ATT_EMPLOYEE, this.currentPage);\n\n            case 6:\n              this.tableData = this.listData;\n              this.totalData = this.attTotal;\n              this.$store.dispatch(action.DROPDOWN_EMPLOYEE);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    removeDate2: function removeDate2() {\n      this.month = null;\n    },\n    removeDate: function removeDate() {\n      this.date = null;\n    },\n    openWindow: function openWindow(position) {\n      this.window_open = true;\n      this.infowindow.lat = position.lat;\n      this.infowindow.lng = position.lng;\n      this.infowindow.name = position.name;\n    },\n    Dialog: function Dialog(foo, e) {\n      e.stopPropagation();\n      this.image_url = foo;\n      this.dialogVisible = true;\n    },\n    exportExcel: function () {\n      var _exportExcel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var data, obj, firstD, secondD, _obj, _firstD, _secondD;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = '';\n\n                if (!(this.dateExport == null)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                swal('Please select a start date', '', 'error');\n                _context2.next = 25;\n                break;\n\n              case 5:\n                if (!this.userid) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                obj = {\n                  date: this.dateExport,\n                  path: \"employee\",\n                  userid: this.userid\n                };\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context2.next = 10;\n                return this.$store.dispatch(action.EXPORT_ATTENDANCE, obj);\n\n              case 10:\n                data = _context2.sent;\n                firstD = data.slice(1);\n                secondD = firstD.slice(0, firstD.length - 1);\n                window.open(secondD);\n                _context2.next = 25;\n                break;\n\n              case 16:\n                if (!(this.userid == null | this.userid == 0)) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                _obj = {\n                  date: this.dateExport,\n                  path: \"employee\",\n                  userid: null\n                };\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context2.next = 21;\n                return this.$store.dispatch(action.EXPORT_ATTENDANCE, _obj);\n\n              case 21:\n                data = _context2.sent;\n                _firstD = data.slice(1);\n                _secondD = _firstD.slice(0, _firstD.length - 1);\n                window.open(_secondD);\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function exportExcel() {\n        return _exportExcel.apply(this, arguments);\n      }\n\n      return exportExcel;\n    }(),\n    onFind: function () {\n      var _onFind = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var i, marker, _marker;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.userid == null)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                this.currentPage = 1;\n                _context3.next = 4;\n                return this.$store.commit(mutation.BUTTON_STATUS, true);\n\n              case 4:\n                _context3.next = 6;\n                return this.$store.dispatch(action.FILTER_EMPLOYEE, {\n                  radio: this.radio,\n                  iduser: 0,\n                  today: this.forToday,\n                  idmonth: this.month,\n                  startdate: this.date ? this.date[0] : null,\n                  duedate: this.date ? this.date[1] : null,\n                  page: 1\n                });\n\n              case 6:\n                _context3.next = 13;\n                break;\n\n              case 8:\n                this.currentPage = 1;\n                _context3.next = 11;\n                return this.$store.commit(mutation.BUTTON_STATUS, true);\n\n              case 11:\n                _context3.next = 13;\n                return this.$store.dispatch(action.FILTER_EMPLOYEE, {\n                  radio: this.radio,\n                  iduser: this.userid,\n                  today: this.forToday,\n                  idmonth: this.month,\n                  startdate: this.date ? this.date[0] : null,\n                  duedate: this.date ? this.date[1] : null,\n                  page: 1\n                });\n\n              case 13:\n                this.tableData = this.filterAttendance;\n                this.totalData = this.filterTotal;\n                this.markers = [];\n                this.path = [];\n                this.window_open = false;\n\n                for (i = 0; i < this.tableData.length; i++) {\n                  marker = {\n                    lat: parseFloat(this.tableData[i].clock_in_latitude),\n                    lng: parseFloat(this.tableData[i].clock_in_longitude),\n                    name: this.tableData[i].name + ', ' + this.tableData[i].clock_in + ' (CLOCK IN)',\n                    icon: this.redIcon\n                  };\n                  this.markDefault.lat = parseFloat(this.tableData[i].clock_in_latitude);\n                  this.markDefault.lng = parseFloat(this.tableData[i].clock_in_longitude);\n                  this.markers.push({\n                    position: marker\n                  });\n                  this.mapMark = 1;\n                }\n\n                for (i = 0; i < this.tableData.length; i++) {\n                  _marker = {\n                    lat: parseFloat(this.tableData[i].clock_out_latitude),\n                    lng: parseFloat(this.tableData[i].clock_out_longitude),\n                    name: this.tableData[i].name + ', ' + this.tableData[i].clock_out + ' (CLOCK OUT)',\n                    icon: this.orangeIcon\n                  };\n                  this.markers.push({\n                    position: _marker\n                  });\n                }\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onFind() {\n        return _onFind.apply(this, arguments);\n      }\n\n      return onFind;\n    }(),\n    handlePageChange: function () {\n      var _handlePageChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(currentpage) {\n        var i, marker, _marker2;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.currentPage = currentpage;\n\n                if (!(this.userid == null)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                _context4.next = 4;\n                return this.$store.commit(mutation.SET_LOADING, true);\n\n              case 4:\n                _context4.next = 6;\n                return this.$store.dispatch(action.FILTER_EMPLOYEE, {\n                  radio: this.radio,\n                  iduser: 0,\n                  idmonth: this.month,\n                  today: this.forToday,\n                  startdate: this.date ? this.date[0] : null,\n                  duedate: this.date ? this.date[1] : null,\n                  page: this.currentPage\n                });\n\n              case 6:\n                _context4.next = 12;\n                break;\n\n              case 8:\n                _context4.next = 10;\n                return this.$store.commit(mutation.SET_LOADING, true);\n\n              case 10:\n                _context4.next = 12;\n                return this.$store.dispatch(action.FILTER_EMPLOYEE, {\n                  radio: this.radio,\n                  iduser: this.userid,\n                  idmonth: this.month,\n                  today: this.forToday,\n                  startdate: this.date ? this.date[0] : null,\n                  duedate: this.date ? this.date[1] : null,\n                  page: this.currentPage\n                });\n\n              case 12:\n                this.tableData = this.filterAttendance;\n                this.totalData = this.filterTotal;\n                this.markers = [];\n                this.path = [];\n                this.window_open = false;\n\n                for (i = 0; i < this.tableData.length; i++) {\n                  marker = {\n                    lat: parseFloat(this.tableData[i].clock_in_latitude),\n                    lng: parseFloat(this.tableData[i].clock_in_longitude),\n                    name: this.tableData[i].name + ', ' + this.tableData[i].clock_in + ' (CLOCK IN)',\n                    icon: this.redIcon\n                  };\n                  this.markDefault.lat = parseFloat(this.tableData[i].clock_in_latitude);\n                  this.markDefault.lng = parseFloat(this.tableData[i].clock_in_longitude);\n                  this.markers.push({\n                    position: marker\n                  });\n                  this.mapMark = 1;\n                }\n\n                for (i = 0; i < this.tableData.length; i++) {\n                  _marker2 = {\n                    lat: parseFloat(this.tableData[i].clock_out_latitude),\n                    lng: parseFloat(this.tableData[i].clock_out_longitude),\n                    name: this.tableData[i].name + ', ' + this.tableData[i].clock_out + ' (CLOCK OUT)',\n                    icon: this.orangeIcon\n                  };\n                  this.markers.push({\n                    position: _marker2\n                  });\n                }\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handlePageChange(_x) {\n        return _handlePageChange.apply(this, arguments);\n      }\n\n      return handlePageChange;\n    }(),\n    getId: function () {\n      var _getId = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(id) {\n        var i, marker, self;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.$store.commit(mutation.SET_LOADING, true);\n\n              case 2:\n                _context5.next = 4;\n                return this.$store.dispatch(action.TRACKING_ATTENDANCE, id.id);\n\n              case 4:\n                _context5.next = 6;\n                return this.attendance;\n\n              case 6:\n                if (this.attendance.length == 0) {\n                  swal('This user does not have any tracking yet', '', '');\n                } else {\n                  this.markers = [];\n                  this.path = [];\n                  this.window_open = false;\n\n                  for (i = 0; i < this.attendance.length; i++) {\n                    marker = {\n                      lat: parseFloat(this.attendance[i].latitude),\n                      lng: parseFloat(this.attendance[i].longitude),\n                      name: id.name + ', ' + this.attendance[i].created_at,\n                      icon: this.blueDot\n                    };\n                    this.markDefault.lat = parseFloat(this.attendance[i].latitude);\n                    this.markDefault.lng = parseFloat(this.attendance[i].longitude);\n                    this.markers.push({\n                      position: marker\n                    });\n                    this.path.push({\n                      lat: parseFloat(this.attendance[i].latitude),\n                      lng: parseFloat(this.attendance[i].longitude)\n                    });\n                    this.mapLine = 1;\n                    this.mapMark = 1;\n                  }\n                }\n\n                self = this;\n                setTimeout(function () {\n                  self.$refs.topside.scrollTop = 0;\n                }, 900);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getId(_x2) {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }(),\n    indexMethod: function indexMethod(index) {\n      return index + this.paginator.fromP;\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var i, marker, _marker3;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.$store.dispatch(action.LIST_ATT_EMPLOYEE, this.currentPage);\n\n            case 2:\n              _context6.next = 4;\n              return this.listData;\n\n            case 4:\n              this.markers = [];\n              this.path = [];\n              this.window_open = false;\n\n              for (i = 0; i < this.listData.length; i++) {\n                marker = {\n                  lat: parseFloat(this.listData[i].clock_in_latitude),\n                  lng: parseFloat(this.listData[i].clock_in_longitude),\n                  name: this.listData[i].name + ', ' + this.listData[i].clock_in + ' (CLOCK IN)',\n                  icon: this.redIcon\n                };\n                this.markDefault.lat = parseFloat(this.listData[i].clock_in_latitude);\n                this.markDefault.lng = parseFloat(this.listData[i].clock_in_longitude);\n                this.markers.push({\n                  position: marker\n                });\n                this.mapMark = 1;\n              }\n\n              for (i = 0; i < this.listData.length; i++) {\n                _marker3 = {\n                  lat: parseFloat(this.listData[i].clock_out_latitude),\n                  lng: parseFloat(this.listData[i].clock_out_longitude),\n                  name: this.listData[i].name + ', ' + this.listData[i].clock_out + ' (CLOCK OUT)',\n                  icon: this.orangeIcon\n                };\n                this.markers.push({\n                  position: _marker3\n                });\n              }\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["list-attendance-employee.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" ref=\"topside\" id=\"affix-container\">\n    <div class=\"card-base card-shadow--medium bg-white\" v-loading=\"loading\">\n        <gmap-map :center=\"markDefault\" :zoom=\"16\" map-type-id=\"terrain\" style=\"width: 100%; height: 500px\">\n            <div v-if=\"mapMark\">\n                <gmap-marker :key=\"index\" v-for=\"(m, index) in markers\" :icon=\"{ url: m.position.icon}\" :position=\"m.position\" :clickable=\"true\" @click=\"openWindow(m.position)\"></gmap-marker>\n                <gmap-info-window @closeclick=\"window_open=false\" :opened=\"window_open\" :position=\"infowindow\" :options=\"{ pixelOffset: { width: 0, height: -35},}\">\n                    {{infowindow.name}}\n                </gmap-info-window>\n            </div>\n            <div v-if=\"mapLine\">\n                <gmap-polyline :path=\"path\" v-bind:options=\"{ strokeColor:'#BB0000'}\">\n                </gmap-polyline>\n            </div>\n        </gmap-map>\n        <el-row style=\"margin-top: 20px; margin-left: 3px\" :gutter=\"20\">\n            <el-col :span=\"1\">\n                <p style=\"margin-top: 7px\">Employee:</p>\n            </el-col>\n            <el-col :span=\"6\">\n                <el-select style=\"width: 90%; margin-left: 40px;\" v-model=\"userid\" filterable placeholder=\"Employee Name\">\n                    <el-option label=\"All Employee\" value=\"0\">All Employee</el-option>\n                    <el-option v-for=\"item in dropDown\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n                </el-select>\n            </el-col>\n            <el-col :span=\"1\">\n                <p style=\"margin-top: 7px; margin-left: 15px;\">Time:</p>\n            </el-col>\n            <el-col :span=\"1\">\n                <el-radio style=\"margin-top: 10px; margin-left: 25px;\" v-model=\"radio\" label=\"1\"><br></el-radio>\n            </el-col>\n            <el-col :span=\"4\">\n                <el-select style=\"width: 100%; margin-left: 15px\" v-model=\"month\" placeholder=\"Select\" @change=\"removeDate\" :disabled=\"disableRadio1\">\n                    <el-option label=\"Today\" selected value=\"99\">Today</el-option>\n                    <el-option label=\"All Months\" selected value=\"0\">All Months</el-option>\n                    <el-option label=\"January\" selected value=\"1\">January</el-option>\n                    <el-option label=\"February\" value=\"2\">February</el-option>\n                    <el-option label=\"March\" value=\"3\">March</el-option>\n                    <el-option label=\"April\" value=\"4\">April</el-option>\n                    <el-option label=\"May\" value=\"5\">May</el-option>\n                    <el-option label=\"June\" value=\"6\">June</el-option>\n                    <el-option label=\"July\" value=\"7\">July</el-option>\n                    <el-option label=\"August\" value=\"8\">August</el-option>\n                    <el-option label=\"September\" value=\"9\">September</el-option>\n                    <el-option label=\"October\" value=\"10\">October</el-option>\n                    <el-option label=\"November\" value=\"11\">November</el-option>\n                    <el-option label=\"December\" value=\"12\">December</el-option>\n                </el-select>\n            </el-col>\n            <el-col :span=\"1\">\n                <el-radio style=\"margin-top: 10px; margin-left: 10px;\" v-model=\"radio\" label=\"2\">\n                    <p><br></p>\n                </el-radio>\n            </el-col>\n            <el-col :span=\"8\">\n                <el-date-picker style=\"width: 100%;\" value-format=\"yyyy-MM-dd\" :disabled=\"disableRadio2\" @change=\"removeDate2\" v-model=\"date\" type=\"daterange\">\n                </el-date-picker>\n            </el-col>\n            <el-col :span=\"1\">\n                <el-button icon=\"el-icon-search\" style=\"background: #D50000; font-size: 17px; color: white; \" :loading=\"button\" @click=\"onFind\" square size=\"small\"></el-button>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"10\">\n            <el-col :span=\"24\">\n                <el-table :data=\"tableData\" style=\"width: 100%\" @row-click=\"getId\">\n                    <el-table-column type=\"index\" :index=\"indexMethod\" align=\"center\" label=\"NO\" width=\"60\"></el-table-column>\n                    <el-table-column align=\"center\" width=\"100\" label=\"PHOTO\">\n                        <template slot-scope=\"scope\">\n                            <img style=\"width: 35px; height: 35px; border-radius: 50%\" :src=\"scope.row.profile_picture\">\n                        </template>\n                    </el-table-column>\n                    <el-table-column prop=\"name\" align=\"center\" label=\"EMPLOYEE INFO\"></el-table-column>\n                    <el-table-column prop=\"clock_in\" header-align=\"center\" label=\"CHECK IN\"></el-table-column>\n                    <el-table-column prop=\"clock_out\" header-align=\"center\" label=\"CHECK OUT\"></el-table-column>\n                    <el-table-column prop=\"remark\" header-align=\"center\" label=\"MESSAGE\"></el-table-column>\n                    <el-table-column v-on:click.stop align=\"center\" label=\"\">\n                        <template slot-scope=\"scope\">\n                            <img style=\"width: 35px; height: 35px;\" @click=\"Dialog(scope.row.image_url, $event)\" :src=\"scope.row.image_url\">\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </el-col>\n        </el-row>\n        <div v-if=\"date || month == 99\">\n            <el-col :span=\"3\">\n                <el-button style=\"width: 100%;  margin-left: 30px; margin-bottom: 5px; background-color: #D50000;\" :loading=\"button\" type=\"danger\" @click=\"exportExcel\">\n                    Export\n                </el-button>\n            </el-col>\n        </div>\n        <div align=\"right\" style=\"margin-bottom: 10px\">\n            <el-pagination background layout=\"prev, pager, next\" :current-page.sync=\"currentPage\" @current-change=\"handlePageChange\" :total=\"totalData\"></el-pagination>\n        </div>\n    </div>\n    <el-dialog :visible.sync=\"dialogVisible\" width=\"25%\">\n        <center>\n            <div v-if=\"image_url\">\n                <img style=\"max-width: 250px; max-height: 250px;\" :src=\"image_url\">\n            </div>\n        </center>\n    </el-dialog>\n</div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types'\nimport swal from 'sweetalert2'\n\nexport default {\n    name: \"Attendance\",\n    data() {\n        return {\n            dialogVisible: false,\n            currentPage: 1,\n            input: \"\",\n            affixEnabled: true,\n            indexT: \"\",\n            userid: null,\n            date: null,\n            radio: null,\n            month: null,\n            tableData: null,\n            totalData: null,\n            mapMark: null,\n            markers: [],\n            mapLine: null,\n            path: [],\n            markDefault: {\n                lat: -6.21462,\n                lng: 106.84513\n            },\n            resultTrack: null,\n            image_url: null,\n            info_marker: null,\n            infowindow: {\n                lat: 0,\n                lng: 0,\n                name: null,\n            },\n            orangeIcon: require(\"@/assets/images/orange-dot.png\"),\n            redIcon: require(\"@/assets/images/red-dot.png\"),\n            blueDot: require(\"@/assets/images/blue-dot.png\"),\n            window_open: false\n        };\n    },\n    components: {\n        Affix\n    },\n    computed: {\n        ...mapGetters({\n            listData: getter.GET_LIST_ATT,\n            paginate: getter.GET_PAGINATE_ATT,\n            dropDown: getter.GET_DROPDOWN_EMPLOYEE,\n            filterAttendance: getter.GET_FILTER_ATT,\n            attTotal: getter.GET_ATT_TOTAL,\n            filterTotal: getter.GET_FILTER_TOTAL,\n            button: getter.GET_BUTTON,\n            loading: getter.GET_LOADING,\n            attendance: getter.GET_TRACKING_ATTENDANCE\n        }),\n        paginator() {\n            return this.paginate;\n        },\n        indexTam() {\n            return this.indexT;\n        },\n        disableRadio1() {\n            if (this.radio == 2) {\n                return true;\n            } else if (this.radio == 1) {\n                return false;\n            } else {\n                return true;\n            }\n        },\n        disableRadio2() {\n            if (this.radio == 1) {\n                return true;\n            } else if (this.radio == 2) {\n                return false;\n            } else {\n                return true;\n            }\n        },\n        dateExport() {\n            if (this.date) {\n                const foo = {\n                    startdate: this.date[0],\n                    duedate: this.date[1],\n                }\n                return foo\n\n            } else if (this.month == 99) {\n                const foo = {\n                    startdate: this.forToday,\n                    duedate: this.forToday,\n\n                }\n                return foo\n            } else {\n                return null;\n            }\n        },\n        forToday() {\n            let today = new Date();\n            let dd = String(today.getDate()).padStart(2, '0');\n            let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n            let yyyy = today.getFullYear();\n            today = yyyy + '-' + mm + '-' + dd;\n            return today;\n        }\n    },\n    async mounted() {\n        await this.$store.commit(mutation.BUTTON_STATUS, false);\n        await this.$store.commit(mutation.SET_LOADING, true);\n        await this.$store.dispatch(action.LIST_ATT_EMPLOYEE, this.currentPage);\n        this.tableData = this.listData\n        this.totalData = this.attTotal\n        this.$store.dispatch(action.DROPDOWN_EMPLOYEE);\n    },\n    methods: {\n        removeDate2() {\n            this.month = null\n        },\n        removeDate() {\n            this.date = null\n        },\n        openWindow(position) {\n            this.window_open = true\n            this.infowindow.lat = position.lat;\n            this.infowindow.lng = position.lng;\n            this.infowindow.name = position.name;\n        },\n        Dialog(foo, e) {\n            e.stopPropagation();\n            this.image_url = foo;\n            this.dialogVisible = true;\n        },\n        async exportExcel() {\n            let data = '';\n            if (this.dateExport == null) {\n                swal('Please select a start date', '', 'error')\n            } else {\n                if (this.userid) {\n                    let obj = {\n                        date: this.dateExport,\n                        path: \"employee\",\n                        userid: this.userid,\n                    };\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    data = await this.$store.dispatch(action.EXPORT_ATTENDANCE, obj)\n                    let firstD = data.slice(1)\n                    let secondD = firstD.slice(0, firstD.length - 1)\n                    window.open(secondD)\n                } else if (this.userid == null | this.userid == 0) {\n                    let obj = {\n                        date: this.dateExport,\n                        path: \"employee\",\n                        userid: null,\n                    };\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    data = await this.$store.dispatch(action.EXPORT_ATTENDANCE, obj)\n                    let firstD = data.slice(1)\n                    let secondD = firstD.slice(0, firstD.length - 1)\n                    window.open(secondD)\n                }\n            }\n        },\n        async onFind() {\n            if (this.userid == null) {\n                this.currentPage = 1;\n                await this.$store.commit(mutation.BUTTON_STATUS, true);\n                await this.$store.dispatch(action.FILTER_EMPLOYEE, {\n                    radio: this.radio,\n                    iduser: 0,\n                    today: this.forToday,\n                    idmonth: this.month,\n                    startdate: this.date ? this.date[0] : null,\n                    duedate: this.date ? this.date[1] : null,\n                    page: 1\n                })\n            } else {\n                this.currentPage = 1;\n                await this.$store.commit(mutation.BUTTON_STATUS, true);\n                await this.$store.dispatch(action.FILTER_EMPLOYEE, {\n                    radio: this.radio,\n                    iduser: this.userid,\n                    today: this.forToday,\n                    idmonth: this.month,\n                    startdate: this.date ? this.date[0] : null,\n                    duedate: this.date ? this.date[1] : null,\n                    page: 1\n                })\n            }\n            this.tableData = this.filterAttendance;\n            this.totalData = this.filterTotal;\n            this.markers = [];\n            this.path = [];\n            this.window_open = false;\n            for (var i = 0; i < this.tableData.length; i++) {\n                const marker = {\n                    lat: parseFloat(this.tableData[i].clock_in_latitude),\n                    lng: parseFloat(this.tableData[i].clock_in_longitude),\n                    name: this.tableData[i].name + ', ' + this.tableData[i].clock_in + ' (CLOCK IN)',\n                    icon: this.redIcon\n                };\n                this.markDefault.lat = parseFloat(this.tableData[i].clock_in_latitude)\n                this.markDefault.lng = parseFloat(this.tableData[i].clock_in_longitude)\n                this.markers.push({\n                    position: marker\n                });\n                this.mapMark = 1;\n            }\n            for (var i = 0; i < this.tableData.length; i++) {\n                const marker = {\n                    lat: parseFloat(this.tableData[i].clock_out_latitude),\n                    lng: parseFloat(this.tableData[i].clock_out_longitude),\n                    name: this.tableData[i].name + ', ' + this.tableData[i].clock_out + ' (CLOCK OUT)',\n                    icon: this.orangeIcon\n                };\n                this.markers.push({\n                    position: marker\n                });\n            }\n        },\n        async handlePageChange(currentpage) {\n            this.currentPage = currentpage;\n            if (this.userid == null) {\n                await this.$store.commit(mutation.SET_LOADING, true);\n                await this.$store.dispatch(action.FILTER_EMPLOYEE, {\n                    radio: this.radio,\n                    iduser: 0,\n                    idmonth: this.month,\n                    today: this.forToday,\n                    startdate: this.date ? this.date[0] : null,\n                    duedate: this.date ? this.date[1] : null,\n                    page: this.currentPage\n                });\n            } else {\n                await this.$store.commit(mutation.SET_LOADING, true);\n                await this.$store.dispatch(action.FILTER_EMPLOYEE, {\n                    radio: this.radio,\n                    iduser: this.userid,\n                    idmonth: this.month,\n                    today: this.forToday,\n                    startdate: this.date ? this.date[0] : null,\n                    duedate: this.date ? this.date[1] : null,\n                    page: this.currentPage\n                });\n\n            }\n            this.tableData = this.filterAttendance;\n            this.totalData = this.filterTotal;\n            this.markers = [];\n            this.path = [];\n            this.window_open = false;\n            for (var i = 0; i < this.tableData.length; i++) {\n\n                const marker = {\n                    lat: parseFloat(this.tableData[i].clock_in_latitude),\n                    lng: parseFloat(this.tableData[i].clock_in_longitude),\n                    name: this.tableData[i].name + ', ' + this.tableData[i].clock_in + ' (CLOCK IN)',\n                    icon: this.redIcon\n                };\n                this.markDefault.lat = parseFloat(this.tableData[i].clock_in_latitude)\n                this.markDefault.lng = parseFloat(this.tableData[i].clock_in_longitude)\n                this.markers.push({\n                    position: marker\n                });\n                this.mapMark = 1;\n            }\n            for (var i = 0; i < this.tableData.length; i++) {\n                const marker = {\n                    lat: parseFloat(this.tableData[i].clock_out_latitude),\n                    lng: parseFloat(this.tableData[i].clock_out_longitude),\n                    name: this.tableData[i].name + ', ' + this.tableData[i].clock_out + ' (CLOCK OUT)',\n                    icon: this.orangeIcon\n                };\n                this.markers.push({\n                    position: marker\n                });\n            }\n        },\n        async getId(id) {\n            await this.$store.commit(mutation.SET_LOADING, true);\n            await this.$store.dispatch(action.TRACKING_ATTENDANCE, id.id);\n            await this.attendance;\n            if (this.attendance.length == 0) {\n                swal('This user does not have any tracking yet', '', '')\n            } else {\n                this.markers = [];\n                this.path = [];\n                this.window_open = false;\n                for (var i = 0; i < this.attendance.length; i++) {\n                    const marker = {\n                        lat: parseFloat(this.attendance[i].latitude),\n                        lng: parseFloat(this.attendance[i].longitude),\n                        name: id.name + ', ' + this.attendance[i].created_at,\n                        icon: this.blueDot\n                    };\n                    this.markDefault.lat = parseFloat(this.attendance[i].latitude)\n                    this.markDefault.lng = parseFloat(this.attendance[i].longitude)\n                    this.markers.push({\n                        position: marker\n                    });\n                    this.path.push({\n                        lat: parseFloat(this.attendance[i].latitude),\n                        lng: parseFloat(this.attendance[i].longitude)\n                    });\n                    this.mapLine = 1;\n                    this.mapMark = 1;\n                }\n            }\n            var self = this;\n            setTimeout(function () {\n                self.$refs.topside.scrollTop = 0;\n            }, 900);\n        },\n        indexMethod(index) {\n            return index + this.paginator.fromP;\n        },\n    },\n    async created() {\n        await this.$store.dispatch(action.LIST_ATT_EMPLOYEE, this.currentPage);\n        await this.listData\n        this.markers = [];\n        this.path = [];\n        this.window_open = false;\n        for (var i = 0; i < this.listData.length; i++) {\n            const marker = {\n                lat: parseFloat(this.listData[i].clock_in_latitude),\n                lng: parseFloat(this.listData[i].clock_in_longitude),\n                name: this.listData[i].name + ', ' + this.listData[i].clock_in + ' (CLOCK IN)',\n                icon: this.redIcon\n            };\n            this.markDefault.lat = parseFloat(this.listData[i].clock_in_latitude)\n            this.markDefault.lng = parseFloat(this.listData[i].clock_in_longitude)\n            this.markers.push({\n                position: marker\n            });\n            this.mapMark = 1;\n        }\n        for (var i = 0; i < this.listData.length; i++) {\n            const marker = {\n                lat: parseFloat(this.listData[i].clock_out_latitude),\n                lng: parseFloat(this.listData[i].clock_out_longitude),\n                name: this.listData[i].name + ', ' + this.listData[i].clock_out + ' (CLOCK OUT)',\n                icon: this.orangeIcon\n            };\n            this.markers.push({\n                position: marker\n            });\n        }\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-row {\n    padding: 0px 10px;\n    margin-bottom: 20px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.el-select {\n    width: 100%;\n}\n\n#map {\n    height: 100%;\n}\n</style>\n"],"sourceRoot":"src/views/pages/attendance"}]}