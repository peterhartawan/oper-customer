{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\components\\employee\\task-employee.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\components\\employee\\task-employee.vue","mtime":1647032354118},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport * as getter from \"../../store/getters-types\";\nimport * as mutation from \"../../store/mutation-types\";\nimport * as action from \"../../store/action-types\";\nexport default {\n  data: function data() {\n    return {\n      tabTask: 'graphic',\n      tabOrder: 'today',\n      mapMark: null,\n      markers: [],\n      path: [],\n      infowindow: {\n        lat: 0,\n        lng: 0,\n        name: null\n      },\n      markDefault: {\n        lat: -6.21462,\n        lng: 106.84513\n      },\n      window_open: false,\n      mapsGraph: true,\n      options: {\n        fullWidth: true,\n        chartPadding: {\n          right: 40\n        }\n      },\n      createAss: true\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    orderGraphic: getter.GET_ORDER_BAR_GRAPHIC,\n    orderBar: getter.GET_ORDER_BAR,\n    listData: getter.GET_TRACKING_ORDER,\n    idorder: getter.GET_ID_ORDER,\n    trackingType: getter.GET_TRACKING_TYPE\n  })), {}, {\n    lineChart: function lineChart() {\n      if (this.orderGraphic !== null) {\n        return {\n          labels: this.orderGraphic.label,\n          series: this.orderGraphic.data\n        };\n      } else {\n        return {};\n      }\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var obj, i, marker;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.$store.dispatch(action.ORDER_GRAPHIC_BAR, {\n                v: 'today',\n                type: 'employee'\n              });\n\n            case 2:\n              this.$route.path === '/employee/inprogress' ? this.createAss = true : this.createAss = false;\n\n              if (!(this.$route.path === '/detail-task-employee')) {\n                _context.next = 8;\n                break;\n              }\n\n              obj = {\n                id: this.idorder,\n                page: 1,\n                type: this.trackingType\n              };\n              _context.next = 7;\n              return this.$store.dispatch(action.TRACKING, obj);\n\n            case 7:\n              for (i = 0; i < this.listData.length; i++) {\n                marker = {\n                  lat: parseFloat(this.listData[i].latitude),\n                  lng: parseFloat(this.listData[i].longitude),\n                  name: this.listData[i].created_at\n                };\n                this.markDefault.lat = parseFloat(this.listData[i].latitude);\n                this.markDefault.lng = parseFloat(this.listData[i].longitude);\n                this.markers.push({\n                  position: marker\n                });\n                this.path.push(marker);\n                this.mapMark = 1;\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    totalTrack: function () {\n      var _totalTrack = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(v) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                v === 'graphic' ? this.mapsGraph = true : this.mapsGraph = false;\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function totalTrack(_x) {\n        return _totalTrack.apply(this, arguments);\n      }\n\n      return totalTrack;\n    }(),\n    totalOrder: function totalOrder(v) {\n      this.$store.dispatch(action.ORDER_GRAPHIC_BAR, {\n        v: v,\n        type: 'employee'\n      });\n    },\n    openWindow: function openWindow(position) {\n      this.window_open = true;\n      this.infowindow.lat = position.lat;\n      this.infowindow.lng = position.lng;\n      this.infowindow.name = position.name;\n    },\n    templateButton: function templateButton() {\n      this.$router.push('/template-list');\n    },\n    assignButton: function assignButton() {\n      this.$router.push('/employee/assign-task');\n    }\n  }\n};",{"version":3,"sources":["task-employee.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <el-row :gutter=\"10\" class=\"mb-70\">\r\n            <el-col :span=\"12\">\r\n                <div v-if=\"createAss\" class=\"mb-30\">\r\n                    <span class=\"font-weight-600 view-text mb-20\">TASK</span>\r\n                    <el-button\r\n                            @click=\"templateButton\"\r\n                            class=\"template tempAss\">\r\n                        Template\r\n                    </el-button>\r\n                    <el-button\r\n                            @click=\"assignButton\"\r\n                            class=\"assign tempAss\">\r\n                        Assign\r\n                    </el-button>\r\n                </div>\r\n                <div>\r\n                    <span class=\"font-weight-600 view-text\">VIEW</span>\r\n                    <el-radio-group v-model=\"tabTask\" @change=\"totalTrack\" fill=\"#AB0000\" class=\"mt-25\" >\r\n                        <el-radio-button label=\"graphic\"><span class=\"font-button padding-20\">Graphic</span></el-radio-button>\r\n                        <el-radio-button label=\"tracking\"><span class=\"font-button padding-20\" >Tracking</span></el-radio-button>\r\n                    </el-radio-group>\r\n                </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <el-row>\r\n                        <span class=\"font-weight-600 view-text\" >TOTAL ORDER</span>\r\n                    <el-col :span=\"10\" :offset=\"14\">\r\n                        <el-radio-group v-model=\"tabOrder\" @change=\"totalOrder\" fill=\"#ababab\" size=\"small\">\r\n                            <el-radio-button label=\"today\">Today</el-radio-button>\r\n                            <el-radio-button label=\"week\">Week</el-radio-button>\r\n                            <el-radio-button label=\"month\">Month</el-radio-button>\r\n                        </el-radio-group>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n                <el-row >\r\n                    <el-col :lg=\"24\">\r\n                        <el-card shadow=\"always\" class=\"card-border\" :body-style=\"{padding: '0px'}\">\r\n                            <el-row :gutter=\"20\">\r\n                                <el-col :span=\"8\">\r\n                                    <el-row class=\"font-icon line\" justify=\"center\">\r\n                                        <el-col :span=\"9\">\r\n                                            <img src=\"../../assets/oper_asset/open.png\" class=\"drive-acount padding-left-3\">\r\n                                        </el-col>\r\n                                        <el-col :span=\"15\" class=\"text-center font-weight-500 font-size-45\">\r\n                                            0\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                                <el-col :span=\"8\" v-if=\"orderBar !== null\">\r\n                                    <el-row class=\"font-icon line\" justify=\"center\">\r\n                                        <el-col :span=\"9\">\r\n                                            <img src=\"../../assets/oper_asset/progress.png\" class=\"drive-acount\">\r\n                                        </el-col>\r\n                                        <el-col :span=\"15\" class=\"text-center font-weight-500 font-size-45\">\r\n                                            {{orderBar.order_inprogress}}\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                                <el-col :span=\"8\" v-if=\"orderBar !== null\">\r\n                                    <el-row class=\"font-icon\" justify=\"center\" style=\"padding-right: 30px\">\r\n                                        <el-col :span=\"9\">\r\n                                            <img src=\"../../assets/oper_asset/completed.png\" class=\"drive-acount\">\r\n                                        </el-col>\r\n                                        <el-col :span=\"15\" class=\"text-center font-weight-500 font-size-45\">\r\n                                            {{orderBar.order_complete}}\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                            </el-row>\r\n                        </el-card>\r\n                    </el-col>\r\n                </el-row>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <div v-if=\"mapsGraph\">\r\n            <h4>ORDER DETAILS</h4>\r\n            <!--v-if=\"orderGraphic !== null\"-->\r\n            <div class=\"card-base card-shadow--medium p-30 mt-25 bg-white border-line-hight\">\r\n                <vue-chartist :data=\"lineChart\" type=\"Line\"></vue-chartist>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-else>\r\n            <h4>ORDER DETAILS</h4>\r\n            <div class=\"card-base card-shadow--medium bg-white\">\r\n                <gmap-map :center=\"markDefault\" :zoom=\"16\" style=\"width: 100%; height: 500px\">\r\n                    <div v-if=\"mapMark\">\r\n                        <gmap-marker :key=\"index\" v-for=\"(m, index) in markers\" :position=\"m.position\" :clickable=\"true\" @click=\"openWindow(m.position)\"></gmap-marker>\r\n                        <gmap-info-window @closeclick=\"window_open=false\" :opened=\"window_open\" :position=\"infowindow\" :options=\"{ pixelOffset: { width: 0, height: -35},}\">\r\n                            {{infowindow.name}}\r\n                        </gmap-info-window>\r\n                        <gmap-polyline :path=\"path\" :options=\"{ strokeColor:'#BB0000'}\">\r\n                        </gmap-polyline>\r\n                    </div>\r\n                </gmap-map>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import { mapGetters } from 'vuex';\r\n    import * as getter from \"../../store/getters-types\";\r\n    import * as mutation from \"../../store/mutation-types\";\r\n    import * as action from \"../../store/action-types\";\r\n    export default {\r\n        data(){\r\n            return {\r\n                tabTask     : 'graphic',\r\n                tabOrder    : 'today',\r\n                mapMark: null,\r\n                markers: [],\r\n                path: [],\r\n                infowindow: {\r\n                    lat: 0,\r\n                    lng: 0,\r\n                    name: null,\r\n                },\r\n                markDefault: {\r\n                    lat: -6.21462,\r\n                    lng: 106.84513\r\n                },\r\n                window_open: false,\r\n                mapsGraph: true,\r\n                options: {\r\n                    fullWidth: true,\r\n                    chartPadding: {\r\n                        right: 40\r\n                    }\r\n                },\r\n                createAss: true,\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                orderGraphic : getter.GET_ORDER_BAR_GRAPHIC,\r\n                orderBar     : getter.GET_ORDER_BAR,\r\n                listData     : getter.GET_TRACKING_ORDER,\r\n                idorder      : getter.GET_ID_ORDER,\r\n                trackingType : getter.GET_TRACKING_TYPE\r\n            }),\r\n            lineChart (){\r\n                if(this.orderGraphic !== null){\r\n                    return {\r\n                        labels: this.orderGraphic.label,\r\n                        series: this.orderGraphic.data\r\n                    }\r\n                } else {\r\n                    return {}\r\n                }\r\n            }\r\n        },\r\n        async created(){\r\n            await this.$store.dispatch(action.ORDER_GRAPHIC_BAR, {\r\n                v       : 'today',\r\n                type    : 'employee'\r\n            });\r\n            (this.$route.path === '/employee/inprogress') ? this.createAss = true : this.createAss = false;\r\n            if(this.$route.path === '/detail-task-employee'){\r\n                let obj = {\r\n                    id      : this.idorder,\r\n                    page    : 1,\r\n                    type    : this.trackingType\r\n                };\r\n                await this.$store.dispatch(action.TRACKING, obj);\r\n                for (let i = 0; i < this.listData.length; i++) {\r\n                    const marker = {\r\n                        lat: parseFloat(this.listData[i].latitude),\r\n                        lng: parseFloat(this.listData[i].longitude),\r\n                        name: this.listData[i].created_at\r\n                    };\r\n                    this.markDefault.lat = parseFloat(this.listData[i].latitude);\r\n                    this.markDefault.lng = parseFloat(this.listData[i].longitude);\r\n                    this.markers.push({\r\n                        position: marker\r\n                    });\r\n                    this.path.push(marker);\r\n                    this.mapMark = 1;\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            async totalTrack(v){\r\n                (v === 'graphic') ? this.mapsGraph = true : this.mapsGraph = false;\r\n            },\r\n            totalOrder(v) {\r\n                this.$store.dispatch(action.ORDER_GRAPHIC_BAR, {\r\n                    v,\r\n                    type    : 'employee'\r\n                })\r\n            },\r\n            openWindow(position) {\r\n                this.window_open = true;\r\n                this.infowindow.lat = position.lat;\r\n                this.infowindow.lng = position.lng;\r\n                this.infowindow.name = position.name;\r\n            },\r\n            templateButton(){\r\n                this.$router.push('/template-list')\r\n            },\r\n            assignButton(){\r\n                this.$router.push('/employee/assign-task')\r\n            },\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import '../../assets/scss/_variables';\r\n    .container {\r\n        font-family: Arial;\r\n    }\r\n    .font-icon {\r\n        font-size: 20px;\r\n    }\r\n    .line {\r\n        border-right: 1px solid $line-color;\r\n        padding-right: 30px;\r\n    }\r\n    .view-text {\r\n        display: block;\r\n        font-size: 15px;\r\n    }\r\n    .drive-acount {\r\n        height: 40px;\r\n        margin-top: 10px;\r\n    }\r\n    .font-button {\r\n        font-size: 19px;\r\n    }\r\n    .template {\r\n        padding: 30px 40px;\r\n        @extend .font-button;\r\n    }\r\n    .assign {\r\n        padding: 30px 50px;\r\n        @extend .font-button;\r\n    }\r\n    .tempAss {\r\n        background:  #AB0000;\r\n        color: white\r\n    }\r\n</style>"],"sourceRoot":"src/components/employee"}]}