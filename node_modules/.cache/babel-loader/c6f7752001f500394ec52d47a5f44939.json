{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/store/modules/dashboard/mutation.js","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/store/modules/dashboard/mutation.js","mtime":1628175042607},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.values\";\n\nvar _mutation$SET_DASHBOA;\n\nimport * as mutation from \"../../mutation-types\";\nexport default (_mutation$SET_DASHBOA = {}, _defineProperty(_mutation$SET_DASHBOA, mutation.SET_DASHBOARD_LIST, function (state, payload) {\n  state.dashData = payload.dataList;\n}), _defineProperty(_mutation$SET_DASHBOA, mutation.SET_DASHBOARD_GRAFIK, function (state, payload) {\n  // console.log(payload.grafik)\n  state.pieDash = {\n    data: payload.piechart.map(Object.values).reduce(function (a, b) {\n      return a.concat(b);\n    }),\n    label: payload.piechart.map(Object.keys).reduce(function (a, b) {\n      return a.concat(b);\n    })\n  };\n  var label, data;\n\n  if (payload.grafik.order !== undefined) {\n    label = payload.grafik.order.labels;\n    data = [payload.grafik.order.series];\n    state.grafikDash = {\n      label: label,\n      data: data\n    };\n  }\n\n  if (payload.grafik.task !== undefined) {\n    label = payload.grafik.task.labels;\n    data = [payload.grafik.task.series];\n    state.grafikDash = {\n      label: label,\n      data: data\n    };\n  }\n\n  if (payload.grafik.task !== undefined && payload.grafik.order !== undefined) {\n    label = payload.grafik.order.labels.concat(payload.grafik.task.labels.filter(function (item) {\n      return payload.grafik.order.labels.indexOf(item) < 0;\n    }));\n    data = [payload.grafik.order.series, payload.grafik.task.series];\n    state.grafikDash = {\n      label: label,\n      data: data\n    };\n  }\n}), _defineProperty(_mutation$SET_DASHBOA, mutation.SET_CLEAR_GRAFIK, function (state) {\n  state.pieDash = null;\n  state.grafikDash = null;\n}), _mutation$SET_DASHBOA);",{"version":3,"sources":["/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/store/modules/dashboard/mutation.js"],"names":["mutation","SET_DASHBOARD_LIST","state","payload","dashData","dataList","SET_DASHBOARD_GRAFIK","pieDash","data","piechart","map","Object","values","reduce","a","b","concat","label","keys","grafik","order","undefined","labels","series","grafikDash","task","filter","item","indexOf","SET_CLEAR_GRAFIK"],"mappings":"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","sourcesContent":["import * as mutation from '../../mutation-types'\n\nexport default {\n    [mutation.SET_DASHBOARD_LIST](state, payload){\n        state.dashData = payload.dataList\n    },\n    [mutation.SET_DASHBOARD_GRAFIK](state, payload) {\n        // console.log(payload.grafik)\n        state.pieDash = { \n            data : payload.piechart.map(Object.values).reduce((a, b) => {\n                                                return a.concat(b)\n                                        }),\n            label : payload.piechart.map(Object.keys).reduce((a, b) => {\n                                                return a.concat(b)\n                                        }),\n    };\n\n        let label, data;\n        if(payload.grafik.order !== undefined){\n             label = payload.grafik.order.labels;\n\n             data = [payload.grafik.order.series];\n            state.grafikDash = {\n                label,\n                data\n            }\n        }\n        if( payload.grafik.task !== undefined ){\n            label = payload.grafik.task.labels;\n\n            data = [payload.grafik.task.series];\n            state.grafikDash = {\n                label,\n                data\n            }\n        }\n        if (payload.grafik.task !== undefined && payload.grafik.order !== undefined){\n\n         label = payload.grafik.order.labels.concat(payload.grafik.task.labels.filter((item)=> {\n            return payload.grafik.order.labels.indexOf(item) < 0;\n        }));\n\n         data = [payload.grafik.order.series, payload.grafik.task.series];\n        state.grafikDash = {\n            label,\n            data\n        }\n     }\n},\n    [mutation.SET_CLEAR_GRAFIK](state) {\n        state.pieDash = null;\n        state.grafikDash = null\n    },\n}"]}]}