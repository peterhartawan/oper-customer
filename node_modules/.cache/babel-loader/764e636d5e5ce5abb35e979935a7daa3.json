{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/faq/edit-faq.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/faq/edit-faq.vue","mtime":1640440454985},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444342},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":1640440453952},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1640440454211}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nexport default {\n  name: \"EditLocation\",\n  data: function data() {\n    return {\n      form: {\n        question: \"\",\n        answer: \"\",\n        idrole: \"\",\n        idfaq: \"\",\n        page: 1\n      },\n      select: [{\n        idrole: 2,\n        name: \"Vendor\"\n      }, {\n        idrole: 3,\n        name: \"Enterprise\"\n      }],\n      rules: {\n        question: [{\n          required: true,\n          message: \"Question is required!\",\n          trigger: \"blur\"\n        }],\n        answer: [{\n          required: true,\n          message: \"Answer is required!\",\n          trigger: \"blur\"\n        }],\n        role: [{\n          required: true,\n          message: \"Role is required!\",\n          trigger: \"blur\"\n        }]\n      },\n      editor: {\n        placeholder: 'Put an answer here..',\n        theme: 'snow',\n        modules: {\n          toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n            'header': 1\n          }, {\n            'header': 2\n          }], [{\n            'list': 'ordered'\n          }, {\n            'list': 'bullet'\n          }], [{\n            'script': 'sub'\n          }, {\n            'script': 'super'\n          }], [{\n            'indent': '-1'\n          }, {\n            'indent': '+1'\n          }], [{\n            'direction': 'rtl'\n          }], [{\n            'size': ['small', false, 'large', 'huge']\n          }], [{\n            'header': [1, 2, 3, 4, 5, 6, false]\n          }], [{\n            'font': []\n          }], [{\n            'color': []\n          }, {\n            'background': []\n          }], [{\n            'align': []\n          }], ['clean'], ['link']]\n        }\n      }\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit(formName) {\n      var _this = this;\n\n      var obj = {\n        question: this.form.question,\n        idrole: this.form.idrole,\n        answer: this.form.answer\n      };\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.$store.commit(mutation.BUTTON_STATUS, true);\n\n          _this.$store.dispatch(action.UPDATE_FAQ, _this.form);\n        } else {\n          return false;\n        }\n      });\n    },\n    Cancel: function Cancel() {\n      this.$router.replace({\n        path: \"/manage-faq\"\n      });\n    }\n  },\n  computed: _objectSpread({}, mapGetters({\n    content: getter.GET_FAQ_DETAIL\n  })),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.form.idrole = this.content.idrole;\n              this.form.question = this.content.question;\n              this.form.answer = this.content.answer;\n              this.form.idfaq = this.content.id;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["edit-faq.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"page-quill scrollable only-y\" id=\"affix-container\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n            <el-row :gutter=\"10\">\n                <el-col :lg=\"9\">\n                    <el-select v-model=\"form.idrole\" filterable placeholder=\"Role\">\n                        <el-option v-for=\"item in select\" :key=\"item.idrole\" :label=\"item.name\" :value=\"item.idrole\"></el-option>\n                    </el-select>\n                </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"24\">\n                    <el-form-item prop=\"question\">\n                        <el-input placeholder=\"Question\" v-model=\"form.question\"></el-input>\n                    </el-form-item>\n                </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"24\">\n                    <div class=\"card-base card-shadow--medium\" style=\"min-height: 300px;\">\n                        <quill-editor :options=\"editor\" v-model=\"form.answer\">\n                        </quill-editor>\n                    </div>\n                </el-col>\n            </el-row>\n        </el-form>\n        <el-row>\n            <el-col :offset=\"20\" :lg=\"2\">\n                <el-button @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\n            </el-col>\n            <el-col :lg=\"2\">\n                <el-button @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\n            </el-col>\n        </el-row>\n    </div>\n</div>\n</template>\n\n<script>\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as mutation from '../../../store/mutation-types';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nexport default {\n    name: \"EditLocation\",\n    data() {\n        return {\n            form: {\n                question: \"\",\n                answer: \"\",\n                idrole: \"\",\n                idfaq: \"\",\n                page: 1,\n            },\n            select: [\n                {\n                    idrole: 2,\n                    name: \"Vendor\"\n                },\n                {\n                    idrole: 3,\n                    name: \"Enterprise\"\n                },\n            ],\n            rules: {\n                question: [{\n                    required: true,\n                    message: \"Question is required!\",\n                    trigger: \"blur\"\n                }],\n                answer: [{\n                    required: true,\n                    message: \"Answer is required!\",\n                    trigger: \"blur\"\n                }],\n                role: [{\n                    required: true,\n                    message: \"Role is required!\",\n                    trigger: \"blur\"\n                }],\n            },\n            editor: {\n                placeholder: 'Put an answer here..',\n                theme: 'snow',\n                modules: {\n                    toolbar: [\n                    ['bold', 'italic', 'underline', 'strike'],\n                    ['blockquote', 'code-block'],\n                    [{ 'header': 1 }, { 'header': 2 }],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                    [{ 'script': 'sub' }, { 'script': 'super' }],\n                    [{ 'indent': '-1' }, { 'indent': '+1' }],\n                    [{ 'direction': 'rtl' }],\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                    [{ 'font': [] }],\n                    [{ 'color': [] }, { 'background': [] }],\n                    [{ 'align': [] }],\n                    ['clean'],\n                    ['link']\n                    ],\n                }\n            },\n        };\n    },\n    methods: {\n         onSubmit(formName) {\n            let obj = {\n                question: this.form.question,\n                idrole: this.form.idrole,\n                answer: this.form.answer,\n            };\n            this.$refs[formName].validate(valid => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.UPDATE_FAQ, this.form);\n                } else {\n                    return false;\n                }\n            });\n        },\n        Cancel() {\n            this.$router.replace({\n                path: \"/manage-faq\"\n            });\n        }\n    },\n     computed: {\n        ...mapGetters({\n            content: getter.GET_FAQ_DETAIL\n        }),\n    },\n    async created() {\n        this.form.idrole = this.content.idrole\n        this.form.question = this.content.question;\n        this.form.answer = this.content.answer;\n        this.form.idfaq = this.content.id;\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    padding: 0px 10px;\n    margin-bottom: 10px;\n\n    &:last-child {\n        margin-bottom: 20px;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.el-radio {\n    margin: 0 160px 0 10px;\n}\n\n.el-select {\n    width: 100%;\n}\n\n.page-quill {\n    .card-base {\n        box-sizing: border-box;\n\n        .quill-editor {\n            .ql-toolbar.ql-snow {\n                border: none;\n                background: lighten($background-color, 2%);\n                border-bottom: 1px solid $background-color;\n            }\n\n            .ql-container.ql-snow {\n                border: none;\n            }\n        }\n\n        &.t-bubble {\n            overflow: inherit;\n        }\n    }\n}\n\n@media (max-width: 768px) {\n    .page-quill {\n        .card-base {\n            &.t-bubble {\n                padding: 40px 20px;\n            }\n        }\n    }\n}\n</style>\n"],"sourceRoot":"src/views/pages/faq"}]}