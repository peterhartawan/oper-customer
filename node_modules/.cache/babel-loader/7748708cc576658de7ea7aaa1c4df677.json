{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\src\\views\\pages\\enterprise\\new-location.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\src\\views\\pages\\enterprise\\new-location.vue","mtime":1647032353858},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/ASUS/Documents/GitHub/update-request-driver-automation-update/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nexport default {\n  name: \"NewLocation\",\n  data: function data() {\n    return {\n      currentPlace: null,\n      markers: {\n        lat: -6.193619252954559,\n        lng: 106.76330885229345\n      },\n      center: {\n        lat: -6.193619252954559,\n        lng: 106.76330885229345\n      },\n      form: {\n        name: \"\",\n        birthdate: \"\",\n        address: \"\",\n        longitude: \"\",\n        latitude: \"\",\n        identerprise: \"\"\n      },\n      payload: {\n        identerprise: null,\n        page: 1\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: \"Location Name is required!\",\n          trigger: \"blur\"\n        }],\n        latitude: [{\n          required: true,\n          message: \"Location Latitude is required!\",\n          trigger: \"blur\"\n        }],\n        longitude: [{\n          required: true,\n          message: \"Location Longitude is required!\",\n          trigger: \"blur\"\n        }],\n        address: [{\n          required: true,\n          message: \"Address is required!\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit(formName) {\n      var _this = this;\n\n      var obj = {\n        name: this.form.name,\n        birthdate: this.form.birthdate,\n        address: this.form.address,\n        longitude: this.form.longitude,\n        latitude: this.form.latitude,\n        identerprise: this.form.identerprise\n      };\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.$store.commit(mutation.BUTTON_STATUS, true);\n\n          _this.$store.dispatch(action.CREATE_DATA_LOCATION, _this.form);\n        } else {\n          return false;\n        }\n      });\n    },\n    dialogTrack: function dialogTrack() {\n      this.$store.commit(mutation.SET_DIALOG_VISIBLE, true);\n    },\n    updateCoordinates: function updateCoordinates(location) {\n      var _this2 = this;\n\n      var geocoder = new google.maps.Geocoder();\n      geocoder.geocode({\n        'latLng': location.latLng\n      }, function (result, status) {\n        if (status === google.maps.GeocoderStatus.OK) {\n          _this2.markers = {\n            lat: location.latLng.lat(),\n            lng: location.latLng.lng()\n          };\n          _this2.form.latitude = location.latLng.lat();\n          _this2.form.longitude = location.latLng.lng();\n          _this2.form.address = result[0].formatted_address;\n        }\n      });\n    },\n    setPlace: function setPlace(place) {\n      if (place) {\n        this.updateCoordinates(place.geometry.location);\n        this.markers = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        };\n        this.center = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        };\n        this.form.latitude = place.geometry.location.lat();\n        this.form.longitude = place.geometry.location.lng();\n        this.form.address = place.formatted_address;\n      }\n    },\n    Cancel: function Cancel() {\n      this.$store.dispatch(action.LIST_LOCATION, this.payload);\n      this.$router.push({\n        path: \"/location-enterprise/\" + this.enterprise.identerprise\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.$store.commit(mutation.SET_DIALOG_VISIBLE, false);\n    },\n    handleClose: function handleClose(done) {\n      var _this3 = this;\n\n      this.$confirm('Are you sure to close this map?').then(function (_) {\n        _this3.$store.commit(mutation.SET_DIALOG_VISIBLE, false);\n      }).catch(function (_) {});\n    }\n  },\n  computed: _objectSpread({}, mapGetters({\n    enterprise: getter.ENTERPRISE,\n    button: getter.GET_BUTTON,\n    dialogV: getter.GET_DIALOG_VISIBLE\n  })),\n  created: function created() {\n    this.form.identerprise = this.enterprise.identerprise;\n    this.payload.identerprise = this.enterprise.identerprise;\n  }\n};",{"version":3,"sources":["new-location.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\r\n            <el-row :gutter=\"20\">\r\n                <el-col :lg=\"12\">\r\n                    <el-form-item prop=\"name\">\r\n                        <el-input placeholder=\"Location Name\" v-model=\"form.name\"></el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n                <el-col :lg=\"12\">\r\n                    <el-form-item prop=\"address\">\r\n                        <el-input placeholder=\"Address\" disabled v-model=\"form.address\"></el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n            </el-row>\r\n            <el-row :gutter=\"20\">\r\n                <el-col :lg=\"12\">\r\n                    <el-form-item prop=\"latitude\">\r\n                        <el-input placeholder=\"Latitude\" disabled v-model=\"form.latitude\"></el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n                <el-col :lg=\"10\">\r\n                    <el-form-item prop=\"longitude\">\r\n                        <el-input placeholder=\"Longitude\" disabled v-model=\"form.longitude\"></el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"2\">\r\n                    <el-button type=\"primary\" @click=\"dialogTrack\" icon=\"el-icon-location\" circle></el-button>\r\n                </el-col>\r\n            </el-row>\r\n        </el-form>\r\n        <el-row>\r\n            <el-col :offset=\"20\" :lg=\"2\">\r\n                <el-button :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\r\n            </el-col>\r\n            <el-col :lg=\"2\">\r\n                <el-button @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n    <el-dialog :visible.sync=\"dialogV\" :before-close=\"handleClose\" width=\"70%\">\r\n        <div class=\"card-base card-shadow--medium\">\r\n            <div class=\"gmap-location-search-bar\">\r\n              <gmap-autocomplete @place_changed=\"setPlace\"></gmap-autocomplete>\r\n            </div>\r\n            <gmap-map ref=\"map\" :center=\"center\" :zoom=\"12\" :options=\"{gestureHandling:'cooperative'}\" map-type-id=\"roadmap\" style=\"width: 100%; height: 500px\">\r\n                <GmapMarker @drag=\"updateCoordinates\" :draggable=\"true\" :position=\"markers\" label=\"S\" />\r\n            </gmap-map>\r\n        </div>\r\n        <el-button @click=\"closeDialog\" class=\"mt-10\">Save</el-button>\r\n    </el-dialog>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport router from \"../../../router\";\r\nimport moment from \"moment\";\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from '../../../store/mutation-types';\r\nexport default {\r\n    name: \"NewLocation\",\r\n    data() {\r\n        return {\r\n            currentPlace: null,\r\n            markers: {\r\n                lat: -6.193619252954559,\r\n                lng: 106.76330885229345,\r\n            },\r\n            center: {\r\n                lat: -6.193619252954559,\r\n                lng: 106.76330885229345,\r\n            },\r\n            form: {\r\n                name: \"\",\r\n                birthdate: \"\",\r\n                address: \"\",\r\n                longitude: \"\",\r\n                latitude: \"\",\r\n                identerprise: \"\",\r\n            },\r\n            payload: {\r\n                identerprise: null,\r\n                page: 1,\r\n            },\r\n            rules: {\r\n                name: [{\r\n                    required: true,\r\n                    message: \"Location Name is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                latitude: [{\r\n                    required: true,\r\n                    message: \"Location Latitude is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                longitude: [{\r\n                    required: true,\r\n                    message: \"Location Longitude is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                address: [{\r\n                    required: true,\r\n                    message: \"Address is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        onSubmit(formName) {\r\n            let obj = {\r\n                name: this.form.name,\r\n                birthdate: this.form.birthdate,\r\n                address: this.form.address,\r\n                longitude: this.form.longitude,\r\n                latitude: this.form.latitude,\r\n                identerprise: this.form.identerprise,\r\n            };\r\n            this.$refs[formName].validate(valid => {\r\n                if (valid) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.CREATE_DATA_LOCATION, this.form);\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        dialogTrack() {\r\n            this.$store.commit(mutation.SET_DIALOG_VISIBLE, true)\r\n        },\r\n        updateCoordinates(location) {\r\n            const geocoder = new google.maps.Geocoder()\r\n            geocoder.geocode({\r\n                'latLng': location.latLng\r\n            }, (result, status) => {\r\n                if (status === google.maps.GeocoderStatus.OK) {\r\n                    this.markers = {\r\n                        lat: location.latLng.lat(),\r\n                        lng: location.latLng.lng(),\r\n                    };\r\n                    this.form.latitude = location.latLng.lat()\r\n                    this.form.longitude = location.latLng.lng()\r\n                    this.form.address = result[0].formatted_address\r\n                }\r\n            })\r\n        },\r\n        setPlace(place) {\r\n          if (place) {\r\n            this.updateCoordinates(place.geometry.location)\r\n\r\n            this.markers = {\r\n              lat: place.geometry.location.lat(),\r\n              lng: place.geometry.location.lng(),\r\n            };\r\n\r\n            this.center = {\r\n              lat: place.geometry.location.lat(),\r\n              lng: place.geometry.location.lng(),\r\n            };\r\n\r\n            this.form.latitude = place.geometry.location.lat()\r\n            this.form.longitude = place.geometry.location.lng()\r\n            this.form.address = place.formatted_address\r\n          }\r\n        },\r\n        Cancel() {\r\n            this.$store.dispatch(action.LIST_LOCATION, this.payload);\r\n            this.$router.push({\r\n                path: \"/location-enterprise/\" + this.enterprise.identerprise\r\n            });\r\n        },\r\n        closeDialog() {\r\n            this.$store.commit(mutation.SET_DIALOG_VISIBLE, false)\r\n        },\r\n        handleClose(done) {\r\n            this.$confirm('Are you sure to close this map?')\r\n                .then(_ => {\r\n                    this.$store.commit(mutation.SET_DIALOG_VISIBLE, false)\r\n                })\r\n                .catch(_ => {});\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            enterprise: getter.ENTERPRISE,\r\n            button: getter.GET_BUTTON,\r\n            dialogV: getter.GET_DIALOG_VISIBLE\r\n        }),\r\n    },\r\n    created() {\r\n        this.form.identerprise = this.enterprise.identerprise;\r\n        this.payload.identerprise = this.enterprise.identerprise;\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.gmap-location-search-bar {\r\n  margin: 0 0 20px 0;\r\n}\r\n\r\n.el-row {\r\n    // display: flex;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    padding: 0px 10px;\r\n    margin-bottom: 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.el-radio {\r\n    margin: 0 160px 0 10px;\r\n}\r\n\r\n.el-select {\r\n    width: 100%;\r\n}\r\n\r\n.thumbnail {\r\n    position: relative;\r\n    width: 300px;\r\n    height: 300px;\r\n    overflow: hidden;\r\n}\r\n\r\n.thumbnail img {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    height: 100%;\r\n    width: auto;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    -ms-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.thumbnail img.portrait {\r\n    width: 100%;\r\n    height: auto;\r\n}\r\n\r\na {\r\n    border-style: dotted;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n    height: 150px;\r\n}\r\n\r\ntd {\r\n    padding: 10px;\r\n}\r\n\r\n.pac-target-input {\r\n    -webkit-appearance: none;\r\n    background-color: #FFFFFF;\r\n    background-image: none;\r\n    border-radius: 4px;\r\n    border: 1px solid #DCDFE6;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    color: #606266;\r\n    display: inline-block;\r\n    font-size: inherit;\r\n    height: 40px;\r\n    line-height: 40px;\r\n    outline: none;\r\n    padding: 0 15px;\r\n    -webkit-transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n    transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n    width: 100%;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/pages/enterprise"}]}