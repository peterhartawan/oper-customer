{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\store\\modules\\driver\\mutation.js","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\store\\modules\\driver\\mutation.js","mtime":1650271587344},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621}],"contextDependencies":[],"result":["import _defineProperty from \"C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\n\nvar _mutation$SET_REQUEST;\n\nimport * as mutation from \"../../mutation-types\";\nexport default (_mutation$SET_REQUEST = {}, _defineProperty(_mutation$SET_REQUEST, mutation.SET_REQUEST_DETAILS, function (state, payload) {\n  state.requestDetails = payload;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.RESET_REQUEST_DETAILS, function (state, payload) {\n  state.requestDetails = null;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_SEARCH_INDEX, function (state, payload) {\n  state.searchIndex = payload;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_DROPDOWN_DRIVER, function (state, payload) {\n  payload.dataList.forEach(function (element, index) {\n    element.numrow = index + 1;\n  });\n  state.dropDown = payload.dataList;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_DRIVER_D_AVAILABLE, function (state, payload) {\n  state.driverAvList = payload.dataList;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.RESET_ASSIGNED_DRIVERS, function (state) {\n  state.assignedDrivers = [];\n  state.checked = [];\n  state.selectedPlaces = [];\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_ASSIGNED_DRIVERS, function (state, payload) {\n  var paToIndex = payload.fromPA - 1;\n  var olxIdVendor = process.env.VUE_APP_ID_VENDOR_OLX;\n  var idvendor = JSON.parse(localStorage.getItem('user')).vendor_idvendor;\n  payload.dataList.forEach(function (element, index) {\n    var x = paToIndex + index;\n\n    if (state.checked[x] == null) {\n      state.checked[x] = false;\n\n      if (idvendor == olxIdVendor) {\n        if (element.client_enterprise_identerprise == payload.identerprise) {\n          state.assignedDrivers[x] = element;\n          state.checked[x] = true;\n        }\n      } else {\n        if (element.places != null) {\n          var exists = 0;\n          payload.places.forEach(function (place) {\n            if (element.places.idplaces == place.idplaces) exists++;\n          });\n\n          if (exists) {\n            state.selectedPlaces[x] = element.places;\n\n            if (payload.idplaces != null) {\n              if (state.selectedPlaces[x].idplaces == payload.idplaces && element.client_enterprise_identerprise == payload.identerprise) {\n                state.assignedDrivers[x] = element;\n                state.checked[x] = true;\n              }\n            } else {\n              if (element.client_enterprise_identerprise == payload.identerprise) {\n                state.assignedDrivers[x] = element;\n                state.checked[x] = true;\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n  state.listDriverAssignee = payload.dataList;\n  state.driverTotal = payload.total;\n  state.paginate.nextClick = payload.nextC;\n  state.paginate.prevClick = payload.prevC;\n  state.paginate.firstPage = payload.firstP;\n  state.paginate.fromP = payload.fromPA;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_LIST_DRIVER, function (state, payload) {\n  state.listDriver = payload.dataList;\n  state.driverTotal = payload.total;\n  state.paginate.nextClick = payload.nextC;\n  state.paginate.prevClick = payload.prevC;\n  state.paginate.firstPage = payload.firstP;\n  state.paginate.fromP = payload.fromPA;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_DRIVER_TYPE, function (state, payload) {\n  state.driverType = payload.dataList;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_DRIVER_DETAIL, function (state, payload) {\n  state.detailDriver = payload.forDriver;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_DRIVER_RES, function (state, payload) {\n  state.driver = payload.driverdata;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_DRIVER_ASSIGNEE, function (state, payload) {\n  state.driverAssignee = payload.dataList;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_DRIVER_ENTERPRISE, function (state, payload) {\n  state.driverEnterprise = payload.dataList;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_TOTAL_ACCOUNT_DRIVER, function (state, payload) {\n  state.totalAccountD = payload;\n}), _defineProperty(_mutation$SET_REQUEST, mutation.SET_LIST_REQ_DRIVER, function (state, payload) {\n  state.listReqDriver = payload;\n}), _mutation$SET_REQUEST);",{"version":3,"sources":["C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/src/store/modules/driver/mutation.js"],"names":["mutation","SET_REQUEST_DETAILS","state","payload","requestDetails","RESET_REQUEST_DETAILS","SET_SEARCH_INDEX","searchIndex","SET_DROPDOWN_DRIVER","dataList","forEach","element","index","numrow","dropDown","SET_DRIVER_D_AVAILABLE","driverAvList","RESET_ASSIGNED_DRIVERS","assignedDrivers","checked","selectedPlaces","SET_ASSIGNED_DRIVERS","paToIndex","fromPA","olxIdVendor","process","env","VUE_APP_ID_VENDOR_OLX","idvendor","JSON","parse","localStorage","getItem","vendor_idvendor","x","client_enterprise_identerprise","identerprise","places","exists","place","idplaces","listDriverAssignee","driverTotal","total","paginate","nextClick","nextC","prevClick","prevC","firstPage","firstP","fromP","SET_LIST_DRIVER","listDriver","SET_DRIVER_TYPE","driverType","SET_DRIVER_DETAIL","detailDriver","forDriver","SET_DRIVER_RES","driver","driverdata","SET_DRIVER_ASSIGNEE","driverAssignee","SET_DRIVER_ENTERPRISE","driverEnterprise","SET_TOTAL_ACCOUNT_DRIVER","totalAccountD","SET_LIST_REQ_DRIVER","listReqDriver"],"mappings":"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","sourcesContent":["import * as mutation from '../../mutation-types'\r\nexport default {\r\n    [mutation.SET_REQUEST_DETAILS](state, payload){\r\n        state.requestDetails = payload\r\n    },\r\n    [mutation.RESET_REQUEST_DETAILS](state, payload){\r\n        state.requestDetails = null\r\n    },\r\n    [mutation.SET_SEARCH_INDEX](state, payload){\r\n        state.searchIndex  = payload\r\n    },\r\n    [mutation.SET_DROPDOWN_DRIVER](state, payload){\r\n        payload.dataList.forEach((element, index) => {\r\n            element.numrow = index+1\r\n        })\r\n        state.dropDown  = payload.dataList\r\n    },\r\n    [mutation.SET_DRIVER_D_AVAILABLE](state, payload){\r\n        state.driverAvList  = payload.dataList\r\n    },\r\n    [mutation.RESET_ASSIGNED_DRIVERS](state){\r\n        state.assignedDrivers = []\r\n        state.checked = []\r\n        state.selectedPlaces = []\r\n    },\r\n    [mutation.SET_ASSIGNED_DRIVERS](state, payload){\r\n        \r\n        var paToIndex = payload.fromPA - 1\r\n        let olxIdVendor = process.env.VUE_APP_ID_VENDOR_OLX\r\n        let idvendor = JSON.parse(localStorage.getItem('user')).vendor_idvendor\r\n        payload.dataList.forEach((element, index) => {\r\n            let x = paToIndex + index\r\n            if(state.checked[x] == null){\r\n                state.checked[x] = false\r\n                \r\n                if(idvendor == olxIdVendor){\r\n                    if(element.client_enterprise_identerprise == payload.identerprise){\r\n                        state.assignedDrivers[x] = element\r\n                        state.checked[x] = true\r\n                    }\r\n                }\r\n                else{\r\n                    if(element.places != null){\r\n                        var exists = 0;\r\n                        payload.places.forEach((place) => {\r\n                            if(element.places.idplaces == place.idplaces)\r\n                                exists++\r\n                        });\r\n                        if(exists){\r\n                            state.selectedPlaces[x] = element.places\r\n                            if(payload.idplaces != null){\r\n                                if(state.selectedPlaces[x].idplaces == payload.idplaces && element.client_enterprise_identerprise == payload.identerprise){\r\n                                    state.assignedDrivers[x] = element\r\n                                    state.checked[x] = true\r\n                                }\r\n                            } else {\r\n                                if(element.client_enterprise_identerprise == payload.identerprise){\r\n                                    state.assignedDrivers[x] = element\r\n                                    state.checked[x] = true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        state.listDriverAssignee    = payload.dataList\r\n        state.driverTotal           = payload.total\r\n        state.paginate.nextClick    = payload.nextC\r\n        state.paginate.prevClick    = payload.prevC\r\n        state.paginate.firstPage    = payload.firstP\r\n        state.paginate.fromP        = payload.fromPA\r\n    },\r\n    [mutation.SET_LIST_DRIVER](state, payload){\r\n        state.listDriver            = payload.dataList\r\n        state.driverTotal           = payload.total\r\n        state.paginate.nextClick    = payload.nextC\r\n        state.paginate.prevClick    = payload.prevC\r\n        state.paginate.firstPage    = payload.firstP\r\n        state.paginate.fromP        = payload.fromPA\r\n    },\r\n    [mutation.SET_DRIVER_TYPE](state, payload){\r\n        state.driverType  = payload.dataList\r\n    },\r\n    [mutation.SET_DRIVER_DETAIL](state, payload){\r\n        state.detailDriver  = payload.forDriver\r\n    },\r\n    [mutation.SET_DRIVER_RES](state, payload){\r\n        state.driver               = payload.driverdata\r\n       \r\n    },\r\n    [mutation.SET_DRIVER_ASSIGNEE](state, payload){\r\n        state.driverAssignee         = payload.dataList\r\n       \r\n    },\r\n    [mutation.SET_DRIVER_ENTERPRISE](state, payload){\r\n        state.driverEnterprise         = payload.dataList\r\n    },\r\n    [mutation.SET_TOTAL_ACCOUNT_DRIVER](state, payload){\r\n        state.totalAccountD = payload\r\n    },\r\n    [mutation.SET_LIST_REQ_DRIVER](state, payload){\r\n        state.listReqDriver = payload\r\n    }\r\n};"]}]}