{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/store/modules/order-client/mutation.js","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/store/modules/order-client/mutation.js","mtime":1628175042613},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _mutation$SET_L_ORDER;\n\nimport * as mutation from \"../../mutation-types\";\nimport { TRACKING_ORDER } from \"../../action-types\";\nexport default (_mutation$SET_L_ORDER = {}, _defineProperty(_mutation$SET_L_ORDER, mutation.SET_L_ORDER_CLIET, function (state, payload) {\n  state.listCor = payload.dataList;\n  state.paginate.nextClick = payload.nextC;\n  state.paginate.prevClick = payload.prevC;\n  state.paginate.firstPage = payload.firstP;\n  state.paginate.fromP = payload.fromPA;\n  state.paginate.totalP = payload.totalPE;\n}), _defineProperty(_mutation$SET_L_ORDER, mutation.SET_ORDER_CLIENT_DETAIL, function (state, payload) {\n  state.order = payload;\n}), _defineProperty(_mutation$SET_L_ORDER, mutation.SET_PATH, function (state, payload) {\n  state.path = payload;\n}), _defineProperty(_mutation$SET_L_ORDER, mutation.ID_ORDER, function (state, payload) {\n  state.idorder = payload;\n}), _defineProperty(_mutation$SET_L_ORDER, mutation.SET_ORDER_BAR_GRAPHIC, function (state, payload) {\n  state.orderBar = payload.total_order;\n  var label, data;\n  label = payload.grafik.complete.labels; // label = payload.grafik.open.labels.concat(payload.grafik.inprogress.labels.filter((item)=> {\n  //     return payload.grafik.open.labels.indexOf(item) < 0;\n  // }));\n  // label = label.concat(payload.grafik.complete.labels.filter((item)=> {\n  //     return label.indexOf(item) < 0;\n  // }));\n\n  data = [payload.grafik.complete.series];\n  state.orderGraphic = {\n    label: label,\n    data: data\n  };\n}), _defineProperty(_mutation$SET_L_ORDER, mutation.SET_ROLE_PATH_ORDER, function (state, payload) {\n  state.rolePath = payload;\n}), _mutation$SET_L_ORDER);",{"version":3,"sources":["/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/store/modules/order-client/mutation.js"],"names":["mutation","TRACKING_ORDER","SET_L_ORDER_CLIET","state","payload","listCor","dataList","paginate","nextClick","nextC","prevClick","prevC","firstPage","firstP","fromP","fromPA","totalP","totalPE","SET_ORDER_CLIENT_DETAIL","order","SET_PATH","path","ID_ORDER","idorder","SET_ORDER_BAR_GRAPHIC","orderBar","total_order","label","data","grafik","complete","labels","series","orderGraphic","SET_ROLE_PATH_ORDER","rolePath"],"mappings":";;;;AAAA,OAAO,KAAKA,QAAZ;AACA,SAAQC,cAAR;AAEA,mFAIKD,QAAQ,CAACE,iBAJd,YAIiCC,KAJjC,EAIwCC,OAJxC,EAIgD;AACxCD,EAAAA,KAAK,CAACE,OAAN,GAA8BD,OAAO,CAACE,QAAtC;AACAH,EAAAA,KAAK,CAACI,QAAN,CAAeC,SAAf,GAA8BJ,OAAO,CAACK,KAAtC;AACAN,EAAAA,KAAK,CAACI,QAAN,CAAeG,SAAf,GAA8BN,OAAO,CAACO,KAAtC;AACAR,EAAAA,KAAK,CAACI,QAAN,CAAeK,SAAf,GAA8BR,OAAO,CAACS,MAAtC;AACAV,EAAAA,KAAK,CAACI,QAAN,CAAeO,KAAf,GAA8BV,OAAO,CAACW,MAAtC;AACAZ,EAAAA,KAAK,CAACI,QAAN,CAAeS,MAAf,GAA8BZ,OAAO,CAACa,OAAtC;AACH,CAXL,0CAeKjB,QAAQ,CAACkB,uBAfd,YAeuCf,KAfvC,EAe8CC,OAf9C,EAesD;AAC9CD,EAAAA,KAAK,CAACgB,KAAN,GAAcf,OAAd;AACH,CAjBL,0CAmBKJ,QAAQ,CAACoB,QAnBd,YAmBwBjB,KAnBxB,EAmB+BC,OAnB/B,EAmBwC;AAChCD,EAAAA,KAAK,CAACkB,IAAN,GAAajB,OAAb;AACH,CArBL,0CAsBKJ,QAAQ,CAACsB,QAtBd,YAsBwBnB,KAtBxB,EAsB+BC,OAtB/B,EAsBwC;AAChCD,EAAAA,KAAK,CAACoB,OAAN,GAAgBnB,OAAhB;AACH,CAxBL,0CAyBKJ,QAAQ,CAACwB,qBAzBd,YAyBqCrB,KAzBrC,EAyB4CC,OAzB5C,EAyBoD;AAC5CD,EAAAA,KAAK,CAACsB,QAAN,GAAiBrB,OAAO,CAACsB,WAAzB;AACA,MAAIC,KAAJ,EAAWC,IAAX;AAEAD,EAAAA,KAAK,GAAGvB,OAAO,CAACyB,MAAR,CAAeC,QAAf,CAAwBC,MAAhC,CAJ4C,CAK5C;AACA;AACA;AACA;AACA;AACA;;AACAH,EAAAA,IAAI,GAAG,CAACxB,OAAO,CAACyB,MAAR,CAAeC,QAAf,CAAwBE,MAAzB,CAAP;AACA7B,EAAAA,KAAK,CAAC8B,YAAN,GAAqB;AACjBN,IAAAA,KAAK,EAALA,KADiB;AAEjBC,IAAAA,IAAI,EAAJA;AAFiB,GAArB;AAKH,CA1CL,0CA2CK5B,QAAQ,CAACkC,mBA3Cd,YA2CmC/B,KA3CnC,EA2C0CC,OA3C1C,EA2CkD;AAC1CD,EAAAA,KAAK,CAACgC,QAAN,GAAiB/B,OAAjB;AACH,CA7CL","sourcesContent":["import * as mutation from '../../mutation-types'\nimport {TRACKING_ORDER} from \"../../action-types\";\n\nexport default {\n    /**\n     * for list corporate need to next click and other\n     * */\n    [mutation.SET_L_ORDER_CLIET](state, payload){\n        state.listCor               = payload.dataList\n        state.paginate.nextClick    = payload.nextC\n        state.paginate.prevClick    = payload.prevC\n        state.paginate.firstPage    = payload.firstP\n        state.paginate.fromP        = payload.fromPA\n        state.paginate.totalP       = payload.totalPE\n    },\n    /*\n    * create enterprise to detail enterprise\n    * */\n    [mutation.SET_ORDER_CLIENT_DETAIL](state, payload){\n        state.order = payload\n    },\n\n    [mutation.SET_PATH](state, payload) {\n        state.path = payload\n    },\n    [mutation.ID_ORDER](state, payload) {\n        state.idorder = payload\n    },\n    [mutation.SET_ORDER_BAR_GRAPHIC](state, payload){\n        state.orderBar = payload.total_order;\n        let label, data;\n\n        label = payload.grafik.complete.labels;\n        // label = payload.grafik.open.labels.concat(payload.grafik.inprogress.labels.filter((item)=> {\n        //     return payload.grafik.open.labels.indexOf(item) < 0;\n        // }));\n        // label = label.concat(payload.grafik.complete.labels.filter((item)=> {\n        //     return label.indexOf(item) < 0;\n        // }));\n        data = [payload.grafik.complete.series];\n        state.orderGraphic = {\n            label,\n            data\n        }\n\n    },\n    [mutation.SET_ROLE_PATH_ORDER](state, payload){\n        state.rolePath = payload\n    }\n};"]}]}