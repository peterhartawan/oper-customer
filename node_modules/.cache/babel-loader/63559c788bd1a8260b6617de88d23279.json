{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/store/modules/employee/action.js","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/store/modules/employee/action.js","mtime":1628175042609},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _action$LIST_EMPLOYEE;\n\nimport * as action from \"../../action-types\";\nimport * as mutation from \"../../mutation-types\";\nimport localAxios from \"../../../services/http/client\";\nimport swal from 'sweetalert2';\nimport * as typeS from \"../../../services/path_service\";\nimport router from \"../../../router\";\nexport default (_action$LIST_EMPLOYEE = {}, _defineProperty(_action$LIST_EMPLOYEE, action.LIST_EMPLOYEE, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, payload) {\n    var commit, dispatch, pathS, token, _yield$localAxios$get, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit, dispatch = _ref.dispatch;\n            _context.prev = 1;\n            pathS = '';\n            payload !== null ? pathS = '/employee/?status=' + payload.status + '&page=' + payload.page + (payload.employee_search ? '&q=' + payload.employee_search : '') : pathS = '/employee?dropdown=1&limit=100';\n            token = localStorage.getItem('token');\n            _context.next = 7;\n            return localAxios.get(pathS, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 7:\n            _yield$localAxios$get = _context.sent;\n            data = _yield$localAxios$get.data;\n            objList = {\n              dataList: data.data.data,\n              total: data.data.total,\n              nextC: data.data.next_page_url,\n              prevC: data.data.prev_page_url,\n              firstP: data.data.first_page_url,\n              fromPA: data.data.from\n            };\n            commit(mutation.BUTTON_STATUS, false);\n            commit(mutation.SET_EMPLOYEE_LIST, objList);\n            _context.next = 18;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.DATA_ERROR, _context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 14]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.LIST_EMPLOYEE_TASK, function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3, payload) {\n    var commit, dispatch, Url, token, _yield$localAxios$get2, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref3.commit, dispatch = _ref3.dispatch;\n            _context2.prev = 1;\n            Url = \"\".concat(payload.path, \"?page=\").concat(payload.page, \"&month=\").concat(payload.month, \"&trx_id=\").concat(payload.trx_id, \"&from=\").concat(payload.form, \"&to=\").concat(payload.to);\n            token = localStorage.getItem('token');\n            _context2.next = 6;\n            return localAxios.get(Url, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$get2 = _context2.sent;\n            data = _yield$localAxios$get2.data;\n            objList = {\n              dataList: data.data.data,\n              nextC: data.data.next_page_url,\n              prevC: data.data.prev_page_url,\n              firstP: data.data.first_page_url,\n              fromPA: data.data.from,\n              total: data.data.total\n            };\n            commit(mutation.SET_SEARCH_BUTTON, false);\n            commit(mutation.BUTTON_STATUS, false);\n            commit(mutation.SET_EMPLOYEE_LIST, objList);\n            _context2.next = 19;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](1);\n            commit(mutation.SET_SEARCH_BUTTON, false);\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.DATA_ERROR, _context2.t0);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 14]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.EMPLOYEE_TASK_ID, function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5, payload) {\n    var commit, dispatch, newPath, token, _yield$localAxios$get3, data, payloadS;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref5.commit, dispatch = _ref5.dispatch;\n            _context3.prev = 1;\n            newPath = '';\n            token = localStorage.getItem('token');\n            _context3.next = 6;\n            return localAxios.get(\"\".concat(payload.path, \"/\").concat(payload.id), {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$get3 = _context3.sent;\n            data = _yield$localAxios$get3.data;\n            // commit(mutation.SET_ID_ENTERPRISE, data.data.client_enterprise_identerprise)\n            payloadS = {\n              data: data.data\n            };\n\n            if (payload.path === '/employee/task/complete') {\n              newPath = '/employee/complete';\n            } else {\n              newPath = '/employee/inprogress';\n            }\n\n            commit(mutation.SET_EMPLOYEE_DETAIL, payloadS);\n            commit(mutation.SET_PATH, newPath); // dispatch(action.TEMPLATE_ID, data.data.task_template_task_template_id)\n            // return data.data\n\n            _context3.next = 17;\n            break;\n\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context3.t0);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 14]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref6.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.DROPDOWN_EMPLOYEE, function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7, payload) {\n    var commit, dispatch, token, _yield$localAxios$get4, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref7.commit, dispatch = _ref7.dispatch;\n            _context4.prev = 1;\n            token = localStorage.getItem('token');\n            _context4.next = 5;\n            return localAxios.get('/employee/?dropdown=1&limit=100' + (payload ? '&q=' + payload : ''), {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get4 = _context4.sent;\n            data = _yield$localAxios$get4.data;\n            objList = {\n              dataList: data.data.data\n            };\n            commit(mutation.SET_LOADING, false);\n            commit(mutation.SET_DROPDOWN_EMPLOYEE, objList);\n            _context4.next = 16;\n            break;\n\n          case 12:\n            _context4.prev = 12;\n            _context4.t0 = _context4[\"catch\"](1);\n            commit(mutation.SET_LOADING, false);\n            dispatch(action.DATA_ERROR, _context4.t0);\n\n          case 16:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 12]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref8.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.DROPDOWN_POSITION, function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref9, payload) {\n    var commit, dispatch, token, _yield$localAxios$get5, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            commit = _ref9.commit, dispatch = _ref9.dispatch;\n            _context5.prev = 1;\n            token = localStorage.getItem('token');\n            _context5.next = 5;\n            return localAxios.get('/employeeposition/?dropdown=1&limit=999', {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get5 = _context5.sent;\n            data = _yield$localAxios$get5.data;\n            objList = {\n              dataList: data.data.data\n            };\n            commit(mutation.SET_DROPDOWN_POSITION, objList);\n            _context5.next = 14;\n            break;\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context5.t0);\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 11]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref10.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.CREATE_DATA_EMPLOYEE, function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(_ref11, payloads) {\n    var commit, dispatch, token, formData, _yield$localAxios$pos, data;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            commit = _ref11.commit, dispatch = _ref11.dispatch;\n            _context6.prev = 1;\n            token = localStorage.getItem('token');\n            formData = new FormData();\n            formData.append('name', payloads.name);\n            formData.append('email', payloads.email);\n            formData.append('phonenumber', payloads.phonenumber);\n            formData.append('address', payloads.address);\n            formData.append('birthdate', payloads.birthdate);\n            formData.append('nik', payloads.nik);\n            formData.append('idemployee_position', payloads.position);\n            formData.append('gender', payloads.gender);\n            formData.append('photo', payloads.photo);\n\n            if (payloads.photo2) {\n              formData.append('photo_2', payloads.photo2);\n            }\n\n            formData.append('attendance_latitude', payloads.attendance_latitude);\n            formData.append('attendance_longitude', payloads.attendance_longitude);\n            _context6.next = 18;\n            return localAxios.post('/employee', formData, {\n              headers: {\n                'Authorization': 'Bearer ' + token,\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n\n          case 18:\n            _yield$localAxios$pos = _context6.sent;\n            data = _yield$localAxios$pos.data;\n            commit(mutation.BUTTON_STATUS, false);\n            router.replace({\n              path: '/employee'\n            });\n            _context6.next = 29;\n            break;\n\n          case 24:\n            _context6.prev = 24;\n            _context6.t0 = _context6[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context6.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context6.t0);\n\n          case 29:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 24]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref12.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.DETAIL_EMPLOYEE, function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref13, payload) {\n    var commit, dispatch, token, _yield$localAxios$get6, data;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            commit = _ref13.commit, dispatch = _ref13.dispatch;\n            _context7.prev = 1;\n            token = localStorage.getItem('token');\n            _context7.next = 5;\n            return localAxios.get('/employee/' + payload, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get6 = _context7.sent;\n            data = _yield$localAxios$get6.data;\n            commit(mutation.SET_EMPLOYEE_DETAIL, {\n              data: data.data\n            }); // router.replace({ path: '/employee/'+payload})\n\n            return _context7.abrupt(\"return\", data.data);\n\n          case 11:\n            _context7.prev = 11;\n            _context7.t0 = _context7[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context7.t0);\n\n          case 14:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 11]]);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref14.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.UPDATE_EMPLOYEE, function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref15, payloads) {\n    var commit, dispatch, token, formData, _yield$localAxios$pos2, data;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            commit = _ref15.commit, dispatch = _ref15.dispatch;\n            _context8.prev = 1;\n            token = localStorage.getItem('token');\n            formData = new FormData();\n            formData.append('name', payloads.name);\n            formData.append('email', payloads.email);\n            formData.append('phonenumber', payloads.phonenumber);\n            formData.append('address', payloads.address);\n            formData.append('birthdate', payloads.birthdate);\n            formData.append('nik', payloads.nik);\n            formData.append('idemployee_position', payloads.position);\n            formData.append('gender', payloads.gender);\n\n            if (payloads.photo) {\n              formData.append('photo', payloads.photo);\n            }\n\n            if (payloads.photo2) {\n              formData.append('photo_2', payloads.photo2);\n            }\n\n            formData.append('_method', 'put');\n            formData.append('attendance_latitude', payloads.attendance_latitude);\n            formData.append('attendance_longitude', payloads.attendance_longitude);\n            _context8.next = 19;\n            return localAxios.post('/employee/' + payloads.users_id, formData, {\n              headers: {\n                'Authorization': 'Bearer ' + token,\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n\n          case 19:\n            _yield$localAxios$pos2 = _context8.sent;\n            data = _yield$localAxios$pos2.data;\n            commit(mutation.BUTTON_STATUS, false);\n            router.replace({\n              path: '/employee'\n            });\n            _context8.next = 30;\n            break;\n\n          case 25:\n            _context8.prev = 25;\n            _context8.t0 = _context8[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context8.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context8.t0);\n\n          case 30:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[1, 25]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref16.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.LIST_POSITION, function () {\n  var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(_ref17, payload) {\n    var commit, dispatch, token, _yield$localAxios$get7, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            commit = _ref17.commit, dispatch = _ref17.dispatch;\n            _context9.prev = 1;\n            token = localStorage.getItem('token');\n            _context9.next = 5;\n            return localAxios.get('/employeeposition/?page=' + payload.page, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get7 = _context9.sent;\n            data = _yield$localAxios$get7.data;\n            objList = {\n              dataList: data.data.data,\n              total: data.data.total,\n              nextC: data.data.next_page_url,\n              prevC: data.data.prev_page_url,\n              firstP: data.data.first_page_url,\n              fromPA: data.data.from\n            };\n            commit(mutation.BUTTON_STATUS, false);\n            commit(mutation.SET_POSITION_LIST, objList);\n            _context9.next = 16;\n            break;\n\n          case 12:\n            _context9.prev = 12;\n            _context9.t0 = _context9[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.DATA_ERROR, _context9.t0);\n\n          case 16:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[1, 12]]);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref18.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.CREATE_POSITION, function () {\n  var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(_ref19, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$pos3, data, _token, _jsonData, _yield$localAxios$pos4, _data;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            commit = _ref19.commit, dispatch = _ref19.dispatch;\n\n            if (!payload.price) {\n              _context10.next = 21;\n              break;\n            }\n\n            _context10.prev = 2;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              job_name: payload.job_name,\n              price: payload.price\n            });\n            _context10.next = 7;\n            return localAxios.post('/employeeposition', jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 7:\n            _yield$localAxios$pos3 = _context10.sent;\n            data = _yield$localAxios$pos3.data;\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.LIST_POSITION, 1);\n            router.replace({\n              path: '/employee/list-position'\n            });\n            _context10.next = 19;\n            break;\n\n          case 14:\n            _context10.prev = 14;\n            _context10.t0 = _context10[\"catch\"](2);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context10.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context10.t0);\n\n          case 19:\n            _context10.next = 38;\n            break;\n\n          case 21:\n            _context10.prev = 21;\n            _token = localStorage.getItem('token');\n            _jsonData = JSON.stringify({\n              job_name: payload.job_name\n            });\n            _context10.next = 26;\n            return localAxios.post('/employeeposition', _jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + _token\n              }\n            });\n\n          case 26:\n            _yield$localAxios$pos4 = _context10.sent;\n            _data = _yield$localAxios$pos4.data;\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.LIST_POSITION, 1);\n            router.replace({\n              path: '/employee/list-position'\n            });\n            _context10.next = 38;\n            break;\n\n          case 33:\n            _context10.prev = 33;\n            _context10.t1 = _context10[\"catch\"](21);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context10.t1.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context10.t1);\n\n          case 38:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[2, 14], [21, 33]]);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref20.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.DETAIL_POSITION, function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(_ref21, payload) {\n    var commit, dispatch, token, _yield$localAxios$get8, data;\n\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            commit = _ref21.commit, dispatch = _ref21.dispatch;\n            _context11.prev = 1;\n            token = localStorage.getItem('token');\n            _context11.next = 5;\n            return localAxios.get('/employeeposition/' + payload, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get8 = _context11.sent;\n            data = _yield$localAxios$get8.data;\n            commit(mutation.SET_DETAIL_POSITION, {\n              data: data.data\n            });\n            router.replace({\n              path: '/employee/list-position/' + payload\n            });\n            return _context11.abrupt(\"return\", data.data);\n\n          case 12:\n            _context11.prev = 12;\n            _context11.t0 = _context11[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context11.t0);\n\n          case 15:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[1, 12]]);\n  }));\n\n  return function (_x21, _x22) {\n    return _ref22.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.UPDATE_POSITION, function () {\n  var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(_ref23, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$put, data, _token2, _jsonData2, _yield$localAxios$put2, _data2;\n\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            commit = _ref23.commit, dispatch = _ref23.dispatch;\n\n            if (!payload.price) {\n              _context12.next = 21;\n              break;\n            }\n\n            _context12.prev = 2;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              job_name: payload.job_name,\n              price: payload.price\n            });\n            _context12.next = 7;\n            return localAxios.put('/employeeposition/' + payload.idemployee_position, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 7:\n            _yield$localAxios$put = _context12.sent;\n            data = _yield$localAxios$put.data;\n            dispatch(action.LIST_POSITION, 1);\n            router.replace({\n              path: '/employee/list-position'\n            });\n            commit(mutation.BUTTON_STATUS, false);\n            _context12.next = 19;\n            break;\n\n          case 14:\n            _context12.prev = 14;\n            _context12.t0 = _context12[\"catch\"](2);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context12.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context12.t0);\n\n          case 19:\n            _context12.next = 38;\n            break;\n\n          case 21:\n            _context12.prev = 21;\n            _token2 = localStorage.getItem('token');\n            _jsonData2 = JSON.stringify({\n              job_name: payload.job_name\n            });\n            _context12.next = 26;\n            return localAxios.put('/employeeposition/' + payload.idemployee_position, _jsonData2, {\n              headers: {\n                'Authorization': 'Bearer ' + _token2\n              }\n            });\n\n          case 26:\n            _yield$localAxios$put2 = _context12.sent;\n            _data2 = _yield$localAxios$put2.data;\n            dispatch(action.LIST_POSITION, 1);\n            router.replace({\n              path: '/employee/list-position'\n            });\n            commit(mutation.BUTTON_STATUS, false);\n            _context12.next = 38;\n            break;\n\n          case 33:\n            _context12.prev = 33;\n            _context12.t1 = _context12[\"catch\"](21);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context12.t1.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context12.t1);\n\n          case 38:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[2, 14], [21, 33]]);\n  }));\n\n  return function (_x23, _x24) {\n    return _ref24.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.DELETE_POSITION, function () {\n  var _ref26 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(_ref25, payload) {\n    var commit, dispatch, token, _yield$localAxios$del, data;\n\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            commit = _ref25.commit, dispatch = _ref25.dispatch;\n            _context13.prev = 1;\n            token = localStorage.getItem('token');\n            _context13.next = 5;\n            return localAxios.delete('/employeeposition/' + payload, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$del = _context13.sent;\n            data = _yield$localAxios$del.data;\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.LIST_POSITION, 1);\n            router.replace({\n              path: '/employee/list-position'\n            });\n            _context13.next = 17;\n            break;\n\n          case 12:\n            _context13.prev = 12;\n            _context13.t0 = _context13[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context13.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context13.t0);\n\n          case 17:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[1, 12]]);\n  }));\n\n  return function (_x25, _x26) {\n    return _ref26.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.ASSIGN_EMPLOYEE_TASK, function () {\n  var _ref28 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(_ref27, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$pos5, data;\n\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            commit = _ref27.commit, dispatch = _ref27.dispatch;\n            _context14.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              task_template_id: payload.task_template_id,\n              booking_time: payload.booking_time,\n              message: payload.message,\n              employee_userid: payload.employee_userid\n            });\n            _context14.next = 6;\n            return localAxios.post('/employee/assign-task', jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$pos5 = _context14.sent;\n            data = _yield$localAxios$pos5.data;\n            commit(mutation.BUTTON_STATUS, false);\n            commit(mutation.CLEAR_INPUT, true);\n            swal('Succes To Assign Task', '', 'success');\n            router.replace('/employee/assign-task');\n            _context14.next = 19;\n            break;\n\n          case 14:\n            _context14.prev = 14;\n            _context14.t0 = _context14[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context14.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context14.t0);\n\n          case 19:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[1, 14]]);\n  }));\n\n  return function (_x27, _x28) {\n    return _ref28.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.SUSPEND_EMPLOYEE, function () {\n  var _ref30 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(_ref29, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$put3, data;\n\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            commit = _ref29.commit, dispatch = _ref29.dispatch;\n            _context15.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              reason_suspend: payload.reason_suspend\n            });\n            _context15.next = 6;\n            return localAxios.put('/user/suspend/' + payload.users_id, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$put3 = _context15.sent;\n            data = _yield$localAxios$put3.data;\n            dispatch(action.LIST_EMPLOYEE, {\n              status: 1,\n              page: 1\n            });\n            router.replace({\n              path: '/employee'\n            });\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.ACCOUNT_EMPLOYEE);\n            dispatch(action.GRAFIK_DASHBOARD);\n            _context15.next = 20;\n            break;\n\n          case 15:\n            _context15.prev = 15;\n            _context15.t0 = _context15[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context15.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context15.t0);\n\n          case 20:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15, null, [[1, 15]]);\n  }));\n\n  return function (_x29, _x30) {\n    return _ref30.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.ACTIVATE_EMPLOYEE, function () {\n  var _ref32 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(_ref31, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$put4, data;\n\n    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            commit = _ref31.commit, dispatch = _ref31.dispatch;\n            _context16.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              reason_suspend: null\n            });\n            _context16.next = 6;\n            return localAxios.put('/user/activate/' + payload.users_id, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$put4 = _context16.sent;\n            data = _yield$localAxios$put4.data;\n            // console.log('data disini :', data)\n            dispatch(action.LIST_EMPLOYEE, {\n              status: 3,\n              page: 1\n            });\n            router.replace({\n              path: '/employee'\n            });\n            commit(mutation.SET_BUTTON_ACTIVE, false);\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.ACCOUNT_EMPLOYEE);\n            dispatch(action.GRAFIK_DASHBOARD);\n            _context16.next = 22;\n            break;\n\n          case 16:\n            _context16.prev = 16;\n            _context16.t0 = _context16[\"catch\"](1);\n            commit(mutation.SET_BUTTON_ACTIVE, false);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context16.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context16.t0);\n\n          case 22:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16, null, [[1, 16]]);\n  }));\n\n  return function (_x31, _x32) {\n    return _ref32.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.DELETE_EMPLOYEE, function () {\n  var _ref34 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(_ref33, payload) {\n    var commit, dispatch, token, _yield$localAxios$del2, data;\n\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            commit = _ref33.commit, dispatch = _ref33.dispatch;\n            _context17.prev = 1;\n            token = localStorage.getItem('token');\n            _context17.next = 5;\n            return localAxios.delete('employee/' + payload.users_id, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$del2 = _context17.sent;\n            data = _yield$localAxios$del2.data;\n            dispatch(action.LIST_EMPLOYEE, {\n              status: 3,\n              page: 1\n            });\n            commit(mutation.SET_BUTTON_DELETE, false);\n            commit(mutation.BUTTON_STATUS, false);\n            router.replace('/employee');\n            dispatch(action.TOTAL_ACCOUNT_DRIVER);\n            dispatch(action.GRAFIK_DASHBOARD);\n            _context17.next = 21;\n            break;\n\n          case 15:\n            _context17.prev = 15;\n            _context17.t0 = _context17[\"catch\"](1);\n            commit(mutation.SET_BUTTON_DELETE, false);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context17.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context17.t0);\n\n          case 21:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17, null, [[1, 15]]);\n  }));\n\n  return function (_x33, _x34) {\n    return _ref34.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.CANCEL_TASK, function () {\n  var _ref36 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(_ref35, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$pos6, data;\n\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            commit = _ref35.commit, dispatch = _ref35.dispatch;\n            _context18.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              reason_cancel: payload.reason_cancel,\n              idorder: payload.idorder\n            });\n            _context18.next = 6;\n            return localAxios.post(\"employee/cancelorder\", jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$pos6 = _context18.sent;\n            data = _yield$localAxios$pos6.data;\n            swal('Task Canceled', '', 'success');\n            commit(mutation.SET_LOADING, false);\n            router.replace('/employee/inprogress');\n            _context18.next = 18;\n            break;\n\n          case 13:\n            _context18.prev = 13;\n            _context18.t0 = _context18[\"catch\"](1);\n            commit(mutation.SET_LOADING, false);\n            swal(_context18.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context18.t0);\n\n          case 18:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18, null, [[1, 13]]);\n  }));\n\n  return function (_x35, _x36) {\n    return _ref36.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_EMPLOYEE, action.ACCOUNT_EMPLOYEE, function () {\n  var _ref38 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(_ref37, payload) {\n    var commit, dispatch, token, _yield$localAxios$get9, data;\n\n    return regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            commit = _ref37.commit, dispatch = _ref37.dispatch;\n            _context19.prev = 1;\n            token = localStorage.getItem('token');\n            _context19.next = 5;\n            return localAxios.get('/employee/total-account', {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get9 = _context19.sent;\n            data = _yield$localAxios$get9.data;\n            commit(mutation.BUTTON_STATUS, false);\n            commit(mutation.SET_ACCOUNT_EMPLOYEE, data.data);\n            _context19.next = 15;\n            break;\n\n          case 11:\n            _context19.prev = 11;\n            _context19.t0 = _context19[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.DATA_ERROR, _context19.t0);\n\n          case 15:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19, null, [[1, 11]]);\n  }));\n\n  return function (_x37, _x38) {\n    return _ref38.apply(this, arguments);\n  };\n}()), _action$LIST_EMPLOYEE);",{"version":3,"sources":["/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/store/modules/employee/action.js"],"names":["action","mutation","localAxios","swal","typeS","router","LIST_EMPLOYEE","payload","commit","dispatch","pathS","status","page","employee_search","token","localStorage","getItem","get","headers","data","objList","dataList","total","nextC","next_page_url","prevC","prev_page_url","firstP","first_page_url","fromPA","from","BUTTON_STATUS","SET_EMPLOYEE_LIST","DATA_ERROR","LIST_EMPLOYEE_TASK","Url","path","month","trx_id","form","to","SET_SEARCH_BUTTON","EMPLOYEE_TASK_ID","newPath","id","payloadS","SET_EMPLOYEE_DETAIL","SET_PATH","DROPDOWN_EMPLOYEE","SET_LOADING","SET_DROPDOWN_EMPLOYEE","DROPDOWN_POSITION","SET_DROPDOWN_POSITION","CREATE_DATA_EMPLOYEE","payloads","formData","FormData","append","name","email","phonenumber","address","birthdate","nik","position","gender","photo","photo2","attendance_latitude","attendance_longitude","post","replace","response","message","DETAIL_EMPLOYEE","UPDATE_EMPLOYEE","users_id","LIST_POSITION","SET_POSITION_LIST","CREATE_POSITION","price","jsonData","JSON","stringify","job_name","DETAIL_POSITION","SET_DETAIL_POSITION","UPDATE_POSITION","put","idemployee_position","DELETE_POSITION","delete","ASSIGN_EMPLOYEE_TASK","task_template_id","booking_time","employee_userid","CLEAR_INPUT","SUSPEND_EMPLOYEE","reason_suspend","ACCOUNT_EMPLOYEE","GRAFIK_DASHBOARD","ACTIVATE_EMPLOYEE","SET_BUTTON_ACTIVE","DELETE_EMPLOYEE","SET_BUTTON_DELETE","TOTAL_ACCOUNT_DRIVER","CANCEL_TASK","reason_cancel","idorder","SET_ACCOUNT_EMPLOYEE"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,MAAZ;AACA,OAAO,KAAKC,QAAZ;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,KAAKC,KAAZ;AACA,OAAOC,MAAP;AAEA,mFAEeL,MAAM,CAACM,aAFtB;AAAA,6FAEyDC,OAFzD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEsCC,YAAAA,MAFtC,QAEsCA,MAFtC,EAE8CC,QAF9C,QAE8CA,QAF9C;AAAA;AAIoBC,YAAAA,KAJpB,GAI4B,EAJ5B;AAKiBH,YAAAA,OAAO,KAAK,IAAb,GAAqBG,KAAK,GAAG,uBAAqBH,OAAO,CAACI,MAA7B,GAAoC,QAApC,GAA6CJ,OAAO,CAACK,IAArD,IAA2DL,OAAO,CAACM,eAAR,GAA0B,QAAMN,OAAO,CAACM,eAAxC,GAA0D,EAArH,CAA7B,GAAwJH,KAAK,GAAE,gCAA/J;AACII,YAAAA,KANpB,GAM4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAN5B;AAAA;AAAA,mBAOmCd,UAAU,CAACe,GAAX,CAAeP,KAAf,EAAsB;AACrCQ,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAD4B,aAAtB,CAPnC;;AAAA;AAAA;AAOqBK,YAAAA,IAPrB,yBAOqBA,IAPrB;AAUoBC,YAAAA,OAVpB,GAU8B;AACVC,cAAAA,QAAQ,EAAMF,IAAI,CAACA,IAAL,CAAUA,IADd;AAEVG,cAAAA,KAAK,EAASH,IAAI,CAACA,IAAL,CAAUG,KAFd;AAGVC,cAAAA,KAAK,EAASJ,IAAI,CAACA,IAAL,CAAUK,aAHd;AAIVC,cAAAA,KAAK,EAASN,IAAI,CAACA,IAAL,CAAUO,aAJd;AAKVC,cAAAA,MAAM,EAAQR,IAAI,CAACA,IAAL,CAAUS,cALd;AAMVC,cAAAA,MAAM,EAAQV,IAAI,CAACA,IAAL,CAAUW;AANd,aAV9B;AAkBgBtB,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAvB,YAAAA,MAAM,CAACP,QAAQ,CAAC+B,iBAAV,EAA8BZ,OAA9B,CAAN;AAnBhB;AAAA;;AAAA;AAAA;AAAA;AAqBgBZ,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAtB,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,cAAR;;AAtBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAyBejC,MAAM,CAACkC,kBAzBtB;AAAA,+FAyB8D3B,OAzB9D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAyB2CC,YAAAA,MAzB3C,SAyB2CA,MAzB3C,EAyBmDC,QAzBnD,SAyBmDA,QAzBnD;AAAA;AA2BoB0B,YAAAA,GA3BpB,aA2B6B5B,OAAO,CAAC6B,IA3BrC,mBA2BkD7B,OAAO,CAACK,IA3B1D,oBA2BwEL,OAAO,CAAC8B,KA3BhF,qBA2BgG9B,OAAO,CAAC+B,MA3BxG,mBA2BuH/B,OAAO,CAACgC,IA3B/H,iBA2B0IhC,OAAO,CAACiC,EA3BlJ;AA4BoB1B,YAAAA,KA5BpB,GA4B4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA5B5B;AAAA;AAAA,mBA6BqCd,UAAU,CAACe,GAAX,CAAekB,GAAf,EAAoB;AACrCjB,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAD4B,aAApB,CA7BrC;;AAAA;AAAA;AA6BsBK,YAAAA,IA7BtB,0BA6BsBA,IA7BtB;AAgCoBC,YAAAA,OAhCpB,GAgC8B;AACVC,cAAAA,QAAQ,EAAGF,IAAI,CAACA,IAAL,CAAUA,IADX;AAEVI,cAAAA,KAAK,EAAKJ,IAAI,CAACA,IAAL,CAAUK,aAFV;AAGVC,cAAAA,KAAK,EAAKN,IAAI,CAACA,IAAL,CAAUO,aAHV;AAIVC,cAAAA,MAAM,EAAIR,IAAI,CAACA,IAAL,CAAUS,cAJV;AAKVC,cAAAA,MAAM,EAAIV,IAAI,CAACA,IAAL,CAAUW,IALV;AAMVR,cAAAA,KAAK,EAAGH,IAAI,CAACA,IAAL,CAAUG;AANR,aAhC9B;AAwCgBd,YAAAA,MAAM,CAACP,QAAQ,CAACwC,iBAAV,EAA6B,KAA7B,CAAN;AACAjC,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAvB,YAAAA,MAAM,CAACP,QAAQ,CAAC+B,iBAAV,EAA6BZ,OAA7B,CAAN;AA1ChB;AAAA;;AAAA;AAAA;AAAA;AA4CgBZ,YAAAA,MAAM,CAACP,QAAQ,CAACwC,iBAAV,EAA6B,KAA7B,CAAN;AACAjC,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAtB,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AA9ChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAiDejC,MAAM,CAAC0C,gBAjDtB;AAAA,+FAiD4DnC,OAjD5D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAiDyCC,YAAAA,MAjDzC,SAiDyCA,MAjDzC,EAiDiDC,QAjDjD,SAiDiDA,QAjDjD;AAAA;AAmDoBkC,YAAAA,OAnDpB,GAmD8B,EAnD9B;AAoDoB7B,YAAAA,KApDpB,GAoD4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CApD5B;AAAA;AAAA,mBAqDqCd,UAAU,CAACe,GAAX,WAAkBV,OAAO,CAAC6B,IAA1B,cAAkC7B,OAAO,CAACqC,EAA1C,GACjB;AAAE1B,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aADiB,CArDrC;;AAAA;AAAA;AAqDsBK,YAAAA,IArDtB,0BAqDsBA,IArDtB;AAwDgB;AACI0B,YAAAA,QAzDpB,GAyD+B;AACX1B,cAAAA,IAAI,EAAEA,IAAI,CAACA;AADA,aAzD/B;;AA4DgB,gBAAGZ,OAAO,CAAC6B,IAAR,KAAiB,yBAApB,EAA+C;AAC3CO,cAAAA,OAAO,GAAG,oBAAV;AACH,aAFD,MAEO;AACHA,cAAAA,OAAO,GAAG,sBAAV;AACH;;AACDnC,YAAAA,MAAM,CAACP,QAAQ,CAAC6C,mBAAV,EAA+BD,QAA/B,CAAN;AACArC,YAAAA,MAAM,CAACP,QAAQ,CAAC8C,QAAV,EAAoBJ,OAApB,CAAN,CAlEhB,CAmEgB;AACA;;AApEhB;AAAA;;AAAA;AAAA;AAAA;AAuEgBlC,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AAvEhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA0EejC,MAAM,CAACgD,iBA1EtB;AAAA,+FA0E6DzC,OA1E7D;AAAA;;AAAA;AAAA;AAAA;AAAA;AA0E0CC,YAAAA,MA1E1C,SA0E0CA,MA1E1C,EA0EkDC,QA1ElD,SA0EkDA,QA1ElD;AAAA;AA4EoBK,YAAAA,KA5EpB,GA4E4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA5E5B;AAAA;AAAA,mBA6EmCd,UAAU,CAACe,GAAX,CAAe,qCAAmCV,OAAO,GAAG,QAAMA,OAAT,GAAmB,EAA7D,CAAf,EAAiF;AAChGW,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AADuF,aAAjF,CA7EnC;;AAAA;AAAA;AA6EqBK,YAAAA,IA7ErB,0BA6EqBA,IA7ErB;AAgFoBC,YAAAA,OAhFpB,GAgF8B;AACVC,cAAAA,QAAQ,EAAGF,IAAI,CAACA,IAAL,CAAUA;AADX,aAhF9B;AAmFgBX,YAAAA,MAAM,CAACP,QAAQ,CAACgD,WAAV,EAAuB,KAAvB,CAAN;AACAzC,YAAAA,MAAM,CAACP,QAAQ,CAACiD,qBAAV,EAAiC9B,OAAjC,CAAN;AApFhB;AAAA;;AAAA;AAAA;AAAA;AAsFgBZ,YAAAA,MAAM,CAACP,QAAQ,CAACgD,WAAV,EAAuB,KAAvB,CAAN;AACAxC,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AAvFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA0FejC,MAAM,CAACmD,iBA1FtB;AAAA,gGA0F6D5C,OA1F7D;AAAA;;AAAA;AAAA;AAAA;AAAA;AA0F0CC,YAAAA,MA1F1C,SA0F0CA,MA1F1C,EA0FkDC,QA1FlD,SA0FkDA,QA1FlD;AAAA;AA4FoBK,YAAAA,KA5FpB,GA4F4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA5F5B;AAAA;AAAA,mBA6FmCd,UAAU,CAACe,GAAX,CAAe,yCAAf,EAA0D;AACzEC,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AADgE,aAA1D,CA7FnC;;AAAA;AAAA;AA6FqBK,YAAAA,IA7FrB,0BA6FqBA,IA7FrB;AAgGoBC,YAAAA,OAhGpB,GAgG8B;AACVC,cAAAA,QAAQ,EAAMF,IAAI,CAACA,IAAL,CAAUA;AADd,aAhG9B;AAmGgBX,YAAAA,MAAM,CAACP,QAAQ,CAACmD,qBAAV,EAAiChC,OAAjC,CAAN;AAnGhB;AAAA;;AAAA;AAAA;AAAA;AAsGgBX,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AAtGhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAyGejC,MAAM,CAACqD,oBAzGtB;AAAA,iGAyGgEC,QAzGhE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAyG6C9C,YAAAA,MAzG7C,UAyG6CA,MAzG7C,EAyGqDC,QAzGrD,UAyGqDA,QAzGrD;AAAA;AA4GoBK,YAAAA,KA5GpB,GA4G4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA5G5B;AA6GsBuC,YAAAA,QA7GtB,GA6GiC,IAAIC,QAAJ,EA7GjC;AA8GgBD,YAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,QAAQ,CAACI,IAAjC;AACAH,YAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,QAAQ,CAACK,KAAlC;AACAJ,YAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BH,QAAQ,CAACM,WAAxC;AACAL,YAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BH,QAAQ,CAACO,OAApC;AACAN,YAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BH,QAAQ,CAACQ,SAAtC;AACAP,YAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBH,QAAQ,CAACS,GAAhC;AACAR,YAAAA,QAAQ,CAACE,MAAT,CAAgB,qBAAhB,EAAuCH,QAAQ,CAACU,QAAhD;AACAT,YAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BH,QAAQ,CAACW,MAAnC;AACAV,YAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,QAAQ,CAACY,KAAlC;;AACA,gBAAGZ,QAAQ,CAACa,MAAZ,EAAmB;AACfZ,cAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BH,QAAQ,CAACa,MAApC;AACH;;AACDZ,YAAAA,QAAQ,CAACE,MAAT,CAAgB,qBAAhB,EAAuCH,QAAQ,CAACc,mBAAhD;AACAb,YAAAA,QAAQ,CAACE,MAAT,CAAgB,sBAAhB,EAAwCH,QAAQ,CAACe,oBAAjD;AA3HhB;AAAA,mBA4HqCnE,UAAU,CAACoE,IAAX,CAAgB,WAAhB,EACjBf,QADiB,EAEjB;AAAErC,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ,KAA5B;AAAmC,gCAAgB;AAAnD;AAAX,aAFiB,CA5HrC;;AAAA;AAAA;AA4HsBK,YAAAA,IA5HtB,yBA4HsBA,IA5HtB;AAgIoBX,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA1B,YAAAA,MAAM,CAACkE,OAAP,CAAe;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aAAf;AAjIpB;AAAA;;AAAA;AAAA;AAAA;AAmIgB5B,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,aAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AArIhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAwIejC,MAAM,CAAC0E,eAxItB;AAAA,iGAwI2DnE,OAxI3D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAwIwCC,YAAAA,MAxIxC,UAwIwCA,MAxIxC,EAwIgDC,QAxIhD,UAwIgDA,QAxIhD;AAAA;AA0IwBK,YAAAA,KA1IxB,GA0IgCC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA1IhC;AAAA;AAAA,mBA2IyCd,UAAU,CAACe,GAAX,CAAgB,eAAaV,OAA7B,EACjB;AAAEW,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aADiB,CA3IzC;;AAAA;AAAA;AA2I0BK,YAAAA,IA3I1B,0BA2I0BA,IA3I1B;AA+IoBX,YAAAA,MAAM,CAACP,QAAQ,CAAC6C,mBAAV,EAA+B;AACjC3B,cAAAA,IAAI,EAAGA,IAAI,CAACA;AADqB,aAA/B,CAAN,CA/IpB,CAmJoB;;AAnJpB,8CAoJ2BA,IAAI,CAACA,IApJhC;;AAAA;AAAA;AAAA;AAwJoBV,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AAxJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA2JejC,MAAM,CAAC2E,eA3JtB;AAAA,iGA2J2DrB,QA3J3D;AAAA;;AAAA;AAAA;AAAA;AAAA;AA2JwC9C,YAAAA,MA3JxC,UA2JwCA,MA3JxC,EA2JgDC,QA3JhD,UA2JgDA,QA3JhD;AAAA;AA6JoBK,YAAAA,KA7JpB,GA6J4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA7J5B;AA8JsBuC,YAAAA,QA9JtB,GA8JiC,IAAIC,QAAJ,EA9JjC;AA+JgBD,YAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,QAAQ,CAACI,IAAjC;AACAH,YAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,QAAQ,CAACK,KAAlC;AACAJ,YAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BH,QAAQ,CAACM,WAAxC;AACAL,YAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BH,QAAQ,CAACO,OAApC;AACAN,YAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BH,QAAQ,CAACQ,SAAtC;AACAP,YAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBH,QAAQ,CAACS,GAAhC;AACAR,YAAAA,QAAQ,CAACE,MAAT,CAAgB,qBAAhB,EAAuCH,QAAQ,CAACU,QAAhD;AACAT,YAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BH,QAAQ,CAACW,MAAnC;;AACA,gBAAGX,QAAQ,CAACY,KAAZ,EAAkB;AACdX,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,QAAQ,CAACY,KAAlC;AACH;;AACD,gBAAGZ,QAAQ,CAACa,MAAZ,EAAmB;AACfZ,cAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BH,QAAQ,CAACa,MAApC;AACH;;AACDZ,YAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAA3B;AACAF,YAAAA,QAAQ,CAACE,MAAT,CAAgB,qBAAhB,EAAuCH,QAAQ,CAACc,mBAAhD;AACAb,YAAAA,QAAQ,CAACE,MAAT,CAAgB,sBAAhB,EAAwCH,QAAQ,CAACe,oBAAjD;AA/KhB;AAAA,mBAgLqCnE,UAAU,CAACoE,IAAX,CAAgB,eAAahB,QAAQ,CAACsB,QAAtC,EACjBrB,QADiB,EAEjB;AAAErC,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ,KAA5B;AAAmC,gCAAgB;AAAnD;AAAX,aAFiB,CAhLrC;;AAAA;AAAA;AAgLsBK,YAAAA,IAhLtB,0BAgLsBA,IAhLtB;AAoLoBX,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA1B,YAAAA,MAAM,CAACkE,OAAP,CAAe;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aAAf;AArLpB;AAAA;;AAAA;AAAA;AAAA;AAuLgB5B,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,aAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AAzLhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA6LejC,MAAM,CAAC6E,aA7LtB;AAAA,iGA6LyDtE,OA7LzD;AAAA;;AAAA;AAAA;AAAA;AAAA;AA6LsCC,YAAAA,MA7LtC,UA6LsCA,MA7LtC,EA6L8CC,QA7L9C,UA6L8CA,QA7L9C;AAAA;AA+LoBK,YAAAA,KA/LpB,GA+L4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA/L5B;AAAA;AAAA,mBAgMmCd,UAAU,CAACe,GAAX,CAAe,6BAA2BV,OAAO,CAACK,IAAlD,EAAwD;AACvEM,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAD8D,aAAxD,CAhMnC;;AAAA;AAAA;AAgMqBK,YAAAA,IAhMrB,0BAgMqBA,IAhMrB;AAmMoBC,YAAAA,OAnMpB,GAmM8B;AACVC,cAAAA,QAAQ,EAAMF,IAAI,CAACA,IAAL,CAAUA,IADd;AAEVG,cAAAA,KAAK,EAASH,IAAI,CAACA,IAAL,CAAUG,KAFd;AAGVC,cAAAA,KAAK,EAASJ,IAAI,CAACA,IAAL,CAAUK,aAHd;AAIVC,cAAAA,KAAK,EAASN,IAAI,CAACA,IAAL,CAAUO,aAJd;AAKVC,cAAAA,MAAM,EAAQR,IAAI,CAACA,IAAL,CAAUS,cALd;AAMVC,cAAAA,MAAM,EAAQV,IAAI,CAACA,IAAL,CAAUW;AANd,aAnM9B;AA2MgBtB,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAvB,YAAAA,MAAM,CAACP,QAAQ,CAAC6E,iBAAV,EAA8B1D,OAA9B,CAAN;AA5MhB;AAAA;;AAAA;AAAA;AAAA;AA8MgBZ,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAtB,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AA/MhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAmNejC,MAAM,CAAC+E,eAnNtB;AAAA,kGAmN2DxE,OAnN3D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAmNwCC,YAAAA,MAnNxC,UAmNwCA,MAnNxC,EAmNgDC,QAnNhD,UAmNgDA,QAnNhD;;AAAA,iBAoNWF,OAAO,CAACyE,KApNnB;AAAA;AAAA;AAAA;;AAAA;AAsNoBlE,YAAAA,KAtNpB,GAsN4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAtN5B;AAuNsBiE,YAAAA,QAvNtB,GAuNiCC,IAAI,CAACC,SAAL,CAAe;AAC5BC,cAAAA,QAAQ,EAAkB7E,OAAO,CAAC6E,QADN;AAE5BJ,cAAAA,KAAK,EAAqBzE,OAAO,CAACyE;AAFN,aAAf,CAvNjC;AAAA;AAAA,mBA4NqC9E,UAAU,CAACoE,IAAX,CAAgB,mBAAhB,EACjBW,QADiB,EAEjB;AAAE/D,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aAFiB,CA5NrC;;AAAA;AAAA;AA4NsBK,YAAAA,IA5NtB,0BA4NsBA,IA5NtB;AAgOoBX,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAtB,YAAAA,QAAQ,CAACT,MAAM,CAAC6E,aAAR,EAAuB,CAAvB,CAAR;AACAxE,YAAAA,MAAM,CAACkE,OAAP,CAAe;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aAAf;AAlOpB;AAAA;;AAAA;AAAA;AAAA;AAoOgB5B,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,cAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AAtOhB;AAAA;AAAA;;AAAA;AAAA;AA0OoBnB,YAAAA,MA1OpB,GA0O4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA1O5B;AA2OsBiE,YAAAA,SA3OtB,GA2OiCC,IAAI,CAACC,SAAL,CAAe;AAC5BC,cAAAA,QAAQ,EAAkB7E,OAAO,CAAC6E;AADN,aAAf,CA3OjC;AAAA;AAAA,mBA+OqClF,UAAU,CAACoE,IAAX,CAAgB,mBAAhB,EACjBW,SADiB,EAEjB;AAAE/D,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aAFiB,CA/OrC;;AAAA;AAAA;AA+OsBK,YAAAA,KA/OtB,0BA+OsBA,IA/OtB;AAmPoBX,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAtB,YAAAA,QAAQ,CAACT,MAAM,CAAC6E,aAAR,EAAuB,CAAvB,CAAR;AACAxE,YAAAA,MAAM,CAACkE,OAAP,CAAe;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aAAf;AArPpB;AAAA;;AAAA;AAAA;AAAA;AAuPgB5B,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,cAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AAzPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA8PejC,MAAM,CAACqF,eA9PtB;AAAA,kGA8P2D9E,OA9P3D;AAAA;;AAAA;AAAA;AAAA;AAAA;AA8PwCC,YAAAA,MA9PxC,UA8PwCA,MA9PxC,EA8PgDC,QA9PhD,UA8PgDA,QA9PhD;AAAA;AAgQoBK,YAAAA,KAhQpB,GAgQ4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAhQ5B;AAAA;AAAA,mBAiQqCd,UAAU,CAACe,GAAX,CAAgB,uBAAqBV,OAArC,EACjB;AAAEW,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aADiB,CAjQrC;;AAAA;AAAA;AAiQsBK,YAAAA,IAjQtB,0BAiQsBA,IAjQtB;AAqQgBX,YAAAA,MAAM,CAACP,QAAQ,CAACqF,mBAAV,EAA+B;AACjCnE,cAAAA,IAAI,EAAGA,IAAI,CAACA;AADqB,aAA/B,CAAN;AAIAd,YAAAA,MAAM,CAACkE,OAAP,CAAe;AAAEnC,cAAAA,IAAI,EAAE,6BAA2B7B;AAAnC,aAAf;AAzQhB,+CA0QuBY,IAAI,CAACA,IA1Q5B;;AAAA;AAAA;AAAA;AA8QgBV,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AA9QhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAiRejC,MAAM,CAACuF,eAjRtB;AAAA,kGAiR2DhF,OAjR3D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAiRwCC,YAAAA,MAjRxC,UAiRwCA,MAjRxC,EAiRgDC,QAjRhD,UAiRgDA,QAjRhD;;AAAA,iBAkReF,OAAO,CAACyE,KAlRvB;AAAA;AAAA;AAAA;;AAAA;AAoRwBlE,YAAAA,KApRxB,GAoRgCC,YAAY,CAACC,OAAb,CAAqB,OAArB,CApRhC;AAqR0BiE,YAAAA,QArR1B,GAqRqCC,IAAI,CAACC,SAAL,CAAe;AAC5BC,cAAAA,QAAQ,EAAkB7E,OAAO,CAAC6E,QADN;AAE5BJ,cAAAA,KAAK,EAAqBzE,OAAO,CAACyE;AAFN,aAAf,CArRrC;AAAA;AAAA,mBA0RyC9E,UAAU,CAACsF,GAAX,CAAe,uBAAqBjF,OAAO,CAACkF,mBAA5C,EACjBR,QADiB,EAEjB;AAAE/D,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aAFiB,CA1RzC;;AAAA;AAAA;AA0R0BK,YAAAA,IA1R1B,yBA0R0BA,IA1R1B;AA8RwBV,YAAAA,QAAQ,CAACT,MAAM,CAAC6E,aAAR,EAAuB,CAAvB,CAAR;AACAxE,YAAAA,MAAM,CAACkE,OAAP,CAAe;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aAAf;AACA5B,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AAhSxB;AAAA;;AAAA;AAAA;AAAA;AAkSoBvB,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,cAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AApSpB;AAAA;AAAA;;AAAA;AAAA;AAwSwBnB,YAAAA,OAxSxB,GAwSgCC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAxShC;AAyS0BiE,YAAAA,UAzS1B,GAySqCC,IAAI,CAACC,SAAL,CAAe;AAC5BC,cAAAA,QAAQ,EAAkB7E,OAAO,CAAC6E;AADN,aAAf,CAzSrC;AAAA;AAAA,mBA6SyClF,UAAU,CAACsF,GAAX,CAAe,uBAAqBjF,OAAO,CAACkF,mBAA5C,EACjBR,UADiB,EAEjB;AAAE/D,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aAFiB,CA7SzC;;AAAA;AAAA;AA6S0BK,YAAAA,MA7S1B,0BA6S0BA,IA7S1B;AAiTwBV,YAAAA,QAAQ,CAACT,MAAM,CAAC6E,aAAR,EAAuB,CAAvB,CAAR;AACAxE,YAAAA,MAAM,CAACkE,OAAP,CAAe;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aAAf;AACA5B,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AAnTxB;AAAA;;AAAA;AAAA;AAAA;AAqToBvB,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,cAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AAvTpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA2TejC,MAAM,CAAC0F,eA3TtB;AAAA,kGA2T2DnF,OA3T3D;AAAA;;AAAA;AAAA;AAAA;AAAA;AA2TwCC,YAAAA,MA3TxC,UA2TwCA,MA3TxC,EA2TgDC,QA3ThD,UA2TgDA,QA3ThD;AAAA;AA6ToBK,YAAAA,KA7TpB,GA6T4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA7T5B;AAAA;AAAA,mBA8TqCd,UAAU,CAACyF,MAAX,CAAkB,uBAAqBpF,OAAvC,EAA+C;AAC5DW,cAAAA,OAAO,EAAE;AACL,iCAAsB,YAAUJ;AAD3B;AADmD,aAA/C,CA9TrC;;AAAA;AAAA;AA8TsBK,YAAAA,IA9TtB,yBA8TsBA,IA9TtB;AAmUoBX,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAtB,YAAAA,QAAQ,CAACT,MAAM,CAAC6E,aAAR,EAAuB,CAAvB,CAAR;AACAxE,YAAAA,MAAM,CAACkE,OAAP,CAAe;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aAAf;AArUpB;AAAA;;AAAA;AAAA;AAAA;AAuUgB5B,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,cAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AAzUhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA4UejC,MAAM,CAAC4F,oBA5UtB;AAAA,kGA4UgErF,OA5UhE;AAAA;;AAAA;AAAA;AAAA;AAAA;AA4U6CC,YAAAA,MA5U7C,UA4U6CA,MA5U7C,EA4UqDC,QA5UrD,UA4UqDA,QA5UrD;AAAA;AA8UoBK,YAAAA,KA9UpB,GA8U4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA9U5B;AA+UsBiE,YAAAA,QA/UtB,GAgVoBC,IAAI,CAACC,SAAL,CAAe;AACfU,cAAAA,gBAAgB,EAAItF,OAAO,CAACsF,gBADb;AAEfC,cAAAA,YAAY,EAAQvF,OAAO,CAACuF,YAFb;AAGfrB,cAAAA,OAAO,EAAalE,OAAO,CAACkE,OAHb;AAIfsB,cAAAA,eAAe,EAAKxF,OAAO,CAACwF;AAJb,aAAf,CAhVpB;AAAA;AAAA,mBAuVqC7F,UAAU,CAACoE,IAAX,CAAgB,uBAAhB,EACjBW,QADiB,EAEjB;AAAE/D,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aAFiB,CAvVrC;;AAAA;AAAA;AAuVsBK,YAAAA,IAvVtB,0BAuVsBA,IAvVtB;AA2VoBX,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAvB,YAAAA,MAAM,CAACP,QAAQ,CAAC+F,WAAV,EAAuB,IAAvB,CAAN;AACA7F,YAAAA,IAAI,CAAC,uBAAD,EAAyB,EAAzB,EAA6B,SAA7B,CAAJ;AACAE,YAAAA,MAAM,CAACkE,OAAP,CAAe,uBAAf;AA9VpB;AAAA;;AAAA;AAAA;AAAA;AAgWgB/D,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,cAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AAlWhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAqWejC,MAAM,CAACiG,gBArWtB;AAAA,kGAqW4D1F,OArW5D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAqWyCC,YAAAA,MArWzC,UAqWyCA,MArWzC,EAqWiDC,QArWjD,UAqWiDA,QArWjD;AAAA;AAuWoBK,YAAAA,KAvWpB,GAuW4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAvW5B;AAwWsBiE,YAAAA,QAxWtB,GAwWiCC,IAAI,CAACC,SAAL,CAAe;AAC5Be,cAAAA,cAAc,EAAa3F,OAAO,CAAC2F;AADP,aAAf,CAxWjC;AAAA;AAAA,mBA4WqChG,UAAU,CAACsF,GAAX,CAAgB,mBAAkBjF,OAAO,CAACqE,QAA1C,EACjBK,QADiB,EAEjB;AAAE/D,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aAFiB,CA5WrC;;AAAA;AAAA;AA4WsBK,YAAAA,IA5WtB,0BA4WsBA,IA5WtB;AAgXgBV,YAAAA,QAAQ,CAACT,MAAM,CAACM,aAAR,EAAuB;AAACK,cAAAA,MAAM,EAAE,CAAT;AAAYC,cAAAA,IAAI,EAAE;AAAlB,aAAvB,CAAR;AACAP,YAAAA,MAAM,CAACkE,OAAP,CAAe;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aAAf;AACA5B,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAtB,YAAAA,QAAQ,CAACT,MAAM,CAACmG,gBAAR,CAAR;AACA1F,YAAAA,QAAQ,CAACT,MAAM,CAACoG,gBAAR,CAAR;AApXhB;AAAA;;AAAA;AAAA;AAAA;AAsXgB5F,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,cAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AAxXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA2XejC,MAAM,CAACqG,iBA3XtB;AAAA,kGA2X6D9F,OA3X7D;AAAA;;AAAA;AAAA;AAAA;AAAA;AA2X0CC,YAAAA,MA3X1C,UA2X0CA,MA3X1C,EA2XkDC,QA3XlD,UA2XkDA,QA3XlD;AAAA;AA6XoBK,YAAAA,KA7XpB,GA6X4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA7X5B;AA8XsBiE,YAAAA,QA9XtB,GA8XiCC,IAAI,CAACC,SAAL,CAAe;AAC5Be,cAAAA,cAAc,EAAa;AADC,aAAf,CA9XjC;AAAA;AAAA,mBAiYqChG,UAAU,CAACsF,GAAX,CAAe,oBAAkBjF,OAAO,CAACqE,QAAzC,EACrBK,QADqB,EAEjB;AAAE/D,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aAFiB,CAjYrC;;AAAA;AAAA;AAiYsBK,YAAAA,IAjYtB,0BAiYsBA,IAjYtB;AAqYoB;AACAV,YAAAA,QAAQ,CAACT,MAAM,CAACM,aAAR,EAAuB;AAACK,cAAAA,MAAM,EAAE,CAAT;AAAYC,cAAAA,IAAI,EAAE;AAAlB,aAAvB,CAAR;AACAP,YAAAA,MAAM,CAACkE,OAAP,CAAe;AAAEnC,cAAAA,IAAI,EAAE;AAAR,aAAf;AACA5B,YAAAA,MAAM,CAACP,QAAQ,CAACqG,iBAAV,EAA6B,KAA7B,CAAN;AACA9F,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAtB,YAAAA,QAAQ,CAACT,MAAM,CAACmG,gBAAR,CAAR;AACA1F,YAAAA,QAAQ,CAACT,MAAM,CAACoG,gBAAR,CAAR;AA3YpB;AAAA;;AAAA;AAAA;AAAA;AA6YgB5F,YAAAA,MAAM,CAACP,QAAQ,CAACqG,iBAAV,EAA6B,KAA7B,CAAN;AACA9F,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,cAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AAhZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAmZejC,MAAM,CAACuG,eAnZtB;AAAA,kGAmZ2DhG,OAnZ3D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAmZwCC,YAAAA,MAnZxC,UAmZwCA,MAnZxC,EAmZgDC,QAnZhD,UAmZgDA,QAnZhD;AAAA;AAqZoBK,YAAAA,KArZpB,GAqZ4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CArZ5B;AAAA;AAAA,mBAsZqCd,UAAU,CAACyF,MAAX,CAAkB,cAAYpF,OAAO,CAACqE,QAAtC,EAA+C;AAC5D1D,cAAAA,OAAO,EAAE;AACL,iCAAsB,YAAUJ;AAD3B;AADmD,aAA/C,CAtZrC;;AAAA;AAAA;AAsZsBK,YAAAA,IAtZtB,0BAsZsBA,IAtZtB;AA2ZoBV,YAAAA,QAAQ,CAACT,MAAM,CAACM,aAAR,EAAuB;AAACK,cAAAA,MAAM,EAAE,CAAT;AAAYC,cAAAA,IAAI,EAAE;AAAlB,aAAvB,CAAR;AACAJ,YAAAA,MAAM,CAACP,QAAQ,CAACuG,iBAAV,EAA6B,KAA7B,CAAN;AACAhG,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA1B,YAAAA,MAAM,CAACkE,OAAP,CAAe,WAAf;AACA9D,YAAAA,QAAQ,CAACT,MAAM,CAACyG,oBAAR,CAAR;AACAhG,YAAAA,QAAQ,CAACT,MAAM,CAACoG,gBAAR,CAAR;AAhapB;AAAA;;AAAA;AAAA;AAAA;AAkagB5F,YAAAA,MAAM,CAACP,QAAQ,CAACuG,iBAAV,EAA6B,KAA7B,CAAN;AACAhG,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACA5B,YAAAA,IAAI,CAAC,cAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AArahB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAyaejC,MAAM,CAAC0G,WAzatB;AAAA,kGAyauDnG,OAzavD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAyaoCC,YAAAA,MAzapC,UAyaoCA,MAzapC,EAya4CC,QAza5C,UAya4CA,QAza5C;AAAA;AA2aoBK,YAAAA,KA3apB,GA2a4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA3a5B;AA4asBiE,YAAAA,QA5atB,GA4aiCC,IAAI,CAACC,SAAL,CAAe;AAC5BwB,cAAAA,aAAa,EAASpG,OAAO,CAACoG,aADF;AAE5BC,cAAAA,OAAO,EAAerG,OAAO,CAACqG;AAFF,aAAf,CA5ajC;AAAA;AAAA,mBAgbqC1G,UAAU,CAACoE,IAAX,yBACbW,QADa,EAEb;AAAE/D,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aAFa,CAhbrC;;AAAA;AAAA;AAgbsBK,YAAAA,IAhbtB,0BAgbsBA,IAhbtB;AAobgBhB,YAAAA,IAAI,CAAC,eAAD,EAAiB,EAAjB,EAAqB,SAArB,CAAJ;AACAK,YAAAA,MAAM,CAACP,QAAQ,CAACgD,WAAV,EAAuB,KAAvB,CAAN;AACA5C,YAAAA,MAAM,CAACkE,OAAP,CAAe,sBAAf;AAtbhB;AAAA;;AAAA;AAAA;AAAA;AAybgB/D,YAAAA,MAAM,CAACP,QAAQ,CAACgD,WAAV,EAAuB,KAAvB,CAAN;AACA9C,YAAAA,IAAI,CAAC,cAAIqE,QAAJ,CAAarD,IAAb,CAAkBsD,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACAhE,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AA3bhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA8bmBjC,MAAM,CAACmG,gBA9b1B;AAAA,kGA8bgE5F,OA9bhE;AAAA;;AAAA;AAAA;AAAA;AAAA;AA8b6CC,YAAAA,MA9b7C,UA8b6CA,MA9b7C,EA8bqDC,QA9brD,UA8bqDA,QA9brD;AAAA;AAgcwBK,YAAAA,KAhcxB,GAgcgCC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAhchC;AAAA;AAAA,mBAicyCd,UAAU,CAACe,GAAX,CAAe,yBAAf,EACjB;AACIC,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AADb,aADiB,CAjczC;;AAAA;AAAA;AAic0BK,YAAAA,IAjc1B,0BAic0BA,IAjc1B;AAqcoBX,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAvB,YAAAA,MAAM,CAACP,QAAQ,CAAC4G,oBAAV,EAAgC1F,IAAI,CAACA,IAArC,CAAN;AAtcpB;AAAA;;AAAA;AAAA;AAAA;AAycoBX,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,aAAV,EAAyB,KAAzB,CAAN;AACAtB,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,gBAAR;;AA1cpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as action from '../../action-types'\nimport * as mutation from '../../mutation-types'\nimport localAxios from '../../../services/http/client'\nimport swal from 'sweetalert2'\nimport * as typeS from '../../../services/path_service'\nimport router from '../../../router'\n\nexport default {\n\n        async [action.LIST_EMPLOYEE]({commit, dispatch}, payload) {\n            try{\n                let pathS = '';\n                (payload !== null) ? pathS = '/employee/?status='+payload.status+'&page='+payload.page+(payload.employee_search ? '&q='+payload.employee_search : '') : pathS ='/employee?dropdown=1&limit=100';\n                let token = localStorage.getItem('token')\n                let {data} = await localAxios.get(pathS, {\n                    headers: {'Authorization': 'Bearer '+token}\n                })\n                let objList = {\n                    dataList    : data.data.data,\n                    total       : data.data.total,\n                    nextC       : data.data.next_page_url,\n                    prevC       : data.data.prev_page_url,\n                    firstP      : data.data.first_page_url,\n                    fromPA      : data.data.from\n                }\n                commit(mutation.BUTTON_STATUS, false)\n                commit(mutation.SET_EMPLOYEE_LIST , objList )\n            }catch (err) {\n                commit(mutation.BUTTON_STATUS, false)\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n        async [action.LIST_EMPLOYEE_TASK]({commit, dispatch}, payload) {\n            try{\n                let Url = `${payload.path}?page=${payload.page}&month=${payload.month}&trx_id=${payload.trx_id}&from=${payload.form}&to=${payload.to}`\n                let token = localStorage.getItem('token');\n                let { data } = await localAxios.get(Url, {\n                    headers: {'Authorization': 'Bearer '+token}\n                });\n                let objList = {\n                    dataList : data.data.data,\n                    nextC   : data.data.next_page_url,\n                    prevC   : data.data.prev_page_url,\n                    firstP  : data.data.first_page_url,\n                    fromPA  : data.data.from,\n                    total : data.data.total\n                };\n                commit(mutation.SET_SEARCH_BUTTON, false);\n                commit(mutation.BUTTON_STATUS, false);\n                commit(mutation.SET_EMPLOYEE_LIST, objList )\n            }catch (err) {\n                commit(mutation.SET_SEARCH_BUTTON, false);\n                commit(mutation.BUTTON_STATUS, false);\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n        async [action.EMPLOYEE_TASK_ID]({commit, dispatch}, payload) {\n            try {\n                let newPath = ''\n                let token = localStorage.getItem('token');\n                let { data } = await localAxios.get(`${payload.path}/${payload.id}`,\n                    { headers: {'Authorization': 'Bearer '+token }\n                    })\n                // commit(mutation.SET_ID_ENTERPRISE, data.data.client_enterprise_identerprise)\n                let payloadS = {\n                    data: data.data\n                }\n                if(payload.path === '/employee/task/complete') {\n                    newPath = '/employee/complete'\n                } else {\n                    newPath = '/employee/inprogress'\n                }\n                commit(mutation.SET_EMPLOYEE_DETAIL, payloadS)\n                commit(mutation.SET_PATH, newPath)\n                // dispatch(action.TEMPLATE_ID, data.data.task_template_task_template_id)\n                // return data.data\n            }\n            catch (err) {\n                dispatch(action.DATA_ERROR, err)\n            }\n},\n        async [action.DROPDOWN_EMPLOYEE]({commit, dispatch}, payload) {\n            try{\n                let token = localStorage.getItem('token')\n                let {data} = await localAxios.get('/employee/?dropdown=1&limit=100'+(payload ? '&q='+payload : ''), {\n                    headers: {'Authorization': 'Bearer '+token}\n                })\n                let objList = {\n                    dataList : data.data.data,\n                }\n                commit(mutation.SET_LOADING, false);\n                commit(mutation.SET_DROPDOWN_EMPLOYEE, objList )\n            }catch (err) {\n                commit(mutation.SET_LOADING, false);\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n        async [action.DROPDOWN_POSITION]({commit, dispatch}, payload) {\n            try{\n                let token = localStorage.getItem('token')\n                let {data} = await localAxios.get('/employeeposition/?dropdown=1&limit=999', {\n                    headers: {'Authorization': 'Bearer '+token}\n                })\n                let objList = {\n                    dataList    : data.data.data,\n                }\n                commit(mutation.SET_DROPDOWN_POSITION, objList )\n\n            }catch (err) {\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n        async [action.CREATE_DATA_EMPLOYEE]({commit, dispatch}, payloads) {\n            try{\n             \n                let token = localStorage.getItem('token');\n                const formData = new FormData()\n                formData.append('name', payloads.name)\n                formData.append('email', payloads.email)\n                formData.append('phonenumber', payloads.phonenumber)\n                formData.append('address', payloads.address)\n                formData.append('birthdate', payloads.birthdate)\n                formData.append('nik', payloads.nik)\n                formData.append('idemployee_position', payloads.position)\n                formData.append('gender', payloads.gender)\n                formData.append('photo', payloads.photo)\n                if(payloads.photo2){\n                    formData.append('photo_2', payloads.photo2)\n                }\n                formData.append('attendance_latitude', payloads.attendance_latitude)\n                formData.append('attendance_longitude', payloads.attendance_longitude)\n                let { data } = await localAxios.post('/employee' ,\n                    formData,\n                    { headers: {'Authorization': 'Bearer '+token, 'Content-Type': 'multipart/form-data'}\n                    })\n                    commit(mutation.BUTTON_STATUS, false)\n                    router.replace({ path: '/employee'})\n            }catch(err){\n                commit(mutation.BUTTON_STATUS, false)\n                swal(err.response.data.message,'', 'error')\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n        async [action.DETAIL_EMPLOYEE]({commit, dispatch}, payload) {\n                try {\n                    let token = localStorage.getItem('token');\n                    let { data } = await localAxios.get( '/employee/'+payload,\n                        { headers: {'Authorization': 'Bearer '+token }\n                        })\n\n                    commit(mutation.SET_EMPLOYEE_DETAIL, {\n                        data : data.data,\n\n                    })\n                    // router.replace({ path: '/employee/'+payload})\n                    return data.data\n\n                }\n                catch (err) {\n                    dispatch(action.DATA_ERROR, err)\n                }\n            },\n        async [action.UPDATE_EMPLOYEE]({commit, dispatch}, payloads) {\n            try{\n                let token = localStorage.getItem('token');\n                const formData = new FormData()\n                formData.append('name', payloads.name)\n                formData.append('email', payloads.email)\n                formData.append('phonenumber', payloads.phonenumber)\n                formData.append('address', payloads.address)\n                formData.append('birthdate', payloads.birthdate)\n                formData.append('nik', payloads.nik)\n                formData.append('idemployee_position', payloads.position)\n                formData.append('gender', payloads.gender)\n                if(payloads.photo){\n                    formData.append('photo', payloads.photo)\n                }\n                if(payloads.photo2){\n                    formData.append('photo_2', payloads.photo2)\n                }\n                formData.append('_method', 'put')\n                formData.append('attendance_latitude', payloads.attendance_latitude)\n                formData.append('attendance_longitude', payloads.attendance_longitude)\n                let { data } = await localAxios.post('/employee/'+payloads.users_id,\n                    formData,\n                    { headers: {'Authorization': 'Bearer '+token, 'Content-Type': 'multipart/form-data'}\n                    })\n                    commit(mutation.BUTTON_STATUS, false)\n                    router.replace({ path: '/employee'})\n            }catch(err){\n                commit(mutation.BUTTON_STATUS, false)\n                swal(err.response.data.message,'', 'error')\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n\n        async [action.LIST_POSITION]({commit, dispatch}, payload) {\n            try{\n                let token = localStorage.getItem('token')\n                let {data} = await localAxios.get('/employeeposition/?page='+payload.page, {\n                    headers: {'Authorization': 'Bearer '+token}\n                })\n                let objList = {\n                    dataList    : data.data.data,\n                    total       : data.data.total,\n                    nextC       : data.data.next_page_url,\n                    prevC       : data.data.prev_page_url,\n                    firstP      : data.data.first_page_url,\n                    fromPA      : data.data.from\n                }\n                commit(mutation.BUTTON_STATUS, false)\n                commit(mutation.SET_POSITION_LIST , objList )\n            }catch (err) {\n                commit(mutation.BUTTON_STATUS, false)\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n\n        async [action.CREATE_POSITION]({commit, dispatch}, payload) {\n        if(payload.price){\n            try{\n                let token = localStorage.getItem('token');\n                const jsonData = JSON.stringify({\n                    job_name                : payload.job_name,\n                    price                   : payload.price\n                });\n\n                let { data } = await localAxios.post('/employeeposition',\n                    jsonData,\n                    { headers: {'Authorization': 'Bearer '+token }\n                    })\n                    commit(mutation.BUTTON_STATUS, false)\n                    dispatch(action.LIST_POSITION, 1 )\n                    router.replace({ path: '/employee/list-position'})\n            }catch(err){\n                commit(mutation.BUTTON_STATUS, false)\n                swal(err.response.data.message,'', 'error')\n                dispatch(action.DATA_ERROR, err)\n            }\n        }else{\n            try{\n                let token = localStorage.getItem('token');\n                const jsonData = JSON.stringify({\n                    job_name                : payload.job_name,\n                });\n\n                let { data } = await localAxios.post('/employeeposition',\n                    jsonData,\n                    { headers: {'Authorization': 'Bearer '+token }\n                    })\n                    commit(mutation.BUTTON_STATUS, false)\n                    dispatch(action.LIST_POSITION, 1 )\n                    router.replace({ path: '/employee/list-position'})\n            }catch(err){\n                commit(mutation.BUTTON_STATUS, false)\n                swal(err.response.data.message,'', 'error')\n                dispatch(action.DATA_ERROR, err)\n            }\n\n        }\n        },\n        async [action.DETAIL_POSITION]({commit, dispatch}, payload) {\n            try {\n                let token = localStorage.getItem('token');\n                let { data } = await localAxios.get( '/employeeposition/'+payload,\n                    { headers: {'Authorization': 'Bearer '+token }\n                    })\n\n                commit(mutation.SET_DETAIL_POSITION, {\n                    data : data.data,\n\n                })\n                router.replace({ path: '/employee/list-position/'+payload})\n                return data.data\n\n            }\n            catch (err) {\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n        async [action.UPDATE_POSITION]({commit, dispatch}, payload) {\n            if(payload.price){\n                try{\n                    let token = localStorage.getItem('token');\n                    const jsonData = JSON.stringify({\n                        job_name                : payload.job_name,\n                        price                   : payload.price\n                    });\n\n                    let { data } = await localAxios.put('/employeeposition/'+payload.idemployee_position,\n                        jsonData,\n                        { headers: {'Authorization': 'Bearer '+token }\n                        })\n                        dispatch(action.LIST_POSITION, 1 )\n                        router.replace({ path: '/employee/list-position'});\n                        commit(mutation.BUTTON_STATUS, false)\n                }catch(err){\n                    commit(mutation.BUTTON_STATUS, false)\n                    swal(err.response.data.message,'', 'error')\n                    dispatch(action.DATA_ERROR, err)\n                }\n            }else{\n                try{\n                    let token = localStorage.getItem('token');\n                    const jsonData = JSON.stringify({\n                        job_name                : payload.job_name,\n                    });\n\n                    let { data } = await localAxios.put('/employeeposition/'+payload.idemployee_position,\n                        jsonData,\n                        { headers: {'Authorization': 'Bearer '+token }\n                        })\n                        dispatch(action.LIST_POSITION, 1 )\n                        router.replace({ path: '/employee/list-position'});\n                        commit(mutation.BUTTON_STATUS, false)\n                }catch(err){\n                    commit(mutation.BUTTON_STATUS, false)\n                    swal(err.response.data.message,'', 'error')\n                    dispatch(action.DATA_ERROR, err)\n                }\n            }\n        },\n        async [action.DELETE_POSITION]({commit, dispatch}, payload) {\n            try {\n                let token = localStorage.getItem('token');\n                let { data } = await localAxios.delete('/employeeposition/'+payload,{\n                        headers: {\n                            'Authorization'     : 'Bearer '+token\n                        }\n                    })\n                    commit(mutation.BUTTON_STATUS, false)\n                    dispatch(action.LIST_POSITION, 1 )\n                    router.replace({ path: '/employee/list-position'});\n            }catch (err) {\n                commit(mutation.BUTTON_STATUS, false)\n                swal(err.response.data.message,'', 'error')\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n        async [action.ASSIGN_EMPLOYEE_TASK]({commit, dispatch}, payload) {\n            try{\n                let token = localStorage.getItem('token');\n                const jsonData =\n                    JSON.stringify({\n                    task_template_id  : payload.task_template_id,\n                    booking_time      : payload.booking_time,\n                    message           : payload.message,\n                    employee_userid   : payload.employee_userid\n                });\n\n                let { data } = await localAxios.post('/employee/assign-task',\n                    jsonData,\n                    { headers: {'Authorization': 'Bearer '+token }\n                    })\n                    commit(mutation.BUTTON_STATUS, false)\n                    commit(mutation.CLEAR_INPUT, true)\n                    swal('Succes To Assign Task','', 'success')\n                    router.replace('/employee/assign-task')\n            }catch(err){\n                commit(mutation.BUTTON_STATUS, false)\n                swal(err.response.data.message,'', 'error')\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n        async [action.SUSPEND_EMPLOYEE]({commit, dispatch}, payload) {\n            try{\n                let token = localStorage.getItem('token');\n                const jsonData = JSON.stringify({\n                    reason_suspend           : payload.reason_suspend,\n                });\n    \n                let { data } = await localAxios.put( '/user/suspend/'+ payload.users_id,\n                    jsonData,\n                    { headers: {'Authorization': 'Bearer '+token }\n                    })\n                dispatch(action.LIST_EMPLOYEE, {status: 1, page: 1})\n                router.replace({ path: '/employee'})\n                commit(mutation.BUTTON_STATUS, false)\n                dispatch(action.ACCOUNT_EMPLOYEE);\n                dispatch(action.GRAFIK_DASHBOARD);\n            }catch(err){\n                commit(mutation.BUTTON_STATUS, false)\n                swal(err.response.data.message,'', 'error')\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n        async [action.ACTIVATE_EMPLOYEE]({commit, dispatch}, payload) {\n            try{\n                let token = localStorage.getItem('token');\n                const jsonData = JSON.stringify({\n                    reason_suspend           : null,\n                });\n                let { data } = await localAxios.put('/user/activate/'+payload.users_id,\n                jsonData,\n                    { headers: {'Authorization': 'Bearer '+token }\n                    })\n                    // console.log('data disini :', data)\n                    dispatch(action.LIST_EMPLOYEE, {status: 3, page: 1})\n                    router.replace({ path: '/employee'});\n                    commit(mutation.SET_BUTTON_ACTIVE, false);\n                    commit(mutation.BUTTON_STATUS, false)\n                    dispatch(action.ACCOUNT_EMPLOYEE);\n                    dispatch(action.GRAFIK_DASHBOARD);\n            }catch(err){\n                commit(mutation.SET_BUTTON_ACTIVE, false);\n                commit(mutation.BUTTON_STATUS, false);\n                swal(err.response.data.message,'', 'error')\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n        async [action.DELETE_EMPLOYEE]({commit, dispatch}, payload) {\n            try {\n                let token = localStorage.getItem('token');\n                let { data } = await localAxios.delete('employee/'+payload.users_id,{\n                        headers: {\n                            'Authorization'     : 'Bearer '+token\n                        }\n                    })\n                    dispatch(action.LIST_EMPLOYEE, {status: 3, page: 1});\n                    commit(mutation.SET_BUTTON_DELETE, false);\n                    commit(mutation.BUTTON_STATUS, false);\n                    router.replace('/employee');\n                    dispatch(action.TOTAL_ACCOUNT_DRIVER);\n                    dispatch(action.GRAFIK_DASHBOARD);\n            }catch (err) {\n                commit(mutation.SET_BUTTON_DELETE, false);\n                commit(mutation.BUTTON_STATUS, false);\n                swal(err.response.data.message,'', 'error');\n                dispatch(action.DATA_ERROR, err)\n    \n            }\n        },\n        async [action.CANCEL_TASK]({commit, dispatch}, payload) {\n            try {\n                let token = localStorage.getItem('token');\n                const jsonData = JSON.stringify({\n                    reason_cancel       : payload.reason_cancel,\n                    idorder             : payload.idorder\n                        });\n                let { data } = await localAxios.post(`employee/cancelorder`,\n                        jsonData,\n                        { headers: {'Authorization': 'Bearer '+token }\n                        });\n                swal('Task Canceled','', 'success');\n                commit(mutation.SET_LOADING, false);\n                router.replace('/employee/inprogress')\n            }\n            catch (err) {\n                commit(mutation.SET_LOADING, false);\n                swal(err.response.data.message,'', 'error')\n                dispatch(action.DATA_ERROR, err)\n                }\n            },\n            async [action.ACCOUNT_EMPLOYEE]({commit, dispatch}, payload) {\n                try{\n                    let token = localStorage.getItem('token');\n                    let { data } = await localAxios.get('/employee/total-account',\n                        {\n                            headers: {'Authorization': 'Bearer '+token}\n                        });\n                    commit(mutation.BUTTON_STATUS, false);\n                    commit(mutation.SET_ACCOUNT_EMPLOYEE, data.data)\n        \n                }catch (err) {\n                    commit(mutation.BUTTON_STATUS, false)\n                    dispatch(action.DATA_ERROR, err)\n                }\n            },\n};"]}]}