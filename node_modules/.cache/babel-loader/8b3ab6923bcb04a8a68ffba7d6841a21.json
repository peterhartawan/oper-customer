{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/inspector/action.js","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/inspector/action.js","mtime":1640440454969},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444342},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":1640440453952},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _action$PICTASK_LIST$;\n\nimport * as action from \"../../action-types\";\nimport * as mutation from \"../../mutation-types\";\nimport localAxios from \"../../../services/http/client\";\nimport swal from 'sweetalert2';\nimport * as typeS from \"../../../services/path_service\";\nimport router from \"../../../router\";\nexport default (_action$PICTASK_LIST$ = {}, _defineProperty(_action$PICTASK_LIST$, action.PICTASK_LIST, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, payload) {\n    var commit, dispatch, token, _yield$localAxios$get, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit, dispatch = _ref.dispatch;\n            _context.prev = 1;\n            token = localStorage.getItem('token');\n            _context.next = 5;\n            return localAxios.get(typeS.inspector_page + payload.currentP + '&identerprise=' + payload.identerpriseS, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get = _context.sent;\n            data = _yield$localAxios$get.data;\n            objList = {\n              dataList: data.data.data,\n              nextC: data.data.next_page_url,\n              prevC: data.data.prev_page_url,\n              firstP: data.data.first_page_url,\n              fromPA: data.data.from,\n              totalPE: data.data.total\n            };\n            commit(mutation.SET_LOADING, false);\n            commit(mutation.SET_PICTASK_LIST, objList);\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            commit(mutation.SET_LOADING, false);\n            dispatch(action.DATA_ERROR, _context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}()), _defineProperty(_action$PICTASK_LIST$, action.CREATE_PIC_TASK, function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3, payloads) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$pos, data, obj;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref3.commit, dispatch = _ref3.dispatch;\n            _context2.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              name: payloads.name,\n              phonenumber: payloads.phone.toString(),\n              identerprise: payloads.identerprise.toString()\n            });\n            _context2.next = 6;\n            return localAxios.post(typeS.inspector, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$pos = _context2.sent;\n            data = _yield$localAxios$pos.data;\n            obj = {\n              currentP: 1,\n              identerpriseS: data.data.client_enterprise_identerprise\n            };\n            dispatch(action.PICTASK_LIST, obj);\n            router.replace('/pic-task-list');\n            commit(mutation.BUTTON_STATUS, false);\n            _context2.next = 19;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context2.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context2.t0);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 14]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}()), _defineProperty(_action$PICTASK_LIST$, action.UPDATE_INSPECTOR, function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5, payloads) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$put, data;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref5.commit, dispatch = _ref5.dispatch;\n            _context3.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              name: payloads.name,\n              phonenumber: payloads.phone.toString(),\n              identerprise: payloads.identerprise.toString()\n            });\n            _context3.next = 6;\n            return localAxios.put(typeS.inspector + payloads.idinspector, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$put = _context3.sent;\n            data = _yield$localAxios$put.data;\n            commit(mutation.BUTTON_STATUS, false);\n            router.replace('/pic-task-list');\n            _context3.next = 17;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context3.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context3.t0);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 12]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref6.apply(this, arguments);\n  };\n}()), _defineProperty(_action$PICTASK_LIST$, action.DELETE_INSPECTOR, function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7, payload) {\n    var commit, dispatch, token, _yield$localAxios$del, data, obj;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref7.commit, dispatch = _ref7.dispatch;\n            _context4.prev = 1;\n            token = localStorage.getItem('token');\n            _context4.next = 5;\n            return localAxios.delete(typeS.inspector + payload.idList, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$del = _context4.sent;\n            data = _yield$localAxios$del.data;\n            obj = {\n              currentP: payload.currPage,\n              identerpriseS: payload.identer\n            };\n            dispatch(action.PICTASK_LIST, obj);\n            _context4.next = 14;\n            break;\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context4.t0);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 11]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref8.apply(this, arguments);\n  };\n}()), _defineProperty(_action$PICTASK_LIST$, action.ID_INSPECTOR, function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref9, payload) {\n    var commit, dispatch, token, _yield$localAxios$get2, data;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            commit = _ref9.commit, dispatch = _ref9.dispatch;\n            _context5.prev = 1;\n            token = localStorage.getItem('token');\n            _context5.next = 5;\n            return localAxios.get(typeS.inspector + payload, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get2 = _context5.sent;\n            data = _yield$localAxios$get2.data;\n            return _context5.abrupt(\"return\", data.data);\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context5.t0);\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 10]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref10.apply(this, arguments);\n  };\n}()), _action$PICTASK_LIST$);",{"version":3,"sources":["/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/inspector/action.js"],"names":["action","mutation","localAxios","swal","typeS","router","PICTASK_LIST","payload","commit","dispatch","token","localStorage","getItem","get","inspector_page","currentP","identerpriseS","headers","data","objList","dataList","nextC","next_page_url","prevC","prev_page_url","firstP","first_page_url","fromPA","from","totalPE","total","SET_LOADING","SET_PICTASK_LIST","DATA_ERROR","CREATE_PIC_TASK","payloads","jsonData","JSON","stringify","name","phonenumber","phone","toString","identerprise","post","inspector","obj","client_enterprise_identerprise","replace","BUTTON_STATUS","response","message","UPDATE_INSPECTOR","put","idinspector","DELETE_INSPECTOR","delete","idList","currPage","identer","ID_INSPECTOR"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,MAAZ;AACA,OAAO,KAAKC,QAAZ;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,KAAKC,KAAZ;AACA,OAAOC,MAAP;AAKA,mFACWL,MAAM,CAACM,YADlB;AAAA,6FACoDC,OADpD;AAAA;;AAAA;AAAA;AAAA;AAAA;AACiCC,YAAAA,MADjC,QACiCA,MADjC,EACyCC,QADzC,QACyCA,QADzC;AAAA;AAGgBC,YAAAA,KAHhB,GAGwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAHxB;AAAA;AAAA,mBAIiCV,UAAU,CAACW,GAAX,CAAeT,KAAK,CAACU,cAAN,GAAuBP,OAAO,CAACQ,QAA/B,GAA0C,gBAA1C,GAA6DR,OAAO,CAACS,aAApF,EAAmG;AACpHC,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUP;AAA5B;AAD2G,aAAnG,CAJjC;;AAAA;AAAA;AAIkBQ,YAAAA,IAJlB,yBAIkBA,IAJlB;AAOgBC,YAAAA,OAPhB,GAO0B;AACVC,cAAAA,QAAQ,EAAGF,IAAI,CAACA,IAAL,CAAUA,IADX;AAEVG,cAAAA,KAAK,EAAKH,IAAI,CAACA,IAAL,CAAUI,aAFV;AAGVC,cAAAA,KAAK,EAAKL,IAAI,CAACA,IAAL,CAAUM,aAHV;AAIVC,cAAAA,MAAM,EAAIP,IAAI,CAACA,IAAL,CAAUQ,cAJV;AAKVC,cAAAA,MAAM,EAAIT,IAAI,CAACA,IAAL,CAAUU,IALV;AAMVC,cAAAA,OAAO,EAAIX,IAAI,CAACA,IAAL,CAAUY;AANX,aAP1B;AAeYtB,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,WAAV,EAAuB,KAAvB,CAAN;AACAvB,YAAAA,MAAM,CAACP,QAAQ,CAAC+B,gBAAV,EAA4Bb,OAA5B,CAAN;AAhBZ;AAAA;;AAAA;AAAA;AAAA;AAkBYX,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,WAAV,EAAuB,KAAvB,CAAN;AACAtB,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,cAAR;;AAnBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAsBWjC,MAAM,CAACkC,eAtBlB;AAAA,+FAsBuDC,QAtBvD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAsBoC3B,YAAAA,MAtBpC,SAsBoCA,MAtBpC,EAsB4CC,QAtB5C,SAsB4CA,QAtB5C;AAAA;AAwBgBC,YAAAA,KAxBhB,GAwBwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAxBxB;AAyBkBwB,YAAAA,QAzBlB,GAyB6BC,IAAI,CAACC,SAAL,CAAe;AAC5BC,cAAAA,IAAI,EAAkBJ,QAAQ,CAACI,IADH;AAE5BC,cAAAA,WAAW,EAAWL,QAAQ,CAACM,KAAT,CAAeC,QAAf,EAFM;AAG5BC,cAAAA,YAAY,EAAUR,QAAQ,CAACQ,YAAT,CAAsBD,QAAtB;AAHM,aAAf,CAzB7B;AAAA;AAAA,mBA8BiCxC,UAAU,CAAC0C,IAAX,CAAiBxC,KAAK,CAACyC,SAAvB,EACjBT,QADiB,EAEjB;AAAEnB,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUP;AAA5B;AAAX,aAFiB,CA9BjC;;AAAA;AAAA;AA8BkBQ,YAAAA,IA9BlB,yBA8BkBA,IA9BlB;AAkCgB4B,YAAAA,GAlChB,GAkCsB;AACN/B,cAAAA,QAAQ,EAAU,CADZ;AAENC,cAAAA,aAAa,EAAKE,IAAI,CAACA,IAAL,CAAU6B;AAFtB,aAlCtB;AAsCYtC,YAAAA,QAAQ,CAACT,MAAM,CAACM,YAAR,EAAsBwC,GAAtB,CAAR;AACAzC,YAAAA,MAAM,CAAC2C,OAAP,CAAe,gBAAf;AACAxC,YAAAA,MAAM,CAACP,QAAQ,CAACgD,aAAV,EAAyB,KAAzB,CAAN;AAxCZ;AAAA;;AAAA;AAAA;AAAA;AA0CYzC,YAAAA,MAAM,CAACP,QAAQ,CAACgD,aAAV,EAAyB,KAAzB,CAAN;AACA9C,YAAAA,IAAI,CAAC,aAAI+C,QAAJ,CAAahC,IAAb,CAAkBiC,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACA1C,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AA5CZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA+CWjC,MAAM,CAACoD,gBA/ClB;AAAA,+FA+CwDjB,QA/CxD;AAAA;;AAAA;AAAA;AAAA;AAAA;AA+CqC3B,YAAAA,MA/CrC,SA+CqCA,MA/CrC,EA+C6CC,QA/C7C,SA+C6CA,QA/C7C;AAAA;AAiDgBC,YAAAA,KAjDhB,GAiDwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAjDxB;AAkDgBwB,YAAAA,QAlDhB,GAkD2BC,IAAI,CAACC,SAAL,CAAe;AAC1BC,cAAAA,IAAI,EAAkBJ,QAAQ,CAACI,IADL;AAE1BC,cAAAA,WAAW,EAAWL,QAAQ,CAACM,KAAT,CAAeC,QAAf,EAFI;AAG1BC,cAAAA,YAAY,EAAUR,QAAQ,CAACQ,YAAT,CAAsBD,QAAtB;AAHI,aAAf,CAlD3B;AAAA;AAAA,mBAuDiCxC,UAAU,CAACmD,GAAX,CAAejD,KAAK,CAACyC,SAAN,GAAkBV,QAAQ,CAACmB,WAA1C,EACjBlB,QADiB,EACP;AACVnB,cAAAA,OAAO,EAAE;AACL,iCAAsB,YAAUP;AAD3B;AADC,aADO,CAvDjC;;AAAA;AAAA;AAuDkBQ,YAAAA,IAvDlB,yBAuDkBA,IAvDlB;AA6DYV,YAAAA,MAAM,CAACP,QAAQ,CAACgD,aAAV,EAAyB,KAAzB,CAAN;AACA5C,YAAAA,MAAM,CAAC2C,OAAP,CAAe,gBAAf;AA9DZ;AAAA;;AAAA;AAAA;AAAA;AAiEYxC,YAAAA,MAAM,CAACP,QAAQ,CAACgD,aAAV,EAAyB,KAAzB,CAAN;AACA9C,YAAAA,IAAI,CAAC,aAAI+C,QAAJ,CAAahC,IAAb,CAAkBiC,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACA1C,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AAnEZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAsEWjC,MAAM,CAACuD,gBAtElB;AAAA,+FAsEwDhD,OAtExD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAsEqCC,YAAAA,MAtErC,SAsEqCA,MAtErC,EAsE6CC,QAtE7C,SAsE6CA,QAtE7C;AAAA;AAyEgBC,YAAAA,KAzEhB,GAyEwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAzExB;AAAA;AAAA,mBA0EiCV,UAAU,CAACsD,MAAX,CAAkBpD,KAAK,CAACyC,SAAN,GAAkBtC,OAAO,CAACkD,MAA5C,EAAmD;AAChExC,cAAAA,OAAO,EAAE;AACL,iCAAsB,YAAUP;AAD3B;AADuD,aAAnD,CA1EjC;;AAAA;AAAA;AA0EkBQ,YAAAA,IA1ElB,yBA0EkBA,IA1ElB;AA+EgB4B,YAAAA,GA/EhB,GA+EsB;AACN/B,cAAAA,QAAQ,EAAUR,OAAO,CAACmD,QADpB;AAEN1C,cAAAA,aAAa,EAAKT,OAAO,CAACoD;AAFpB,aA/EtB;AAmFYlD,YAAAA,QAAQ,CAACT,MAAM,CAACM,YAAR,EAAsBwC,GAAtB,CAAR;AAnFZ;AAAA;;AAAA;AAAA;AAAA;AAqFYrC,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AArFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAwFWjC,MAAM,CAAC4D,YAxFlB;AAAA,gGAwFqDrD,OAxFrD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAwFkCC,YAAAA,MAxFlC,SAwFkCA,MAxFlC,EAwF0CC,QAxF1C,SAwF0CA,QAxF1C;AAAA;AA2FgBC,YAAAA,KA3FhB,GA2FwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA3FxB;AAAA;AAAA,mBA4FiCV,UAAU,CAACW,GAAX,CAAeT,KAAK,CAACyC,SAAN,GAAkBtC,OAAjC,EAA0C;AAC3DU,cAAAA,OAAO,EAAE;AACL,iCAAsB,YAAUP;AAD3B;AADkD,aAA1C,CA5FjC;;AAAA;AAAA;AA4FkBQ,YAAAA,IA5FlB,0BA4FkBA,IA5FlB;AAAA,8CAiGmBA,IAAI,CAACA,IAjGxB;;AAAA;AAAA;AAAA;AAqGYT,YAAAA,QAAQ,CAACT,MAAM,CAACiC,UAAR,eAAR;;AArGZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as action from '../../action-types'\nimport * as mutation from '../../mutation-types'\nimport localAxios from '../../../services/http/client'\nimport swal from 'sweetalert2'\nimport * as typeS from '../../../services/path_service'\nimport router from '../../../router'\n\n\n\n\nexport default {\n    async [action.PICTASK_LIST]({commit, dispatch}, payload) {\n        try{\n            let token = localStorage.getItem('token')\n            let { data } = await localAxios.get(typeS.inspector_page + payload.currentP + '&identerprise=' + payload.identerpriseS, {\n                headers: {'Authorization': 'Bearer '+token}\n            });\n            let objList = {\n                dataList : data.data.data,\n                nextC   : data.data.next_page_url,\n                prevC   : data.data.prev_page_url,\n                firstP  : data.data.first_page_url,\n                fromPA  : data.data.from,\n                totalPE  : data.data.total\n            };\n            commit(mutation.SET_LOADING, false)\n            commit(mutation.SET_PICTASK_LIST, objList )\n        }catch (err) {\n            commit(mutation.SET_LOADING, false)\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.CREATE_PIC_TASK]({commit, dispatch}, payloads) {\n        try{\n            let token = localStorage.getItem('token');\n            const jsonData = JSON.stringify({\n                name                : payloads.name,\n                phonenumber         : payloads.phone.toString(),\n                identerprise        : payloads.identerprise.toString()\n            });\n            let { data } = await localAxios.post( typeS.inspector,\n                jsonData,\n                { headers: {'Authorization': 'Bearer '+token }\n                })\n            let obj = {\n                currentP        : 1,\n                identerpriseS   : data.data.client_enterprise_identerprise\n            }\n            dispatch(action.PICTASK_LIST, obj)\n            router.replace('/pic-task-list')\n            commit(mutation.BUTTON_STATUS, false)\n        }catch(err){\n            commit(mutation.BUTTON_STATUS, false)\n            swal(err.response.data.message,'', 'error')\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.UPDATE_INSPECTOR]({commit, dispatch}, payloads) {\n        try {\n            let token = localStorage.getItem('token');\n            let jsonData = JSON.stringify({\n                name                : payloads.name,\n                phonenumber         : payloads.phone.toString(),\n                identerprise        : payloads.identerprise.toString()\n            })\n            let { data } = await localAxios.put(typeS.inspector + payloads.idinspector,\n                jsonData, {\n                headers: {\n                    'Authorization'     : 'Bearer '+token\n                }\n            })\n            commit(mutation.BUTTON_STATUS, false)\n            router.replace('/pic-task-list')\n        }\n        catch (err) {\n            commit(mutation.BUTTON_STATUS, false)\n            swal(err.response.data.message,'', 'error')\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.DELETE_INSPECTOR]({commit, dispatch}, payload) {\n        try {\n\n            let token = localStorage.getItem('token');\n            let { data } = await localAxios.delete(typeS.inspector + payload.idList,{\n                    headers: {\n                        'Authorization'     : 'Bearer '+token\n                    }\n                });\n            let obj = {\n                currentP        : payload.currPage,\n                identerpriseS   : payload.identer\n            };\n            dispatch(action.PICTASK_LIST, obj);\n        }catch (err) {\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.ID_INSPECTOR] ({commit, dispatch}, payload) {\n        try {\n\n            let token = localStorage.getItem('token');\n            let { data } = await localAxios.get(typeS.inspector + payload ,{\n                headers: {\n                    'Authorization'     : 'Bearer '+token\n                }\n            })\n            return data.data\n\n        }\n        catch (err) {\n            dispatch(action.DATA_ERROR, err)\n        }\n    }\n\n};\n"]}]}