{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/enterprise/location-enterprise.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/enterprise/location-enterprise.vue","mtime":1628175042625},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../../router\";\nimport Affix from \"@/components/Affix\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"ListDriver\",\n  data: function data() {\n    return {\n      visible2: false,\n      mapMark: null,\n      affixEnabled: true,\n      resultTrack: null,\n      image_url: null,\n      info_marker: null,\n      markers: [],\n      infowindow: {\n        lat: 0,\n        lng: 0,\n        name: null\n      },\n      markDefault: {\n        lat: -6.21462,\n        lng: 106.84513\n      },\n      indexT: 1,\n      idplaces: \"\",\n      payload: {\n        idplaces: null,\n        identerprise: null,\n        page: 1\n      },\n      tableData: null,\n      input4: null,\n      place: null\n    };\n  },\n  components: {\n    Affix: Affix\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    listData: getter.GET_LIST_LOCATION,\n    paginate: getter.GET_PAGINATE_LOCATION,\n    enterprise: getter.ENTERPRISE,\n    total: getter.GET_LOCATION_TOTAL\n  })), {}, {\n    paginator: function paginator() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    },\n    forTotal: function forTotal() {\n      if (this.listData) {\n        return this.total;\n      }\n    }\n  }),\n  methods: {\n    openWindow: function openWindow(position) {\n      this.window_open = true;\n      this.infowindow.lat = position.lat;\n      this.infowindow.lng = position.lng;\n      this.infowindow.name = position.name;\n    },\n    searchChange: function () {\n      var _searchChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(v) {\n        var trimName, i, marker, _marker;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                trimName = this.input4.trim();\n\n                if (!(trimName.length > 0)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context.next = 5;\n                return this.$store.dispatch(action.LIST_LOCATION, {\n                  page: 1,\n                  q: trimName,\n                  identerprise: this.enterprise.identerprise\n                });\n\n              case 5:\n                _context.next = 7;\n                return this.listData;\n\n              case 7:\n                this.markers = [];\n\n                for (i = 0; i < this.listData.length; i++) {\n                  marker = {\n                    lat: parseFloat(this.listData[i].latitude),\n                    lng: parseFloat(this.listData[i].longitude),\n                    name: this.listData[i].name + ', ' + this.listData[i].address,\n                    popover: false,\n                    id: this.listData[i].idplaces\n                  };\n                  this.markDefault.lat = parseFloat(this.listData[i].latitude);\n                  this.markDefault.lng = parseFloat(this.listData[i].longitude);\n                  this.markers.push({\n                    position: marker\n                  });\n                  this.mapMark = 1;\n                }\n\n                _context.next = 18;\n                break;\n\n              case 11:\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context.next = 14;\n                return this.$store.dispatch(action.LIST_LOCATION, {\n                  page: 1,\n                  q: trimName,\n                  identerprise: this.enterprise.identerprise\n                });\n\n              case 14:\n                _context.next = 16;\n                return this.listData;\n\n              case 16:\n                this.markers = [];\n\n                for (i = 0; i < this.listData.length; i++) {\n                  _marker = {\n                    lat: parseFloat(this.listData[i].latitude),\n                    lng: parseFloat(this.listData[i].longitude),\n                    name: this.listData[i].name + ', ' + this.listData[i].address,\n                    popover: false,\n                    id: this.listData[i].idplaces\n                  };\n                  this.markDefault.lat = parseFloat(this.listData[i].latitude);\n                  this.markDefault.lng = parseFloat(this.listData[i].longitude);\n                  this.markers.push({\n                    position: _marker\n                  });\n                  this.mapMark = 1;\n                }\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function searchChange(_x) {\n        return _searchChange.apply(this, arguments);\n      }\n\n      return searchChange;\n    }(),\n    handlePageChange: function () {\n      var _handlePageChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(page) {\n        var i, marker;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.markers = [];\n                this.payload.page = page;\n                _context2.next = 4;\n                return this.$store.dispatch(action.LIST_LOCATION, {\n                  page: page,\n                  q: this.input4,\n                  identerprise: this.enterprise.identerprise\n                });\n\n              case 4:\n                for (i = 0; i < this.listData.length; i++) {\n                  marker = {\n                    lat: parseFloat(this.listData[i].latitude),\n                    lng: parseFloat(this.listData[i].longitude),\n                    name: this.listData[i].name + ', ' + this.listData[i].address,\n                    popover: false,\n                    id: this.listData[i].idplaces\n                  };\n                  this.markDefault.lat = parseFloat(this.listData[i].latitude);\n                  this.markDefault.lng = parseFloat(this.listData[i].longitude);\n                  this.markers.push({\n                    position: marker\n                  });\n                  this.mapMark = 1;\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handlePageChange(_x2) {\n        return _handlePageChange.apply(this, arguments);\n      }\n\n      return handlePageChange;\n    }(),\n    Create: function Create() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$router.push({\n        name: \"NewLocation\"\n      });\n    },\n    clearMarkers: function clearMarkers() {\n      this.markers = [];\n    },\n    getId: function () {\n      var _getId = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(id) {\n        var marker;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.clearMarkers();\n\n              case 2:\n                marker = {\n                  lat: parseFloat(id.latitude),\n                  lng: parseFloat(id.longitude),\n                  name: id.name + ', ' + id.address,\n                  popover: false\n                };\n                this.markDefault.lat = parseFloat(id.latitude);\n                this.markDefault.lng = parseFloat(id.longitude);\n                this.markers.push({\n                  position: marker\n                });\n                this.mapMark = 1;\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getId(_x3) {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }(),\n    Cancel: function Cancel() {\n      this.$store.dispatch(action.DATA_ID_CORP, this.enterprise.identerprise);\n      this.$router.replace({\n        path: \"/detail-enterprise/\" + this.enterprise.identerprise\n      });\n    },\n    Edit: function Edit(e) {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$store.dispatch(action.DETAIL_LOCATION, e.idplaces);\n    },\n    Delete: function Delete(e) {\n      var _this = this;\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\"\n      }).then(function (result) {\n        if (result.value) {\n          _this.$store.dispatch(action.DELETE_LOCATION, e);\n        }\n      });\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var i, marker;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.enterprise.identerprise;\n\n            case 2:\n              this.payload.identerprise = _context4.sent;\n              _context4.next = 5;\n              return this.$store.dispatch(action.LIST_LOCATION, this.payload);\n\n            case 5:\n              _context4.next = 7;\n              return this.listData;\n\n            case 7:\n              this.markers = [];\n\n              for (i = 0; i < this.listData.length; i++) {\n                marker = {\n                  lat: parseFloat(this.listData[i].latitude),\n                  lng: parseFloat(this.listData[i].longitude),\n                  name: this.listData[i].name + ', ' + this.listData[i].address,\n                  popover: false,\n                  id: this.listData[i].idplaces\n                };\n                this.markDefault.lat = parseFloat(this.listData[i].latitude);\n                this.markDefault.lng = parseFloat(this.listData[i].longitude);\n                this.markers.push({\n                  position: marker\n                });\n                this.mapMark = 1;\n              }\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["location-enterprise.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <p class=\"font-weight-600 mt-40\">LOCATION</p>\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <!-- <el-row :gutter=\"10\">\n            <el-col :span=\"4\" :xl=\"1\">\n                <el-button @click=\"Create()\" style=\"width: 100%\" type=\"primary\">New Location</el-button>\n            </el-col>\n        </el-row> -->\n        <el-row :gutter=\"10\">\n            <el-col :span=\"14\">\n                <gmap-map :center=\"markDefault\" :zoom=\"16\" map-type-id=\"terrain\" style=\"width: 100%; height: 490px\">\n                    <div v-if=\"mapMark\">\n                        <gmap-marker :key=\"index\" v-for=\"(m, index) in markers\" :position=\"m.position\" :clickable=\"true\" @click=\"openWindow(m.position)\"></gmap-marker>\n                        <gmap-info-window v-if=\"infowindow.name\" @closeclick=\"window_open=false\" :opened=\"window_open\" :position=\"infowindow\" :options=\"{ pixelOffset: { width: 0, height: -35},}\">\n                            {{infowindow.name}}\n                        </gmap-info-window>\n                    </div>\n                </gmap-map>\n            </el-col>\n            <el-col :span=\"9\">\n                <el-row style=\"margin-top: 10px\">\n                    <el-col :span=\"4\">\n                        <el-button @click=\"Cancel()\" size=\"mini\" type=\"info\">Back</el-button>\n                    </el-col>\n                    <el-col :offset=\"1\" :span=\"15\">\n                        <el-input placeholder=\"Search\" @keyup.native=\"searchChange\" v-model=\"input4\">\n                            <i slot=\"suffix\" class=\"el-input__icon el-icon-search\"></i>\n                        </el-input>\n                    </el-col>\n                    <el-col :offset=\"1\" :span=\"1\">\n                        <el-button @click=\"Create()\" style=\"text-align: center; background-color: #D50000;\" type=\"danger\"><i class=\"mdi mdi-plus\"></i></el-button>\n                    </el-col>\n                </el-row>\n                <el-row>\n                    <div class=\"contacts-list box grow scrollable only-y\">\n                        <div v-for=\"c in listData\" :key=\"c.id\" class=\"flex contact\" @click=\"getId(c)\">\n\n                            <div class=\"info box grow flex\">\n                                <div class=\"name box grow flex column justify-center p-10\">\n\n                                    <!-- <i class=\"mdi mdi-tooltip-edit mdi-36px;\"></i>\n                                    <br>\n                                    <i class=\"mdi mdi-delete mdi-24px\"></i> -->\n\n                                    <strong><i style=\"color: #D50000\" class=\"mdi mdi-map-marker-outline mdi-24px\"></i>&nbsp;{{c.name}} </strong>\n                                    <div class=\"phone fs-14 secondary-text\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{c.address}}</div>\n                                    <el-row :gutter=\"20\">\n                                        <el-col :offset=\"18\" :span=\"3\">\n                                            <i @click=\"Edit(c)\" class=\"mdi mdi-tooltip-edit mdi-24px\"></i>\n                                        </el-col>\n                                        <el-col :span=\"3\">\n                                            <i @click=\"Delete(c)\" class=\"mdi mdi-delete mdi-24px\"></i>\n                                        </el-col>\n                                    </el-row>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </el-row>\n                <div align=\"center\" class=\"grid-content\">\n                    <el-pagination background layout=\"prev, pager, next\" @current-change=\"handlePageChange\" :total=\"forTotal\"></el-pagination>\n                </div>\n            </el-col>\n        </el-row>\n\n    </div>\n</div>\n</template>\n\n<script>\nimport router from \"../../../router\";\n\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as mutation from '../../../store/mutation-types';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n    name: \"ListDriver\",\n    data() {\n        return {\n            visible2: false,\n            mapMark: null,\n            affixEnabled: true,\n            resultTrack: null,\n            image_url: null,\n            info_marker: null,\n            markers: [],\n            infowindow: {\n                lat: 0,\n                lng: 0,\n                name: null,\n            },\n            markDefault: {\n                lat: -6.21462,\n                lng: 106.84513\n            },\n            indexT: 1,\n            idplaces: \"\",\n            payload: {\n                idplaces: null,\n                identerprise: null,\n                page: 1,\n            },\n            tableData: null,\n            input4: null,\n            place: null,\n        };\n    },\n    components: {\n        Affix\n    },\n    computed: {\n        ...mapGetters({\n            listData: getter.GET_LIST_LOCATION,\n            paginate: getter.GET_PAGINATE_LOCATION,\n            enterprise: getter.ENTERPRISE,\n            total: getter.GET_LOCATION_TOTAL\n        }),\n        paginator() {\n            return this.paginate;\n        },\n        indexTam() {\n            return this.indexT;\n        },\n        forTotal() {\n            if (this.listData) {\n                return this.total;\n            }\n        }\n    },\n\n    methods: {\n        openWindow(position) {\n            this.window_open = true\n            this.infowindow.lat = position.lat;\n            this.infowindow.lng = position.lng;\n            this.infowindow.name = position.name;\n        },\n        async searchChange(v) {\n            let trimName = this.input4.trim()\n            if (trimName.length > 0) {\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                await this.$store.dispatch(action.LIST_LOCATION, {\n                    page: 1,\n                    q: trimName,\n                    identerprise: this.enterprise.identerprise\n                });\n                await this.listData\n                this.markers = [];\n                for (var i = 0; i < this.listData.length; i++) {\n                    const marker = {\n                        lat: parseFloat(this.listData[i].latitude),\n                        lng: parseFloat(this.listData[i].longitude),\n                        name: this.listData[i].name + ', ' + this.listData[i].address,\n                        popover: false,\n                        id: this.listData[i].idplaces,\n                    };\n                    this.markDefault.lat = parseFloat(this.listData[i].latitude)\n                    this.markDefault.lng = parseFloat(this.listData[i].longitude)\n                    this.markers.push({\n                        position: marker\n                    });\n                    this.mapMark = 1;\n                }\n            } else {\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                await this.$store.dispatch(action.LIST_LOCATION, {\n                    page: 1,\n                    q: trimName,\n                    identerprise: this.enterprise.identerprise\n                });\n                await this.listData\n                this.markers = [];\n                for (var i = 0; i < this.listData.length; i++) {\n                    const marker = {\n                        lat: parseFloat(this.listData[i].latitude),\n                        lng: parseFloat(this.listData[i].longitude),\n                        name: this.listData[i].name + ', ' + this.listData[i].address,\n                        popover: false,\n                        id: this.listData[i].idplaces,\n                    };\n                    this.markDefault.lat = parseFloat(this.listData[i].latitude)\n                    this.markDefault.lng = parseFloat(this.listData[i].longitude)\n                    this.markers.push({\n                        position: marker\n                    });\n                    this.mapMark = 1;\n                }\n            }\n        },\n        async handlePageChange(page) {\n            this.markers = [];\n            this.payload.page = page;\n            await this.$store.dispatch(action.LIST_LOCATION, {\n                page: page,\n                q: this.input4,\n                identerprise: this.enterprise.identerprise\n            });\n            for (var i = 0; i < this.listData.length; i++) {\n                const marker = {\n                    lat: parseFloat(this.listData[i].latitude),\n                    lng: parseFloat(this.listData[i].longitude),\n                    name: this.listData[i].name + ', ' + this.listData[i].address,\n                    popover: false,\n                    id: this.listData[i].idplaces,\n                };\n                this.markDefault.lat = parseFloat(this.listData[i].latitude)\n                this.markDefault.lng = parseFloat(this.listData[i].longitude)\n                this.markers.push({\n                    position: marker\n                });\n                this.mapMark = 1;\n            }\n        },\n\n        Create() {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$router.push({\n                name: \"NewLocation\"\n            });\n        },\n        clearMarkers() {\n            this.markers = [];\n        },\n        async getId(id) {\n            await this.clearMarkers();\n            const marker = {\n                lat: parseFloat(id.latitude),\n                lng: parseFloat(id.longitude),\n                name: id.name + ', ' + id.address,\n                popover: false,\n\n            }\n            this.markDefault.lat = parseFloat(id.latitude)\n            this.markDefault.lng = parseFloat(id.longitude)\n            this.markers.push({\n                position: marker\n            });\n            this.mapMark = 1;\n\n        },\n        Cancel() {\n            this.$store.dispatch(action.DATA_ID_CORP, this.enterprise.identerprise);\n            this.$router.replace({\n                path: \"/detail-enterprise/\" + this.enterprise.identerprise\n            });\n        },\n        Edit(e) {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$store.dispatch(action.DETAIL_LOCATION, e.idplaces);\n        },\n        Delete(e) {\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.dispatch(action.DELETE_LOCATION, e);\n                }\n            });\n        }\n    },\n    async created() {\n        this.payload.identerprise = await this.enterprise.identerprise\n        await this.$store.dispatch(action.LIST_LOCATION, this.payload);\n        await this.listData\n        this.markers = [];\n        for (var i = 0; i < this.listData.length; i++) {\n            const marker = {\n                lat: parseFloat(this.listData[i].latitude),\n                lng: parseFloat(this.listData[i].longitude),\n                name: this.listData[i].name + ', ' + this.listData[i].address,\n                popover: false,\n                id: this.listData[i].idplaces,\n            };\n            this.markDefault.lat = parseFloat(this.listData[i].latitude)\n            this.markDefault.lng = parseFloat(this.listData[i].longitude)\n            this.markers.push({\n                position: marker\n            });\n            this.mapMark = 1;\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.text-p {\n    display: block;\n    color: white;\n    font-weight: 600;\n}\n\n.plus-bg {\n    background-color: #a31424;\n    height: 139px;\n\n}\n\n.avatar {\n    img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 60px;\n        height: 60px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n    }\n}\n\n.avatar2 {\n    img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 120px;\n        height: 120px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n    }\n}\n\n.name-of {\n    margin-bottom: 10px;\n    color: #a31424;\n}\n\n.contacts-list {\n    //margin: 0 auto;\n    height: 400px;\n    width: 108%;\n    max-width: 965px;\n    padding: 0px 30px;\n    box-sizing: border-box;\n\n    .contact {\n        margin: 10px 0;\n        padding: 5px;\n        box-sizing: border-box;\n        cursor: pointer;\n\n    }\n}\n\n.small-edit {\n    width: 90px;\n}\n\n/*.card-base {*/\n/*padding: 20px;*/\n/*}*/\n\n/*.el-row {*/\n/*// display: flex;*/\n/*// align-items: center;*/\n/*// justify-content: center;*/\n/*padding: 0px 10px;*/\n/*margin-bottom: 20px;*/\n\n/*&:last-child {*/\n/*margin-bottom: 0;*/\n/*}*/\n/*}*/\n\n/*.el-col {*/\n/*border-radius: 5px;*/\n/*}*/\n\n/*.el-select {*/\n/*width: 100%;*/\n/*}*/\n</style>\n"],"sourceRoot":"src/views/pages/enterprise"}]}