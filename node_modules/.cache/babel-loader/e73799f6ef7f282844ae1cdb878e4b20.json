{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/store/modules/users/login.js","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/store/modules/users/login.js","mtime":1628175042615},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nvar _actions, _mutations;\n\nimport localAxios from \"../../../services/http/client\"; // import googleAxios from '../../../services/google/firebase'\n// import logins from '../../../assets/data/login_status'\n\nimport router from \"../../../router\";\nimport * as action from \"../../action-types\";\nimport * as mutation from \"../../mutation-types\";\nimport { setLStorage } from \"../../../utils/manageLocalStorage\";\nimport * as typeS from \"../../../services/path_service\";\nvar state = {\n  idToken: null\n};\nvar getters = {};\nvar actions = (_actions = {}, _defineProperty(_actions, action.SET_LOGOUT_TIMER, function (_ref, expirationTime) {\n  var commit = _ref.commit;\n  setTimeout(function () {\n    commit('setLogout');\n    router.replace('login');\n  }, expirationTime);\n}), _defineProperty(_actions, action.LOGIN, function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2, authData) {\n    var commit, dispatch, domainLocal, jsonData, _yield$localAxios$pos, data, token, role, userProfile, now, expirationDate;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref2.commit, dispatch = _ref2.dispatch;\n            _context.prev = 1;\n            domainLocal = window.location.hostname === 'localhost' ? process.env.VUE_APP_DOMAIN : \"\".concat(window.location.protocol, \"//\").concat(window.location.hostname);\n            jsonData = JSON.stringify({\n              grant_type: \"password\",\n              client_id: process.env.VUE_APP_ID,\n              client_secret: process.env.VUE_APP_SECRET,\n              username: authData.email,\n              password: authData.password,\n              scope: \"*\",\n              domain: domainLocal\n            });\n            _context.next = 6;\n            return localAxios.post(typeS.login, jsonData);\n\n          case 6:\n            _yield$localAxios$pos = _context.sent;\n            data = _yield$localAxios$pos.data;\n            token = data.data.access_token;\n            commit(mutation.AUTH_USER, {\n              token: token\n            });\n            _context.next = 12;\n            return localAxios.get(typeS.role_access, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 12:\n            role = _context.sent;\n            _context.next = 15;\n            return localAxios.get(typeS.user_profile, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 15:\n            userProfile = _context.sent;\n            now = new Date();\n            expirationDate = new Date(now.getTime() + data.data.expires_in);\n            localStorage.setItem('expirationDate', expirationDate); // localStorage.setItem('token', token);\n\n            localStorage.setItem('email', authData.email);\n            localStorage.setItem('token', token);\n            localStorage.setItem('rules', JSON.stringify(role.data.data));\n            localStorage.setItem('user', JSON.stringify(userProfile.data.data));\n            commit('setLogin', data.status);\n            commit(mutation.BUTTON_STATUS, false);\n\n            if (data.status) {\n              router.replace('dashboard');\n            }\n\n            dispatch(action.SET_LOGOUT_TIMER, data.data.expires_in);\n            _context.next = 33;\n            break;\n\n          case 29:\n            _context.prev = 29;\n            _context.t0 = _context[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            dispatch(action.DATA_ERROR, _context.t0);\n\n          case 33:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 29]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, action.AUTO_LOGIN, function (_ref4) {\n  var commit = _ref4.commit;\n  var token = localStorage.getItem('token');\n  var tokenCon = token != null;\n\n  if (!token) {\n    return;\n  }\n\n  var expirationDate = localStorage.getItem('expirationDate');\n  var now = new Date();\n\n  if (now >= expirationDate) {\n    return;\n  }\n\n  var firstPath = router.currentRoute.path;\n  var fPath = firstPath.split(\"/\")[1];\n\n  if (fPath === 'activation-email') {\n    return;\n  }\n\n  if (fPath === 'reset-password') {\n    return;\n  }\n\n  if (fPath === 'create-password') {\n    return;\n  }\n\n  commit(mutation.AUTH_USER, {\n    token: token\n  });\n  commit('setLogin', tokenCon);\n  router.replace('dashboard');\n}), _defineProperty(_actions, action.LOGOUT, function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref5) {\n    var commit, dispatch, token, AuthStr, logoutUser;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref5.commit, dispatch = _ref5.dispatch;\n            _context2.prev = 1;\n            token = localStorage.getItem('token');\n            AuthStr = 'Bearer ' + token.trim();\n            _context2.next = 6;\n            return localAxios.get(typeS.logout, {\n              headers: {\n                Authorization: AuthStr\n              }\n            });\n\n          case 6:\n            logoutUser = _context2.sent;\n            commit(mutation.CLEAR_AUTH_DATA);\n            commit(mutation.CLEAR_NOTIF);\n            commit(mutation.SET_CLEAR_GRAFIK);\n            localStorage.clear();\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context2.t0);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 13]]);\n  }));\n\n  return function (_x3) {\n    return _ref6.apply(this, arguments);\n  };\n}()), _actions);\nvar mutations = (_mutations = {}, _defineProperty(_mutations, mutation.AUTH_USER, function (state, userData) {\n  state.idToken = userData.token;\n}), _defineProperty(_mutations, mutation.CLEAR_AUTH_DATA, function (state) {\n  state.idToken = null;\n}), _mutations);\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/store/modules/users/login.js"],"names":["localAxios","router","action","mutation","setLStorage","typeS","state","idToken","getters","actions","SET_LOGOUT_TIMER","expirationTime","commit","setTimeout","replace","LOGIN","authData","dispatch","domainLocal","window","location","hostname","process","env","VUE_APP_DOMAIN","protocol","jsonData","JSON","stringify","grant_type","client_id","VUE_APP_ID","client_secret","VUE_APP_SECRET","username","email","password","scope","domain","post","login","data","token","access_token","AUTH_USER","get","role_access","headers","role","user_profile","userProfile","now","Date","expirationDate","getTime","expires_in","localStorage","setItem","status","BUTTON_STATUS","DATA_ERROR","AUTO_LOGIN","getItem","tokenCon","firstPath","currentRoute","path","fPath","split","LOGOUT","AuthStr","trim","logout","Authorization","logoutUser","CLEAR_AUTH_DATA","CLEAR_NOTIF","SET_CLEAR_GRAFIK","clear","mutations","userData"],"mappings":"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","sourcesContent":["import localAxios from '../../../services/http/client'\n// import googleAxios from '../../../services/google/firebase'\n// import logins from '../../../assets/data/login_status'\nimport router from '../../../router'\nimport * as action from '../../action-types'\nimport * as mutation from '../../mutation-types'\nimport { setLStorage } from '../../../utils/manageLocalStorage'\nimport * as typeS from '../../../services/path_service'\n\nconst state = {\n    idToken: null,\n};\n\nconst getters = {\n\n};\n\nconst actions = {\n    [action.SET_LOGOUT_TIMER]({commit}, expirationTime){\n            setTimeout(()=> {\n                commit('setLogout');\n                router.replace('login')\n            }, expirationTime)    \n    },\n    async [action.LOGIN]({ commit, dispatch }, authData) {\n        try {\n            let   domainLocal = (window.location.hostname === 'localhost') ? process.env.VUE_APP_DOMAIN : `${window.location.protocol}//${window.location.hostname}`\n            const jsonData = JSON.stringify({\n                grant_type : \"password\",\n                client_id : process.env.VUE_APP_ID,\n                client_secret : process.env.VUE_APP_SECRET,\n                username: authData.email,\n                password: authData.password,\n                scope: \"*\",\n                domain : domainLocal\n            });\n            let { data } = await localAxios.post(typeS.login, jsonData);\n            let token =  data.data.access_token;\n            commit(mutation.AUTH_USER, {\n                token\n            });\n            let role = await localAxios.get(typeS.role_access,{\n                headers: {'Authorization': 'Bearer '+token}\n            })\n            let userProfile = await localAxios.get(typeS.user_profile,{\n                headers: {'Authorization': 'Bearer '+token}\n            })\n            const now = new Date();\n            const expirationDate = new Date(now.getTime() + data.data.expires_in);\n            localStorage.setItem('expirationDate', expirationDate)\n            // localStorage.setItem('token', token);\n            localStorage.setItem('email', authData.email);\n            localStorage.setItem('token', token)\n            localStorage.setItem('rules', JSON.stringify(role.data.data));\n            localStorage.setItem('user', JSON.stringify(userProfile.data.data));\n            commit('setLogin', data.status);\n            commit(mutation.BUTTON_STATUS, false)\n            if (data.status){\n                router.replace('dashboard')\n            }\n            dispatch(action.SET_LOGOUT_TIMER, data.data.expires_in)\n        }\n        catch (err) {\n            commit(mutation.BUTTON_STATUS, false)\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    [action.AUTO_LOGIN]({commit}) {\n        const token = localStorage.getItem('token');\n        let tokenCon =  token != null\n        if(!token){\n            return\n        }\n        const expirationDate = localStorage.getItem('expirationDate');\n        const now = new Date();\n        if(now >= expirationDate){\n            return\n        }\n        let firstPath = router.currentRoute.path;\n        let fPath = firstPath.split(\"/\")[1];\n        if(fPath === 'activation-email') {\n            return\n        }\n        if(fPath === 'reset-password') {\n            return\n        }\n        if(fPath === 'create-password') {\n            return\n        }\n        commit(mutation.AUTH_USER, {token : token });\n        commit('setLogin', tokenCon);\n        router.replace('dashboard')\n    },\n    async [action.LOGOUT]({commit, dispatch}){\n        try {\n            const token = localStorage.getItem('token');\n            const AuthStr = 'Bearer ' + token.trim();\n            let logoutUser = await localAxios.get(typeS.logout, { headers: { Authorization: AuthStr}});\n            commit(mutation.CLEAR_AUTH_DATA);\n            commit(mutation.CLEAR_NOTIF);\n            commit(mutation.SET_CLEAR_GRAFIK);\n            localStorage.clear();\n        }\n        catch(err){\n            dispatch(action.DATA_ERROR, err)\n        }\n    }\n};\n\nconst mutations = {\n    [mutation.AUTH_USER](state, userData) {\n        state.idToken = userData.token\n    },\n    [mutation.CLEAR_AUTH_DATA](state) {\n        state.idToken = null\n    }\n};\n\nexport default {\n    state,\n    mutations,\n    actions,\n    getters\n}"]}]}