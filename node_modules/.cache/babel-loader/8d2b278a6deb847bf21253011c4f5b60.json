{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/helper/action.js","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/helper/action.js","mtime":1640440454968},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444342},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _action$DATA_CONTENT$;\n\nimport * as action from \"../../action-types\";\nimport * as mutation from \"../../mutation-types\";\nimport localAxios from \"../../../services/http/client\";\nimport swal from 'sweetalert2';\nimport * as typeS from \"../../../services/path_service\";\nimport router from \"../../../router\";\nexport default (_action$DATA_CONTENT$ = {}, _defineProperty(_action$DATA_CONTENT$, action.DATA_CONTENT, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, payload) {\n    var commit, dispatch, token, _yield$localAxios$get, data;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit, dispatch = _ref.dispatch;\n            _context.prev = 1;\n            token = localStorage.getItem('token');\n            _context.next = 5;\n            return localAxios.get('/pages/' + payload, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get = _context.sent;\n            data = _yield$localAxios$get.data;\n            commit(mutation.SET_DATA_CONTENT, {\n              data: data.data\n            });\n            router.replace({\n              path: '/detail-pages/' + payload\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}()), _defineProperty(_action$DATA_CONTENT$, action.DATA_TOC, function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3) {\n    var commit, dispatch, token, _yield$localAxios$get2, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref3.commit, dispatch = _ref3.dispatch;\n            _context2.prev = 1;\n            token = localStorage.getItem('token');\n            _context2.next = 5;\n            return localAxios.get('/pages/terms-and-condition', {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get2 = _context2.sent;\n            data = _yield$localAxios$get2.data;\n            objList = {\n              data: data.data\n            };\n            commit(mutation.SET_DATA_TOC, objList);\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 11]]);\n  }));\n\n  return function (_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}()), _defineProperty(_action$DATA_CONTENT$, action.DATA_PRIVACY, function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5) {\n    var commit, dispatch, token, _yield$localAxios$get3, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref5.commit, dispatch = _ref5.dispatch;\n            _context3.prev = 1;\n            token = localStorage.getItem('token');\n            _context3.next = 5;\n            return localAxios.get('/pages/privacy', {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get3 = _context3.sent;\n            data = _yield$localAxios$get3.data;\n            objList = {\n              data: data.data\n            };\n            commit(mutation.SET_DATA_PRIVACY, objList);\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context3.t0);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 11]]);\n  }));\n\n  return function (_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}()), _defineProperty(_action$DATA_CONTENT$, action.DATA_CUSTOMER, function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7) {\n    var commit, dispatch, token, _yield$localAxios$get4, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref7.commit, dispatch = _ref7.dispatch;\n            _context4.prev = 1;\n            token = localStorage.getItem('token');\n            _context4.next = 5;\n            return localAxios.get('/pages/customer-service', {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get4 = _context4.sent;\n            data = _yield$localAxios$get4.data;\n            objList = {\n              data: data.data\n            };\n            commit(mutation.SET_DATA_CUSTOMER, objList);\n            _context4.next = 14;\n            break;\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context4.t0);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 11]]);\n  }));\n\n  return function (_x5) {\n    return _ref8.apply(this, arguments);\n  };\n}()), _defineProperty(_action$DATA_CONTENT$, action.LIST_PAGES, function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref9, payload) {\n    var commit, dispatch, token, _yield$localAxios$get5, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            commit = _ref9.commit, dispatch = _ref9.dispatch;\n            _context5.prev = 1;\n            token = localStorage.getItem('token');\n            _context5.next = 5;\n            return localAxios.get('/pages/?idrole=' + payload.idrole, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get5 = _context5.sent;\n            data = _yield$localAxios$get5.data;\n            objList = {\n              dataList: data.data.data,\n              total: data.data.total,\n              nextC: data.data.next_page_url,\n              prevC: data.data.prev_page_url,\n              firstP: data.data.first_page_url,\n              fromPA: data.data.from\n            };\n            commit(mutation.SET_PAGES, objList);\n            _context5.next = 14;\n            break;\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context5.t0);\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 11]]);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref10.apply(this, arguments);\n  };\n}()), _defineProperty(_action$DATA_CONTENT$, action.DETAIL_PAGES, function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(_ref11, payload) {\n    var commit, dispatch, token, _yield$localAxios$get6, data;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            commit = _ref11.commit, dispatch = _ref11.dispatch;\n            _context6.prev = 1;\n            token = localStorage.getItem('token');\n            _context6.next = 5;\n            return localAxios.get('/pages/' + payload, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get6 = _context6.sent;\n            data = _yield$localAxios$get6.data;\n            commit(mutation.SET_PAGES_DETAIL, {\n              data: data.data\n            });\n            router.replace({\n              path: '/detail-pages/' + payload\n            });\n            return _context6.abrupt(\"return\", data);\n\n          case 12:\n            _context6.prev = 12;\n            _context6.t0 = _context6[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context6.t0);\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 12]]);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref12.apply(this, arguments);\n  };\n}()), _defineProperty(_action$DATA_CONTENT$, action.UPDATE_PAGES, function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref13, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$put, data;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            commit = _ref13.commit, dispatch = _ref13.dispatch;\n            _context7.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              name: payload.name,\n              description: payload.description,\n              content: payload.content\n            });\n            _context7.next = 6;\n            return localAxios.put('/pages/' + payload.idcontent, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$put = _context7.sent;\n            data = _yield$localAxios$put.data;\n            dispatch(action.LIST_PAGES);\n            router.replace({\n              path: '/pages'\n            });\n            commit(mutation.BUTTON_STATUS, false);\n            _context7.next = 18;\n            break;\n\n          case 13:\n            _context7.prev = 13;\n            _context7.t0 = _context7[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context7.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context7.t0);\n\n          case 18:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 13]]);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref14.apply(this, arguments);\n  };\n}()), _action$DATA_CONTENT$);",{"version":3,"sources":["/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/helper/action.js"],"names":["action","mutation","localAxios","swal","typeS","router","DATA_CONTENT","payload","commit","dispatch","token","localStorage","getItem","get","headers","data","SET_DATA_CONTENT","replace","path","DATA_ERROR","DATA_TOC","objList","SET_DATA_TOC","DATA_PRIVACY","SET_DATA_PRIVACY","DATA_CUSTOMER","SET_DATA_CUSTOMER","LIST_PAGES","idrole","dataList","total","nextC","next_page_url","prevC","prev_page_url","firstP","first_page_url","fromPA","from","SET_PAGES","DETAIL_PAGES","SET_PAGES_DETAIL","UPDATE_PAGES","jsonData","JSON","stringify","name","description","content","put","idcontent","BUTTON_STATUS","response","message"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,MAAZ;AACA,OAAO,KAAKC,QAAZ;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,KAAKC,KAAZ;AACA,OAAOC,MAAP;AAKA,mFACWL,MAAM,CAACM,YADlB;AAAA,6FACoDC,OADpD;AAAA;;AAAA;AAAA;AAAA;AAAA;AACiCC,YAAAA,MADjC,QACiCA,MADjC,EACyCC,QADzC,QACyCA,QADzC;AAAA;AAGgBC,YAAAA,KAHhB,GAGwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAHxB;AAAA;AAAA,mBAIiCV,UAAU,CAACW,GAAX,CAAgB,YAAUN,OAA1B,EACjB;AAAEO,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aADiB,CAJjC;;AAAA;AAAA;AAIkBK,YAAAA,IAJlB,yBAIkBA,IAJlB;AAQYP,YAAAA,MAAM,CAACP,QAAQ,CAACe,gBAAV,EAA4B;AAC9BD,cAAAA,IAAI,EAAGA,IAAI,CAACA;AADkB,aAA5B,CAAN;AAIAV,YAAAA,MAAM,CAACY,OAAP,CAAe;AAAEC,cAAAA,IAAI,EAAE,mBAAiBX;AAAzB,aAAf;AAZZ,6CAamBQ,IAbnB;;AAAA;AAAA;AAAA;AAiBYN,YAAAA,QAAQ,CAACT,MAAM,CAACmB,UAAR,cAAR;;AAjBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAoBWnB,MAAM,CAACoB,QApBlB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAoB6BZ,YAAAA,MApB7B,SAoB6BA,MApB7B,EAoBqCC,QApBrC,SAoBqCA,QApBrC;AAAA;AAsBgBC,YAAAA,KAtBhB,GAsBwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAtBxB;AAAA;AAAA,mBAuBiCV,UAAU,CAACW,GAAX,CAAe,4BAAf,EAA6C;AAC9DC,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AADqD,aAA7C,CAvBjC;;AAAA;AAAA;AAuBkBK,YAAAA,IAvBlB,0BAuBkBA,IAvBlB;AA0BgBM,YAAAA,OA1BhB,GA0B0B;AACVN,cAAAA,IAAI,EAAGA,IAAI,CAACA;AADF,aA1B1B;AA6BYP,YAAAA,MAAM,CAACP,QAAQ,CAACqB,YAAV,EAAwBD,OAAxB,CAAN;AA7BZ;AAAA;;AAAA;AAAA;AAAA;AA+BYZ,YAAAA,QAAQ,CAACT,MAAM,CAACmB,UAAR,eAAR;;AA/BZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAkCWnB,MAAM,CAACuB,YAlClB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAkCiCf,YAAAA,MAlCjC,SAkCiCA,MAlCjC,EAkCyCC,QAlCzC,SAkCyCA,QAlCzC;AAAA;AAoCgBC,YAAAA,KApChB,GAoCwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CApCxB;AAAA;AAAA,mBAqCiCV,UAAU,CAACW,GAAX,CAAe,gBAAf,EAAiC;AAClDC,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AADyC,aAAjC,CArCjC;;AAAA;AAAA;AAqCkBK,YAAAA,IArClB,0BAqCkBA,IArClB;AAwCgBM,YAAAA,OAxChB,GAwC0B;AACVN,cAAAA,IAAI,EAAGA,IAAI,CAACA;AADF,aAxC1B;AA2CYP,YAAAA,MAAM,CAACP,QAAQ,CAACuB,gBAAV,EAA4BH,OAA5B,CAAN;AA3CZ;AAAA;;AAAA;AAAA;AAAA;AA6CYZ,YAAAA,QAAQ,CAACT,MAAM,CAACmB,UAAR,eAAR;;AA7CZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAgDWnB,MAAM,CAACyB,aAhDlB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgDkCjB,YAAAA,MAhDlC,SAgDkCA,MAhDlC,EAgD0CC,QAhD1C,SAgD0CA,QAhD1C;AAAA;AAkDgBC,YAAAA,KAlDhB,GAkDwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAlDxB;AAAA;AAAA,mBAmDiCV,UAAU,CAACW,GAAX,CAAe,yBAAf,EAA0C;AAC3DC,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AADkD,aAA1C,CAnDjC;;AAAA;AAAA;AAmDkBK,YAAAA,IAnDlB,0BAmDkBA,IAnDlB;AAsDgBM,YAAAA,OAtDhB,GAsD0B;AACVN,cAAAA,IAAI,EAAGA,IAAI,CAACA;AADF,aAtD1B;AAyDYP,YAAAA,MAAM,CAACP,QAAQ,CAACyB,iBAAV,EAA6BL,OAA7B,CAAN;AAzDZ;AAAA;;AAAA;AAAA;AAAA;AA2DYZ,YAAAA,QAAQ,CAACT,MAAM,CAACmB,UAAR,eAAR;;AA3DZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA8DWnB,MAAM,CAAC2B,UA9DlB;AAAA,gGA8DkDpB,OA9DlD;AAAA;;AAAA;AAAA;AAAA;AAAA;AA8D+BC,YAAAA,MA9D/B,SA8D+BA,MA9D/B,EA8DuCC,QA9DvC,SA8DuCA,QA9DvC;AAAA;AAgEgBC,YAAAA,KAhEhB,GAgEwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAhExB;AAAA;AAAA,mBAiE+BV,UAAU,CAACW,GAAX,CAAe,oBAAkBN,OAAO,CAACqB,MAAzC,EAAiD;AAChEd,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AADuD,aAAjD,CAjE/B;;AAAA;AAAA;AAiEiBK,YAAAA,IAjEjB,0BAiEiBA,IAjEjB;AAoEgBM,YAAAA,OApEhB,GAoE0B;AACVQ,cAAAA,QAAQ,EAAMd,IAAI,CAACA,IAAL,CAAUA,IADd;AAEVe,cAAAA,KAAK,EAASf,IAAI,CAACA,IAAL,CAAUe,KAFd;AAGVC,cAAAA,KAAK,EAAShB,IAAI,CAACA,IAAL,CAAUiB,aAHd;AAIVC,cAAAA,KAAK,EAASlB,IAAI,CAACA,IAAL,CAAUmB,aAJd;AAKVC,cAAAA,MAAM,EAAQpB,IAAI,CAACA,IAAL,CAAUqB,cALd;AAMVC,cAAAA,MAAM,EAAQtB,IAAI,CAACA,IAAL,CAAUuB;AANd,aApE1B;AA4EY9B,YAAAA,MAAM,CAACP,QAAQ,CAACsC,SAAV,EAAsBlB,OAAtB,CAAN;AA5EZ;AAAA;;AAAA;AAAA;AAAA;AA+EYZ,YAAAA,QAAQ,CAACT,MAAM,CAACmB,UAAR,eAAR;;AA/EZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAkFWnB,MAAM,CAACwC,YAlFlB;AAAA,iGAkFoDjC,OAlFpD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAkFiCC,YAAAA,MAlFjC,UAkFiCA,MAlFjC,EAkFyCC,QAlFzC,UAkFyCA,QAlFzC;AAAA;AAoFoBC,YAAAA,KApFpB,GAoF4BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CApF5B;AAAA;AAAA,mBAqFqCV,UAAU,CAACW,GAAX,CAAgB,YAAUN,OAA1B,EACjB;AAAEO,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aADiB,CArFrC;;AAAA;AAAA;AAqFsBK,YAAAA,IArFtB,0BAqFsBA,IArFtB;AAyFgBP,YAAAA,MAAM,CAACP,QAAQ,CAACwC,gBAAV,EAA4B;AAC9B1B,cAAAA,IAAI,EAAGA,IAAI,CAACA;AADkB,aAA5B,CAAN;AAIAV,YAAAA,MAAM,CAACY,OAAP,CAAe;AAAEC,cAAAA,IAAI,EAAE,mBAAiBX;AAAzB,aAAf;AA7FhB,8CA8FuBQ,IA9FvB;;AAAA;AAAA;AAAA;AAkGgBN,YAAAA,QAAQ,CAACT,MAAM,CAACmB,UAAR,eAAR;;AAlGhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAqGWnB,MAAM,CAAC0C,YArGlB;AAAA,iGAqGoDnC,OArGpD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAqGiCC,YAAAA,MArGjC,UAqGiCA,MArGjC,EAqGyCC,QArGzC,UAqGyCA,QArGzC;AAAA;AAuGgBC,YAAAA,KAvGhB,GAuGwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAvGxB;AAwGkB+B,YAAAA,QAxGlB,GAwG6BC,IAAI,CAACC,SAAL,CAAe;AAC5BC,cAAAA,IAAI,EAAkBvC,OAAO,CAACuC,IADF;AAE5BC,cAAAA,WAAW,EAAWxC,OAAO,CAACwC,WAFF;AAG5BC,cAAAA,OAAO,EAAezC,OAAO,CAACyC;AAHF,aAAf,CAxG7B;AAAA;AAAA,mBA+GiC9C,UAAU,CAAC+C,GAAX,CAAe,YAAU1C,OAAO,CAAC2C,SAAjC,EACjBP,QADiB,EAEjB;AAAE7B,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAAX,aAFiB,CA/GjC;;AAAA;AAAA;AA+GkBK,YAAAA,IA/GlB,yBA+GkBA,IA/GlB;AAmHYN,YAAAA,QAAQ,CAACT,MAAM,CAAC2B,UAAR,CAAR;AACAtB,YAAAA,MAAM,CAACY,OAAP,CAAe;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAf;AACAV,YAAAA,MAAM,CAACP,QAAQ,CAACkD,aAAV,EAAyB,KAAzB,CAAN;AArHZ;AAAA;;AAAA;AAAA;AAAA;AAuHY3C,YAAAA,MAAM,CAACP,QAAQ,CAACkD,aAAV,EAAyB,KAAzB,CAAN;AACAhD,YAAAA,IAAI,CAAC,aAAIiD,QAAJ,CAAarC,IAAb,CAAkBsC,OAAnB,EAA2B,EAA3B,EAA+B,OAA/B,CAAJ;AACA5C,YAAAA,QAAQ,CAACT,MAAM,CAACmB,UAAR,eAAR;;AAzHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as action from '../../action-types'\nimport * as mutation from '../../mutation-types'\nimport localAxios from '../../../services/http/client'\nimport swal from 'sweetalert2'\nimport * as typeS from '../../../services/path_service'\nimport router from '../../../router'\n\n\n\n\nexport default {\n    async [action.DATA_CONTENT]({commit, dispatch}, payload) {\n        try {\n            let token = localStorage.getItem('token');\n            let { data } = await localAxios.get( '/pages/'+payload,\n                { headers: {'Authorization': 'Bearer '+token }\n                })\n\n            commit(mutation.SET_DATA_CONTENT, {\n                data : data.data,\n                \n            })\n            router.replace({ path: '/detail-pages/'+payload})\n            return data\n            \n        }\n        catch (err) {\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.DATA_TOC]({commit, dispatch}) {\n        try{\n            let token = localStorage.getItem('token')\n            let { data } = await localAxios.get('/pages/terms-and-condition', {\n                headers: {'Authorization': 'Bearer '+token}\n            })\n            let objList = {\n                data : data.data,\n            }\n            commit(mutation.SET_DATA_TOC, objList )\n        }catch (err) {\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.DATA_PRIVACY]({commit, dispatch}) {\n        try{\n            let token = localStorage.getItem('token')\n            let { data } = await localAxios.get('/pages/privacy', {\n                headers: {'Authorization': 'Bearer '+token}\n            })\n            let objList = {\n                data : data.data,\n            }\n            commit(mutation.SET_DATA_PRIVACY, objList )\n        }catch (err) {\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.DATA_CUSTOMER]({commit, dispatch}) {\n        try{\n            let token = localStorage.getItem('token')\n            let { data } = await localAxios.get('/pages/customer-service', {\n                headers: {'Authorization': 'Bearer '+token}\n            })\n            let objList = {\n                data : data.data,\n            }\n            commit(mutation.SET_DATA_CUSTOMER, objList )\n        }catch (err) {\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.LIST_PAGES]({commit, dispatch}, payload) {\n        try{\n            let token = localStorage.getItem('token')\n            let {data} = await localAxios.get('/pages/?idrole='+payload.idrole, {\n                headers: {'Authorization': 'Bearer '+token}\n            })\n            let objList = {\n                dataList    : data.data.data,\n                total       : data.data.total,\n                nextC       : data.data.next_page_url,\n                prevC       : data.data.prev_page_url,\n                firstP      : data.data.first_page_url,\n                fromPA      : data.data.from\n            }\n            commit(mutation.SET_PAGES , objList )\n        \n        }catch (err) {\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.DETAIL_PAGES]({commit, dispatch}, payload) {\n            try {\n                let token = localStorage.getItem('token');\n                let { data } = await localAxios.get( '/pages/'+payload,\n                    { headers: {'Authorization': 'Bearer '+token }\n                    })\n    \n                commit(mutation.SET_PAGES_DETAIL, {\n                    data : data.data,\n                    \n                })\n                router.replace({ path: '/detail-pages/'+payload})\n                return data\n                \n            }\n            catch (err) {\n                dispatch(action.DATA_ERROR, err)\n            }\n        },\n    async [action.UPDATE_PAGES]({commit, dispatch}, payload) {\n        try{\n            let token = localStorage.getItem('token');\n            const jsonData = JSON.stringify({\n                name                : payload.name,\n                description         : payload.description,\n                content             : payload.content\n        \n            });\n    \n            let { data } = await localAxios.put('/pages/'+payload.idcontent,\n                jsonData,\n                { headers: {'Authorization': 'Bearer '+token }\n                })\n            dispatch(action.LIST_PAGES)\n            router.replace({ path: '/pages'})\n            commit(mutation.BUTTON_STATUS, false)\n        }catch(err){\n            commit(mutation.BUTTON_STATUS, false)\n            swal(err.response.data.message,'', 'error')\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n};\n"]}]}