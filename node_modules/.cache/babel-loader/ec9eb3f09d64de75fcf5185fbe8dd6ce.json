{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/tasktemplate/new-template-task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/tasktemplate/new-template-task.vue","mtime":1628175042630},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../../router\";\nimport * as action from \"../../../store/action-types\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      buttonStatus: null,\n      dialogVisible: false,\n      currentPlace: null,\n      markers: {\n        lat: -6.193619252954559,\n        lng: 106.76330885229345\n      },\n      center: {\n        lat: -6.193619252954559,\n        lng: 106.76330885229345\n      },\n      keyVal: '',\n      form: {\n        name: '',\n        fullscreen_loading: false,\n        description: '',\n        tasks: [{\n          key: 1,\n          name: '',\n          task_description: '',\n          location_name: '',\n          lat: '',\n          long: '',\n          is_required: false,\n          is_need_photo: false,\n          is_need_inspector_validation: false\n        }]\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please Input Template Name',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: 'Please Input Description',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit(formName) {\n      var _this = this;\n\n      var obj = {\n        name: this.form.name,\n        description: this.form.description,\n        tasks: this.form.tasks,\n        identerprise: this.identer\n      };\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.$store.commit(mutation.BUTTON_STATUS, true);\n\n          _this.$store.dispatch(action.CREATE_TEMPLATE_TASK, obj);\n        } else {\n          return false;\n        }\n      });\n    },\n    dialogTrack: function dialogTrack(domain) {\n      this.keyVal = domain.key;\n      this.$store.commit(mutation.SET_DIALOG_VISIBLE, true);\n    },\n    addButton: function addButton() {\n      this.form.tasks.push({\n        key: Date.now(),\n        name: '',\n        task_description: '',\n        lat: '',\n        long: '',\n        location_name: '',\n        is_required: false,\n        is_need_photo: false,\n        is_need_inspector_validation: false\n      });\n    },\n    isCancle: function isCancle() {\n      router.push('/template-list');\n    },\n    removeDomain: function removeDomain(item) {\n      var index = this.form.tasks.indexOf(item);\n\n      if (index !== -1) {\n        this.form.tasks.splice(index, 1);\n      }\n    },\n    updateCoordinates: function updateCoordinates(location) {\n      var _this2 = this;\n\n      var geocoder = new google.maps.Geocoder();\n      geocoder.geocode({\n        'latLng': location.latLng\n      }, function (result, status) {\n        if (status === google.maps.GeocoderStatus.OK) {\n          _this2.markers = {\n            lat: location.latLng.lat(),\n            lng: location.latLng.lng()\n          };\n\n          var objIndex = _this2.form.tasks.findIndex(function (obj) {\n            return obj.key == _this2.keyVal;\n          });\n\n          _this2.form.tasks[objIndex].lat = location.latLng.lat(), _this2.form.tasks[objIndex].long = location.latLng.lng(), _this2.form.tasks[objIndex].location_name = result[0].formatted_address;\n        }\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.$store.commit(mutation.SET_DIALOG_VISIBLE, false);\n    },\n    handleClose: function handleClose(done) {\n      var _this3 = this;\n\n      this.$confirm('Are you sure to close this map?').then(function (_) {\n        _this3.$store.commit(mutation.SET_DIALOG_VISIBLE, false);\n      }).catch(function (_) {});\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    identer: getter.GET_ID_ENTERPRISE,\n    button: getter.GET_BUTTON,\n    positionT: getter.GET_POSITION_TEMPLATE,\n    dialogV: getter.GET_DIALOG_VISIBLE\n  })), {}, {\n    buttonStatuz: function buttonStatuz() {\n      return this.form.fullscreen_loading = this.button;\n    }\n  }),\n  created: function created() {\n    var roleId = Number(process.env.VUE_APP_ROLE_VENDOR);\n    var roleId2 = Number(process.env.VUE_APP_ROLE_SUPERADMIN);\n\n    if (JSON.parse(localStorage.getItem('user')).idrole === roleId || JSON.parse(localStorage.getItem('user')).idrole === roleId2) {\n      this.buttonStatus = false;\n    } else {\n      this.buttonStatus = true;\n    }\n  }\n};",{"version":3,"sources":["new-template-task.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<vue-scroll class=\"page-typography\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"24\">\n                    <div class=\"grid-content\">\n                        <el-form-item prop=\"name\">\n                            <el-input style=\"width: 70%\" placeholder=\"Template Name\" v-model=\"form.name\">\n                            </el-input>\n                        </el-form-item>\n                    </div>\n                </el-col>\n            </el-row>\n\n            <el-row :gutter=\"20\">\n                <el-col :span=\"24\">\n                    <div class=\"grid-content\">\n                        <el-form-item prop=\"description\">\n                            <el-input type=\"textarea\" v-model=\"form.description\" placeholder=\"Template Description\" :autosize=\"{ minRows: 5, maxRows: 7}\"></el-input>\n                        </el-form-item>\n                    </div>\n                </el-col>\n            </el-row>\n\n            <el-row>\n                <el-col :span=\"24\">\n                    <el-col>\n                        <span>Task</span>\n                        <el-button class=\"el-icon-plus\" type=\"success\" size=\"mini\" @click=\"addButton\" circle style=\"margin-left: 10px\">\n                        </el-button>\n                        <hr>\n                    </el-col>\n                </el-col>\n            </el-row>\n\n            <div v-for=\"(domain, index) in form.tasks\" :key=\"domain.key\">\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"24\">\n                        <div class=\"grid-content\">\n                            <el-form-item :prop=\"'tasks.' + index + '.name'\" :rules=\"{\n                                            required: true, message: 'Task Name can not be null', trigger: 'blur'\n                                         }\">\n                                <el-input placeholder=\"Task Name\" v-model=\"domain.name\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-form-item :prop=\"'tasks.' + index + '.task_description'\" :rules=\"{\n                                            required: true, message: 'Task Description can not be null', trigger: 'blur'\n                                         }\">\n                            <el-input type=\"textarea\" v-model=\"domain.task_description\" placeholder=\"Task Description\" :autosize=\"{ minRows: 5, maxRows: 7}\">\n                            </el-input>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n                <el-row :gutter=\"20\" v-if=\"!buttonStatus\">\n                    <el-col :span=\"24\">\n                        <el-form-item :prop=\"'tasks.' + index + '.location_name'\">\n                            <el-input class=\"sixsix\" disabled type=\"textarea\" v-model=\"domain.location_name\" placeholder=\"Location Name\" :autosize=\"{ minRows: 1, maxRows: 3}\">\n                            </el-input>\n                        </el-form-item>\n                    </el-col>\n                    <el-col :span=\"11\">\n                        <div class=\"grid-content\">\n                            <el-form-item :prop=\"'tasks.' + index + '.lat'\">\n                                <el-input class=\"sixsix\" placeholder=\"Latitude\" disabled v-model=\"domain.lat\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n\n                    <el-col :span=\"11\">\n                        <el-form-item :prop=\"'tasks.' + index + '.long'\">\n                            <el-input class=\"sixsix\" v-model=\"domain.long\" disabled placeholder=\"Longitude\">\n                            </el-input>\n                        </el-form-item>\n                    </el-col>\n\n                    <el-col :span=\"2\">\n                        <el-button type=\"primary\" @click=\"dialogTrack(domain)\" icon=\"el-icon-location\" circle></el-button>\n                    </el-col>\n\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"6\">\n                        <el-checkbox label=\"is Required\" v-model=\"domain.is_required\"></el-checkbox>\n                    </el-col>\n                    <el-col :span=\"6\">\n                        <el-checkbox label=\"need Foto\" v-model=\"domain.is_need_photo\"></el-checkbox>\n                    </el-col>\n                    <el-col :span=\"6\">\n                        <el-checkbox label=\"need Validation\" v-if=\"buttonStatus\" v-model=\"domain.is_need_inspector_validation\"></el-checkbox>\n                    </el-col>\n                    <el-col :span=\"6\">\n                        <el-button class=\"el-icon-minus\" type=\"danger\" size=\"mini\" @click.prevent=\"removeDomain(domain)\" circle style=\"margin-bottom: 11px; margin-left: 20px\">\n                        </el-button>\n                    </el-col>\n                </el-row>\n                <hr>\n            </div>\n\n            <el-row>\n                <el-col :lg=\"{offset:18, span:6}\" style=\"display: flex; justify-content: flex-end\">\n                    <div class=\"grid-content\">\n                        <el-form-item>\n                            <el-button type=\"success\" v-loading.fullscreen.lock=\"buttonStatuz\" @click=\"onSubmit('form')\">Create</el-button>\n                            <el-button @click=\"isCancle\">Cancel</el-button>\n                        </el-form-item>\n                    </div>\n                </el-col>\n            </el-row>\n        </el-form>\n\n        <el-dialog :visible.sync=\"dialogV\" :before-close=\"handleClose\" width=\"70%\">\n            <div class=\"card-base card-shadow--medium\">\n                <gmap-map ref=\"map\" :center=\"center\" :zoom=\"12\" :options=\"{gestureHandling:'cooperative'}\" map-type-id=\"roadmap\" style=\"width: 100%; height: 500px\">\n                    <GmapMarker @drag=\"updateCoordinates\" :draggable=\"true\" :position=\"markers\" label=\"S\" />\n\n                </gmap-map>\n            </div>\n            <el-button @click=\"closeDialog\" class=\"mt-10\">Save</el-button>\n        </el-dialog>\n    </div>\n</vue-scroll>\n</template>\n\n<script>\nimport router from '../../../router'\nimport * as action from '../../../store/action-types'\nimport * as getter from '../../../store/getters-types'\nimport * as mutation from '../../../store/mutation-types'\nimport {\n    mapGetters\n} from 'vuex'\n\nexport default {\n    data() {\n        return {\n            buttonStatus: null,\n            dialogVisible: false,\n            currentPlace: null,\n            markers: {\n                lat: -6.193619252954559,\n                lng: 106.76330885229345,\n            },\n            center: {\n                lat: -6.193619252954559,\n                lng: 106.76330885229345,\n            },\n            keyVal: '',\n            form: {\n                name: '',\n                fullscreen_loading: false,\n                description: '',\n                tasks: [{\n                    key: 1,\n                    name: '',\n                    task_description: '',\n                    location_name: '',\n                    lat: '',\n                    long: '',\n                    is_required: false,\n                    is_need_photo: false,\n                    is_need_inspector_validation: false\n                }],\n            },\n            rules: {\n                name: [{\n                    required: true,\n                    message: 'Please Input Template Name',\n                    trigger: 'blur'\n                }],\n                description: [{\n                    required: true,\n                    message: 'Please Input Description',\n                    trigger: 'blur'\n                }],\n\n            }\n        }\n    },\n    methods: {\n        onSubmit(formName) {\n            let obj = {\n                name: this.form.name,\n                description: this.form.description,\n                tasks: this.form.tasks,\n                identerprise: this.identer\n            };\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.CREATE_TEMPLATE_TASK, obj)\n                } else {\n                    return false;\n                }\n            });\n        },\n        dialogTrack(domain) {\n            this.keyVal = domain.key\n            this.$store.commit(mutation.SET_DIALOG_VISIBLE, true)\n        },\n        addButton() {\n            this.form.tasks.push({\n                key: Date.now(),\n                name: '',\n                task_description: '',\n                lat: '',\n                long: '',\n                location_name: '',\n                is_required: false,\n                is_need_photo: false,\n                is_need_inspector_validation: false\n            })\n        },\n        isCancle() {\n            router.push('/template-list')\n        },\n        removeDomain(item) {\n            let index = this.form.tasks.indexOf(item);\n            if (index !== -1) {\n                this.form.tasks.splice(index, 1);\n            }\n        },\n        updateCoordinates(location) {\n            const geocoder = new google.maps.Geocoder()\n            geocoder.geocode({\n                'latLng': location.latLng\n            }, (result, status) => {\n                if (status === google.maps.GeocoderStatus.OK) {\n                    this.markers = {\n                        lat: location.latLng.lat(),\n                        lng: location.latLng.lng(),\n                    };\n                    let objIndex = this.form.tasks.findIndex((obj => obj.key == this.keyVal))\n\n                    this.form.tasks[objIndex].lat = location.latLng.lat(),\n                        this.form.tasks[objIndex].long = location.latLng.lng(),\n                        this.form.tasks[objIndex].location_name = result[0].formatted_address\n                }\n            })\n        },\n        closeDialog() {\n            this.$store.commit(mutation.SET_DIALOG_VISIBLE, false)\n        },\n        handleClose(done) {\n            this.$confirm('Are you sure to close this map?')\n                .then(_ => {\n                    this.$store.commit(mutation.SET_DIALOG_VISIBLE, false)\n                })\n                .catch(_ => {});\n        }\n    },\n    computed: {\n        ...mapGetters({\n            identer: getter.GET_ID_ENTERPRISE,\n            button: getter.GET_BUTTON,\n            positionT: getter.GET_POSITION_TEMPLATE,\n            dialogV: getter.GET_DIALOG_VISIBLE\n        }),\n        buttonStatuz: function () {\n            return this.form.fullscreen_loading = this.button\n        }\n    },\n    created() {\n        let roleId = Number(process.env.VUE_APP_ROLE_VENDOR);\n        let roleId2 = Number(process.env.VUE_APP_ROLE_SUPERADMIN);\n        if (JSON.parse(localStorage.getItem('user')).idrole === roleId || JSON.parse(localStorage.getItem('user')).idrole === roleId2 ) {\n            this.buttonStatus = false;\n        } else {\n            this.buttonStatus = true;\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../../../assets/scss/variables';\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    padding: 0px 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n</style>\n<style lang=\"scss\">\n.sixsix {\n    .el-input__inner {\n        color: #666666 !important;\n    }\n\n    .el-textarea__inner {\n        color: #666666 !important;\n    }\n}\n</style>\n"],"sourceRoot":"src/views/pages/tasktemplate"}]}