{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\store\\modules\\order-client\\mutation.js","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\store\\modules\\order-client\\mutation.js","mtime":1647033288094},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621}],"contextDependencies":[],"result":["import _defineProperty from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _mutation$SET_L_ORDER;\n\nimport * as mutation from \"../../mutation-types\";\nimport { TRACKING_ORDER } from \"../../action-types\";\nexport default (_mutation$SET_L_ORDER = {}, _defineProperty(_mutation$SET_L_ORDER, mutation.SET_L_ORDER_CLIET, function (state, payload) {\n  state.listCor = payload.dataList;\n  state.paginate.nextClick = payload.nextC;\n  state.paginate.prevClick = payload.prevC;\n  state.paginate.firstPage = payload.firstP;\n  state.paginate.fromP = payload.fromPA;\n  state.paginate.totalP = payload.totalPE;\n  state.paginate.curPage = payload.curPage;\n}), _defineProperty(_mutation$SET_L_ORDER, mutation.SET_ORDER_CLIENT_DETAIL, function (state, payload) {\n  state.order = payload;\n}), _defineProperty(_mutation$SET_L_ORDER, mutation.SET_PATH, function (state, payload) {\n  state.path = payload;\n}), _defineProperty(_mutation$SET_L_ORDER, mutation.ID_ORDER, function (state, payload) {\n  state.idorder = payload;\n}), _defineProperty(_mutation$SET_L_ORDER, mutation.SET_ORDER_BAR_GRAPHIC, function (state, payload) {\n  state.orderBar = payload.total_order;\n  var label, data;\n  label = payload.grafik.complete.labels; // label = payload.grafik.open.labels.concat(payload.grafik.inprogress.labels.filter((item)=> {\n  //     return payload.grafik.open.labels.indexOf(item) < 0;\n  // }));\n  // label = label.concat(payload.grafik.complete.labels.filter((item)=> {\n  //     return label.indexOf(item) < 0;\n  // }));\n\n  data = [payload.grafik.complete.series];\n  state.orderGraphic = {\n    label: label,\n    data: data\n  };\n}), _defineProperty(_mutation$SET_L_ORDER, mutation.SET_ROLE_PATH_ORDER, function (state, payload) {\n  state.rolePath = payload;\n}), _mutation$SET_L_ORDER);",{"version":3,"sources":["C:/Users/ASUS/Documents/GitHub/oper-customer/src/store/modules/order-client/mutation.js"],"names":["mutation","TRACKING_ORDER","SET_L_ORDER_CLIET","state","payload","listCor","dataList","paginate","nextClick","nextC","prevClick","prevC","firstPage","firstP","fromP","fromPA","totalP","totalPE","curPage","SET_ORDER_CLIENT_DETAIL","order","SET_PATH","path","ID_ORDER","idorder","SET_ORDER_BAR_GRAPHIC","orderBar","total_order","label","data","grafik","complete","labels","series","orderGraphic","SET_ROLE_PATH_ORDER","rolePath"],"mappings":";;;;AAAA,OAAO,KAAKA,QAAZ;AACA,SAAQC,cAAR;AAEA,mFAIKD,QAAQ,CAACE,iBAJd,YAIiCC,KAJjC,EAIwCC,OAJxC,EAIgD;AACxCD,EAAAA,KAAK,CAACE,OAAN,GAA8BD,OAAO,CAACE,QAAtC;AACAH,EAAAA,KAAK,CAACI,QAAN,CAAeC,SAAf,GAA8BJ,OAAO,CAACK,KAAtC;AACAN,EAAAA,KAAK,CAACI,QAAN,CAAeG,SAAf,GAA8BN,OAAO,CAACO,KAAtC;AACAR,EAAAA,KAAK,CAACI,QAAN,CAAeK,SAAf,GAA8BR,OAAO,CAACS,MAAtC;AACAV,EAAAA,KAAK,CAACI,QAAN,CAAeO,KAAf,GAA8BV,OAAO,CAACW,MAAtC;AACAZ,EAAAA,KAAK,CAACI,QAAN,CAAeS,MAAf,GAA8BZ,OAAO,CAACa,OAAtC;AACAd,EAAAA,KAAK,CAACI,QAAN,CAAeW,OAAf,GAA8Bd,OAAO,CAACc,OAAtC;AACH,CAZL,0CAgBKlB,QAAQ,CAACmB,uBAhBd,YAgBuChB,KAhBvC,EAgB8CC,OAhB9C,EAgBsD;AAC9CD,EAAAA,KAAK,CAACiB,KAAN,GAAchB,OAAd;AACH,CAlBL,0CAoBKJ,QAAQ,CAACqB,QApBd,YAoBwBlB,KApBxB,EAoB+BC,OApB/B,EAoBwC;AAChCD,EAAAA,KAAK,CAACmB,IAAN,GAAalB,OAAb;AACH,CAtBL,0CAuBKJ,QAAQ,CAACuB,QAvBd,YAuBwBpB,KAvBxB,EAuB+BC,OAvB/B,EAuBwC;AAChCD,EAAAA,KAAK,CAACqB,OAAN,GAAgBpB,OAAhB;AACH,CAzBL,0CA0BKJ,QAAQ,CAACyB,qBA1Bd,YA0BqCtB,KA1BrC,EA0B4CC,OA1B5C,EA0BoD;AAC5CD,EAAAA,KAAK,CAACuB,QAAN,GAAiBtB,OAAO,CAACuB,WAAzB;AACA,MAAIC,KAAJ,EAAWC,IAAX;AAEAD,EAAAA,KAAK,GAAGxB,OAAO,CAAC0B,MAAR,CAAeC,QAAf,CAAwBC,MAAhC,CAJ4C,CAK5C;AACA;AACA;AACA;AACA;AACA;;AACAH,EAAAA,IAAI,GAAG,CAACzB,OAAO,CAAC0B,MAAR,CAAeC,QAAf,CAAwBE,MAAzB,CAAP;AACA9B,EAAAA,KAAK,CAAC+B,YAAN,GAAqB;AACjBN,IAAAA,KAAK,EAALA,KADiB;AAEjBC,IAAAA,IAAI,EAAJA;AAFiB,GAArB;AAKH,CA3CL,0CA4CK7B,QAAQ,CAACmC,mBA5Cd,YA4CmChC,KA5CnC,EA4C0CC,OA5C1C,EA4CkD;AAC1CD,EAAAA,KAAK,CAACiC,QAAN,GAAiBhC,OAAjB;AACH,CA9CL","sourcesContent":["import * as mutation from '../../mutation-types'\r\nimport {TRACKING_ORDER} from \"../../action-types\";\r\n\r\nexport default {\r\n    /**\r\n     * for list corporate need to next click and other\r\n     * */\r\n    [mutation.SET_L_ORDER_CLIET](state, payload){\r\n        state.listCor               = payload.dataList\r\n        state.paginate.nextClick    = payload.nextC\r\n        state.paginate.prevClick    = payload.prevC\r\n        state.paginate.firstPage    = payload.firstP\r\n        state.paginate.fromP        = payload.fromPA\r\n        state.paginate.totalP       = payload.totalPE\r\n        state.paginate.curPage      = payload.curPage\r\n    },\r\n    /*\r\n    * create enterprise to detail enterprise\r\n    * */\r\n    [mutation.SET_ORDER_CLIENT_DETAIL](state, payload){\r\n        state.order = payload\r\n    },\r\n\r\n    [mutation.SET_PATH](state, payload) {\r\n        state.path = payload\r\n    },\r\n    [mutation.ID_ORDER](state, payload) {\r\n        state.idorder = payload\r\n    },\r\n    [mutation.SET_ORDER_BAR_GRAPHIC](state, payload){\r\n        state.orderBar = payload.total_order;\r\n        let label, data;\r\n\r\n        label = payload.grafik.complete.labels;\r\n        // label = payload.grafik.open.labels.concat(payload.grafik.inprogress.labels.filter((item)=> {\r\n        //     return payload.grafik.open.labels.indexOf(item) < 0;\r\n        // }));\r\n        // label = label.concat(payload.grafik.complete.labels.filter((item)=> {\r\n        //     return label.indexOf(item) < 0;\r\n        // }));\r\n        data = [payload.grafik.complete.series];\r\n        state.orderGraphic = {\r\n            label,\r\n            data\r\n        }\r\n\r\n    },\r\n    [mutation.SET_ROLE_PATH_ORDER](state, payload){\r\n        state.rolePath = payload\r\n    }\r\n};"]}]}