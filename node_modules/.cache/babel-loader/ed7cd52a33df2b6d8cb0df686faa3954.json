{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/order-client/detail-order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/order-client/detail-order.vue","mtime":1628175042628},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport OrderBar from \"../../../components/order/order-bar\";\nimport router from \"../../../router\";\nimport { mapGetters, mapMutations } from 'vuex';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport Swal from 'sweetalert2'; // import TrackingOrder from '../../pages/tracking/tracking'\n\nimport getters from \"../../../store/modules/enterprise/getters\";\nexport default {\n  data: function data() {\n    return {\n      alt: require(\"@/assets/images/avatar-2.jpg\"),\n      buttonTracking: false,\n      dialogVisible: false,\n      buttonCancel: false,\n      button: {\n        cancelVisible: 20,\n        spanVisible: 4\n      },\n      location: null,\n      map: {\n        taskname: '',\n        lastupdate: '',\n        taskphoto: null\n      },\n      payload: {\n        reason_cancelorder: \"\",\n        idorder: null\n      }\n    };\n  },\n  components: {\n    // TrackingOrder,\n    OrderBar: OrderBar\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    order: getter.GET_ORDER_DETAIL,\n    path: getter.GET_PATH,\n    loading: getter.GET_LOADING\n  })), {}, {\n    status: function status() {\n      if (this.order.order_status === 1) {\n        return \"ORDER_OPEN\";\n      }\n\n      if (this.order.order_status === 2) {\n        return \"ORDER_INPROGRESS\";\n      }\n\n      if (this.order.order_status === 3) {\n        return \"ORDER_COMPLETED\";\n      }\n\n      if (this.order.order_status === 4) {\n        return \"ORDER_MOVED\";\n      }\n\n      if (this.order.order_status === 5) {\n        return \"ORDER_CANCELED\";\n      }\n\n      if (this.order.order_status === 6) {\n        return \"ORDER_DELETED\";\n      }\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapMutations({\n    type: mutation.TRACKING_TYPE,\n    id: mutation.ID_ORDER,\n    pathType: mutation.SET_PATH\n  })), {}, {\n    editButton: function editButton() {},\n    enterpriseDriver: function enterpriseDriver() {},\n    backLCorp: function backLCorp() {\n      var objList = {\n        dataList: null,\n        nextC: null,\n        prevC: null,\n        firstP: null,\n        fromPA: null,\n        totalPE: null\n      };\n      router.replace('/order/open');\n      this.$store.commit(mutation.TRACKING_ORDER, objList);\n    },\n    cancelOrder: function () {\n      var _cancelOrder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$Swal$fire, reason;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Swal.fire({\n                  title: 'Enter the reason for cancellation',\n                  input: 'text',\n                  showCancelButton: true,\n                  confirmButtonColor: '#3085d6',\n                  cancelButtonColor: '#d33',\n                  confirmButtonText: 'Yes, Cancel it!',\n                  inputValidator: function inputValidator(value) {\n                    if (!value) {\n                      return 'You need to write something!';\n                    }\n                  }\n                });\n\n              case 2:\n                _yield$Swal$fire = _context.sent;\n                reason = _yield$Swal$fire.value;\n\n                if (reason) {\n                  this.payload.reason_cancelorder = reason;\n                  this.payload.idorder = this.order.idorder;\n                  this.$store.commit(mutation.SET_LOADING, true);\n                  this.$store.dispatch(action.CANCEL_ORDER, this.payload);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function cancelOrder() {\n        return _cancelOrder.apply(this, arguments);\n      }\n\n      return cancelOrder;\n    }(),\n    buttonSearch: function buttonSearch() {},\n    // idOrderButton(){\n    // router.replace('/order/tracking')\n    // },\n    imgAlt: function imgAlt(event) {\n      event.target.src = this.alt;\n    },\n    getId: function () {\n      var _getId = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {\n        var obj, _obj;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (id.attachment_url == \"\" || id.attachment_url == null) {\n                  this.map.taskphoto = null;\n                } else {\n                  this.map.taskphoto = id.attachment_url;\n                }\n\n                this.map.description = id.description;\n                this.map.taskname = id.name;\n                this.map.lastupdate = id.last_update_status;\n                this.map.required = id.is_required;\n                this.map.photo = id.is_need_photo;\n                this.map.inspector = id.is_need_inspector_validation;\n                this.dialogVisible = true;\n\n                if (!id.latitude == null || !id.latitude == \"\") {\n                  obj = {\n                    lat: Number(id.latitude),\n                    lng: Number(id.longitude)\n                  };\n                  this.location = obj;\n                } else if (!id.submit_latitude == null || !id.submit_latitude == \"\") {\n                  _obj = {\n                    lat: Number(id.submit_latitude),\n                    lng: Number(id.submit_longitude)\n                  };\n                  this.location = _obj;\n                } else {\n                  this.location = null;\n                }\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getId(_x) {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }()\n  }),\n  created: function created() {\n    this.type('task?idorder=');\n    this.id(this.order.idorder);\n    this.pathType(this.path);\n    var idrole = JSON.parse(localStorage.getItem('user')).idrole;\n\n    if (idrole === Number(process.env.VUE_APP_ROLE_DISPATCHER_ENTERPRISE) || idrole === Number(process.env.VUE_APP_ROLE_DISPATCHER_ENTERPRISE_PLUS)) {\n      if (this.order.order_status === 2) {\n        this.button.cancelVisible = 17;\n        this.button.spanVisible = 7;\n        this.buttonCancel = true;\n      } else {\n        this.buttonCancel = false;\n      }\n    }\n  }\n};",{"version":3,"sources":["detail-order.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <order-bar />\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"11\">\n                <el-row :gutter=\"20\" class=\"line margin-top-25\">\n                    <el-col :span=\"8\">\n                        <div class=\"avatar2 align-vertical text-center\">\n                        <img :src=\"order.driver.user.profile_picture\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\n                        </div>\n                    </el-col>\n                    <el-col :span=\"16\" style=\"overflow-wrap: break-word\">\n                        <span class=\"p-name\">{{ order.user_fullname }}</span>\n                        <span class=\"p\">{{order.user_phonenumber}}</span>\n                        <span class=\"p\">{{order.email}}</span>\n                    </el-col>\n                </el-row>\n            </el-col>\n            <el-col :span=\"13\">\n                <h3 class=\"margin-bottom-1 margin-top-0 margin-left-10\"> DETAIL </h3>\n                <el-row :gutter=\"30\">\n                    <el-col :span=\"8\">\n                        <dl>\n\n                            <dt>TRANSACTION ID</dt>\n                            <dd>{{ order.trx_id }}</dd>\n\n                            <dt>BOOKING TIME</dt>\n                            <dd>{{ order.booking_time }}</dd>\n                            </dl>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <dl>\n                            <dt> TYPE </dt>\n                            <dd>{{(order.enterprise !== null) ? order.enterprise.enterprise_type.name : '' }}</dd>\n\n                            <dt>PLACE</dt>\n                            <dd>{{order.driver.address}}</dd>\n                        </dl>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <dl>\n                            <dt>VEHICLE</dt>\n                            <dd> {{ order.vehicle_type }} </dd>\n\n                            <dt>POLICE NO.</dt>\n                            <dd> {{ order.client_vehicle_license }} </dd>\n                        </dl>\n                    </el-col>\n                </el-row>\n            </el-col>\n        </el-row>\n        <hr >\n\n        <el-row class=\"margin-top-25\">\n            <el-col :span=\"11\">\n                <h3>TASK</h3>\n                <!--<h1 class=\"font-size-40\">Lorem Ipsum</h1>-->\n            </el-col>\n\n            <el-col :span=\"8\" class=\"line\">\n                <dl>\n                    <dt>MESSAGE</dt>\n                    <dd style=\"overflow-wrap: break-word\">{{ `${order.message}` }}</dd>\n                </dl>\n            </el-col>\n            <el-col :span=\"5\"class=\"text-center\">\n                <span class=\"p font-weight-600 margin-bottom-10\">STATUS</span>\n                <div v-if=\"status === 'ORDER_INPROGRESS'\">\n                    <img src=\"../../../assets/oper_asset/progress.png\" alt=\"\" style=\"width: 20%\">\n                    <span class=\"p margin-top-10\">IN PROGRESS</span>\n                </div>\n                <div v-else>\n                    <img src=\"../../../assets/oper_asset/completed.png\" alt=\"\" style=\"width: 20%\">\n                    <span class=\"p margin-top-10\">COMPLETED</span>\n                </div>\n            </el-col>\n        </el-row>\n\n        <el-row>\n            <el-col :span=\"24\">\n                <el-table :data=\"order.order_tasks\" @row-click=\"getId\" stripe style=\"width: 100%\">\n                    <el-table-column\n                            prop=\"name\"\n                            label=\"TASK NAME\">\n                    </el-table-column>\n                    <el-table-column\n                            prop=\"description\"\n                            label=\"TASK DESCRIPTION\">\n                    </el-table-column>\n                    <el-table-column\n                            prop=\"last_update_status\"\n                            label=\"TIME\">\n                    </el-table-column>\n                    <el-table-column\n                            align=\"center\"\n                            width=\"100\"\n                            label=\"PHOTO\">\n                        <template slot-scope=\"scope\">\n                            <img style=\"width: 35px; height: 35px; border-radius: 50%\"\n                                 :src=\"scope.row.attachment_url\"\n                                 @error=\"imgAlt\">\n                        </template>\n                    </el-table-column>\n                    <el-table-column\n                            align=\"center\"\n                            label=\"STATUS\">\n                        <template slot-scope=\"scope\">\n                            {{(scope.row.order_task_status === 0) ? 'NOT STARTED'\n                            : (scope.row.order_task_status === 1) ? 'IN PROGRESS'\n                            : (scope.row.order_task_status === 2) ? 'COMPLETED'\n                            : 'SKIPPED'}}\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </el-col>\n        </el-row>\n\n        <el-row :gutter=\"20\">\n            <el-col :span=\"{span: button.spanVisible, offset:button.cancelVisible}\" style=\"margin-top: 20px;\">\n                <el-button @click=\"backLCorp\" type=\"info\" size=\"small\">\n                    <span class=\"padding-left-10 padding-right-10\">\n                        Back\n                    </span>\n                </el-button>\n                <el-button @click=\"cancelOrder\" v-if=\"buttonCancel\" size=\"small\" v-loading.fullscreen.lock=\"loading\" type=\"danger\">\n                    <span class=\"padding-left-10 padding-right-10\">\n                        Cancel Order\n                    </span>\n                </el-button>\n            </el-col>\n            <!--<el-col :span=\"{offset:18, span:2}\" style=\"display: flex; justify-content: flex-end\">-->\n            <!--<el-button type=\"danger\" @click=\"deleteB\">Delete</el-button>-->\n            <!--</el-col>-->\n        </el-row>\n    </div>\n    <el-dialog :visible.sync=\"dialogVisible\" width=\"70%\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"8\">\n                <div v-if='!map.taskphoto == null || !map.taskphoto == \"\"'>\n                    <el-card class=\"middle\" :body-style=\"{ padding: '0px' }\" style=\"width: 100%; height: 300px\">\n                        <div class=\"thumbnail\">\n                            <img class=\"potrait\" :src=\"map.taskphoto\">\n                        </div>\n                    </el-card>\n                </div>\n                <div v-else>\n                    <el-card class=\"middle\" :body-style=\"{ padding: '0px' }\" style=\"width: 100%; height: 300px\">\n                        <h3>User has not taken a picture</h3>\n                    </el-card>\n                </div>\n                <el-col :span=\"24\" style=\"margin-bottom: 5px\">\n                    <h3>\n                        <el-col :span=\"16\" style=\"margin-bottom: 10px\">Task Name</el-col>\n                    </h3>\n                    <el-col :span=\"20\">{{map.taskname}}</el-col>\n                </el-col>\n                <el-col :span=\"24\" style=\"margin-bottom: 5px\">\n                    <h3>\n                        <el-col :span=\"16\" style=\"margin-bottom: 10px\">Last Update</el-col>\n                    </h3>\n                    <el-col :span=\"20\">{{map.lastupdate}}</el-col>\n                </el-col>\n                <el-col :span=\"24\">\n                    <h3>\n                        <el-col :span=\"16\" style=\"margin-bottom: 10px\">Description</el-col>\n                    </h3>\n                    <el-col :span=\"20\">\n                        <span class=\"word-wrap\">{{map.description}}</span>\n                    </el-col>\n                </el-col>\n            </el-col>\n            <el-col :span=\"16\">\n                <div v-if=\"location\">\n                    <el-card :body-style=\"{ padding: '0px' }\" style=\"width: 100%; height: 500px\">\n                        <gmap-map ref=\"map\" :center=\"location\" :zoom=\"14\" :options=\"{gestureHandling:'cooperative'}\" map-type-id=\"roadmap\" style=\"width: 100%; height: 500px\">\n                            <GmapMarker :position=\"location\" label=\"S\" />\n                        </gmap-map>\n                    </el-card>\n                </div>\n                <div v-else>\n                    <el-card class=\"center\" :body-style=\"{ padding: '0px' }\" style=\"width: 100%; height: 500px\">\n\n                        <h1>User has not completed the task</h1>\n\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" style=\"margin-top: 10px\">\n            <el-col :offset=\"10\">\n                <el-checkbox :checked=\"map.required\" disabled>Is Required</el-checkbox>\n                <el-checkbox :checked=\"map.photo\" disabled>Is Required Photo</el-checkbox>\n                <el-checkbox :checked=\"map.inspector\" disabled>Is Required Inspector Validation</el-checkbox>\n            </el-col>\n        </el-row>\n    </el-dialog>\n</div>\n</template>\n\n<script>\n    import  OrderBar from '../../../components/order/order-bar'\n    import router from '../../../router'\n    import {\n        mapGetters,\n        mapMutations\n    } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as action from '../../../store/action-types'\n    import * as mutation from '../../../store/mutation-types'\n    import Swal from 'sweetalert2'\n    // import TrackingOrder from '../../pages/tracking/tracking'\n    import getters from '../../../store/modules/enterprise/getters';\n\nexport default {\n    data() {\n        return {\n            alt: require(\"@/assets/images/avatar-2.jpg\"),\n            buttonTracking: false,\n            dialogVisible: false,\n            buttonCancel: false,\n            button: {\n                cancelVisible: 20,\n                spanVisible: 4\n            },\n            location: null,\n            map: {\n                taskname: '',\n                lastupdate: '',\n                taskphoto: null,\n            },\n            payload: {\n                reason_cancelorder: \"\",\n                idorder: null,\n            },\n        };\n    },\n    components: {\n        // TrackingOrder,\n        OrderBar\n    },\n    computed: {\n        ...mapGetters({\n            order: getter.GET_ORDER_DETAIL,\n            path: getter.GET_PATH,\n            loading: getter.GET_LOADING\n        }),\n        status() {\n            if (this.order.order_status === 1) {\n                return \"ORDER_OPEN\"\n            }\n            if (this.order.order_status === 2) {\n                return \"ORDER_INPROGRESS\"\n            }\n            if (this.order.order_status === 3) {\n                return \"ORDER_COMPLETED\"\n            }\n            if (this.order.order_status === 4) {\n                return \"ORDER_MOVED\"\n            }\n            if (this.order.order_status === 5) {\n                return \"ORDER_CANCELED\"\n            }\n            if (this.order.order_status === 6) {\n                return \"ORDER_DELETED\"\n            }\n        }\n    },\n    methods: {\n        ...mapMutations({\n            type: mutation.TRACKING_TYPE,\n            id: mutation.ID_ORDER,\n            pathType: mutation.SET_PATH\n        }),\n        editButton() {},\n        enterpriseDriver() {},\n        backLCorp() {\n            let objList = {\n                dataList    : null,\n                nextC       : null,\n                prevC       : null,\n                firstP      : null,\n                fromPA      : null,\n                totalPE     : null\n            };\n            router.replace('/order/open')\n            this.$store.commit(mutation.TRACKING_ORDER, objList)\n        },\n        async cancelOrder() {\n            const {\n                value: reason\n            } = await Swal.fire({\n                title: 'Enter the reason for cancellation',\n                input: 'text',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, Cancel it!',\n                inputValidator: (value) => {\n                    if (!value) {\n                        return 'You need to write something!'\n                    }\n                }\n            })\n            if (reason) {\n                this.payload.reason_cancelorder = reason;\n                this.payload.idorder = this.order.idorder;\n                this.$store.commit(mutation.SET_LOADING, true)\n                this.$store.dispatch(action.CANCEL_ORDER, this.payload)\n            }\n        },\n        buttonSearch() {},\n        // idOrderButton(){\n\n        // router.replace('/order/tracking')\n        // },\n        imgAlt(event) {\n            event.target.src = this.alt;\n        },\n        async getId(id) {\n            if (id.attachment_url == \"\" || id.attachment_url == null) {\n                this.map.taskphoto = null\n            } else {\n                this.map.taskphoto = id.attachment_url\n            }\n            this.map.description = id.description\n            this.map.taskname = id.name\n            this.map.lastupdate = id.last_update_status\n            this.map.required = id.is_required\n            this.map.photo = id.is_need_photo\n            this.map.inspector = id.is_need_inspector_validation\n            this.dialogVisible = true\n            if (!id.latitude == null || !id.latitude == \"\") {\n                let obj = {\n                    lat: Number(id.latitude),\n                    lng: Number(id.longitude)\n                }\n                this.location = obj\n            } else if (!id.submit_latitude == null || !id.submit_latitude == \"\") {\n                let obj = {\n                    lat: Number(id.submit_latitude),\n                    lng: Number(id.submit_longitude)\n                }\n                this.location = obj\n            } else {\n                this.location = null\n            }\n\n        },\n    },\n     created() {\n        this.type('task?idorder=');\n        this.id(this.order.idorder);\n        this.pathType(this.path);\n        let idrole = JSON.parse(localStorage.getItem('user')).idrole\n        if (idrole === Number(process.env.VUE_APP_ROLE_DISPATCHER_ENTERPRISE) || idrole === Number(process.env.VUE_APP_ROLE_DISPATCHER_ENTERPRISE_PLUS)) {\n            if (this.order.order_status === 2) {\n                this.button.cancelVisible = 17;\n                this.button.spanVisible = 7;\n                this.buttonCancel = true;\n            } else {\n                this.buttonCancel = false;\n            }\n        }\n    }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"../../../assets/scss/_variables\";\n    hr {\n        border-top : 1px solid $line-color\n    }\n    .card-base {\n        padding: 20px;\n    }\n\n    .el-row {\n        padding: 0px 10px;\n\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n\n    .el-col {\n        border-radius: 5px;\n    }\n\n    .thumbnail {\n        border-radius: 0px;\n        position: relative;\n        width: 290px;\n        height: 300px;\n        overflow: hidden;\n    }\n\n    .thumbnail img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        height: 100%;\n        width: auto;\n        -webkit-transform: translate(-50%, -50%);\n        -ms-transform: translate(-50%, -50%);\n        transform: translate(-50%, -50%);\n    }\n\n    .thumbnail img.portrait {\n        width: 100%;\n        height: auto;\n    }\n\n    .h3 {\n        display: inline;\n    }\n    .p {\n        display: block;\n    }\n    .p-name {\n        display: block;\n        font-size: 2em;\n        font-weight: bold;\n        margin-top: 10px\n    }\n    .line {\n        border-right: 1px solid $line-color;\n    }\n    .word-wrap {\n        word-wrap: break-word;\n        overflow-wrap: break-word;\n    }\n\n    .center {\n        text-align: center;\n        vertical-align: middle;\n        line-height: 470px;\n    }\n\n    .middle {\n        text-align: center;\n        vertical-align: middle;\n        line-height: 280px;\n    }\n    .avatar2 {\n        img {\n            border: 1px solid transparentize($text-color, .9);\n            box-sizing: border-box;\n            width: 120px;\n            height: 120px;\n            border-radius: 50%;\n            transition: all .5s .25s;\n        }\n    }\n\n</style>\n"],"sourceRoot":"src/views/pages/order-client"}]}