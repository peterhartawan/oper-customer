{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\enterprise\\assignee-driver.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\enterprise\\assignee-driver.vue","mtime":1650382175189},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Affix from \"@/components/Affix\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nexport default {\n  name: \"ListDriverEnterprise\",\n  data: function data() {\n    return {\n      form: {\n        page: 1,\n        identerprise: '',\n        idplaces: '',\n        idvendor: '',\n        idrequest: null,\n        time: null,\n        unassign_ids: [],\n        userdata: [{\n          id: null,\n          idplaces: null\n        }]\n      },\n      currentPage: 1,\n      currentPageIndex: 0,\n      input: \"\",\n      affixEnabled: true,\n      indexT: 1,\n      checks: [],\n      options: null,\n      unassign_ids: [],\n      userid: null,\n      currentRow: null,\n      idOlx: null\n    };\n  },\n  components: {\n    Affix: Affix\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    listData: getter.GET_LIST_DRIVER_ASSIGNEE,\n    paginate: getter.GET_PAGINATE_DRIVER,\n    totalDriver: getter.GET_DRIVER_TOTAL,\n    dropDown: getter.GET_DROPDOWN_DRIVER,\n    enterprise: getter.ENTERPRISE,\n    button: getter.GET_BUTTON,\n    loading: getter.GET_LOADING,\n    selected_drivers: getter.GET_ASSIGNED_DRIVERS,\n    check_status: getter.GET_CHECK_STATUS,\n    selected_places: getter.GET_SELECTED_PLACES,\n    search_index: getter.GET_SEARCH_INDEX,\n    request_details: getter.GET_REQUEST_DETAILS\n  })), {}, {\n    paginator: function paginator() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    },\n    forTotal: function forTotal() {\n      if (this.listData) {\n        return this.totalDriver;\n      }\n    },\n    forPage: function forPage() {\n      return this.currentPage;\n    }\n  }),\n  mounted: function mounted() {\n    this.form.identerprise = this.enterprise.identerprise;\n    this.form.idvendor = JSON.parse(localStorage.getItem('user')).vendor_idvendor;\n    this.idOlx = process.env.VUE_APP_ID_VENDOR_OLX;\n\n    if (this.request_details) {\n      this.form.idplaces = this.request_details[0].place_id;\n      this.form.idrequest = this.request_details[0].id;\n      this.form.time = this.request_details[0].purpose_time;\n    } else {\n      this.form.idplaces = null;\n      this.form.idrequest = null;\n      this.form.time = null;\n    }\n\n    this.$store.commit(mutation.SET_LOADING, true);\n    this.$store.commit(mutation.RESET_ASSIGNED_DRIVERS);\n    this.$store.dispatch(action.DROPDOWN_D_ASSIGNEE, this.form);\n    this.$store.dispatch(action.LIST_DRIVER_ASSIGNEE, this.form);\n  },\n  methods: {\n    setCurrent: function setCurrent(row) {\n      this.$refs.assigneeTable.setCurrentRow(row);\n    },\n    selectChange: function selectChange(val) {\n      var numpage = Math.ceil(val / 10);\n      var indexOnPage = (val - 1) % 10;\n      this.$store.commit(mutation.SET_SEARCH_INDEX, indexOnPage);\n\n      if (this.currentPage != numpage) {\n        this.currentPage = numpage;\n        this.handlePageChange(this.currentPage);\n      } else {\n        this.setCurrent(this.listData[this.search_index]);\n      }\n    },\n    handlePageChange: function () {\n      var _handlePageChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(page) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.form.page = page;\n                this.currentPageIndex = (page - 1) * 10;\n                this.$store.commit(mutation.SET_LOADING, true);\n                _context.next = 5;\n                return this.$store.dispatch(action.LIST_DRIVER_ASSIGNEE, this.form);\n\n              case 5:\n                this.setCurrent(this.listData[this.search_index]);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handlePageChange(_x) {\n        return _handlePageChange.apply(this, arguments);\n      }\n\n      return handlePageChange;\n    }(),\n    Create: function Create() {\n      var _this = this;\n\n      this.form.userdata = [];\n      this.selected_drivers.forEach(function (element, index) {\n        var idplaces;\n\n        if (_this.selected_places[index] != null) {\n          idplaces = _this.selected_places[index].idplaces;\n        } else {\n          idplaces = null;\n        }\n\n        if (element != null) {\n          var id = element.users_id;\n          var userdata = {\n            id: id,\n            idplaces: idplaces\n          };\n\n          _this.form.userdata.push(userdata);\n        }\n      });\n      this.form.unassign_ids = [];\n      this.unassign_ids.forEach(function (element) {\n        if (element != null) {\n          var id = element.users_id;\n\n          _this.form.unassign_ids.push(id);\n        }\n      });\n      this.$store.commit(mutation.SET_LOADING, true);\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch(action.ASSIGN_DRIVER, this.form);\n    },\n    Back: function Back() {\n      this.$router.push({\n        path: \"/list-driver-enterprise/\" + this.enterprise.identerprise\n      });\n    },\n    Add: function Add(e) {\n      var pageToIndex = (this.form.page - 1) * 10;\n      var x = pageToIndex + e.$index;\n\n      if (this.selected_drivers[x] == null) {\n        this.selected_drivers[x] = e.row;\n        if (this.selected_places[x] == null) this.selected_drivers[x].places = this.selected_places[x];\n        if (e.row.client_enterprise_identerprise == this.form.identerprise) this.unassign_ids[x] = null;\n      } else {\n        this.selected_drivers[x] = null;\n        this.check_status[x] = false;\n        if (e.row.client_enterprise_identerprise == this.form.identerprise) this.unassign_ids[x] = e.row;\n      }\n    },\n    selectLocation: function selectLocation(e) {\n      var pageToIndex = (this.form.page - 1) * 10;\n      var x = pageToIndex + e.$index;\n\n      if (this.selected_drivers[x] == null) {\n        this.selected_drivers[x] = e.row;\n        this.selected_drivers[x].places = this.selected_places[x];\n        this.check_status[x] = true;\n        if (e.row.client_enterprise_identerprise == this.form.identerprise) this.unassign_ids[x] = null;\n      }\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var data;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.$store.dispatch(action.ASSIGNEE_LOCATION, this.enterprise.identerprise);\n\n            case 2:\n              data = _context2.sent;\n              this.options = data;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["assignee-driver.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">        \r\n        <el-row v-if=\"request_details\" :gutter=\"10\">\r\n            <p class=\"font-weight-600\">REQUEST DRIVER DETAILS</p>\r\n        </el-row>\r\n        <el-row v-if=\"request_details\" :gutter=\"10\">\r\n            <el-table\r\n            :data=\"request_details\"\r\n            style=\"width: 100%\"\r\n            >\r\n            <el-table-column\r\n                type=\"index\"\r\n                align=\"center\"\r\n                label=\"NO\"\r\n                width=\"60\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n                prop=\"enterprise.name\"\r\n                align=\"center\"\r\n                label=\"ENTERPRISE\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n                prop=\"place.name\"\r\n                align=\"center\"\r\n                label=\"LOKASI\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n                prop=\"date\"\r\n                header-align=\"center\"\r\n                align=\"center\"\r\n                label=\"TANGGAL\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n                prop=\"time\"\r\n                header-align=\"center\"\r\n                align=\"center\"\r\n                label=\"JAM\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n                prop=\"number_of_drivers\"\r\n                header-align=\"center\"\r\n                align=\"center\"\r\n                label=\"JUMLAH\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n                prop=\"note\"\r\n                header-align=\"center\"\r\n                align=\"center\"\r\n                label=\"NOTES\"\r\n            ></el-table-column>\r\n            </el-table>\r\n        </el-row>\r\n        <el-row :gutter=\"10\">\r\n            <p class=\"font-weight-600 mt-40\" align=\"center\">DRIVER LIST</p>\r\n        </el-row>\r\n        <el-row :gutter=\"10\">\r\n            <el-col :lg=\"4\">\r\n                <el-button @click=\"Back()\" style=\"width: 100%\">Back</el-button>\r\n            </el-col>\r\n            <el-col :lg=\"12\">\r\n                <el-select\r\n                    v-model=\"userid\"\r\n                    filterable\r\n                    placeholder=\"Driver Name\"\r\n                    @change=\"selectChange\"\r\n                >\r\n                    <el-option label=\"All Drivers\" value=\"0\">All Drivers</el-option>\r\n                    <el-option\r\n                    v-for=\"item in dropDown\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.numrow\"\r\n                    ></el-option>\r\n                </el-select>\r\n            </el-col>\r\n            <el-col :lg=\"8\">\r\n                <el-button :loading=\"button\" @click=\"Create\" style=\"width: 100%\" type=\"success\">Assign Driver To Enterprise</el-button>\r\n            </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"10\">\r\n            <el-col :lg=\"24\">\r\n                <el-table highlight-current-row ref=\"assigneeTable\" :data=\"listData\" style=\"width: 100%\" v-loading=\"loading\">\r\n                    <el-table-column type=\"index\" :index=\"paginate.fromP\" label=\"NO\" width=\"100\"></el-table-column>\r\n                    <el-table-column prop=\"name\" label=\"NAME\"></el-table-column>\r\n                    <el-table-column prop=\"phonenumber\" label=\"PHONE\"></el-table-column>\r\n                    <el-table-column prop=\"email\" label=\"EMAIL\"></el-table-column>\r\n                    <el-table-column prop=\"ce_name\" label=\"ENTERPRISE\"></el-table-column>\r\n                    <el-table-column v-if=\"this.form.idvendor != this.idOlx\" label=\"STAY LOCATION\">\r\n                        <template slot-scope=\"scope_location\">\r\n                            <el-select\r\n                                v-model=\"selected_places[currentPageIndex+scope_location.$index]\"\r\n                                filterable\r\n                                placeholder=\"Pilih Lokasi\"\r\n                                @change=\"selectLocation(scope_location)\"\r\n                            >\r\n                            <el-option\r\n                                v-for=\"item in options\"\r\n                                :key=\"item.value\"\r\n                                :label=\"item.name\"\r\n                                :value=\"item\"\r\n                            ></el-option>\r\n                            </el-select>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column fixed=\"right\" width=\"60\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-checkbox \r\n                                v-model=\"check_status[currentPageIndex+scope.$index]\"\r\n                                @change=\"Add(scope)\"\r\n                            ></el-checkbox>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n            </el-col>\r\n        </el-row>\r\n        <div align=\"right\">\r\n            <el-pagination :current-page.sync=\"currentPage\" background layout=\"prev, pager, next\" @current-change=\"handlePageChange\" :total=\"forTotal\"></el-pagination>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from '../../../store/mutation-types';\r\n\r\nexport default {\r\n    name: \"ListDriverEnterprise\",\r\n    data() {\r\n        return {\r\n            form: {\r\n                page: 1,\r\n                identerprise: '',\r\n                idplaces: '',\r\n                idvendor: '',\r\n                idrequest: null,\r\n                time: null,\r\n                unassign_ids: [],\r\n                userdata:[\r\n                    {\r\n                        id          : null,\r\n                        idplaces    : null\r\n                    }\r\n                ],\r\n            },\r\n            currentPage: 1,\r\n            currentPageIndex: 0,\r\n            input: \"\",\r\n            affixEnabled: true,\r\n            indexT: 1,\r\n            checks: [],\r\n            options: null,\r\n            unassign_ids: [],\r\n            userid: null,\r\n            currentRow: null,\r\n            idOlx: null\r\n        };\r\n    },\r\n    components: {\r\n        Affix\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            listData: getter.GET_LIST_DRIVER_ASSIGNEE,\r\n            paginate: getter.GET_PAGINATE_DRIVER,\r\n            totalDriver: getter.GET_DRIVER_TOTAL,\r\n            dropDown: getter.GET_DROPDOWN_DRIVER,\r\n            enterprise: getter.ENTERPRISE,\r\n            button: getter.GET_BUTTON,\r\n            loading: getter.GET_LOADING,\r\n            selected_drivers: getter.GET_ASSIGNED_DRIVERS,\r\n            check_status: getter.GET_CHECK_STATUS,\r\n            selected_places: getter.GET_SELECTED_PLACES,\r\n            search_index: getter.GET_SEARCH_INDEX,\r\n            request_details: getter.GET_REQUEST_DETAILS\r\n        }),\r\n        paginator() {\r\n            return this.paginate;\r\n        },\r\n        indexTam() {\r\n            return this.indexT;\r\n        },\r\n        forTotal() {\r\n            if (this.listData) {\r\n                return this.totalDriver;\r\n            }\r\n        },\r\n        forPage() {\r\n            return this.currentPage\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.form.identerprise = this.enterprise.identerprise\r\n        this.form.idvendor = JSON.parse(localStorage.getItem('user')).vendor_idvendor\r\n        this.idOlx = process.env.VUE_APP_ID_VENDOR_OLX\r\n        if(this.request_details){\r\n            this.form.idplaces = this.request_details[0].place_id\r\n            this.form.idrequest = this.request_details[0].id\r\n            this.form.time = this.request_details[0].purpose_time\r\n        } else {\r\n            this.form.idplaces = null\r\n            this.form.idrequest = null\r\n            this.form.time = null\r\n        }\r\n        this.$store.commit(mutation.SET_LOADING, true)\r\n        this.$store.commit(mutation.RESET_ASSIGNED_DRIVERS)\r\n        this.$store.dispatch(action.DROPDOWN_D_ASSIGNEE, this.form)\r\n        this.$store.dispatch(action.LIST_DRIVER_ASSIGNEE, this.form)\r\n    },\r\n\r\n    methods: {\r\n        setCurrent(row) {\r\n            this.$refs.assigneeTable.setCurrentRow(row)\r\n        },\r\n        selectChange(val){\r\n            let numpage = Math.ceil(val / 10)\r\n            let indexOnPage = (val - 1) % 10\r\n            this.$store.commit(mutation.SET_SEARCH_INDEX, indexOnPage)\r\n            if(this.currentPage != numpage){\r\n                this.currentPage = numpage\r\n                this.handlePageChange(this.currentPage)\r\n            } else {\r\n                this.setCurrent(this.listData[this.search_index])\r\n            }\r\n        },\r\n        async handlePageChange(page) {\r\n            this.form.page = page\r\n            this.currentPageIndex = (page - 1) * 10\r\n            this.$store.commit(mutation.SET_LOADING, true)\r\n            await this.$store.dispatch(action.LIST_DRIVER_ASSIGNEE, this.form)\r\n            this.setCurrent(this.listData[this.search_index])\r\n        },\r\n        Create() {\r\n            this.form.userdata = []\r\n            this.selected_drivers.forEach((element, index) => {\r\n                let idplaces\r\n                if(this.selected_places[index] != null){\r\n                    idplaces = this.selected_places[index].idplaces\r\n                } else {\r\n                    idplaces = null\r\n                }\r\n                if(element != null){\r\n                    let id = element.users_id\r\n                    var userdata = \r\n                        {\r\n                            id          : id,\r\n                            idplaces    : idplaces\r\n                        }\r\n                    this.form.userdata.push(userdata)\r\n                }\r\n            })\r\n            this.form.unassign_ids = []\r\n            this.unassign_ids.forEach((element) => {\r\n                if(element != null){\r\n                    let id = element.users_id\r\n                    this.form.unassign_ids.push(id)\r\n                }\r\n            })\r\n\r\n            this.$store.commit(mutation.SET_LOADING, true)\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            this.$store.dispatch(action.ASSIGN_DRIVER, this.form);\r\n        },\r\n        Back() {\r\n            this.$router.push({\r\n                path: \"/list-driver-enterprise/\" + this.enterprise.identerprise\r\n            });\r\n        },\r\n        Add(e) {\r\n            let pageToIndex = (this.form.page - 1) * 10\r\n            let x = pageToIndex + e.$index\r\n            if(this.selected_drivers[x] == null){\r\n                this.selected_drivers[x] = e.row\r\n                if(this.selected_places[x] == null)\r\n                    this.selected_drivers[x].places = this.selected_places[x]\r\n                if(e.row.client_enterprise_identerprise == this.form.identerprise)\r\n                    this.unassign_ids[x] = null\r\n            } else {\r\n                this.selected_drivers[x] = null\r\n                this.check_status[x] = false\r\n                if(e.row.client_enterprise_identerprise == this.form.identerprise)\r\n                    this.unassign_ids[x] = e.row\r\n            }\r\n        },\r\n        selectLocation(e){\r\n            let pageToIndex = (this.form.page - 1) * 10\r\n            let x = pageToIndex + e.$index\r\n            if(this.selected_drivers[x] == null){\r\n                this.selected_drivers[x] = e.row\r\n                this.selected_drivers[x].places = this.selected_places[x]\r\n                this.check_status[x] = true\r\n                if(e.row.client_enterprise_identerprise == this.form.identerprise)\r\n                    this.unassign_ids[x] = null\r\n            }\r\n        },\r\n    },\r\n    async created() {\r\n        let data = await this.$store.dispatch(action.ASSIGNEE_LOCATION, this.enterprise.identerprise)\r\n        this.options = data\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    // display: flex;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    padding: 0px 10px;\r\n    margin-bottom: 20px;\r\n    \r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.el-select {\r\n    width: 100%;\r\n}\r\n\r\n.thumbnail {\r\n    position: relative;\r\n    width: 300px;\r\n    height: 300px;\r\n    overflow: hidden;\r\n}\r\n\r\n.thumbnail img {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    height: 100%;\r\n    width: auto;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    -ms-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.thumbnail img.portrait {\r\n    width: 100%;\r\n    height: auto;\r\n}\r\n\r\na {\r\n    border-style: dotted;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n    height: 150px;\r\n}\r\n\r\ntd {\r\n    padding: 10px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/pages/enterprise"}]}