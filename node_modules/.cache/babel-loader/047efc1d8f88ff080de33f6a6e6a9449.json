{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/tracking/index.js","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/tracking/index.js","mtime":1640440454972},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444342},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _mutations, _actions, _getters;\n\nimport * as action from \"../../action-types\";\nimport * as mutation from \"../../mutation-types\";\nimport * as getter from \"../../getters-types\";\nimport localAxios from \"../../../services/http/client\";\nimport * as typeS from \"../../../services/path_service\";\nimport swal from \"../order-client/action\";\nvar state = {\n  listTracking: null,\n  paginate: {\n    nextClick: null,\n    prevClick: null,\n    firstPage: null,\n    fromP: null\n  },\n  trackingType: null,\n  trackingAtt: null\n};\nvar mutations = (_mutations = {}, _defineProperty(_mutations, mutation.TRACKING_ORDER, function (state, payload) {\n  state.listTracking = payload.dataList;\n  state.paginate.nextClick = payload.nextC;\n  state.paginate.prevClick = payload.prevC;\n  state.paginate.firstPage = payload.firstP;\n  state.paginate.fromP = payload.fromPA;\n  state.paginate.totalP = payload.totalPE;\n}), _defineProperty(_mutations, mutation.TRACKING_TYPE, function (state, payload) {\n  state.trackingType = payload;\n}), _defineProperty(_mutations, mutation.TRACKING_ATTENDANCE, function (state, payload) {\n  state.trackingAtt = payload.dataList;\n}), _mutations);\nvar actions = (_actions = {}, _defineProperty(_actions, action.TRACKING, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, payload) {\n    var commit, dispatch, token, _yield$localAxios$get, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit, dispatch = _ref.dispatch;\n            _context.prev = 1;\n            token = localStorage.getItem('token');\n            _context.next = 5;\n            return localAxios.get(\"\".concat(typeS.tracking).concat(payload.type).concat(payload.id, \"&page=\").concat(payload.page, \"&limit=1000\"), {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get = _context.sent;\n            data = _yield$localAxios$get.data;\n            objList = {\n              dataList: data.data.data,\n              nextC: data.data.next_page_url,\n              prevC: data.data.prev_page_url,\n              firstP: data.data.first_page_url,\n              fromPA: data.data.from,\n              totalPE: data.data.total\n            };\n            commit(mutation.TRACKING_ORDER, objList);\n            commit(mutation.BUTTON_STATUS, false);\n            _context.next = 17;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}()), _defineProperty(_actions, action.TRACKING_ATTENDANCE, function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3, payload) {\n    var commit, dispatch, token, _yield$localAxios$get2, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref3.commit, dispatch = _ref3.dispatch;\n            _context2.prev = 1;\n            token = localStorage.getItem('token');\n            _context2.next = 5;\n            return localAxios.get('/tracking/attendance/?idattendance=' + payload + '&limit=100', {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get2 = _context2.sent;\n            data = _yield$localAxios$get2.data;\n            objList = {\n              dataList: data.data.data\n            };\n            commit(mutation.SET_LOADING, false);\n            commit(mutation.TRACKING_ATTENDANCE, objList);\n            commit(mutation.BUTTON_STATUS, false);\n            _context2.next = 19;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](1);\n            commit(mutation.SET_LOADING, false);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context2.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context2.t0);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 13]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}()), _actions);\nvar getters = (_getters = {}, _defineProperty(_getters, getter.GET_TRACKING_PAGINATE, function (state) {\n  return state.paginate;\n}), _defineProperty(_getters, getter.GET_TRACKING_ORDER, function (state) {\n  return state.listTracking;\n}), _defineProperty(_getters, getter.GET_TRACKING_TYPE, function (state) {\n  return state.trackingType;\n}), _defineProperty(_getters, getter.GET_TRACKING_ATTENDANCE, function (state) {\n  return state.trackingAtt;\n}), _getters);\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/tracking/index.js"],"names":["action","mutation","getter","localAxios","typeS","swal","state","listTracking","paginate","nextClick","prevClick","firstPage","fromP","trackingType","trackingAtt","mutations","TRACKING_ORDER","payload","dataList","nextC","prevC","firstP","fromPA","totalP","totalPE","TRACKING_TYPE","TRACKING_ATTENDANCE","actions","TRACKING","commit","dispatch","token","localStorage","getItem","get","tracking","type","id","page","headers","data","objList","next_page_url","prev_page_url","first_page_url","from","total","BUTTON_STATUS","response","message","DATA_ERROR","SET_LOADING","getters","GET_TRACKING_PAGINATE","GET_TRACKING_ORDER","GET_TRACKING_TYPE","GET_TRACKING_ATTENDANCE"],"mappings":"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","sourcesContent":["import * as action from '../../action-types'\nimport * as mutation from '../../mutation-types'\nimport * as getter from '../../getters-types'\nimport localAxios from \"../../../services/http/client\";\nimport * as typeS from '../../../services/path_service'\nimport swal from \"../order-client/action\";\n\nconst state = {\n    listTracking: null,\n    paginate : {\n        nextClick   : null,\n        prevClick   : null,\n        firstPage   : null,\n        fromP       : null\n    },\n    trackingType    : null,\n    trackingAtt     : null,\n};\n\nconst mutations = {\n    [mutation.TRACKING_ORDER](state, payload){\n        state.listTracking         = payload.dataList\n        state.paginate.nextClick    = payload.nextC\n        state.paginate.prevClick    = payload.prevC\n        state.paginate.firstPage    = payload.firstP\n        state.paginate.fromP        = payload.fromPA\n        state.paginate.totalP       = payload.totalPE\n    },\n    [mutation.TRACKING_TYPE](state, payload){\n        state.trackingType  = payload\n    },\n    [mutation.TRACKING_ATTENDANCE](state, payload){\n        state.trackingAtt         = payload.dataList\n    }\n};\n\nconst actions = {\n    async [action.TRACKING]({commit, dispatch}, payload) {\n        try {\n            let token = localStorage.getItem('token');\n            let {data} = await localAxios.get(`${typeS.tracking}${payload.type}${payload.id}&page=${payload.page}&limit=1000`,\n                {\n                    headers: {'Authorization': 'Bearer ' + token}\n                });\n            let objList = {\n                dataList : data.data.data,\n                nextC   : data.data.next_page_url,\n                prevC   : data.data.prev_page_url,\n                firstP  : data.data.first_page_url,\n                fromPA  : data.data.from,\n                totalPE : data.data.total\n            };\n            commit(mutation.TRACKING_ORDER, objList )\n            commit(mutation.BUTTON_STATUS, false)\n        } catch (err) {\n            commit(mutation.BUTTON_STATUS, false)\n            swal(err.response.data.message, '', 'error')\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.TRACKING_ATTENDANCE]({commit, dispatch}, payload) {\n        try {\n            let token = localStorage.getItem('token');\n            let {data} = await localAxios.get('/tracking/attendance/?idattendance='+payload+'&limit=100',\n                {\n                    headers: {'Authorization': 'Bearer ' + token}\n                });\n            let objList = {\n                dataList : data.data.data,\n            }\n            \n            commit(mutation.SET_LOADING, false);\n            commit(mutation.TRACKING_ATTENDANCE, objList )\n            commit(mutation.BUTTON_STATUS, false)\n        } catch (err) {\n            commit(mutation.SET_LOADING, false);\n            commit(mutation.BUTTON_STATUS, false)\n            swal(err.response.data.message, '', 'error')\n            dispatch(action.DATA_ERROR, err)\n        }\n    }\n};\n\nconst getters = {\n    [getter.GET_TRACKING_PAGINATE](state){\n        return state.paginate\n    },\n    [getter.GET_TRACKING_ORDER](state) {\n        return state.listTracking\n    },\n    [getter.GET_TRACKING_TYPE](state){\n        return state.trackingType\n    },\n    [getter.GET_TRACKING_ATTENDANCE](state){\n        return state.trackingAtt\n    }\n};\n\nexport default {\n    state,\n    mutations,\n    actions,\n    getters\n}"]}]}