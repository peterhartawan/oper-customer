{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/components/employee/total-account.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/components/employee/total-account.vue","mtime":1640440454000},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444000},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1641690444038},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1641690456354}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../router\";\nimport Swal from 'sweetalert2';\nimport Contacts from '@/assets/data/CONTACTS_MOCK_DATA.json';\nimport { mapGetters, mapActions } from 'vuex';\nimport * as getter from \"../../store/getters-types\";\nimport * as action from \"../../store/action-types\";\nimport * as mutation from \"../../store/mutation-types\";\nexport default {\n  name: 'Contacts',\n  data: function data() {\n    return {\n      currentPage: 1,\n      status: 1,\n      type: '',\n      search: '',\n      dialogvisible: false,\n      pageWidth: 0,\n      userdata: {},\n      contacts: Contacts.slice(0, 30),\n      options: [{\n        value: 'Option1',\n        label: 'Option1'\n      }, {\n        value: 'Option2',\n        label: 'Option2',\n        disabled: true\n      }, {\n        value: 'Option3',\n        label: 'Option3'\n      }, {\n        value: 'Option4',\n        label: 'Option4'\n      }, {\n        value: 'Option5',\n        label: 'Option5'\n      }],\n      alt: 'require(\"@/assets/images/avatar-2.jpg\");',\n      value: '',\n      input4: '',\n      centerDialogVisible: false,\n      form: {\n        name: '',\n        photo: '',\n        photo_2: '',\n        status: '',\n        company: '',\n        phone: '',\n        email: '',\n        address: '',\n        nik: '',\n        id: '',\n        users_id: '',\n        gender: '',\n        job: ''\n      },\n      payload: {\n        reason_suspend: \"\",\n        users_id: null,\n        status: null,\n        page: 1\n      },\n      select: [{\n        name: \"ACTIVE\",\n        status: 1\n      }, {\n        name: \"INACTIVE\",\n        status: 2\n      }, {\n        name: \"SUSPENDED\",\n        status: 3\n      }]\n    };\n  },\n  methods: {\n    searchChange: function searchChange(v) {\n      var trimName = this.input4.trim();\n\n      if (trimName.length > 0) {\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        this.$store.dispatch(action.LIST_EMPLOYEE, {\n          page: 1,\n          employee_search: trimName,\n          status: this.status\n        });\n      } else {\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        this.$store.dispatch(action.LIST_EMPLOYEE, {\n          page: 1,\n          employee_search: trimName,\n          status: this.status\n        });\n      }\n    },\n    newDispatcher: function newDispatcher() {\n      this.$router.replace('new-dispatcher');\n    },\n    imgAlt: function imgAlt(event) {\n      event.target.src = require(\"../../assets/images/avatar-2.jpg\");\n    },\n    handlePageChange: function handlePageChange(page) {\n      this.currentPage = page;\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch(action.LIST_EMPLOYEE, {\n        page: this.currentPage,\n        status: this.status\n      });\n    },\n    filterStatus: function () {\n      var _filterStatus = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(status) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.status = status;\n                _context.next = 4;\n                return this.$store.dispatch(action.LIST_EMPLOYEE, {\n                  page: 1,\n                  status: this.status\n                });\n\n              case 4:\n                this.formData();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function filterStatus(_x) {\n        return _filterStatus.apply(this, arguments);\n      }\n\n      return filterStatus;\n    }(),\n    openDialog: function openDialog(data) {\n      // this.form.photos = data.profile_pictures;\n      this.form.phone = data.phonenumber;\n      this.form.email = data.email;\n      this.form.nik = data.nik;\n      this.form.photo = data.profile_picture;\n      this.form.id = data.idemployee;\n      this.form.name = data.name;\n      this.form.address = data.address;\n      this.form.birthdate = data.birthdate;\n      this.form.users_id = data.users_id;\n      this.form.status = data.status;\n      this.form.job = data.employee_position.job_name;\n      this.form.gender = data.gender;\n      this.form.photo_2 = data.profil_picture_2;\n    },\n    additionalImage: function additionalImage() {\n      if (this.form.photo_2 === null) {\n        this.form.photo_2 = this.alt;\n      }\n\n      this.centerDialogVisible = true;\n    },\n    deleteB: function () {\n      var _deleteB = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Swal.fire({\n                  title: 'Are you sure?',\n                  text: \"You won't be able to revert this!\",\n                  type: 'warning',\n                  showCancelButton: true,\n                  confirmButtonColor: '#3085d6',\n                  cancelButtonColor: '#d33',\n                  confirmButtonText: 'Yes, delete it!'\n                }).then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(result) {\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!result.value) {\n                              _context2.next = 8;\n                              break;\n                            }\n\n                            _this.payload.users_id = _this.form.users_id;\n                            _this.payload.status = _this.form.status;\n\n                            _this.$store.commit(mutation.BUTTON_STATUS, true);\n\n                            _this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n\n                            _this.$store.dispatch(action.DELETE_EMPLOYEE, _this.payload);\n\n                            _context2.next = 8;\n                            return _this.dataBeforeCreated();\n\n                          case 8:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function deleteB() {\n        return _deleteB.apply(this, arguments);\n      }\n\n      return deleteB;\n    }(),\n    resendActivation: function resendActivation() {\n      var obj = {\n        pin_type: \"/employee/resend-pin\",\n        id: this.form.users_id\n      };\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch(action.RESEND_PIN, obj);\n    },\n    activeButton: function () {\n      var _activeButton = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Swal.fire({\n                  title: \"Are you sure?\",\n                  type: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, activate it!\"\n                }).then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(result) {\n                    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            if (!result.value) {\n                              _context4.next = 8;\n                              break;\n                            }\n\n                            _this2.payload.users_id = _this2.form.users_id;\n                            _this2.payload.status = _this2.form.status;\n\n                            _this2.$store.commit(mutation.BUTTON_STATUS, true);\n\n                            _this2.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n\n                            _context4.next = 7;\n                            return _this2.$store.dispatch(action.ACTIVATE_EMPLOYEE, _this2.payload);\n\n                          case 7:\n                            _this2.dataBeforeCreated();\n\n                          case 8:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x3) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function activeButton() {\n        return _activeButton.apply(this, arguments);\n      }\n\n      return activeButton;\n    }(),\n    CreateEmployee: function CreateEmployee() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$router.push({\n        name: \"NewEmployee\"\n      });\n    },\n    Position: function Position() {\n      this.$router.push({\n        name: \"ListPosition\"\n      });\n    },\n    suspendButton: function () {\n      var _suspendButton = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var _yield$Swal$fire, reason;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Swal.fire({\n                  title: 'Enter the reason of suspending',\n                  input: 'text',\n                  showCancelButton: true,\n                  confirmButtonColor: '#3085d6',\n                  cancelButtonColor: '#d33',\n                  confirmButtonText: 'Yes, suspend it!',\n                  inputValidator: function inputValidator(value) {\n                    if (!value) {\n                      return 'You need to write something!';\n                    }\n                  }\n                });\n\n              case 2:\n                _yield$Swal$fire = _context6.sent;\n                reason = _yield$Swal$fire.value;\n\n                if (!reason) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                this.payload.reason_suspend = reason;\n                this.payload.users_id = this.form.users_id;\n                this.payload.status = this.form.status;\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context6.next = 11;\n                return this.$store.dispatch(action.SUSPEND_EMPLOYEE, this.payload);\n\n              case 11:\n                this.dataBeforeCreated();\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function suspendButton() {\n        return _suspendButton.apply(this, arguments);\n      }\n\n      return suspendButton;\n    }(),\n    editButton: function () {\n      var _editButton = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.$store.commit(mutation.BUTTON_STATUS, false);\n                _context7.next = 3;\n                return this.$store.dispatch(action.DETAIL_EMPLOYEE, this.form.id);\n\n              case 3:\n                router.push({\n                  path: \"/edit-employee/\" + this.form.id\n                });\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function editButton() {\n        return _editButton.apply(this, arguments);\n      }\n\n      return editButton;\n    }(),\n    formData: function formData() {\n      // this.form.photos = this.listData[0].profile_pictures;\n      this.form.phone = this.listData[0].phonenumber;\n      this.form.email = this.listData[0].email;\n      this.form.id = this.listData[0].idemployee;\n      this.form.nik = this.listData[0].nik;\n      this.form.photo = this.listData[0].profile_picture;\n      this.form.name = this.listData[0].name;\n      this.form.address = this.listData[0].address;\n      this.form.birthdate = this.listData[0].birthdate;\n      this.form.users_id = this.listData[0].id;\n      this.form.status = this.listData[0].status;\n      this.form.job = this.listData[0].employee_position.job_name;\n      this.form.gender = parseInt(this.listData[0].gender);\n      this.form.photo_2 = this.listData[0].profil_picture_2;\n    },\n    dataBeforeCreated: function () {\n      var _dataBeforeCreated = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.$store.dispatch(action.LIST_EMPLOYEE, {\n                  page: this.currentPage,\n                  status: this.status\n                });\n\n              case 2:\n                if (this.listData !== null) {\n                  if (this.listData.length > 0) {\n                    this.formData();\n                  }\n                }\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function dataBeforeCreated() {\n        return _dataBeforeCreated.apply(this, arguments);\n      }\n\n      return dataBeforeCreated;\n    }()\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              this.$store.commit(mutation.BUTTON_STATUS, true);\n              this.dataBeforeCreated();\n\n            case 2:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this.$store.dispatch(action.ACCOUNT_EMPLOYEE);\n\n            case 2:\n              if (this.listData !== null) {\n                if (this.listData.length > 0) {\n                  this.formData();\n                }\n              }\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    total: getter.GET_EMPLOYEE_TOTAL,\n    listData: getter.GET_LIST_EMPLOYEE,\n    paginate: getter.GET_PAGINATE_EMPLOYEE,\n    loading: getter.GET_BUTTON,\n    totalEmployee: getter.GET_ACCOUNT_EMPLOYEE,\n    buttonDelete: getter.GET_BUTTON_DELETE,\n    buttonResendPIN: getter.GET_BUTTON_RESEND_PIN,\n    buttonActive: getter.GET_BUTTON_ACTIVE,\n    buttonSuspend: getter.GET_BUTTON_SUSPEND,\n    buttonEdit: getter.GET_BUTTON_EDIT\n  })), {}, {\n    contactsFiltered: function contactsFiltered() {\n      var _this3 = this;\n\n      return this.contacts.filter(function (_ref3) {\n        var full_name = _ref3.full_name,\n            email = _ref3.email,\n            phone = _ref3.phone;\n        return (full_name + email + phone).toString().toLowerCase().indexOf(_this3.search.toString().toLowerCase()) !== -1;\n      });\n    },\n    contactsClass: function contactsClass() {\n      return this.pageWidth >= 870 ? 'large' : this.pageWidth >= 760 ? 'medium' : 'small';\n    },\n    forTotal: function forTotal() {\n      if (this.listData) {\n        return this.total;\n      }\n    }\n  }),\n  paginato: function paginato() {\n    return this.paginate;\n  },\n  indexTam: function indexTam() {\n    return this.indexT;\n  }\n};",{"version":3,"sources":["total-account.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"container mb-200\">\n    <p class=\"font-weight-600\">ACCOUNT</p>\n    <el-row :gutter=\"50\">\n        <el-col :span=\"17\">\n            <el-card shadow=\"always\" :body-style=\"{padding: '5px'}\" class=\"card-border\">\n                <el-row :gutter=\"20\" v-if=\"totalEmployee !== null\">\n                    <el-col :span=\"8\">\n                        <div class=\"line\">\n                            <p class=\"pb-20 font-weight-600 mt-8\">TOTAL EMPLOYEE</p>\n                            <span class=\"font-size-44 font-weight-600\">{{totalEmployee.total_driver}}</span>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <div class=\"line\">\n                            <p class=\"pb-20 font-weight-600 mt-8\">ACTIVE ACCOUNT</p>\n                            <span class=\"font-size-44 font-weight-600\">{{totalEmployee.total_driver_active}}</span>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <div class=\"text-center\">\n                            <p class=\"pb-20 font-weight-600 mt-8\">SUSPENDED ACCOUNT</p>\n                            <span class=\"font-size-44 font-weight-600\">{{totalEmployee.total_driver_suspend}}</span>\n                        </div>\n                    </el-col>\n                </el-row>\n            </el-card>\n        </el-col>\n        <el-col :span=\"3\">\n            <el-button @click=\"CreateEmployee\" shadow=\"always\" :body-style=\"{padding: '10px'}\" class=\"card-border plus-bg text-center\">\n                <i class=\"mdi mdi-plus font-size-60 font-weight-500 white-text\"></i>\n                <span class=\"text-p\">Add New</span>\n                <span class=\"text-p\">Employee</span>\n            </el-button>\n        </el-col>\n         <el-col :span=\"2\">\n            <el-button @click=\"Position\" shadow=\"always\" :body-style=\"{padding: '10px'}\" class=\"card-border plus-bg2 text-center\">\n                <i class=\"mdi mdi-clipboard-account font-size-60 font-weight-500 white-text\"></i>\n                <span class=\"text-p\">List</span>\n                <span class=\"text-p\">Position</span>\n            </el-button>\n        </el-col>\n    </el-row>\n\n    <p class=\"font-weight-600 mt-40\">INFO</p>\n    <el-row class=\"mt-20\">\n        <el-card shadow=\"always\" class=\"card-border\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"12\" class=\"line-not-center\">\n                    <div class=\"avatar2 align-vertical text-center\">\n                        <img :src=\"form.photo\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\n                        <h1 class=\"name-of\">{{ form.name }}</h1>\n                        <span>\n                            <h3>{{form.status == 1 ? 'ACTIVE' : (form.status == 2 ? 'INACTIVE' : 'SUSPENDED')}}</h3>\n                        </span>\n                    </div>\n                    <el-row type=\"flex\" justify=\"center\">\n                        <el-col :span=\"9\">\n                            <div>\n                                <dl>\n                                    <dt>PHONE</dt>\n                                    <dd>{{ form.phone }}</dd>\n                                    <dt>TYPE</dt>\n                                    <dd>{{ form.job }}</dd>\n                                    <dt>GENDER</dt>\n                                    <dd>{{form.gender == 1 ? 'Male' : 'Female'}}</dd>\n                                    <dt>EMAIL</dt>\n                                    <dd>{{ form.email }}</dd>\n                                </dl>\n                            </div>\n                        </el-col>\n                        <el-col :span=\"9\">\n                            <div>\n                                <dl>\n                                    <dt>BIRTHDATE</dt>\n                                    <dd>{{ form.birthdate }}</dd>\n                                    <dt v-if=\"form.address !== ''\">ADDRESS</dt>\n                                    <dd>{{ form.address }}</dd>\n                                    <dt>NIK</dt>\n                                    <dd>{{ form.nik }}</dd>\n                                </dl>\n                            </div>\n                        </el-col>\n                    </el-row>\n                    <el-row type=\"flex\" justify=\"center\" class=\"mt-10\">\n                        <el-col :span=\"12\">\n                            <el-button @click=\"editButton\" type=\"info\" size=\"small\" class=\"small-edit\">Edit</el-button>\n                            <el-button @click=\"additionalImage\" plain type=\"success\" size=\"small\" >Additional Image</el-button>\n                        </el-col>\n                        <el-col :span=\"12\">\n                            <el-button type=\"danger\" size=\"small\" @click=\"suspendButton\" :loading=\"buttonSuspend\" v-if=\"status === 1\">Suspend</el-button>\n                            <el-button type=\"success\" size=\"small\" @click=\"resendActivation\" :loading=\"buttonResendPIN\" v-if=\"status === 2\">Resend Activation</el-button>\n                            <el-button type=\"danger\" size=\"small\" @click=\"deleteB\" :loading=\"buttonDelete\" v-if=\"status === 3\"> Delete </el-button>\n                            <el-button type=\"primary\" size=\"small\" @click=\"activeButton\" :loading=\"buttonActive\" v-if=\"status === 3\">Activate</el-button>\n                        </el-col>\n                    </el-row>\n                </el-col>\n                <el-col :span=\"12\">\n                    <el-row type=\"flex\" justify=\"center\" :gutter=\"20\" class=\"mt-10\">\n                        <el-col :span=\"10\">\n                            <el-input size=\"mini\" placeholder=\"Search\" @keyup.native=\"searchChange\" v-model=\"input4\">\n                                <i slot=\"suffix\" class=\"el-input__icon el-icon-search\"></i>\n                            </el-input>\n                        </el-col>\n                        <el-col :span=\"6\">\n                            <el-select @change=\"filterStatus\" v-model=\"status\" filterable size=\"mini\" placeholder=\"All Status\">\n                                <el-option v-for=\"item in select\" :key=\"item.status\" :label=\"item.name\" :value=\"item.status\">\n                                </el-option>\n                            </el-select>\n                        </el-col>\n                    </el-row>\n                    <div class=\"contacts-list box grow scrollable only-y\" v-loading=\"loading\">\n                        <el-row :gutter=\"20\">\n                            <div v-for=\"c in listData\" :key=\"c.id\" class=\"flex contact\" @click=\"openDialog(c)\">\n                                <div class=\"avatar align-vertical el-col el-col-4\">\n                                    <img :src=\"c.profile_picture\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\n                                </div>\n                                <div class=\"info box grow flex el-col el-col-20\">\n                                            <div class=\"name box grow flex column justify-center p-10 scrollable only-x\">\n                                                <div class=\"fullname fs-18\"><strong>{{c.name}}</strong></div>\n                                                <div class=\"phone fs-14 secondary-text\">{{c.phonenumber}}</div>\n                                                <div class=\"email fs-14 secondary-text\">{{c.email}}</div>\n                                            </div>\n                                            <div class=\"phone align-vertical p-10\" style=\"color: green\" v-if=\"c.status === 1\"><span class=\"align-vertical-middle font-weight-600\">ACTIVE</span></div>\n                                            <div class=\"phone align-vertical p-10\" v-if=\"c.status === 2\"><span class=\"align-vertical-middle font-weight-600\">IN ACTIVE</span></div>\n                                            <div class=\"phone align-vertical p-10\" style=\"color: red\" v-if=\"c.status === 3\"><span class=\"align-vertical-middle font-weight-600\">SUSPENDED</span></div>\n                                </div>\n                            </div>\n                        </el-row>\n                        <div class=\"grid-content\">\n                            <el-pagination background layout=\"prev, pager, next\" @current-change=\"handlePageChange\" :total=\"forTotal\">\n                            </el-pagination>\n                        </div>\n                    </div>\n                </el-col>\n            </el-row>\n        </el-card>\n    </el-row>\n    <el-dialog\n            :visible.sync=\"centerDialogVisible\"\n            width=\"20%\"\n            center>\n            <img\n                    style=\"width: 100%\"\n                    :src=\"form.photo_2\"\n                    alt=\"user avatar\"\n                    @error=\"imgAlt\">\n    </el-dialog>\n</div>\n</template>\n\n<script>\nimport router from '../../router'\nimport Swal from 'sweetalert2'\nimport Contacts from '@/assets/data/CONTACTS_MOCK_DATA.json'\nimport {\n    mapGetters,\n    mapActions\n} from 'vuex'\nimport * as getter from '../../store/getters-types'\nimport * as action from '../../store/action-types'\nimport * as mutation from '../../store/mutation-types'\n\nexport default {\n    name: 'Contacts',\n    data() {\n        return {\n            currentPage: 1,\n            status: 1,\n            type: '',\n            search: '',\n            dialogvisible: false,\n            pageWidth: 0,\n            userdata: {},\n            contacts: Contacts.slice(0, 30),\n            options: [{\n                value: 'Option1',\n                label: 'Option1'\n            }, {\n                value: 'Option2',\n                label: 'Option2',\n                disabled: true\n            }, {\n                value: 'Option3',\n                label: 'Option3'\n            }, {\n                value: 'Option4',\n                label: 'Option4'\n            }, {\n                value: 'Option5',\n                label: 'Option5'\n            }],\n            alt: 'require(\"@/assets/images/avatar-2.jpg\");',\n            value: '',\n            input4: '',\n            centerDialogVisible: false,\n            form: {\n                name: '',\n                photo: '',\n                photo_2: '',\n                status: '',\n                company: '',\n                phone: '',\n                email: '',\n                address: '',\n                nik: '',\n                id: '',\n                users_id: '',\n                gender: '',\n                job: '',\n            },\n            payload: {\n                reason_suspend: \"\",\n                users_id: null,\n                status: null,\n                page: 1,\n            },\n            select: [{\n                    name: \"ACTIVE\",\n                    status: 1,\n                },\n                {\n                    name: \"INACTIVE\",\n                    status: 2,\n                },\n                {\n                    name: \"SUSPENDED\",\n                    status: 3\n                }\n            ],\n        }\n    },\n    methods: {\n        searchChange(v) {\n            let trimName = this.input4.trim()\n            if (trimName.length > 0) {\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.$store.dispatch(action.LIST_EMPLOYEE, {\n                    page: 1,\n                    employee_search: trimName,\n                    status: this.status\n                });\n            } else {\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.$store.dispatch(action.LIST_EMPLOYEE, {\n                    page: 1,\n                    employee_search: trimName,\n                    status: this.status\n                });\n            }\n        },\n        newDispatcher() {\n            this.$router.replace('new-dispatcher')\n        },\n        imgAlt(event) {\n            event.target.src = require(\"../../assets/images/avatar-2.jpg\");\n        },\n        handlePageChange(page) {\n            this.currentPage = page\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.$store.dispatch(action.LIST_EMPLOYEE, {\n                page: this.currentPage,\n                status: this.status\n            });\n        },\n        async filterStatus(status) {\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.status = status;\n            await this.$store.dispatch(action.LIST_EMPLOYEE, {\n                page: 1,\n                status: this.status\n            });\n            this.formData()\n        },\n        openDialog(data) {\n            // this.form.photos = data.profile_pictures;\n            this.form.phone = data.phonenumber;\n            this.form.email = data.email;\n            this.form.nik = data.nik;\n            this.form.photo = data.profile_picture;\n            this.form.id = data.idemployee;\n            this.form.name = data.name;\n            this.form.address = data.address;\n            this.form.birthdate = data.birthdate;\n            this.form.users_id = data.users_id;\n            this.form.status = data.status;\n            this.form.job = data.employee_position.job_name;\n            this.form.gender = data.gender;\n            this.form.photo_2 = data.profil_picture_2;\n        },\n        additionalImage(){\n            if(this.form.photo_2 === null){ this.form.photo_2 = this.alt}\n            this.centerDialogVisible = true\n        },\n        async deleteB() {\n            await Swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, delete it!'\n            }).then( async result => {\n                if (result.value) {\n                    this.payload.users_id = this.form.users_id;\n                    this.payload.status = this.form.status;\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n                    this.$store.dispatch(action.DELETE_EMPLOYEE, this.payload)\n                    await this.dataBeforeCreated();\n                }\n            });\n        },\n        resendActivation() {\n            let obj = {\n                pin_type: \"/employee/resend-pin\",\n                id: this.form.users_id\n            };\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            this.$store.dispatch(action.RESEND_PIN, obj);\n        },\n        async activeButton() {\n            await Swal.fire({\n                title: \"Are you sure?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, activate it!\"\n            }).then( async result => {\n                if (result.value) {\n                    this.payload.users_id = this.form.users_id;\n                    this.payload.status = this.form.status;\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    this.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n                    await this.$store.dispatch(action.ACTIVATE_EMPLOYEE, this.payload);\n                    this.dataBeforeCreated();\n                }\n            });\n        },\n        CreateEmployee() {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$router.push({\n                name: \"NewEmployee\"\n            });\n        },\n        Position() {\n            this.$router.push({\n                name: \"ListPosition\"\n            });\n        },\n        async suspendButton() {\n            const {\n                value: reason\n            } = await Swal.fire({\n                title: 'Enter the reason of suspending',\n                input: 'text',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, suspend it!',\n                inputValidator: (value) => {\n                    if (!value) {\n                        return 'You need to write something!'\n                    }\n                }\n            });\n            if (reason) {\n                this.payload.reason_suspend = reason;\n                this.payload.users_id = this.form.users_id;\n                this.payload.status = this.form.status;\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                await this.$store.dispatch(action.SUSPEND_EMPLOYEE, this.payload);\n                this.dataBeforeCreated();\n            }\n        },\n        async editButton() {\n            this.$store.commit(mutation.BUTTON_STATUS, false);\n            await this.$store.dispatch(action.DETAIL_EMPLOYEE, this.form.id);\n            router.push({\n                path: `/edit-employee/` + this.form.id\n            });\n        },\n        formData(){\n            // this.form.photos = this.listData[0].profile_pictures;\n            this.form.phone = this.listData[0].phonenumber;\n            this.form.email = this.listData[0].email;\n            this.form.id = this.listData[0].idemployee;\n            this.form.nik = this.listData[0].nik;\n            this.form.photo = this.listData[0].profile_picture;\n            this.form.name = this.listData[0].name;\n            this.form.address = this.listData[0].address;\n            this.form.birthdate = this.listData[0].birthdate;\n            this.form.users_id = this.listData[0].id;\n            this.form.status = this.listData[0].status;\n            this.form.job = this.listData[0].employee_position.job_name;\n            this.form.gender = parseInt(this.listData[0].gender);\n            this.form.photo_2 = this.listData[0].profil_picture_2;\n        },\n        async dataBeforeCreated(){\n            await this.$store.dispatch(action.LIST_EMPLOYEE, {\n                page: this.currentPage,\n                status: this.status\n            });\n            if (this.listData !== null) {\n                if (this.listData.length > 0) {\n                    this.formData();\n                }\n            }\n        }\n    },\n    async created() {\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.dataBeforeCreated()\n    },\n    async mounted() {\n        await this.$store.dispatch(action.ACCOUNT_EMPLOYEE)\n        if (this.listData !== null) {\n            if (this.listData.length > 0) {\n                this.formData();\n            }\n        }\n    },\n    computed: {\n        ...mapGetters({\n            total           : getter.GET_EMPLOYEE_TOTAL,\n            listData        : getter.GET_LIST_EMPLOYEE,\n            paginate        : getter.GET_PAGINATE_EMPLOYEE,\n            loading         : getter.GET_BUTTON,\n            totalEmployee   : getter.GET_ACCOUNT_EMPLOYEE,\n            buttonDelete    : getter.GET_BUTTON_DELETE,\n            buttonResendPIN : getter.GET_BUTTON_RESEND_PIN,\n            buttonActive    : getter.GET_BUTTON_ACTIVE,\n            buttonSuspend   : getter.GET_BUTTON_SUSPEND,\n            buttonEdit      : getter.GET_BUTTON_EDIT\n        }),\n        contactsFiltered() {\n            return this.contacts.filter(({\n                full_name,\n                email,\n                phone\n            }) => (full_name + email + phone).toString().toLowerCase().indexOf(this.search.toString().toLowerCase()) !== -1)\n        },\n        contactsClass() {\n            return this.pageWidth >= 870 ? 'large' : this.pageWidth >= 760 ? 'medium' : 'small'\n        },\n        forTotal() {\n            if (this.listData) {\n                return this.total;\n            }\n        }\n    },\n    paginato() {\n        return this.paginate\n    },\n    indexTam() {\n        return this.indexT\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/scss/_variables\";\n\n.card-border {\n    border-radius: 11px;\n}\n\n.line-not-center {\n    border-right: 3px solid #3333;\n}\n\n.line {\n    border-right: 3px solid #3333;\n    text-align: center;\n}\n\n.text-p {\n    display: block;\n    color: white;\n    font-weight: 600;\n}\n\n.plus-bg {\n    background-color: #a31424;\n    height: 139px;\n\n}\n.plus-bg2 {\n    background-color: #e64a19\n\n;\n    height: 139px;\n\n}\n\n.avatar {\n    img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 60px;\n        height: 60px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n    }\n}\n\n.avatar2 {\n    img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 120px;\n        height: 120px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n    }\n}\n\n.name-of {\n    margin-bottom: 10px;\n    color: #a31424;\n}\n\n.contacts-list {\n    //margin: 0 auto;\n    height: 600px;\n    width: 100%;\n    max-width: 965px;\n    padding: 0px 30px;\n    box-sizing: border-box;\n\n    .contact {\n        margin: 10px 0;\n        padding: 5px;\n        box-sizing: border-box;\n        cursor: pointer;\n        border-bottom: 1px solid $text-color-info;\n    }\n}\n\n.small-edit {\n    width: 90px;\n}\n</style>\n<style lang=\"scss\">\n.el-pagination.is-background .el-pager li:not(.disabled).active {\n    background-color: #D50000 !important;\n}\n</style>\n"],"sourceRoot":"src/components/employee"}]}