{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\pages\\enterprise\\detail-enterprise.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\pages\\enterprise\\detail-enterprise.vue","mtime":1644413760531},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/update-cancel-order-ui/oper-customer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/ASUS/Documents/GitHub/update-cancel-order-ui/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../../router\";\nimport { mapGetters } from 'vuex';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport Swal from 'sweetalert2';\nimport PopupDispatcher from \"../../../components/enterprise/popup_dispatcher\";\nimport PopupAdmin from \"../../../components/enterprise/popup_admin\";\nimport enterprise from \"../../../router/enterprise\";\nexport default {\n  components: {\n    PopupDispatcher: PopupDispatcher,\n    PopupAdmin: PopupAdmin\n  },\n  data: function data() {\n    return {\n      nameOfCorp: null,\n      corporateOfPhone: null,\n      corporateVendor: null,\n      corporateAdress: null,\n      corporateEmail: null,\n      corporateType: null,\n      corporateOAddress: null,\n      dispatcherMount: null,\n      buttonStatus: null,\n      dialogTableVisible: false,\n      currentPage: 1,\n      payload: {\n        identerprise: null,\n        page: 1,\n        reason_suspend: null\n      },\n      enterpriseStatus: null,\n      offsetV: null,\n      offsetY: null,\n      offsetActive: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    enterprise: getter.ENTERPRISE,\n    adminEnterprise: getter.ADMIN_ENTERPRISE,\n    button: getter.GET_BUTTON,\n    profile: getter.GET_DATA_PROFILE\n  })), {}, {\n    showAdmin: function showAdmin() {\n      if (this.profile.idrole === 1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var userProfile, i;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userProfile = JSON.parse(localStorage.getItem('user')).idrole;\n              this.buttonStatus = userProfile === 1;\n              this.payload.identerprise = this.enterprise.identerprise; // let obj = {\n              //     role: 4,\n              //     page: 1\n              // };\n\n              if (this.buttonStatus) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return this.$store.dispatch(action.DISPATCHER_AVAILABLE);\n\n            case 6:\n              this.enterprise.enterprise_type.identerprise_type === 2 ? this.dispatcherMount = true : this.dispatcherMount = false;\n\n              for (i = 0; i < this.enterprise.admins.length; i++) {\n                if (this.enterprise.admins[i].status === 2 || this.enterprise.status === 2) {\n                  this.enterpriseStatus = true;\n                  this.offsetV = 9;\n                  this.offsetY = 7;\n                  this.offsetActive = 8;\n                } else {\n                  this.enterpriseStatus = false;\n                  this.offsetV = 9;\n                  this.offsetY = 11;\n                  this.offsetActive = 12;\n                }\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    inspector: function () {\n      var _inspector = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$store.commit(mutation.SET_LOADING, true);\n                _context2.next = 3;\n                return this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise);\n\n              case 3:\n                router.replace('/pic-task-list');\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function inspector() {\n        return _inspector.apply(this, arguments);\n      }\n\n      return inspector;\n    }(),\n    templateTask: function templateTask() {\n      router.replace('/template-list');\n      this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise);\n    },\n    addButton: function addButton() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      router.replace(\"/new-admin-enterprise/\".concat(this.enterprise.identerprise));\n    },\n    editAdmin: function editAdmin(e) {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$store.commit(mutation.SET_DATA_ADMIN_ENTERPRISE, e);\n      this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise);\n      router.replace('/edit-admin');\n    },\n    resendActivation: function resendActivation() {\n      var obj = {\n        page: '/enterprise',\n        id: this.payload.identerprise\n      };\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch(action.RESEND_LINK_ACTIVATION, obj);\n    },\n    created: function () {\n      var _created2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var userProfile, obj;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                userProfile = JSON.parse(localStorage.getItem('user')).idrole;\n                this.buttonStatus = userProfile === 1;\n                this.payload.identerprise = this.enterprise.identerprise;\n                obj = {\n                  role: 4,\n                  page: 1\n                };\n\n                if (this.buttonStatus) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                _context3.next = 7;\n                return this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\n\n              case 7:\n                this.enterprise.enterprise_type.identerprise_type === 2 ? this.dispatcherMount = true : this.dispatcherMount = false;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function created() {\n        return _created2.apply(this, arguments);\n      }\n\n      return created;\n    }(),\n    deleteB: function deleteB() {\n      var _this = this;\n\n      Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(function (result) {\n        if (result.value) {\n          _this.$store.dispatch(action.DELETE_CORP_ID, _this.enterprise.identerprise);\n        }\n      });\n    },\n    activeButton: function activeButton() {\n      var _this2 = this;\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, activate it!\"\n      }).then(function (result) {\n        if (result.value) {\n          _this2.$store.dispatch(action.ACTIVATE_ENTERPRISE, _this2.payload);\n        }\n      });\n    },\n    suspend: function () {\n      var _suspend = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$Swal$fire, reason;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Swal.fire({\n                  title: 'Enter the reason of suspending',\n                  input: 'text',\n                  showCancelButton: true,\n                  confirmButtonColor: '#3085d6',\n                  cancelButtonColor: '#d33',\n                  confirmButtonText: 'Yes, suspend it!',\n                  inputValidator: function inputValidator(value) {\n                    if (!value) {\n                      return 'You need to write something!';\n                    }\n                  }\n                });\n\n              case 2:\n                _yield$Swal$fire = _context4.sent;\n                reason = _yield$Swal$fire.value;\n\n                if (reason) {\n                  this.payload.reason_suspend = reason;\n                  this.$store.dispatch(action.SUSPEND_ENTERPRISE, this.payload);\n                }\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function suspend() {\n        return _suspend.apply(this, arguments);\n      }\n\n      return suspend;\n    }(),\n    editCorp: function editCorp(item) {\n      router.push({\n        path: \"/edit-enterprise/\".concat(item)\n      });\n    },\n    enterpriseDriver: function enterpriseDriver() {\n      router.push({\n        path: \"/list-driver-enterprise/\" + this.enterprise.identerprise\n      });\n    },\n    backLCorp: function backLCorp() {\n      router.replace('/enterprise');\n    },\n    location: function () {\n      var _location = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.$store.dispatch(action.LIST_LOCATION, this.payload);\n                this.$router.replace({\n                  path: \"/location-enterprise/\" + this.enterprise.identerprise\n                });\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function location() {\n        return _location.apply(this, arguments);\n      }\n\n      return location;\n    }()\n  }\n};",{"version":3,"sources":["detail-enterprise.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<!--<vue-scroll class=\"page-typography\">-->\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <p class=\"font-weight-600 mt-40\">INFO</p>\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-row :gutter=\"20\">\r\n            <el-button @click=\"backLCorp\">Back</el-button>\r\n            <center>\r\n                <div class=\"greyh3\">\r\n                    <el-col :span=\"7\">\r\n                        <h3>COMPANY</h3>\r\n                        <el-col>\r\n                            <div v-if='enterprise.image_logo == \"\" || enterprise.image_logo == null'>\r\n                                <img src=\"../../../../src/assets/images/Oper_Logo_Landscape_Red.png\" class=\"image middle\">\r\n                            </div>\r\n                            <div v-else>\r\n                                <img :src=\"enterprise.image_logo\" class=\"image\">\r\n                            </div>\r\n                        </el-col>\r\n                    </el-col>\r\n                    <el-col :span=\"1\">\r\n                        <br>\r\n                        <el-col>\r\n                            <div class=\"vl\"></div>\r\n                        </el-col>\r\n                    </el-col>\r\n                    <div v-if=\"enterprise.enterprise_type.identerprise_type == 2\">\r\n                        <el-col :span=\"8\">\r\n                            <h3>DISPATCHER</h3>\r\n                            <div v-if=\"enterprise.dispatcher\">\r\n                                <el-col :span=\"8\">\r\n                                    <PopupDispatcher :identerprise=\"enterprise.identerprise\" :picture=\"enterprise.dispatcher.profile_picture\">\r\n                                    </PopupDispatcher>\r\n                                </el-col>\r\n                            </div>\r\n                            <div v-else>\r\n                                <el-col style=\"width: 100%\" :span=\"8\">\r\n                                    <PopupDispatcher :identerprise=\"enterprise.identerprise\" :picture=\"99\">\r\n                                    </PopupDispatcher>\r\n                                </el-col>\r\n                            </div>\r\n                            <el-col :span=\"15\">\r\n                                <div class=\"left\">\r\n                                    <br>\r\n                                    <div v-if=\"enterprise.dispatcher\">\r\n                                        <b>{{enterprise.dispatcher.name}}</b>\r\n                                        <br>\r\n                                        <span style=\"font-size: 14px; word-wrap: break-word;\">\r\n                                            {{enterprise.vendor.name}}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </el-col>\r\n                        </el-col>\r\n                        <el-col :span=\"8\" style=\"margin-left: -60px\">\r\n                            <h3>ADMIN</h3>\r\n                            <el-col :span=\"8\">\r\n                                <div v-if='enterprise.admins[0].profile_picture == \"\" || enterprise.admins[0].profile_picture == null'>\r\n                                    <PopupAdmin>\r\n                                    </PopupAdmin>\r\n                                </div>\r\n                                <div v-else>\r\n                                    <PopupAdmin>\r\n                                    </PopupAdmin>\r\n                                </div>\r\n                            </el-col>\r\n                            <el-col :span=\"16\">\r\n                                <div class=\"right\" style=\"margin-top: 30px\">\r\n                                    <b>{{enterprise.admins[0].name}}</b>\r\n                                    <br>\r\n                                    <span style=\"font-size: 14px\">\r\n                                        {{enterprise.admins[0].phonenumber}}\r\n                                        <br>\r\n                                        <span style=\"font-size: 12px; word-wrap: break-word;\">\r\n                                            {{enterprise.admins[0].email}}\r\n                                        </span>\r\n                                        <br>\r\n                                        {{enterprise.vendor.name}}\r\n                                    </span>\r\n                                </div>\r\n                            </el-col>\r\n                        </el-col>\r\n                    </div>\r\n                    <div v-else>\r\n                        <el-col :span=\"16\">\r\n                            <h3>ADMIN</h3>\r\n                            <el-col :span=\"8\">\r\n                                <PopupAdmin>\r\n                                </PopupAdmin>\r\n                            </el-col>\r\n                            <el-col :span=\"16\">\r\n                                <div class=\"right\" style=\"margin-top: 30px\">\r\n                                    <b>{{enterprise.admins[0].name}}</b>\r\n                                    <br>\r\n                                    <span style=\"font-size: 14px\">\r\n                                        {{enterprise.admins[0].phonenumber}}\r\n                                        <br>\r\n                                        <span style=\"font-size: 12px; word-wrap: break-word;\">\r\n                                               {{enterprise.admins[0].email}}\r\n                                        </span>\r\n                                        <br>\r\n                                        {{enterprise.vendor.name}}\r\n                                    </span>\r\n                                </div>\r\n                            </el-col>\r\n                        </el-col>\r\n                    </div>\r\n                </div>\r\n            </center>\r\n        </el-row>\r\n        <el-row style=\"margin-top: 20px\" :gutter=\"20\">\r\n            <el-col :span=\"8\">\r\n                <b>NAME</b>\r\n                <br>\r\n                {{enterprise.name}}\r\n                <br>\r\n                <br>\r\n                <b>PHONE</b>\r\n                <br>\r\n                {{enterprise.office_phone}}\r\n                <br>\r\n                <br>\r\n                <b>EMAIL</b>\r\n                <br>\r\n                <span style=\"word-wrap: break-word;\">\r\n                    {{enterprise.email}}\r\n                </span>\r\n                <br>\r\n                <br>\r\n                <b>ADDRESS</b>\r\n                <br>\r\n                <span style=\"word-wrap: break-word;\">\r\n                    {{enterprise.office_address}}\r\n                </span>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <b>VENDOR</b>\r\n                <br>\r\n                {{enterprise.vendor.name}}\r\n                <br>\r\n                <br>\r\n                <b>TYPE</b>\r\n                <br>\r\n                <span style=\"text-transform: capitalize;\">\r\n                    {{enterprise.enterprise_type.name}}\r\n                </span>\r\n                <br>\r\n                <br>\r\n                <b>DESCRIPTION</b>\r\n                <br>\r\n                <span style=\"word-wrap: break-word;\">\r\n                    {{enterprise.description}}\r\n                </span>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <br><br><br><br><br>\r\n                <div v-if=\"buttonStatus\">\r\n                    <el-row>\r\n                        <el-button @click=\"inspector\" style=\"width: 100%; border-color: #f4f4f5;\" type=\"info\" plain>\r\n                            <span style=\" text-align: justify;\">\r\n                                <h2>&nbsp; Inspector</h2>\r\n                            </span>\r\n                        </el-button>\r\n                    </el-row>\r\n                    <el-row style=\"margin-top: 10px;\">\r\n                        <el-button @click=\"templateTask\" style=\"width: 100%; border-color: #f4f4f5;\" type=\"info\" plain>\r\n                            <span style=\" text-align: justify;\">\r\n                                <h2>&nbsp; Template Task</h2>\r\n                            </span>\r\n                        </el-button>\r\n                    </el-row>\r\n                </div>\r\n                <div v-else>\r\n                    <el-row>\r\n                        <el-button @click=\"enterpriseDriver\" style=\"width: 100%; border-color: #f4f4f5;\" type=\"info\" plain>\r\n                            <span style=\" text-align: justify;\">\r\n                                <h2><img src=\"../../../assets/oper_asset/driver_grey.png\" class=\"drive-acount\">&nbsp; Driver List</h2>\r\n                            </span>\r\n                        </el-button>\r\n                    </el-row>\r\n                    <el-row style=\"margin-top: 10px;\">\r\n                        <el-button @click=\"location\" style=\"width: 100%; border-color: #f4f4f5;\" type=\"info\" plain>\r\n                            <span style=\" text-align: justify;\">\r\n                                <h2><i class=\"mdi mdi-map-marker mdi-36px\"></i>&nbsp; List Location</h2>\r\n                            </span>\r\n                        </el-button>\r\n                    </el-row>\r\n                </div>\r\n            </el-col>\r\n            <el-col :span=\"24\" style=\"margin-top: 20px\">\r\n                <div v-if=\"buttonStatus\">\r\n                    <el-col :lg=\"offsetV\">\r\n                        <el-button type=\"primary\" @click=\"editCorp(enterprise.identerprise)\">Edit</el-button>\r\n                    </el-col>\r\n                    <!-- <el-col :offset=\"1\" :span=\"6\">\r\n                    <el-button type=\"danger\" @click=\"deleteB\" v-if=\"buttonStatus\">Delete</el-button>\r\n                </el-col> -->\r\n                    <div v-if=\"enterpriseStatus\">\r\n                        <el-col :offset=\"2\" :lg=\"2\">\r\n                            <el-button type=\"success\" @click=\"resendActivation\">Resend Activation</el-button>\r\n                        </el-col>\r\n                    </div>\r\n                    <div v-if=\"enterprise.status==1\">\r\n                        <el-col :offset=\"offsetY\" :lg=\"4\">\r\n                            <el-button style=\"width: 100%\" type=\"danger\" @click=\"suspend\">Suspend</el-button>\r\n                        </el-col>\r\n                    </div>\r\n                    <div v-else-if=\"enterprise.status==3 || enterprise.status===2\">\r\n                        <el-col :offset=\"offsetActive\" :lg=\"3\">\r\n                            <el-button style=\"width: 100%\" @click=\"activeButton\" type=\"success\">Activate</el-button>\r\n                        </el-col>\r\n                    </div>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</div>\r\n<!--</vue-scroll>-->\r\n</template>\r\n\r\n<script>\r\nimport router from '../../../router'\r\nimport {\r\n    mapGetters\r\n} from 'vuex'\r\nimport * as getter from '../../../store/getters-types'\r\nimport * as action from '../../../store/action-types'\r\nimport * as mutation from '../../../store/mutation-types'\r\nimport Swal from 'sweetalert2'\r\nimport PopupDispatcher from '../../../components/enterprise/popup_dispatcher'\r\nimport PopupAdmin from '../../../components/enterprise/popup_admin'\r\nimport enterprise from '../../../router/enterprise';\r\n\r\nexport default {\r\n    components: {\r\n        PopupDispatcher,\r\n        PopupAdmin\r\n    },\r\n    data() {\r\n        return {\r\n            nameOfCorp: null,\r\n            corporateOfPhone: null,\r\n            corporateVendor: null,\r\n            corporateAdress: null,\r\n            corporateEmail: null,\r\n            corporateType: null,\r\n            corporateOAddress: null,\r\n            dispatcherMount: null,\r\n            buttonStatus: null,\r\n            dialogTableVisible: false,\r\n            currentPage: 1,\r\n            payload: {\r\n                identerprise: null,\r\n                page: 1,\r\n                reason_suspend: null,\r\n            },\r\n            enterpriseStatus: null,\r\n            offsetV: null,\r\n            offsetY: null,\r\n            offsetActive: null,\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            enterprise: getter.ENTERPRISE,\r\n            adminEnterprise: getter.ADMIN_ENTERPRISE,\r\n            button: getter.GET_BUTTON,\r\n            profile: getter.GET_DATA_PROFILE\r\n        }),\r\n        showAdmin() {\r\n            if (this.profile.idrole === 1) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n    },\r\n    async created() {\r\n        let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\r\n        this.buttonStatus = userProfile === 1;\r\n        this.payload.identerprise = this.enterprise.identerprise;\r\n        // let obj = {\r\n        //     role: 4,\r\n        //     page: 1\r\n        // };\r\n        if (!this.buttonStatus) {\r\n            await this.$store.dispatch(action.DISPATCHER_AVAILABLE);\r\n        }\r\n        (this.enterprise.enterprise_type.identerprise_type === 2) ? this.dispatcherMount = true: this.dispatcherMount = false;\r\n\r\n        for (let i = 0; i < this.enterprise.admins.length; i++) {\r\n            if (this.enterprise.admins[i].status === 2 || this.enterprise.status === 2) {\r\n                this.enterpriseStatus = true;\r\n                this.offsetV = 9\r\n                this.offsetY = 7\r\n                this.offsetActive = 8\r\n            } else {\r\n                this.enterpriseStatus = false;\r\n                this.offsetV = 9\r\n                this.offsetY = 11\r\n                this.offsetActive = 12\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async inspector() {\r\n            this.$store.commit(mutation.SET_LOADING, true);\r\n            await this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n            router.replace('/pic-task-list')\r\n        },\r\n        templateTask() {\r\n            router.replace('/template-list')\r\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n        },\r\n        addButton() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            router.replace(`/new-admin-enterprise/${this.enterprise.identerprise}`)\r\n        },\r\n        editAdmin(e) {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$store.commit(mutation.SET_DATA_ADMIN_ENTERPRISE, e);\r\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n            router.replace('/edit-admin')\r\n        },\r\n        resendActivation() {\r\n            let obj = {\r\n                page: '/enterprise',\r\n                id: this.payload.identerprise\r\n            }\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            this.$store.dispatch(action.RESEND_LINK_ACTIVATION, obj)\r\n        },\r\n        async created() {\r\n            let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\r\n            this.buttonStatus = userProfile === 1;\r\n            this.payload.identerprise = this.enterprise.identerprise;\r\n            let obj = {\r\n                role: 4,\r\n                page: 1\r\n            };\r\n            if (!this.buttonStatus) {\r\n                await this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\r\n            }\r\n            (this.enterprise.enterprise_type.identerprise_type === 2) ? this.dispatcherMount = true: this.dispatcherMount = false;\r\n        },\r\n        deleteB() {\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"You won't be able to revert this!\",\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!'\r\n            }).then((result) => {\r\n                if (result.value) {\r\n                    this.$store.dispatch(action.DELETE_CORP_ID, this.enterprise.identerprise)\r\n                }\r\n            })\r\n        },\r\n        activeButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, activate it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.dispatch(action.ACTIVATE_ENTERPRISE, this.payload);\r\n                }\r\n            });\r\n        },\r\n        async suspend() {\r\n            const {\r\n                value: reason\r\n            } = await Swal.fire({\r\n                title: 'Enter the reason of suspending',\r\n                input: 'text',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, suspend it!',\r\n                inputValidator: (value) => {\r\n                    if (!value) {\r\n                        return 'You need to write something!'\r\n                    }\r\n                }\r\n            })\r\n            if (reason) {\r\n                this.payload.reason_suspend = reason;\r\n                this.$store.dispatch(action.SUSPEND_ENTERPRISE, this.payload)\r\n            }\r\n        },\r\n        editCorp(item) {\r\n            router.push({\r\n                path: `/edit-enterprise/${item}`\r\n            })\r\n        },\r\n        enterpriseDriver() {\r\n\r\n            router.push({\r\n                path: `/list-driver-enterprise/` + this.enterprise.identerprise\r\n            })\r\n        },\r\n        backLCorp() {\r\n            router.replace('/enterprise')\r\n\r\n        },\r\n        async location() {\r\n            this.$store.dispatch(action.LIST_LOCATION, this.payload);\r\n            this.$router.replace({\r\n                path: \"/location-enterprise/\" + this.enterprise.identerprise\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    padding: 0px 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.greyh3 h3 {\r\n    color: #A9A9A9;\r\n}\r\n\r\n.image {\r\n    max-width: 100%;\r\n    height: 150px;\r\n    display: block;\r\n}\r\n\r\n.vl {\r\n    border-left: 3px solid #f2f2f2;\r\n    height: 90%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.avatar {\r\n    border-radius: 50%;\r\n    max-width: 80px;\r\n    height: 80px;\r\n    border: 1px solid #fff;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    box-shadow: 0 2px 5px 0 rgba(49, 49, 93, 0.1),\r\n        0 1px 2px 0 rgba(0, 0, 0, 0.08);\r\n    transition: box-shadow 0.5s;\r\n}\r\n\r\n.left {\r\n    text-align: left;\r\n    position: absolute;\r\n    top: 50%;\r\n    max-width: 150px;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.right {\r\n    text-align: left;\r\n    position: absolute;\r\n    top: 50%;\r\n    max-width: 250px;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.middle {\r\n    margin-top: -30px\r\n}\r\n\r\n.drive-acount {\r\n    height: 39px;\r\n    margin-top: -11px;\r\n    margin-bottom: -10px;\r\n}\r\n\r\n.hoverhand:hover {\r\n    cursor: pointer;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/pages/enterprise"}]}