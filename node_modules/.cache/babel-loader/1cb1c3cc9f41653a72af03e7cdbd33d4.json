{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\components\\enterprise\\popup_multi_dispatcher.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\components\\enterprise\\popup_multi_dispatcher.vue","mtime":1652829068516},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport * as getter from \"../../store/getters-types\";\nimport * as action from \"../../store/action-types\";\nimport Swal from 'sweetalert2';\nimport * as mutation from \"../../store/mutation-types\";\nexport default {\n  props: ['identerprise', 'picture'],\n  data: function data() {\n    return {\n      currentPage: 1,\n      dialogTableVisible: false,\n      form: {\n        assignEnterprise: this.identerprise,\n        search: ''\n      },\n      firstLoad: true,\n      buttonSearchPress: false,\n      showFinalList: false,\n      applyDisabled: true,\n      selected_dispatcher_ids: [],\n      unassign_dispatcher_ids: [],\n      final_dispatcher_list: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    paginate: getter.GET_PAGINATE_DISPATCHER,\n    listData: getter.GET_DISPATCHER_AVAILABLE,\n    loading: getter.GET_BUTTON,\n    default_dispatchers: getter.GET_SELECTED_DISPATCHERS\n  })), {}, {\n    paginato: function paginato() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    },\n    vendor: function vendor() {\n      var idrole = JSON.parse(localStorage.getItem('user')).idrole;\n\n      if (idrole === 2) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }),\n  methods: {\n    apply: function apply() {\n      this.final_dispatcher_list = [];\n      var ld = this.listData;\n      var dd = this.default_dispatchers;\n      var ud = this.unassign_dispatcher_ids;\n      var sd = this.selected_dispatcher_ids;\n      var lenLd = ld.length;\n      var lenDd = dd.length;\n      var lenUd = ud.length;\n      var lenSd = sd.length; //get unchanged dispatchers\n      //default dispatchers - unassigned dispatchers\n\n      var count;\n\n      for (var i = 0; i < lenDd; i++) {\n        count = 0;\n\n        for (var j = 0; j < lenUd; j++) {\n          if (dd[i].id == ud[j]) {\n            count++;\n          }\n        } //doesn't exist\n\n\n        if (count == 0) this.final_dispatcher_list.push(dd[i]);\n      } //push assigned dispatchers\n\n\n      for (var _i = 0; _i < lenSd; _i++) {\n        for (var _j = 0; _j < lenLd; _j++) {\n          //exists\n          if (sd[_i] == ld[_j].id) this.final_dispatcher_list.push(ld[_j]);\n        }\n      }\n\n      this.dialogTableVisible = false;\n      this.showFinalList = true;\n    },\n    confirm: function confirm() {\n      this.showFinalList = false;\n      var obj = {\n        // id: id.id,\n        assign_ids: this.selected_dispatcher_ids,\n        unassign_ids: this.unassign_dispatcher_ids,\n        identerprise: this.identerprise\n      };\n      this.$store.dispatch(action.MULTI_TO_ENTERPRISE, obj);\n    },\n    cancel: function cancel() {\n      this.showFinalList = false;\n    },\n    renderDialog: function renderDialog() {\n      var _this = this;\n\n      this.dialogTableVisible = true;\n\n      if (this.firstLoad) {\n        this.selected_dispatcher_ids = [];\n        this.unassign_dispatcher_ids = [];\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        setTimeout(function () {\n          _this.$refs.tableRef.clearSelection();\n\n          _this.default_dispatchers.forEach(function (element) {\n            _this.$refs.tableRef.toggleRowSelection(element);\n          });\n\n          _this.firstLoad = false;\n\n          _this.$store.commit(mutation.BUTTON_STATUS, false); // console.log(this.selected_dispatcher_ids)\n\n        }, 1000);\n      }\n    },\n    handlePageChange: function () {\n      var _handlePageChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(page) {\n        var obj;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.currentPage = page;\n                obj = {\n                  role: 4,\n                  page: this.currentPage\n                };\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context.next = 5;\n                return this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handlePageChange(_x) {\n        return _handlePageChange.apply(this, arguments);\n      }\n\n      return handlePageChange;\n    }(),\n    indexMethod: function indexMethod(index) {\n      return index + 1;\n    },\n    buttonSearch: function () {\n      var _buttonSearch = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var ld, sd, lenLd, lenSd, i, j;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.buttonSearchPress = true;\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context2.next = 4;\n                return this.$store.dispatch(action.MULTI_DISPATCHER_AVAILABLE, this.form);\n\n              case 4:\n                ld = this.listData;\n                sd = [];\n                this.default_dispatchers.forEach(function (element) {\n                  sd.push(element.id);\n                });\n                this.selected_dispatcher_ids.forEach(function (element) {\n                  sd.push(element);\n                });\n                lenLd = ld.length;\n                lenSd = sd.length; //check the box of selected dispatchers\n\n                for (i = 0; i < lenLd; i++) {\n                  for (j = 0; j < lenSd; j++) {\n                    if (ld[i].id == sd[j]) {\n                      this.$refs.tableRef.toggleRowSelection(ld[i]);\n                    }\n                  }\n                }\n\n                this.buttonSearchPress = false;\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function buttonSearch() {\n        return _buttonSearch.apply(this, arguments);\n      }\n\n      return buttonSearch;\n    }(),\n    handleSelectionChange: function handleSelectionChange(val) {\n      if (this.firstLoad) return;\n      if (this.buttonSearchPress) return;\n      var count;\n      this.selected_dispatcher_ids = [];\n      this.unassign_dispatcher_ids = [];\n      var s = val;\n      var d = this.default_dispatchers;\n      var lenS = s.length;\n      var lenD = d.length; //newly added dispatchers\n\n      for (var i = 0; i < lenS; i++) {\n        count = 0;\n\n        for (var j = 0; j < lenD; j++) {\n          if (s[i].id == d[j].id) count++;\n        }\n\n        if (count == 0) this.selected_dispatcher_ids.push(s[i].id);\n      } //removed dispatchers\n\n\n      for (var _j2 = 0; _j2 < lenD; _j2++) {\n        count = 0;\n\n        for (var _i2 = 0; _i2 < lenS; _i2++) {\n          if (s[_i2].id == d[_j2].id) count++;\n        }\n\n        if (count == 0) this.unassign_dispatcher_ids.push(d[_j2].id);\n      }\n\n      if (this.selected_dispatcher_ids.length != 0 || this.unassign_dispatcher_ids.length != 0) {\n        this.applyDisabled = false;\n      } else {\n        this.applyDisabled = true;\n      }\n    }\n  }\n};",{"version":3,"sources":["popup_multi_dispatcher.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<span>\r\n    <div class=\"hoverhand\" slot=\"reference\">\r\n        <el-button @click=\"renderDialog\" style=\"width: 100%; border-color: #f4f4f5;\" type=\"info\" plain>\r\n            <span style=\" text-align: justify;\">\r\n                <h2><img src=\"../../../src/assets/oper_asset/employee.png\" class=\"drive-acount\">&nbsp; Dispatcher List</h2>\r\n            </span>\r\n        </el-button>\r\n    </div>\r\n    <el-dialog :visible.sync=\"dialogTableVisible\" title=\"Assign Dispatcher Plus\" width=\"70%\">\r\n        <el-form :model=\"form\" @submit.prevent.native>\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"20\">\r\n                    <el-form-item>\r\n                        <el-input placeholder=\"Search\" clearable v-model=\"form.search\"></el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n                <el-col :span=\"4\">\r\n                    <el-button @click=\"buttonSearch\" icon=\"el-icon-search\"></el-button>\r\n                </el-col>\r\n            </el-row>\r\n        </el-form>\r\n        <el-row>\r\n            <el-table \r\n                ref=\"tableRef\"\r\n                v-loading=\"loading\" \r\n                :data=\"listData\" \r\n                height=\"280\"\r\n                @selection-change=\"handleSelectionChange\"\r\n            >\r\n\r\n                <el-table-column type=\"index\" :index=\"indexMethod\" label=\"No\" width=\"80\"/>\r\n                <el-table-column prop=\"name\" label=\"Name\"/>\r\n                <el-table-column prop=\"phonenumber\" label=\"Mobile\"/>\r\n                <el-table-column type=\"selection\"/>\r\n\r\n            </el-table>\r\n        </el-row>\r\n        <el-row style=\"margin-top: 20px; width: 100%;\">\r\n            <el-button \r\n                @click=\"apply\"\r\n                :disabled=\"applyDisabled\"\r\n                style=\"float: right;\"\r\n                type=\"success\">\r\n                Apply\r\n            </el-button>\r\n        </el-row>\r\n    </el-dialog>\r\n    <el-dialog :visible.sync=\"showFinalList\" title=\"Dispatcher List\" width=\"70%\">\r\n        <el-row v-if=\"final_dispatcher_list.length != 0\">\r\n            <el-table :data=\"final_dispatcher_list\">\r\n                <el-table-column type=\"index\" label=\"No\" width=\"80\"/>\r\n                <el-table-column prop=\"name\" label=\"Name\"/>\r\n                <el-table-column prop=\"phonenumber\" label=\"Mobile\"/>\r\n            </el-table>\r\n        </el-row>\r\n        <el-row v-if=\"final_dispatcher_list.length != 0\">\r\n            <p class=\"font-weight-600\" align=\"center\">Apakah anda yakin untuk assign dispatcher?</p>\r\n        </el-row>\r\n        <el-row v-else>\r\n            <p class=\"font-weight-600\" align=\"center\">Apakah anda yakin untuk mengosongkan dispatcher?</p>\r\n        </el-row>\r\n        <el-row type=\"flex\" justify=\"center\">\r\n            <el-button @click=\"confirm\" type=\"success\" size=\"medium\">\r\n                Ya\r\n            </el-button>\r\n            <el-button @click=\"cancel\" type=\"danger\" size=\"medium\">\r\n                Tidak\r\n            </el-button>\r\n        </el-row>\r\n    </el-dialog>\r\n</span>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    mapGetters\r\n} from 'vuex'\r\nimport * as getter from '../../store/getters-types'\r\nimport * as action from '../../store/action-types'\r\nimport Swal from 'sweetalert2'\r\nimport * as mutation from '../../store/mutation-types'\r\n\r\nexport default {\r\n    props: ['identerprise', 'picture'],\r\n    data() {\r\n        return {\r\n            currentPage: 1,\r\n            dialogTableVisible: false,\r\n            form: {\r\n                assignEnterprise: this.identerprise,\r\n                search: ''\r\n            },\r\n            firstLoad: true,\r\n            buttonSearchPress: false,\r\n            showFinalList: false,\r\n            applyDisabled: true,\r\n            selected_dispatcher_ids: [],\r\n            unassign_dispatcher_ids: [],\r\n            final_dispatcher_list: []\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            paginate: getter.GET_PAGINATE_DISPATCHER,\r\n            listData: getter.GET_DISPATCHER_AVAILABLE,\r\n            loading: getter.GET_BUTTON,\r\n            default_dispatchers: getter.GET_SELECTED_DISPATCHERS\r\n        }),\r\n        paginato() {\r\n            return this.paginate\r\n        },\r\n        indexTam() {\r\n            return this.indexT\r\n        },\r\n        vendor() {\r\n            let idrole = JSON.parse(localStorage.getItem('user')).idrole\r\n            if (idrole === 2) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        apply(){\r\n            this.final_dispatcher_list = []\r\n\r\n            let ld = this.listData\r\n            let dd = this.default_dispatchers\r\n            let ud = this.unassign_dispatcher_ids\r\n            let sd = this.selected_dispatcher_ids\r\n\r\n            let lenLd = ld.length\r\n            let lenDd = dd.length\r\n            let lenUd = ud.length\r\n            let lenSd = sd.length\r\n\r\n            //get unchanged dispatchers\r\n            //default dispatchers - unassigned dispatchers\r\n            let count\r\n            for(let i = 0; i < lenDd; i++){\r\n                count = 0\r\n                for(let j = 0; j < lenUd; j++){\r\n                    if(dd[i].id == ud[j]){\r\n                        count++\r\n                    }\r\n                }\r\n                //doesn't exist\r\n                if(count == 0)\r\n                    this.final_dispatcher_list.push(dd[i])\r\n            }\r\n\r\n            //push assigned dispatchers\r\n            for(let i = 0; i < lenSd; i++){\r\n                for(let j = 0; j < lenLd; j++){\r\n                    //exists\r\n                    if(sd[i] == ld[j].id)\r\n                        this.final_dispatcher_list.push(ld[j])\r\n                }\r\n            }\r\n\r\n            this.dialogTableVisible = false\r\n            this.showFinalList = true\r\n        },\r\n        confirm(){\r\n            this.showFinalList = false\r\n            let obj = {\r\n                // id: id.id,\r\n                assign_ids  : this.selected_dispatcher_ids,\r\n                unassign_ids: this.unassign_dispatcher_ids,\r\n                identerprise: this.identerprise\r\n            };\r\n            this.$store.dispatch(action.MULTI_TO_ENTERPRISE, obj);\r\n        },\r\n        cancel(){\r\n            this.showFinalList = false\r\n        },\r\n        renderDialog(){\r\n            this.dialogTableVisible = true\r\n            if(this.firstLoad){\r\n                this.selected_dispatcher_ids = []\r\n                this.unassign_dispatcher_ids = []\r\n                this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                setTimeout(\r\n                    () => {\r\n                        this.$refs.tableRef.clearSelection()\r\n                        this.default_dispatchers.forEach((element) => {\r\n                            this.$refs.tableRef.toggleRowSelection(element)\r\n                        })\r\n                        this.firstLoad = false\r\n                        this.$store.commit(mutation.BUTTON_STATUS, false)\r\n                        // console.log(this.selected_dispatcher_ids)\r\n                    }, \r\n                    1000\r\n                )\r\n            }\r\n        },\r\n        async handlePageChange(page) {\r\n            this.currentPage = page;\r\n            let obj = {\r\n                role: 4,\r\n                page: this.currentPage\r\n            };\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            await this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\r\n        },\r\n        indexMethod(index) {\r\n            return index + 1;\r\n        },\r\n        async buttonSearch() {\r\n            this.buttonSearchPress = true\r\n\r\n            this.$store.commit(mutation.BUTTON_STATUS, true);\r\n            await this.$store.dispatch(action.MULTI_DISPATCHER_AVAILABLE, this.form)\r\n\r\n            let ld = this.listData\r\n            let sd = []\r\n            this.default_dispatchers.forEach((element) => {\r\n                sd.push(element.id)\r\n            })\r\n            this.selected_dispatcher_ids.forEach((element) => {\r\n                sd.push(element)\r\n            })\r\n            let lenLd = ld.length\r\n            let lenSd = sd.length\r\n\r\n            //check the box of selected dispatchers\r\n            for(let i = 0; i < lenLd; i++){\r\n                for(let j = 0; j < lenSd; j++){\r\n                    if(ld[i].id == sd[j]){\r\n                        this.$refs.tableRef.toggleRowSelection(ld[i])\r\n                    }\r\n                }\r\n            }\r\n            this.buttonSearchPress = false\r\n        },\r\n        handleSelectionChange(val) {\r\n            if(this.firstLoad)\r\n                return\r\n            \r\n            if(this.buttonSearchPress)\r\n                return\r\n                \r\n            var count\r\n            this.selected_dispatcher_ids = []\r\n            this.unassign_dispatcher_ids = []\r\n\r\n            let s = val\r\n            let d = this.default_dispatchers\r\n            let lenS = s.length\r\n            let lenD = d.length\r\n\r\n            //newly added dispatchers\r\n            for(let i = 0; i < lenS; i++){\r\n                count = 0\r\n                for(let j = 0; j < lenD; j++){\r\n                    if(s[i].id == d[j].id)\r\n                        count++\r\n                }\r\n                if(count == 0)\r\n                    this.selected_dispatcher_ids.push(s[i].id)\r\n            }\r\n\r\n            //removed dispatchers\r\n            for(let j = 0; j < lenD; j++){\r\n                count = 0\r\n                for(let i = 0; i < lenS; i++){\r\n                    if(s[i].id == d[j].id)\r\n                        count++\r\n                }\r\n                if(count == 0)\r\n                    this.unassign_dispatcher_ids.push(d[j].id)\r\n            }\r\n\r\n            if(this.selected_dispatcher_ids.length != 0 || this.unassign_dispatcher_ids.length != 0 ){\r\n                this.applyDisabled = false\r\n            } else {\r\n                this.applyDisabled = true\r\n            }\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.table-box {\r\n    overflow: auto;\r\n}\r\n\r\n.el-pagination {\r\n    padding-top: 20px;\r\n}\r\n\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    padding: 0px 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.image {\r\n    max-width: 100%;\r\n    height: 150px;\r\n    display: block;\r\n}\r\n\r\n.vl {\r\n    border-left: 3px solid #f2f2f2;\r\n    height: 90%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.avatar {\r\n    border-radius: 50%;\r\n    max-width: 80px;\r\n    height: 80px;\r\n    border: 1px solid #fff;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    box-shadow: 0 2px 5px 0 rgba(49, 49, 93, 0.1),\r\n        0 1px 2px 0 rgba(0, 0, 0, 0.08);\r\n    transition: box-shadow 0.5s;\r\n}\r\n\r\n.left {\r\n    text-align: left;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.middle {\r\n    margin-top: -30px\r\n}\r\n\r\n.drive-acount {\r\n    height: 39px;\r\n    margin-top: -11px;\r\n    margin-bottom: -10px;\r\n}\r\n\r\n.hoverhand:hover {\r\n    cursor: pointer;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/enterprise"}]}