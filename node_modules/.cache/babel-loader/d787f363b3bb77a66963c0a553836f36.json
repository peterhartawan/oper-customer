{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/dashboard/action.js","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/dashboard/action.js","mtime":1640440454964},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444342},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":1640440453952},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _action$LIST_DASHBOAR;\n\nimport * as action from \"../../action-types\";\nimport * as mutation from \"../../mutation-types\";\nimport localAxios from \"../../../services/http/client\";\nimport swal from 'sweetalert2';\nimport * as typeS from \"../../../services/path_service\";\nimport router from \"../../../router\";\nexport default (_action$LIST_DASHBOAR = {}, _defineProperty(_action$LIST_DASHBOAR, action.LIST_DASHBOARD, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, payload) {\n    var commit, dispatch, param, token, _yield$localAxios$get, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit, dispatch = _ref.dispatch;\n            _context.prev = 1;\n\n            if (payload !== undefined) {\n              param = \"/dashboard?order_today=\".concat(payload.order_today, \"&task_today=\").concat(payload.task_today, \"&order_week=\").concat(payload.order_week, \"&task_week=\").concat(payload.task_week, \"\\n                &order_month=\").concat(payload.order_month, \"&task_month=\").concat(payload.task_month);\n            } else {\n              param = '/dashboard';\n            }\n\n            ;\n            token = localStorage.getItem('token');\n            _context.next = 7;\n            return localAxios.get(param, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 7:\n            _yield$localAxios$get = _context.sent;\n            data = _yield$localAxios$get.data;\n            objList = {\n              dataList: data.data\n            };\n            commit(mutation.SET_DASHBOARD_LIST, objList);\n            _context.next = 17;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            console.log('ada d mana', _context.t0);\n            dispatch(action.DATA_ERROR, _context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}()), _defineProperty(_action$LIST_DASHBOAR, action.GRAFIK_DASHBOARD, function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3) {\n    var commit, dispatch, token, _yield$localAxios$get2, data;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref3.commit, dispatch = _ref3.dispatch;\n            _context2.prev = 1;\n            token = localStorage.getItem('token');\n            _context2.next = 5;\n            return localAxios.get('/dashboard/grafik', {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get2 = _context2.sent;\n            data = _yield$localAxios$get2.data;\n            commit(mutation.SET_DASHBOARD_GRAFIK, data.data);\n            _context2.next = 14;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log('error d mana gan', _context2.t0);\n            dispatch(action.DATA_ERROR, _context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 10]]);\n  }));\n\n  return function (_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}()), _action$LIST_DASHBOAR);",{"version":3,"sources":["/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/store/modules/dashboard/action.js"],"names":["action","mutation","localAxios","swal","typeS","router","LIST_DASHBOARD","payload","commit","dispatch","undefined","param","order_today","task_today","order_week","task_week","order_month","task_month","token","localStorage","getItem","get","headers","data","objList","dataList","SET_DASHBOARD_LIST","console","log","DATA_ERROR","GRAFIK_DASHBOARD","SET_DASHBOARD_GRAFIK"],"mappings":";;;;;;AAAA,OAAO,KAAKA,MAAZ;AACA,OAAO,KAAKC,QAAZ;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,KAAKC,KAAZ;AACA,OAAOC,MAAP;AAEA,mFACWL,MAAM,CAACM,cADlB;AAAA,6FACsDC,OADtD;AAAA;;AAAA;AAAA;AAAA;AAAA;AACmCC,YAAAA,MADnC,QACmCA,MADnC,EAC2CC,QAD3C,QAC2CA,QAD3C;AAAA;;AAKY,gBAAGF,OAAO,KAAKG,SAAf,EAA0B;AACtBC,cAAAA,KAAK,oCAA6BJ,OAAO,CAACK,WAArC,yBAA+DL,OAAO,CAACM,UAAvE,yBAAgGN,OAAO,CAACO,UAAxG,wBAAgIP,OAAO,CAACQ,SAAxI,4CACUR,OAAO,CAACS,WADlB,yBAC4CT,OAAO,CAACU,UADpD,CAAL;AAEH,aAHD,MAGO;AACHN,cAAAA,KAAK,GAAG,YAAR;AACH;;AAAA;AACGO,YAAAA,KAXhB,GAWwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAXxB;AAAA;AAAA,mBAY+BlB,UAAU,CAACmB,GAAX,CAAeV,KAAf,EAAsB;AACrCW,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAD4B,aAAtB,CAZ/B;;AAAA;AAAA;AAYiBK,YAAAA,IAZjB,yBAYiBA,IAZjB;AAegBC,YAAAA,OAfhB,GAe0B;AACVC,cAAAA,QAAQ,EAAMF,IAAI,CAACA;AADT,aAf1B;AAmBYf,YAAAA,MAAM,CAACP,QAAQ,CAACyB,kBAAV,EAA+BF,OAA/B,CAAN;AAnBZ;AAAA;;AAAA;AAAA;AAAA;AAsBYG,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAnB,YAAAA,QAAQ,CAACT,MAAM,CAAC6B,UAAR,cAAR;;AAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA0BW7B,MAAM,CAAC8B,gBA1BlB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AA0BqCtB,YAAAA,MA1BrC,SA0BqCA,MA1BrC,EA0B6CC,QA1B7C,SA0B6CA,QA1B7C;AAAA;AA4BgBS,YAAAA,KA5BhB,GA4BwBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CA5BxB;AAAA;AAAA,mBA6B+BlB,UAAU,CAACmB,GAAX,CAAe,mBAAf,EAAoC;AACnDC,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUJ;AAA5B;AAD0C,aAApC,CA7B/B;;AAAA;AAAA;AA6BiBK,YAAAA,IA7BjB,0BA6BiBA,IA7BjB;AAiCYf,YAAAA,MAAM,CAACP,QAAQ,CAAC8B,oBAAV,EAAiCR,IAAI,CAACA,IAAtC,CAAN;AAjCZ;AAAA;;AAAA;AAAA;AAAA;AAoCYI,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAnB,YAAAA,QAAQ,CAACT,MAAM,CAAC6B,UAAR,eAAR;;AArCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as action from '../../action-types'\nimport * as mutation from '../../mutation-types'\nimport localAxios from '../../../services/http/client'\nimport swal from 'sweetalert2'\nimport * as typeS from '../../../services/path_service'\nimport router from '../../../router'\n\nexport default {\n    async [action.LIST_DASHBOARD]({commit, dispatch}, payload) {\n        try {\n\n            let param;\n            if(payload !== undefined) {\n                param = `/dashboard?order_today=${payload.order_today}&task_today=${payload.task_today}&order_week=${payload.order_week}&task_week=${payload.task_week}\n                &order_month=${payload.order_month}&task_month=${payload.task_month}`\n            } else {\n                param = '/dashboard';\n            };\n            let token = localStorage.getItem('token');\n            let {data} = await localAxios.get(param, {\n                headers: {'Authorization': 'Bearer '+token}\n            });\n            let objList = {\n                dataList    : data.data,\n            };\n\n            commit(mutation.SET_DASHBOARD_LIST , objList )\n        \n        }   catch (err) {\n            console.log('ada d mana', err);\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n    async [action.GRAFIK_DASHBOARD]({commit, dispatch}) {\n        try {\n            let token = localStorage.getItem('token')\n            let {data} = await localAxios.get('/dashboard/grafik', {\n                headers: {'Authorization': 'Bearer '+token}\n            });\n            \n            commit(mutation.SET_DASHBOARD_GRAFIK , data.data )\n        \n        }   catch (err) {\n            console.log('error d mana gan', err)\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n};"]}]}