{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/enterprise/edit-location-enterprise.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/enterprise/edit-location-enterprise.vue","mtime":1631140592963},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport { mapGetters, mapActions, mapState } from \"vuex\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nexport default {\n  name: \"NewLocation\",\n  data: function data() {\n    return {\n      currentPlace: null,\n      markers: {\n        lat: -6.193619252954559,\n        lng: 106.76330885229345\n      },\n      center: {\n        lat: -6.193619252954559,\n        lng: 106.76330885229345\n      },\n      form: {\n        name: \"\",\n        birthdate: \"\",\n        address: \"\",\n        longitude: \"\",\n        latitude: \"\",\n        identerprise: \"\"\n      },\n      payload: {\n        identerprise: null,\n        page: 1\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: \"Location Name is required!\",\n          trigger: \"blur\"\n        }],\n        latitude: [{\n          required: true,\n          message: \"Location Latitude is required!\",\n          trigger: \"blur\"\n        }],\n        longitude: [{\n          required: true,\n          message: \"Location Longitude is required!\",\n          trigger: \"blur\"\n        }],\n        address: [{\n          required: true,\n          message: \"Address is required!\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit(formName) {\n      var _this = this;\n\n      var obj = {\n        name: this.form.name,\n        birthdate: this.form.birthdate,\n        address: this.form.address,\n        longitude: this.form.longitude,\n        latitude: this.form.latitude,\n        identerprise: this.form.identerprise\n      };\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.$store.commit(mutation.BUTTON_STATUS, true);\n\n          _this.$store.dispatch(action.UPDATE_DATA_LOCATION, _this.form);\n        } else {\n          return false;\n        }\n      });\n    },\n    dialogTrack: function dialogTrack() {\n      this.$store.commit(mutation.SET_DIALOG_VISIBLE, true);\n    },\n    updateCoordinates: function updateCoordinates(location) {\n      var _this2 = this;\n\n      var geocoder = new google.maps.Geocoder();\n      geocoder.geocode({\n        'latLng': location.latLng\n      }, function (result, status) {\n        if (status === google.maps.GeocoderStatus.OK) {\n          _this2.markers = {\n            lat: location.latLng.lat(),\n            lng: location.latLng.lng()\n          };\n          _this2.form.latitude = location.latLng.lat();\n          _this2.form.longitude = location.latLng.lng();\n          _this2.form.address = result[0].formatted_address;\n        }\n      });\n    },\n    setPlace: function setPlace(place) {\n      if (place) {\n        this.updateCoordinates(place.geometry.location);\n        this.markers = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        };\n        this.center = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        };\n        this.form.latitude = place.geometry.location.lat();\n        this.form.longitude = place.geometry.location.lng();\n        this.form.address = place.formatted_address;\n      }\n    },\n    Cancel: function Cancel() {\n      this.$store.dispatch(action.LIST_LOCATION, this.payload);\n      this.$router.replace({\n        path: \"/location-enterprise/\" + this.enterprise.identerprise\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.$store.commit(mutation.SET_DIALOG_VISIBLE, false);\n    },\n    handleClose: function handleClose(done) {\n      var _this3 = this;\n\n      this.$confirm('Are you sure to close this map?').then(function (_) {\n        _this3.$store.commit(mutation.SET_DIALOG_VISIBLE, false);\n      }).catch(function (_) {});\n    }\n  },\n  computed: _objectSpread({}, mapGetters({\n    enterprise: getter.ENTERPRISE,\n    button: getter.GET_BUTTON,\n    dialogV: getter.GET_DIALOG_VISIBLE,\n    location: getter.GET_LOCATION_DETAIL\n  })),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.location;\n\n            case 2:\n              this.form.identerprise = this.enterprise.identerprise;\n              this.form.name = this.location.name;\n              this.form.address = this.location.address;\n              this.form.latitude = this.location.latitude;\n              this.form.longitude = this.location.longitude;\n              this.form.idplaces = this.location.idplaces;\n              this.markers.lat = parseFloat(this.location.latitude);\n              this.markers.lng = parseFloat(this.location.longitude);\n              this.center.lat = parseFloat(this.location.latitude);\n              this.center.lng = parseFloat(this.location.longitude);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }() // mounted(){\n  //     console.log(this.$route.params);\n  //     this.$store.dispatch(action.DETAIL_LOCATION, this.$route.params.id);\n  //     console.log(this.location);\n  // },\n  // watch:{\n  //     locationdetail(newValue, oldValue){\n  //         console.log('cus', newValue);\n  //     }\n  // }\n\n};",{"version":3,"sources":["edit-location-enterprise.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"name\">\n                        <el-input placeholder=\"Location Name\" v-model=\"form.name\"></el-input>\n                    </el-form-item>\n                </el-col>\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"address\">\n                        <el-input placeholder=\"Address\" disabled v-model=\"form.address\"></el-input>\n                    </el-form-item>\n                </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"latitude\">\n                        <el-input placeholder=\"Latitude\"  disabled v-model=\"form.latitude\"></el-input>\n                    </el-form-item>\n                </el-col>\n                <el-col :lg=\"10\">\n                    <el-form-item prop=\"longitude\">\n                        <el-input placeholder=\"Longitude\" disabled v-model=\"form.longitude\"></el-input>\n                    </el-form-item>\n                </el-col>\n                <el-col :span=\"2\">\n                    <el-button type=\"primary\" @click=\"dialogTrack\" icon=\"el-icon-location\" circle></el-button>\n                </el-col>\n            </el-row>\n        </el-form>\n        <el-row>\n            <el-col :offset=\"20\" :lg=\"2\">\n                <el-button :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\n            </el-col>\n            <el-col :lg=\"2\">\n                <el-button @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\n            </el-col>\n        </el-row>\n    </div>\n    <el-dialog :visible.sync=\"dialogV\" :before-close=\"handleClose\" width=\"70%\">\n        <div class=\"card-base card-shadow--medium\">\n            <div class=\"gmap-location-search-bar\">\n              Search Location:\n              <gmap-autocomplete @place_changed=\"setPlace\"></gmap-autocomplete>\n            </div>\n            <gmap-map ref=\"map\" :center=\"center\" :zoom=\"12\" :options=\"{gestureHandling:'cooperative'}\" map-type-id=\"roadmap\" style=\"width: 100%; height: 500px\">\n                <GmapMarker @drag=\"updateCoordinates\" :draggable=\"true\" :position=\"markers\" label=\"S\" />\n            </gmap-map>\n        </div>\n        <el-button @click=\"closeDialog\" class=\"mt-10\">Save</el-button>\n    </el-dialog>\n</div>\n</template>\n\n<script>\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions,\n    mapState\n} from \"vuex\";\nimport * as mutation from '../../../store/mutation-types';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nexport default {\n    name: \"NewLocation\",\n    data() {\n        return {\n            currentPlace: null,\n            markers: {\n                lat: -6.193619252954559,\n                lng: 106.76330885229345,\n            },\n            center: {\n                lat: -6.193619252954559,\n                lng: 106.76330885229345,\n            },\n            form: {\n                name: \"\",\n                birthdate: \"\",\n                address: \"\",\n                longitude: \"\",\n                latitude: \"\",\n                identerprise: \"\",\n            },\n            payload: {\n                identerprise: null,\n                page: 1,\n            },\n            rules: {\n                name: [{\n                    required: true,\n                    message: \"Location Name is required!\",\n                    trigger: \"blur\"\n                }],\n                latitude: [{\n                    required: true,\n                    message: \"Location Latitude is required!\",\n                    trigger: \"blur\"\n                }],\n                longitude: [{\n                    required: true,\n                    message: \"Location Longitude is required!\",\n                    trigger: \"blur\"\n                }],\n                address: [{\n                    required: true,\n                    message: \"Address is required!\",\n                    trigger: \"blur\"\n                }],\n            }\n        };\n    },\n    methods: {\n        onSubmit(formName) {\n            let obj = {\n                name: this.form.name,\n                birthdate: this.form.birthdate,\n                address: this.form.address,\n                longitude: this.form.longitude,\n                latitude: this.form.latitude,\n                identerprise: this.form.identerprise,\n            };\n            this.$refs[formName].validate(valid => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.UPDATE_DATA_LOCATION, this.form);\n                } else {\n                    return false;\n                }\n            });\n        },\n        dialogTrack() {\n            this.$store.commit(mutation.SET_DIALOG_VISIBLE, true)\n        },\n        updateCoordinates(location) {\n            const geocoder = new google.maps.Geocoder()\n            geocoder.geocode({\n                'latLng': location.latLng\n            }, (result, status) => {\n                if (status === google.maps.GeocoderStatus.OK) {\n                    this.markers = {\n                        lat: location.latLng.lat(),\n                        lng: location.latLng.lng(),\n                    };\n                    this.form.latitude = location.latLng.lat()\n                    this.form.longitude = location.latLng.lng()\n                    this.form.address = result[0].formatted_address\n                }\n            })\n        },\n        setPlace(place) {\n          if (place) {\n            this.updateCoordinates(place.geometry.location)\n\n            this.markers = {\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng(),\n            };\n\n            this.center = {\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng(),\n            };\n\n            this.form.latitude = place.geometry.location.lat()\n            this.form.longitude = place.geometry.location.lng()\n            this.form.address = place.formatted_address\n          }\n        },\n        Cancel() {\n            this.$store.dispatch(action.LIST_LOCATION, this.payload);\n            this.$router.replace({\n                path: \"/location-enterprise/\" + this.enterprise.identerprise\n            });\n        },\n        closeDialog() {\n            this.$store.commit(mutation.SET_DIALOG_VISIBLE, false)\n        },\n        handleClose(done) {\n            this.$confirm('Are you sure to close this map?')\n                .then(_ => {\n                    this.$store.commit(mutation.SET_DIALOG_VISIBLE, false)\n                })\n                .catch(_ => {});\n        }\n    },\n    computed: {\n        ...mapGetters({\n            enterprise: getter.ENTERPRISE,\n            button: getter.GET_BUTTON,\n            dialogV: getter.GET_DIALOG_VISIBLE,\n            location: getter.GET_LOCATION_DETAIL\n        }),\n    },\n    async created() {\n        await this.location\n        this.form.identerprise = this.enterprise.identerprise;\n        this.form.name = this.location.name;\n        this.form.address = this.location.address;\n        this.form.latitude = this.location.latitude;\n        this.form.longitude = this.location.longitude;\n        this.form.idplaces = this.location.idplaces;\n        this.markers.lat = parseFloat(this.location.latitude);\n        this.markers.lng = parseFloat(this.location.longitude);\n        this.center.lat = parseFloat(this.location.latitude);\n        this.center.lng = parseFloat(this.location.longitude);\n    },\n    // mounted(){\n    //     console.log(this.$route.params);\n    //     this.$store.dispatch(action.DETAIL_LOCATION, this.$route.params.id);\n    //     console.log(this.location);\n    // },\n    // watch:{\n    //     locationdetail(newValue, oldValue){\n    //         console.log('cus', newValue);\n    //     }\n    // }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.card-base {\n    padding: 20px;\n}\n\n.gmap-location-search-bar {\n  margin: 0 0 20px 0;\n}\n\n.el-row {\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    padding: 0px 10px;\n    margin-bottom: 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.el-radio {\n    margin: 0 160px 0 10px;\n}\n\n.el-select {\n    width: 100%;\n}\n\n.thumbnail {\n    position: relative;\n    width: 300px;\n    height: 300px;\n    overflow: hidden;\n}\n\n.thumbnail img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    height: 100%;\n    width: auto;\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n}\n\n.thumbnail img.portrait {\n    width: 100%;\n    height: auto;\n}\n\na {\n    border-style: dotted;\n    border-radius: 15px;\n    padding: 10px;\n    height: 150px;\n}\n\ntd {\n    padding: 10px;\n}\n\n\n.pac-target-input {\n    -webkit-appearance: none;\n    background-color: #FFFFFF;\n    background-image: none;\n    border-radius: 4px;\n    border: 1px solid #DCDFE6;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    color: #606266;\n    display: inline-block;\n    font-size: inherit;\n    height: 40px;\n    line-height: 40px;\n    outline: none;\n    padding: 0 15px;\n    -webkit-transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n    transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n    width: 100%;\n}\n</style>\n"],"sourceRoot":"src/views/pages/enterprise"}]}