{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\components\\theme-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\components\\theme-picker.vue","mtime":1644413760079},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar version = '2.2.2';\nvar ORIGINAL_THEME = '#409EFF';\nexport default {\n  data: function data() {\n    return {\n      chalk: '',\n      // content of theme-chalk css\n      docs: '',\n      // content of docs css\n      theme: ORIGINAL_THEME\n    };\n  },\n  watch: {\n    theme: function theme(val, oldVal) {\n      var _this = this;\n\n      if (typeof val !== 'string') return;\n      var themeCluster = this.getThemeCluster(val.replace('#', ''));\n      var originalCluster = this.getThemeCluster(oldVal.replace('#', ''));\n\n      var getHandler = function getHandler(variable, id) {\n        return function () {\n          var originalCluster = _this.getThemeCluster(ORIGINAL_THEME.replace('#', ''));\n\n          var newStyle = _this.updateStyle(_this[variable], originalCluster, themeCluster);\n\n          var styleTag = document.getElementById(id);\n\n          if (!styleTag) {\n            styleTag = document.createElement('style');\n            styleTag.setAttribute('id', id);\n            document.head.appendChild(styleTag);\n          }\n\n          styleTag.innerText = newStyle;\n        };\n      };\n\n      var chalkHandler = getHandler('chalk', 'chalk-style');\n      var docsHandler = getHandler('docs', 'docs-style');\n\n      if (!this.chalk) {\n        var url = \"https://unpkg.com/element-ui@\".concat(version, \"/lib/theme-chalk/index.css\");\n        this.getCSSString(url, chalkHandler, 'chalk');\n      } else {\n        chalkHandler();\n      }\n\n      if (!this.docs) {\n        var links = [].filter.call(document.querySelectorAll('link'), function (link) {\n          return /docs\\..+\\.css/.test(link.href || '');\n        });\n        links[0] && this.getCSSString(links[0].href, docsHandler, 'docs');\n      } else {\n        docsHandler();\n      }\n\n      var styles = [].slice.call(document.querySelectorAll('style')).filter(function (style) {\n        var text = style.innerText;\n        return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text);\n      });\n      styles.forEach(function (style) {\n        var innerText = style.innerText;\n        if (typeof innerText !== 'string') return;\n        style.innerText = _this.updateStyle(innerText, originalCluster, themeCluster);\n      });\n    }\n  },\n  methods: {\n    updateStyle: function updateStyle(style, oldCluster, newCluster) {\n      var newStyle = style;\n      oldCluster.forEach(function (color, index) {\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index]);\n      });\n      return newStyle;\n    },\n    getCSSString: function getCSSString(url, callback, variable) {\n      var _this2 = this;\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          _this2[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '');\n          callback();\n        }\n      };\n\n      xhr.open('GET', url);\n      xhr.send();\n    },\n    getThemeCluster: function getThemeCluster(theme) {\n      var tintColor = function tintColor(color, tint) {\n        var red = parseInt(color.slice(0, 2), 16);\n        var green = parseInt(color.slice(2, 4), 16);\n        var blue = parseInt(color.slice(4, 6), 16);\n\n        if (tint === 0) {\n          // when primary color is in its rgb space\n          return [red, green, blue].join(',');\n        } else {\n          red += Math.round(tint * (255 - red));\n          green += Math.round(tint * (255 - green));\n          blue += Math.round(tint * (255 - blue));\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n          return \"#\".concat(red).concat(green).concat(blue);\n        }\n      };\n\n      var shadeColor = function shadeColor(color, shade) {\n        var red = parseInt(color.slice(0, 2), 16);\n        var green = parseInt(color.slice(2, 4), 16);\n        var blue = parseInt(color.slice(4, 6), 16);\n        red = Math.round((1 - shade) * red);\n        green = Math.round((1 - shade) * green);\n        blue = Math.round((1 - shade) * blue);\n        red = red.toString(16);\n        green = green.toString(16);\n        blue = blue.toString(16);\n        return \"#\".concat(red).concat(green).concat(blue);\n      };\n\n      var clusters = [theme];\n\n      for (var i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n      }\n\n      clusters.push(shadeColor(theme, 0.1));\n      return clusters;\n    }\n  }\n};",{"version":3,"sources":["theme-picker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<el-color-picker\r\n\t\tclass=\"theme-picker\"\r\n\t\tpopper-class=\"theme-picker-dropdown\"\r\n\t\tv-model=\"theme\"></el-color-picker>\r\n</template>\r\n\r\n<style>\r\n\t.theme-picker {\r\n\t\tdisplay: inline-block;\r\n\t}\r\n\r\n\t.theme-picker .el-color-picker__trigger {\r\n\t\tvertical-align: middle;\r\n\t}\r\n\t\r\n\t.theme-picker-dropdown .el-color-dropdown__link-btn {\r\n\t\tdisplay: none;\r\n\t}\r\n</style>\r\n\r\n<script>\r\n\tconst  version = '2.2.2';\r\n\r\n\tconst ORIGINAL_THEME = '#409EFF';\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tchalk: '', // content of theme-chalk css\r\n\t\t\t\tdocs: '', // content of docs css\r\n\t\t\t\ttheme: ORIGINAL_THEME\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\twatch: {\r\n\t\t\ttheme(val, oldVal) {\r\n\t\t\t\tif (typeof val !== 'string') return;\r\n\t\t\t\tconst themeCluster = this.getThemeCluster(val.replace('#', ''));\r\n\t\t\t\tconst originalCluster = this.getThemeCluster(oldVal.replace('#', ''));\r\n\t\t\t\tconst getHandler = (variable, id) => {\r\n\t\t\t\t\treturn () => {\r\n\t\t\t\t\t\tconst originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''));\r\n\t\t\t\t\t\tlet newStyle = this.updateStyle(this[variable], originalCluster, themeCluster);\r\n\r\n\t\t\t\t\t\tlet styleTag = document.getElementById(id);\r\n\t\t\t\t\t\tif (!styleTag) {\r\n\t\t\t\t\t\t\tstyleTag = document.createElement('style');\r\n\t\t\t\t\t\t\tstyleTag.setAttribute('id', id);\r\n\t\t\t\t\t\t\tdocument.head.appendChild(styleTag);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstyleTag.innerText = newStyle;\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst chalkHandler = getHandler('chalk', 'chalk-style');\r\n\t\t\t\tconst docsHandler = getHandler('docs', 'docs-style');\r\n\r\n\t\t\t\tif (!this.chalk) {\r\n\t\t\t\t\tconst url = `https://unpkg.com/element-ui@${ version }/lib/theme-chalk/index.css`;\r\n\t\t\t\t\tthis.getCSSString(url, chalkHandler, 'chalk');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchalkHandler();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this.docs) {\r\n\t\t\t\t\tconst links = [].filter.call(document.querySelectorAll('link'), link => {\r\n\t\t\t\t\t\treturn /docs\\..+\\.css/.test(link.href || '');\r\n\t\t\t\t\t});\r\n\t\t\t\t\tlinks[0] && this.getCSSString(links[0].href, docsHandler, 'docs');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocsHandler();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst styles = [].slice.call(document.querySelectorAll('style'))\r\n\t\t\t\t\t.filter(style => {\r\n\t\t\t\t\t\tconst text = style.innerText;\r\n\t\t\t\t\t\treturn new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text);\r\n\t\t\t\t\t});\r\n\t\t\t\tstyles.forEach(style => {\r\n\t\t\t\t\tconst { innerText } = style;\r\n\t\t\t\t\tif (typeof innerText !== 'string') return;\r\n\t\t\t\t\tstyle.innerText = this.updateStyle(innerText, originalCluster, themeCluster);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t\tupdateStyle(style, oldCluster, newCluster) {\r\n\t\t\t\tlet newStyle = style;\r\n\t\t\t\toldCluster.forEach((color, index) => {\r\n\t\t\t\t\tnewStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index]);\r\n\t\t\t\t});\r\n\t\t\t\treturn newStyle;\r\n\t\t\t},\r\n\r\n\t\t\tgetCSSString(url, callback, variable) {\r\n\t\t\t\tconst xhr = new XMLHttpRequest();\r\n\t\t\t\txhr.onreadystatechange = () => {\r\n\t\t\t\t\tif (xhr.readyState === 4 && xhr.status === 200) {\r\n\t\t\t\t\t\tthis[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '');\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\txhr.open('GET', url);\r\n\t\t\t\txhr.send();\r\n\t\t\t},\r\n\r\n\t\t\tgetThemeCluster(theme) {\r\n\t\t\t\tconst tintColor = (color, tint) => {\r\n\t\t\t\t\tlet red = parseInt(color.slice(0, 2), 16);\r\n\t\t\t\t\tlet green = parseInt(color.slice(2, 4), 16);\r\n\t\t\t\t\tlet blue = parseInt(color.slice(4, 6), 16);\r\n\r\n\t\t\t\t\tif (tint === 0) { // when primary color is in its rgb space\r\n\t\t\t\t\t\treturn [red, green, blue].join(',');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tred += Math.round(tint * (255 - red));\r\n\t\t\t\t\t\tgreen += Math.round(tint * (255 - green));\r\n\t\t\t\t\t\tblue += Math.round(tint * (255 - blue));\r\n\r\n\t\t\t\t\t\tred = red.toString(16);\r\n\t\t\t\t\t\tgreen = green.toString(16);\r\n\t\t\t\t\t\tblue = blue.toString(16);\r\n\r\n\t\t\t\t\t\treturn `#${ red }${ green }${ blue }`;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst shadeColor = (color, shade) => {\r\n\t\t\t\t\tlet red = parseInt(color.slice(0, 2), 16);\r\n\t\t\t\t\tlet green = parseInt(color.slice(2, 4), 16);\r\n\t\t\t\t\tlet blue = parseInt(color.slice(4, 6), 16);\r\n\r\n\t\t\t\t\tred = Math.round((1 - shade) * red);\r\n\t\t\t\t\tgreen = Math.round((1 - shade) * green);\r\n\t\t\t\t\tblue = Math.round((1 - shade) * blue);\r\n\r\n\t\t\t\t\tred = red.toString(16);\r\n\t\t\t\t\tgreen = green.toString(16);\r\n\t\t\t\t\tblue = blue.toString(16);\r\n\r\n\t\t\t\t\treturn `#${ red }${ green }${ blue }`;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst clusters = [theme];\r\n\t\t\t\tfor (let i = 0; i <= 9; i++) {\r\n\t\t\t\t\tclusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\r\n\t\t\t\t}\r\n\t\t\t\tclusters.push(shadeColor(theme, 0.1));\r\n\t\t\t\treturn clusters;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>"],"sourceRoot":"src/components"}]}