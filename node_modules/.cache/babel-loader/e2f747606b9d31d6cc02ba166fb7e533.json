{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\dispathcer\\detail-dispatcher.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\dispathcer\\detail-dispatcher.vue","mtime":1647032353997},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../../router\";\nimport { mapGetters } from 'vuex';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport Swal from 'sweetalert2';\nexport default {\n  data: function data() {\n    return {\n      payload: {\n        reason_suspend: \"\",\n        users_id: null,\n        iddispatcher: \"\"\n      },\n      alt: require(\"@/assets/images/avatar-2.jpg\")\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    dispatcher: getter.DISPATCHER,\n    button: getter.GET_BUTTON\n  })), {}, {\n    profilepicture: function profilepicture() {\n      if (this.dispatcher.profile_picture == null) {\n        return this.alt;\n      } else {\n        return this.dispatcher.profile_picture;\n      }\n    }\n  }),\n  created: function created() {\n    this.payload.iddispatcher = this.dispatcher.dispatcher_profile.iddispatcher;\n  },\n  methods: {\n    inspector: function inspector() {\n      router.push('/pic-task-list');\n      this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise);\n    },\n    templateTask: function templateTask() {\n      router.push('/template-list');\n      this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise);\n    },\n    editAdmin: function editAdmin() {\n      router.push('/edit-admin');\n      this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise);\n    },\n    resendActivation: function resendActivation() {\n      var obj = {\n        page: '/dispatcher',\n        iddispatcher: this.payload.iddispatcher\n      };\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch(action.RESEND_LINK_ACTIVATION, obj);\n    },\n    deleteB: function deleteB() {\n      var _this = this;\n\n      Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(function (result) {\n        if (result.value) {\n          _this.$store.commit(mutation.BUTTON_STATUS, true);\n\n          _this.$store.dispatch(action.DELETE_DISPATCHER, _this.dispatcher.id);\n        }\n      });\n    },\n    activeButton: function activeButton() {\n      var _this2 = this;\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, activate it!\"\n      }).then(function (result) {\n        if (result.value) {\n          _this2.$store.commit(mutation.BUTTON_STATUS, true);\n\n          _this2.$store.dispatch(action.ACTIVATE_DISPATCHER, _this2.dispatcher.id);\n        }\n      });\n    },\n    suspendButton: function () {\n      var _suspendButton = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$Swal$fire, reason;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Swal.fire({\n                  title: 'Enter the reason of suspending',\n                  input: 'text',\n                  showCancelButton: true,\n                  confirmButtonColor: '#3085d6',\n                  cancelButtonColor: '#d33',\n                  confirmButtonText: 'Yes, suspend it!',\n                  inputValidator: function inputValidator(value) {\n                    if (!value) {\n                      return 'You need to write something!';\n                    }\n                  }\n                });\n\n              case 2:\n                _yield$Swal$fire = _context.sent;\n                reason = _yield$Swal$fire.value;\n\n                if (reason) {\n                  this.payload.reason_suspend = reason;\n                  this.payload.users_id = this.dispatcher.id;\n                  this.$store.commit(mutation.BUTTON_STATUS, true);\n                  this.$store.dispatch(action.SUSPEND_DISPATCHER, this.payload);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function suspendButton() {\n        return _suspendButton.apply(this, arguments);\n      }\n\n      return suspendButton;\n    }(),\n    editButton: function () {\n      var _editButton = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log('mantap :', this.dispatcher);\n                _context2.next = 3;\n                return this.$store.commit(mutation.SET_ID_DISPATCHER, this.dispatcher.id);\n\n              case 3:\n                router.push({\n                  path: \"/edit-dispatcher\"\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function editButton() {\n        return _editButton.apply(this, arguments);\n      }\n\n      return editButton;\n    }(),\n    backButton: function backButton() {\n      router.push('/dispatcher');\n    },\n    imgAlt: function imgAlt(event) {\n      event.target.src = require(\"@/assets/images/avatar-2.jpg\");\n    }\n  }\n};",{"version":3,"sources":["detail-dispatcher.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-row :gutter=\"20\">\r\n            <el-col :lg=\"8\" :xl=\"3\">\r\n                <div class=\"thumbnail\">\r\n                    <img class=\"potrait\" :src=\"profilepicture\" @error=\"imgAlt\">\r\n                    </div>\r\n            </el-col>\r\n            <el-col :lg=\"16\" :xl=\"21\">\r\n                <div class=\"flex center demo-box\">\r\n                    <div class=\"right-box box grow\">\r\n                        <dl>\r\n                            <dt>Dispatcher Name</dt>\r\n                            <dd> {{ dispatcher.name }}</dd>\r\n                            <dt>Dispatcher Email</dt>\r\n                            <dd>{{ dispatcher.email }}</dd>\r\n                            <dt>Dispatcher Gender</dt>\r\n                            <dd>{{ (dispatcher.gender = 1) ? 'Male' : 'Female' }}</dd>\r\n                            <dt>Dispatcher Birth Date</dt>\r\n                            <dd>{{ (dispatcher.dispatcher_profile.birthdate || dispatcher.birthdate ) }}</dd>\r\n                        </dl>\r\n                    </div>\r\n                    <div class=\"left-box box grow\">\r\n                        <dl>\r\n                            <dt>Dispatcher NIK</dt>\r\n                            <dd>{{ dispatcher.dispatcher_profile.nik }}</dd>\r\n                            <dt>Dispatcher Phone Number</dt>\r\n                            <dd>{{ dispatcher.phonenumber }}</dd>\r\n                            <dt>Dispatcher Type</dt>\r\n                            <dd>{{ (dispatcher.role.idrole === 4) ? 'REGULER' : 'PLUS' }}</dd>\r\n                            <dt>Dispatcher Address</dt>\r\n                            <dd>{{ dispatcher.dispatcher_profile.address }}</dd>\r\n                        </dl>\r\n                    </div>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n        <el-row>\r\n            <el-col :span=\"10\">\r\n                <div class=\"grid-content\">\r\n                    <el-button @click=\"backButton\"> Back</el-button>\r\n                    <el-button @click=\"editButton\" style=\"margin-left: 70px\" type=\"primary\"> Edit </el-button>\r\n                </div>\r\n            </el-col>\r\n            <div v-if=\"dispatcher.status==1\">\r\n                <el-col :offset=\"11\" :lg=\"3\">\r\n                    <el-button :loading=\"button\" type=\"danger\" @click=\"suspendButton\">Suspend</el-button>\r\n                </el-col>\r\n            </div>\r\n            <div v-else-if=\"dispatcher.status==2\">\r\n                <el-col :offset=\"10\" :lg=\"3\">\r\n                   <el-button type=\"success\" :loading=\"button\" @click=\"resendActivation\">Resend Activation</el-button>\r\n                </el-col>\r\n            </div>\r\n            <div v-else-if=\"dispatcher.status==3\">\r\n                <el-col :offset=\"8\" :lg=\"3\">\r\n                    <el-button :loading=\"button\" @click=\"deleteB\" type=\"danger\"> Delete </el-button>\r\n                </el-col>\r\n                <el-col :lg=\"3\">\r\n                    <el-button :loading=\"button\" @click=\"activeButton\" type=\"primary\">Active</el-button>\r\n                </el-col>\r\n            </div>\r\n        </el-row>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport router from '../../../router'\r\nimport {\r\n    mapGetters\r\n} from 'vuex'\r\nimport * as getter from '../../../store/getters-types'\r\nimport * as action from '../../../store/action-types'\r\nimport * as mutation from '../../../store/mutation-types'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            payload: {\r\n                reason_suspend: \"\",\r\n                users_id: null,\r\n                iddispatcher: \"\",\r\n            },\r\n            alt: require(\"@/assets/images/avatar-2.jpg\")\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            dispatcher: getter.DISPATCHER,\r\n            button: getter.GET_BUTTON,\r\n        }),\r\n        profilepicture() {\r\n            if (this.dispatcher.profile_picture == null) {\r\n                return this.alt\r\n            } else {\r\n                return this.dispatcher.profile_picture\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.payload.iddispatcher = this.dispatcher.dispatcher_profile.iddispatcher\r\n    },\r\n    methods: {\r\n        inspector() {\r\n            router.push('/pic-task-list')\r\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n        },\r\n        templateTask() {\r\n            router.push('/template-list')\r\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n        },\r\n        editAdmin() {\r\n            router.push('/edit-admin')\r\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n        },\r\n        resendActivation(){\r\n            let obj ={\r\n                page : '/dispatcher',\r\n                iddispatcher   : this.payload.iddispatcher\r\n            }\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            this.$store.dispatch(action.RESEND_LINK_ACTIVATION, obj)\r\n        },\r\n        deleteB() {\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"You won't be able to revert this!\",\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!'\r\n            }).then((result) => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.DELETE_DISPATCHER, this.dispatcher.id)\r\n                }\r\n            })\r\n        },\r\n        activeButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, activate it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.ACTIVATE_DISPATCHER, this.dispatcher.id);\r\n                }\r\n            });\r\n        },\r\n        async suspendButton() {\r\n            const {\r\n                value: reason\r\n            } = await Swal.fire({\r\n                title: 'Enter the reason of suspending',\r\n                input: 'text',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, suspend it!',\r\n                inputValidator: (value) => {\r\n                    if (!value) {\r\n                        return 'You need to write something!'\r\n                    }\r\n                }\r\n            })\r\n            if (reason) {\r\n                this.payload.reason_suspend = reason;\r\n                this.payload.users_id = this.dispatcher.id;\r\n                this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                this.$store.dispatch(action.SUSPEND_DISPATCHER, this.payload)\r\n            }\r\n        },\r\n        async editButton() {\r\n            console.log('mantap :', this.dispatcher)\r\n            await this.$store.commit(mutation.SET_ID_DISPATCHER, this.dispatcher.id)\r\n            router.push({\r\n                path: `/edit-dispatcher`\r\n            })\r\n        },\r\n        backButton() {\r\n            router.push('/dispatcher')\r\n        },\r\n        imgAlt(event) {\r\n            event.target.src = require(\"@/assets/images/avatar-2.jpg\");\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    padding: 0px 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.thumbnail {\r\n    position: relative;\r\n    width: 220px;\r\n    height: 250px;\r\n    overflow: hidden;\r\n}\r\n\r\n.thumbnail img {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    height: 100%;\r\n    width: auto;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    -ms-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.thumbnail img.portrait {\r\n    width: 100%;\r\n    height: auto;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/pages/dispathcer"}]}