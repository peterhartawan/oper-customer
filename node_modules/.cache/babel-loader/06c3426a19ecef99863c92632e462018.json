{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\employee\\detail-employee.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\employee\\detail-employee.vue","mtime":1644413760496},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../../router\";\nimport { mapGetters, mapMutations } from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport Swal from \"sweetalert2\";\nexport default {\n  data: function data() {\n    return {\n      buttonTrack: false,\n      payload: {\n        reason_suspend: \"\",\n        users_id: null\n      },\n      alt: require(\"@/assets/images/avatar-2.jpg\"),\n      alt2: require(\"@/assets/images/Oper_Logo_Landscape.png\")\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    employee: getter.GET_DETAIL_EMPLOYEE,\n    button: getter.GET_BUTTON,\n    resendPinButton: getter.GET_BUTTON_RESEND_PIN\n  })), {}, {\n    profilepicture: function profilepicture() {\n      if (this.employee.profile_picture == null) {\n        return this.alt;\n      } else {\n        return this.employee.profile_picture;\n      }\n    },\n    additionalimage: function additionalimage() {\n      if (this.employee.profil_picture_2 == null || this.employee.profil_picture_2 == \"\") {\n        return this.alt2;\n      } else {\n        return this.employee.profil_picture_2;\n      }\n    },\n    offsetSize: function offsetSize() {\n      if (this.employee.is_first_login === 1) {\n        return 1;\n      } else {\n        return 16;\n      }\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapMutations({\n    type: mutation.TRACKING_TYPE,\n    id: mutation.ID_ORDER,\n    pathType: mutation.SET_PATH\n  })), {}, {\n    deleteB: function deleteB() {\n      var _this = this;\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\"\n      }).then(function (result) {\n        if (result.value) {\n          _this.$store.commit(mutation.BUTTON_STATUS, true);\n\n          _this.$store.dispatch(action.DELETE_EMPLOYEE, _this.employee.users_id);\n        }\n      });\n    },\n    resendPIN: function resendPIN() {\n      var obj = {\n        pin_type: \"/employee/resend-pin\",\n        id: this.employee.users_id\n      };\n      this.$store.commit(mutation.SET_RESEND_PIN_BUTTON, true);\n      this.$store.dispatch(action.RESEND_PIN, obj);\n    },\n    activeButton: function activeButton() {\n      var _this2 = this;\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, activate it!\"\n      }).then(function (result) {\n        if (result.value) {\n          _this2.$store.commit(mutation.BUTTON_STATUS, true);\n\n          _this2.$store.dispatch(action.ACTIVATE_EMPLOYEE, _this2.employee.users_id);\n        }\n      });\n    },\n    trackEmployee: function trackEmployee() {\n      this.type(\"task?idorder=\");\n      this.id(this.employee.id);\n      this.pathType(this.$route.path);\n      router.replace(\"/order/tracking\");\n    },\n    suspendButton: function () {\n      var _suspendButton = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$Swal$fire, reason;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Swal.fire({\n                  title: \"Enter the reason of suspending\",\n                  input: \"text\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, suspend it!\",\n                  inputValidator: function inputValidator(value) {\n                    if (!value) {\n                      return \"You need to write something!\";\n                    }\n                  }\n                });\n\n              case 2:\n                _yield$Swal$fire = _context.sent;\n                reason = _yield$Swal$fire.value;\n\n                if (reason) {\n                  this.$store.commit(mutation.BUTTON_STATUS, true);\n                  this.payload.reason_suspend = reason;\n                  this.payload.users_id = this.employee.users_id;\n                  this.$store.dispatch(action.SUSPEND_EMPLOYEE, this.payload);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function suspendButton() {\n        return _suspendButton.apply(this, arguments);\n      }\n\n      return suspendButton;\n    }(),\n    editButton: function editButton() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$store.dispatch(action.DETAIL_EMPLOYEE, this.employee.id);\n      router.push({\n        path: \"/edit-employee/\" + this.employee.id\n      });\n    },\n    backButton: function backButton() {\n      router.replace(\"/employee\");\n    },\n    imgAlt: function imgAlt(event) {\n      event.target.src = this.alt;\n    }\n  }),\n  created: function created() {\n    this.buttonTrack = this.employee.is_on_task === 1;\n  }\n};",{"version":3,"sources":["detail-employee.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-row :gutter=\"20\" style=\"margin-top: 10px\">\r\n            <el-col :offset=\"1\" style=\"margin-top: 40px\" :span=\"8\">\r\n                <div class=\"thumbnail\">\r\n                    <img class=\"potrait\" :src=\"profilepicture\" @error=\"imgAlt\" />\r\n                </div>\r\n            </el-col>\r\n            <el-col :span=\"1\">\r\n                <hr width=\"1\" size=\"350\" style=\"background-color: #b8babe; border: none;\">\r\n            </el-col>\r\n            <el-col style=\"margin-top: 30px\" :span=\"12\">\r\n                <div class=\"thumbnail2\">\r\n                    <img class=\"potrait2\" :src=\"additionalimage\" />\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\" style=\"margin-bottom: 20px\">\r\n            <el-col :span=\"8\">\r\n                <h3>Employee Name</h3>\r\n                {{employee.name }}\r\n                <h3>Employee Email</h3>\r\n                {{employee.email }}\r\n                <h3>Employee Phone Number</h3>\r\n                {{employee.phonenumber}}\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <h3>Employee Gender</h3>\r\n                {{(employee.gender == 1) ? 'Male' : 'Female'}}\r\n                <h3>Employee Birth Date</h3>\r\n                {{employee.birthdate}}\r\n                <h3>Employee NIK</h3>\r\n                {{employee.nik }}\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <h3>Employee Type</h3>\r\n                {{employee.employee_position.job_name}}\r\n                <h3>Employee Address</h3>\r\n                {{employee.address }}\r\n            </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\" style=\"margin-top: 30px\">\r\n            <el-col :span=\"3\">\r\n                <el-button @click=\"backButton\">Back</el-button>\r\n            </el-col>\r\n            <el-col :span=\"4\">\r\n                <el-button @click=\"editButton\" type=\"primary\">Edit</el-button>\r\n            </el-col>\r\n            <div v-if=\"employee.status === 1 \">\r\n                <el-col :offset=\"13\" :span=\"4\">\r\n                    <el-button :loading=\"button\" type=\"danger\" @click=\"suspendButton\">Suspend</el-button>\r\n                </el-col>\r\n            </div>\r\n            <div v-else-if=\"employee.status === 3\">\r\n                <el-col :offset=\"9\" :span=\"4\">\r\n                    <el-button :loading=\"button\" @click=\"deleteB\" type=\"danger\">Delete</el-button>\r\n                </el-col>\r\n                <el-col :span=\"4\">\r\n                    <el-button :loading=\"button\" @click=\"activeButton\" type=\"success\">Activate</el-button>\r\n                </el-col>\r\n            </div>\r\n        </el-row>\r\n    </div>\r\n    <div v-if=\"employee.is_first_login === 1\">\r\n        <el-button style=\"width: auto\" :loading=\"resendPinButton\" class=\"topright\" type=\"warning\" @click=\"resendPIN\">Resend PIN</el-button>\r\n    </div>\r\n    <div v-if=\"employee.status === 1 \">\r\n        <el-button v-if=\"buttonTrack\" style=\"width: auto\" class=\"topleft\" type=\"info\" @click=\"trackEmployee\">Track Employee</el-button>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport router from \"../../../router\";\r\nimport {\r\n    mapGetters,\r\n    mapMutations\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from \"../../../store/mutation-types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            buttonTrack: false,\r\n            payload: {\r\n                reason_suspend: \"\",\r\n                users_id: null\r\n            },\r\n            alt: require(\"@/assets/images/avatar-2.jpg\"),\r\n            alt2: require(\"@/assets/images/Oper_Logo_Landscape.png\")\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            employee: getter.GET_DETAIL_EMPLOYEE,\r\n            button: getter.GET_BUTTON,\r\n            resendPinButton: getter.GET_BUTTON_RESEND_PIN\r\n        }),\r\n        profilepicture() {\r\n            if (this.employee.profile_picture == null) {\r\n                return this.alt;\r\n            } else {\r\n                return this.employee.profile_picture;\r\n            }\r\n        },\r\n        additionalimage() {\r\n            if (this.employee.profil_picture_2 == null || this.employee.profil_picture_2 == \"\" ) {\r\n                return this.alt2;\r\n            } else {\r\n                return this.employee.profil_picture_2;\r\n            }\r\n        },\r\n        offsetSize() {\r\n            if (this.employee.is_first_login === 1) {\r\n                return 1;\r\n            } else {\r\n                return 16;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapMutations({\r\n            type: mutation.TRACKING_TYPE,\r\n            id: mutation.ID_ORDER,\r\n            pathType: mutation.SET_PATH\r\n        }),\r\n        deleteB() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                    this.$store.dispatch(action.DELETE_EMPLOYEE, this.employee.users_id);\r\n                }\r\n            });\r\n        },\r\n        resendPIN() {\r\n            let obj = {\r\n                pin_type: \"/employee/resend-pin\",\r\n                id: this.employee.users_id\r\n            };\r\n            this.$store.commit(mutation.SET_RESEND_PIN_BUTTON, true);\r\n            this.$store.dispatch(action.RESEND_PIN, obj);\r\n        },\r\n        activeButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, activate it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                    this.$store.dispatch(\r\n                        action.ACTIVATE_EMPLOYEE,\r\n                        this.employee.users_id\r\n                    );\r\n                }\r\n            });\r\n        },\r\n        trackEmployee() {\r\n            this.type(\"task?idorder=\");\r\n            this.id(this.employee.id);\r\n            this.pathType(this.$route.path);\r\n            router.replace(\"/order/tracking\");\r\n        },\r\n        async suspendButton() {\r\n            const {\r\n                value: reason\r\n            } = await Swal.fire({\r\n                title: \"Enter the reason of suspending\",\r\n                input: \"text\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, suspend it!\",\r\n                inputValidator: value => {\r\n                    if (!value) {\r\n                        return \"You need to write something!\";\r\n                    }\r\n                }\r\n            });\r\n            if (reason) {\r\n                this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                this.payload.reason_suspend = reason;\r\n                this.payload.users_id = this.employee.users_id;\r\n                this.$store.dispatch(action.SUSPEND_EMPLOYEE, this.payload);\r\n            }\r\n        },\r\n        editButton() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false);\r\n            this.$store.dispatch(action.DETAIL_EMPLOYEE, this.employee.id);\r\n            router.push({\r\n                path: `/edit-employee/` + this.employee.id\r\n            });\r\n        },\r\n        backButton() {\r\n            router.replace(\"/employee\");\r\n        },\r\n        imgAlt(event) {\r\n            event.target.src = this.alt;\r\n        }\r\n    },\r\n    created() {\r\n        this.buttonTrack = this.employee.is_on_task === 1;\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.verticalLine {\r\n    border-left: thick solid #ff0000;\r\n}\r\n\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-button {\r\n    width: 100%;\r\n}\r\n\r\n.el-row {\r\n    padding: 0px 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-select {\r\n    width: 100%;\r\n}\r\n\r\n.thumbnail {\r\n    border-radius: 8px;\r\n    position: relative;\r\n    width: 263px;\r\n    height: 300px;\r\n    overflow: hidden;\r\n}\r\n\r\n.thumbnail img {\r\n    border-radius: 8px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    height: 100%;\r\n    width: auto;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    -ms-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.thumbnail img.portrait {\r\n    width: 100%;\r\n    height: auto;\r\n}\r\n\r\n.thumbnail2 {\r\n    border-radius: 0px;\r\n    position: relative;\r\n    width: 500px;\r\n    height: 300px;\r\n    overflow: hidden;\r\n}\r\n\r\n.thumbnail2 img {\r\n    border-radius: 0px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    height: 100%;\r\n    width: auto;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    -ms-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.thumbnail2 img.portrait2 {\r\n    width: 100%;\r\n    height: auto;\r\n}\r\n\r\n.topright {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 60px;\r\n    font-size: 16px;\r\n}\r\n\r\n.disabled {\r\n    pointer-events: none;\r\n    cursor: not-allowed;\r\n    -webkit-box-shadow: none;\r\n    box-shadow: none;\r\n}\r\n\r\n.topleft {\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 60px;\r\n    font-size: 16px;\r\n}\r\n\r\n.six {\r\n    border: 0;\r\n    height: 0;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/pages/employee"}]}