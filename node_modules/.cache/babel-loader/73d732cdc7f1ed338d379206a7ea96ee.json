{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\store\\modules\\tasktemplate\\action.js","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\store\\modules\\tasktemplate\\action.js","mtime":1647032354116},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621}],"contextDependencies":[],"result":["import _defineProperty from \"C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _action$TEMPLATE_LIST;\n\nimport * as action from \"../../action-types\";\nimport * as mutation from \"../../mutation-types\";\nimport localAxios from \"../../../services/http/client\";\nimport swal from 'sweetalert2';\nimport * as typeS from \"../../../services/path_service\";\nimport router from \"../../../router\";\nexport default (_action$TEMPLATE_LIST = {}, _defineProperty(_action$TEMPLATE_LIST, action.TEMPLATE_LIST, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, payload) {\n    var commit, dispatch, User, Url, token, _yield$localAxios$get, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit, dispatch = _ref.dispatch;\n            _context.prev = 1;\n            User = JSON.parse(localStorage.getItem('user'));\n            Url = '';\n            User.idrole === 2 ? Url = \"\".concat(typeS.tasktemplate_page).concat(payload.page, \"&idvendor=\").concat(User.vendor.idvendor) : Url = \"\".concat(typeS.tasktemplate_page).concat(payload.page, \"&identerprise=\").concat(payload.id);\n            token = localStorage.getItem('token');\n            _context.next = 8;\n            return localAxios.get(Url, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 8:\n            _yield$localAxios$get = _context.sent;\n            data = _yield$localAxios$get.data;\n            objList = {\n              dataList: data.data.data,\n              nextC: data.data.next_page_url,\n              prevC: data.data.prev_page_url,\n              firstP: data.data.first_page_url,\n              fromPA: data.data.from,\n              totalPE: data.data.total\n            };\n            commit(mutation.SET_TEMPLATE_LIST, objList);\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 14]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}()), _defineProperty(_action$TEMPLATE_LIST, action.DROPDOWN_TEMPLATE, function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3, payload) {\n    var commit, dispatch, User, Url, token, _yield$localAxios$get2, data, objList;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref3.commit, dispatch = _ref3.dispatch;\n            _context2.prev = 1;\n            User = JSON.parse(localStorage.getItem('user'));\n            Url = '';\n\n            if (User.idrole === 2) {\n              Url = \"\".concat(typeS.tasktemplate, \"?idvendor=\").concat(User.vendor.idvendor, \"&dropdown=1\");\n            } else {\n              Url = \"\".concat(typeS.tasktemplate, \"?identerprise=\").concat(payload.id, \"&dropdown=1\");\n            }\n\n            token = localStorage.getItem('token');\n            _context2.next = 8;\n            return localAxios.get(Url, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 8:\n            _yield$localAxios$get2 = _context2.sent;\n            data = _yield$localAxios$get2.data;\n            objList = {\n              dataList: data.data.data,\n              nextC: data.data.next_page_url,\n              prevC: data.data.prev_page_url,\n              firstP: data.data.first_page_url,\n              fromPA: data.data.from,\n              totalPE: data.data.total\n            };\n            commit(mutation.SET_TEMPLATE_LIST, objList);\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context2.t0);\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 14]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}()), _defineProperty(_action$TEMPLATE_LIST, action.CREATE_TEMPLATE_TASK, function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5, payloads) {\n    var commit, dispatch, token, i, len, picolo, jsonData, idvendor, _yield$localAxios$pos, data;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref5.commit, dispatch = _ref5.dispatch;\n            _context3.prev = 1;\n            token = localStorage.getItem('token');\n            len = payloads.tasks, picolo = [];\n\n            for (i = 0; i < len.length; i++) {\n              picolo.push({\n                name: len[i].name,\n                description: len[i].task_description,\n                location_name: len[i].location_name,\n                latitude: len[i].lat.toString(),\n                longitude: len[i].long.toString(),\n                is_required: len[i].is_required,\n                is_need_photo: len[i].is_need_photo,\n                is_need_inspector_validation: len[i].is_need_inspector_validation\n              });\n            }\n\n            jsonData = '';\n            idvendor = JSON.parse(localStorage.getItem('user'));\n\n            if (idvendor.idrole === 2) {\n              jsonData = JSON.stringify({\n                template_name: payloads.name,\n                template_description: payloads.description,\n                vendor_idvendor: idvendor.vendor.idvendor,\n                tasks: picolo\n              });\n            } else {\n              jsonData = JSON.stringify({\n                template_name: payloads.name,\n                template_description: payloads.description,\n                identerprise: payloads.identerprise,\n                tasks: picolo\n              });\n            }\n\n            _context3.next = 10;\n            return localAxios.post(typeS.tasktemplate, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 10:\n            _yield$localAxios$pos = _context3.sent;\n            data = _yield$localAxios$pos.data;\n            commit(mutation.BUTTON_STATUS, false);\n            router.push('/template-list');\n            _context3.next = 21;\n            break;\n\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context3.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context3.t0);\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 16]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref6.apply(this, arguments);\n  };\n}()), _defineProperty(_action$TEMPLATE_LIST, action.TEMPLATE_ID, function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7, payload) {\n    var commit, dispatch, token, _yield$localAxios$get3, data;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref7.commit, dispatch = _ref7.dispatch;\n            _context4.prev = 1;\n            token = localStorage.getItem('token');\n            _context4.next = 5;\n            return localAxios.get(typeS.tasktemplate + '/' + payload, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$get3 = _context4.sent;\n            data = _yield$localAxios$get3.data;\n            commit(mutation.SET_TEMPLATE_ID, data.data);\n            return _context4.abrupt(\"return\", data.data);\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context4.t0);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 11]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref8.apply(this, arguments);\n  };\n}()), _defineProperty(_action$TEMPLATE_LIST, action.UPDATE_TEMPLATE, function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref9, payloads) {\n    var commit, dispatch, i, len, picolo, token, jsonData, idvendor, _yield$localAxios$put, data;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            commit = _ref9.commit, dispatch = _ref9.dispatch;\n            _context5.prev = 1;\n            len = payloads.tasks, picolo = [], token = localStorage.getItem('token');\n\n            for (i = 0; i < len.length; i++) {\n              picolo.push({\n                name: len[i].name,\n                description: len[i].task_description,\n                location_name: len[i].location_name,\n                latitude: len[i].lat.toString(),\n                longitude: len[i].long.toString(),\n                is_required: len[i].is_required,\n                is_need_photo: len[i].is_need_photo,\n                is_need_inspector_validation: len[i].is_need_inspector_validation\n              });\n            }\n\n            jsonData = '';\n            idvendor = JSON.parse(localStorage.getItem('user'));\n\n            if (idvendor.idrole === 2) {\n              jsonData = JSON.stringify({\n                template_name: payloads.name,\n                template_description: payloads.description,\n                vendor_idvendor: idvendor.vendor.idvendor,\n                tasks: picolo\n              });\n            } else {\n              jsonData = JSON.stringify({\n                template_name: payloads.name,\n                template_description: payloads.description,\n                identerprise: payloads.identerprise,\n                tasks: picolo\n              });\n            }\n\n            _context5.next = 9;\n            return localAxios.put(typeS.tasktemplate + '/' + payloads.idtemplate, jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 9:\n            _yield$localAxios$put = _context5.sent;\n            data = _yield$localAxios$put.data;\n            commit(mutation.SET_ID_ENTERPRISE, payloads.identerprise);\n            commit(mutation.BUTTON_STATUS, false);\n            router.push('/template-list');\n            _context5.next = 21;\n            break;\n\n          case 16:\n            _context5.prev = 16;\n            _context5.t0 = _context5[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context5.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context5.t0);\n\n          case 21:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 16]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref10.apply(this, arguments);\n  };\n}()), _defineProperty(_action$TEMPLATE_LIST, action.DELETE_TEMPLATE, function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(_ref11, payload) {\n    var commit, dispatch, token, _yield$localAxios$del, data, obj;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            commit = _ref11.commit, dispatch = _ref11.dispatch;\n            _context6.prev = 1;\n            token = localStorage.getItem('token');\n            _context6.next = 5;\n            return localAxios.delete(typeS.tasktemplate + '/' + payload.idList, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 5:\n            _yield$localAxios$del = _context6.sent;\n            data = _yield$localAxios$del.data;\n            obj = {\n              id: payload.id,\n              page: payload.currPage\n            };\n            dispatch(action.TEMPLATE_LIST, obj);\n            _context6.next = 14;\n            break;\n\n          case 11:\n            _context6.prev = 11;\n            _context6.t0 = _context6[\"catch\"](1);\n            dispatch(action.DATA_ERROR, _context6.t0);\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 11]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref12.apply(this, arguments);\n  };\n}()), _defineProperty(_action$TEMPLATE_LIST, action.TEMPLATE_REPORTING, function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref13, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$pos2, data;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            commit = _ref13.commit, dispatch = _ref13.dispatch;\n            _context7.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              daterange: payload.startdate + '-' + payload.duedate,\n              type_report: payload.type\n            });\n            _context7.next = 6;\n            return localAxios.post('/template/template-report', jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$pos2 = _context7.sent;\n            data = _yield$localAxios$pos2.data;\n            commit(mutation.SET_TEMPLATE_REPORT, data.data);\n            commit(mutation.BUTTON_STATUS, false);\n            _context7.next = 17;\n            break;\n\n          case 12:\n            _context7.prev = 12;\n            _context7.t0 = _context7[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context7.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context7.t0);\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 12]]);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref14.apply(this, arguments);\n  };\n}()), _defineProperty(_action$TEMPLATE_LIST, action.EXPORT_ORDER_TEMPLATE, function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref15, payload) {\n    var commit, dispatch, token, jsonData, _yield$localAxios$pos3, data, jsonfile, jsonT, combJson, fileDownload;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            commit = _ref15.commit, dispatch = _ref15.dispatch;\n            _context8.prev = 1;\n            token = localStorage.getItem('token');\n            jsonData = JSON.stringify({\n              daterange: payload.startdate + '-' + payload.duedate,\n              idtemplate: payload.idtemplate\n            });\n            _context8.next = 6;\n            return localAxios.post('/' + payload.type + '/reporting', jsonData, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$pos3 = _context8.sent;\n            data = _yield$localAxios$pos3.data;\n            jsonfile = JSON.stringify(data.data).split(' ');\n            jsonT = jsonfile[1].split(':');\n            combJson = jsonT[1] + ':' + jsonT[2];\n            fileDownload = combJson.split('}')[0];\n            commit(mutation.BUTTON_STATUS, false);\n            return _context8.abrupt(\"return\", fileDownload);\n\n          case 16:\n            _context8.prev = 16;\n            _context8.t0 = _context8[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            swal(_context8.t0.response.data.message, '', 'error');\n            dispatch(action.DATA_ERROR, _context8.t0);\n\n          case 21:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[1, 16]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref16.apply(this, arguments);\n  };\n}()), _action$TEMPLATE_LIST);",{"version":3,"sources":["C:/Users/ASUS/Documents/GitHub/operdev/oper-customer/src/store/modules/tasktemplate/action.js"],"names":["action","mutation","localAxios","swal","typeS","router","TEMPLATE_LIST","payload","commit","dispatch","User","JSON","parse","localStorage","getItem","Url","idrole","tasktemplate_page","page","vendor","idvendor","id","token","get","headers","data","objList","dataList","nextC","next_page_url","prevC","prev_page_url","firstP","first_page_url","fromPA","from","totalPE","total","SET_TEMPLATE_LIST","DATA_ERROR","DROPDOWN_TEMPLATE","tasktemplate","CREATE_TEMPLATE_TASK","payloads","len","tasks","picolo","i","length","push","name","description","task_description","location_name","latitude","lat","toString","longitude","long","is_required","is_need_photo","is_need_inspector_validation","jsonData","stringify","template_name","template_description","vendor_idvendor","identerprise","post","BUTTON_STATUS","response","message","TEMPLATE_ID","SET_TEMPLATE_ID","UPDATE_TEMPLATE","put","idtemplate","SET_ID_ENTERPRISE","DELETE_TEMPLATE","delete","idList","obj","currPage","TEMPLATE_REPORTING","daterange","startdate","duedate","type_report","type","SET_TEMPLATE_REPORT","EXPORT_ORDER_TEMPLATE","jsonfile","split","jsonT","combJson","fileDownload"],"mappings":"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","sourcesContent":["import * as action from '../../action-types'\r\nimport * as mutation from '../../mutation-types'\r\nimport localAxios from '../../../services/http/client'\r\nimport swal from 'sweetalert2'\r\nimport * as typeS from '../../../services/path_service'\r\nimport router from '../../../router'\r\n\r\n\r\n\r\n\r\nexport default {\r\n\r\n    async [action.TEMPLATE_LIST]({commit, dispatch}, payload) {\r\n        try{\r\n            let User = JSON.parse(localStorage.getItem('user'));\r\n            let Url = '';\r\n            (User.idrole === 2) ? Url = `${typeS.tasktemplate_page}${payload.page}&idvendor=${User.vendor.idvendor}` : Url = `${typeS.tasktemplate_page}${payload.page}&identerprise=${payload.id}`;\r\n            let token = localStorage.getItem('token')\r\n            let { data } = await localAxios.get(Url, {\r\n                headers: {'Authorization': 'Bearer '+token}\r\n            })\r\n            let objList = {\r\n                dataList : data.data.data,\r\n                nextC   : data.data.next_page_url,\r\n                prevC   : data.data.prev_page_url,\r\n                firstP  : data.data.first_page_url,\r\n                fromPA  : data.data.from,\r\n                totalPE  : data.data.total\r\n            }\r\n            commit(mutation.SET_TEMPLATE_LIST, objList )\r\n        }catch (err) {\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.DROPDOWN_TEMPLATE]({commit, dispatch}, payload) {\r\n        try{\r\n            let User = JSON.parse(localStorage.getItem('user'));\r\n            let Url = '';\r\n            if(User.idrole === 2) {\r\n                Url = `${typeS.tasktemplate}?idvendor=${User.vendor.idvendor}&dropdown=1`\r\n            } else {\r\n                Url = `${typeS.tasktemplate}?identerprise=${payload.id}&dropdown=1`\r\n            }\r\n            let token = localStorage.getItem('token')\r\n            let { data } = await localAxios.get(Url, {\r\n                headers: {'Authorization': 'Bearer '+token}\r\n            });\r\n            let objList = {\r\n                dataList : data.data.data,\r\n                nextC   : data.data.next_page_url,\r\n                prevC   : data.data.prev_page_url,\r\n                firstP  : data.data.first_page_url,\r\n                fromPA  : data.data.from,\r\n                totalPE  : data.data.total\r\n            }\r\n            commit(mutation.SET_TEMPLATE_LIST, objList )\r\n        }catch (err) {\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.CREATE_TEMPLATE_TASK]({commit, dispatch}, payloads) {\r\n        try{\r\n            let token = localStorage.getItem('token');\r\n            let i, len = payloads.tasks, picolo = []\r\n            for(i = 0; i < len.length; i++){\r\n                picolo.push({\r\n                    name                            : len[i].name,\r\n                    description                     : len[i].task_description,\r\n                    location_name                   : len[i].location_name,\r\n                    latitude                        : len[i].lat.toString(),\r\n                    longitude                       : len[i].long.toString(),\r\n                    is_required                     : len[i].is_required,\r\n                    is_need_photo                   : len[i].is_need_photo,\r\n                    is_need_inspector_validation    : len[i].is_need_inspector_validation\r\n                })\r\n            }\r\n            let  jsonData = '';\r\n            let  idvendor = JSON.parse(localStorage.getItem('user'));\r\n            if(idvendor.idrole === 2) {\r\n                   jsonData = JSON.stringify({\r\n                       template_name           : payloads.name,\r\n                       template_description    : payloads.description,\r\n                       vendor_idvendor         : idvendor.vendor.idvendor,\r\n                       tasks                   : picolo\r\n                   });\r\n            }else {\r\n                jsonData = JSON.stringify({\r\n                    template_name           : payloads.name,\r\n                    template_description    : payloads.description,\r\n                    identerprise            : payloads.identerprise,\r\n                    tasks                   : picolo\r\n                });\r\n            }\r\n            let { data } = await localAxios.post(typeS.tasktemplate,\r\n                jsonData, {\r\n                headers: {\r\n                    'Authorization'     : 'Bearer '+token\r\n                }\r\n            })\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            router.push('/template-list')\r\n\r\n        }catch(err){\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message,'', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.TEMPLATE_ID]({commit, dispatch}, payload) {\r\n        try{\r\n            let token = localStorage.getItem('token')\r\n            let { data } = await localAxios.get(typeS.tasktemplate +'/'+ payload, {\r\n                headers: {'Authorization': 'Bearer '+token}\r\n            })\r\n\r\n            commit(mutation.SET_TEMPLATE_ID, data.data)\r\n            return data.data\r\n        }catch (err) {\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.UPDATE_TEMPLATE]({commit, dispatch}, payloads) {\r\n        try {\r\n\r\n            let i, len = payloads.tasks, picolo = [], token = localStorage.getItem('token');\r\n            for(i = 0; i < len.length; i++){\r\n                picolo.push({\r\n                    name                            : len[i].name,\r\n                    description                     : len[i].task_description,\r\n                    location_name                   : len[i].location_name,\r\n                    latitude                        : len[i].lat.toString(),\r\n                    longitude                       : len[i].long.toString(),\r\n                    is_required                     : len[i].is_required,\r\n                    is_need_photo                   : len[i].is_need_photo,\r\n                    is_need_inspector_validation    : len[i].is_need_inspector_validation\r\n                })\r\n            }\r\n\r\n            let  jsonData = '';\r\n            let  idvendor = JSON.parse(localStorage.getItem('user'))\r\n            if(idvendor.idrole === 2) {\r\n                jsonData = JSON.stringify({\r\n                    template_name           : payloads.name,\r\n                    template_description    : payloads.description,\r\n                    vendor_idvendor         : idvendor.vendor.idvendor,\r\n                    tasks                   : picolo\r\n                });\r\n            }else {\r\n                jsonData = JSON.stringify({\r\n                    template_name           : payloads.name,\r\n                    template_description    : payloads.description,\r\n                    identerprise            : payloads.identerprise,\r\n                    tasks                   : picolo\r\n                });\r\n            }\r\n\r\n            let { data } = await localAxios.put(typeS.tasktemplate +'/'+payloads.idtemplate,\r\n                jsonData, {\r\n                headers: {\r\n                    'Authorization'     : 'Bearer '+token\r\n                }\r\n            })\r\n            commit(mutation.SET_ID_ENTERPRISE, payloads.identerprise);\r\n            commit(mutation.BUTTON_STATUS, false);\r\n            router.push('/template-list')\r\n        }\r\n        catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false);\r\n            swal(err.response.data.message,'', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.DELETE_TEMPLATE]({commit, dispatch}, payload) {\r\n        try {\r\n\r\n            let token = localStorage.getItem('token');\r\n            let { data } = await localAxios.delete(typeS.tasktemplate +'/' + payload.idList,{\r\n                    headers: {\r\n                        'Authorization'     : 'Bearer '+token\r\n                    }\r\n                });\r\n            let obj = {\r\n                id : payload.id,\r\n                page: payload.currPage\r\n            };\r\n            dispatch(action.TEMPLATE_LIST, obj)\r\n        }catch (err) {\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.TEMPLATE_REPORTING]({commit, dispatch}, payload) {\r\n        try{\r\n            let token = localStorage.getItem('token');\r\n            const jsonData = JSON.stringify({\r\n                daterange           : payload.startdate +'-'+ payload.duedate,\r\n                type_report          : payload.type,\r\n            });\r\n    \r\n            let { data } = await localAxios.post('/template/template-report',\r\n                jsonData,\r\n                { headers: {'Authorization': 'Bearer '+token }\r\n                })\r\n                commit(mutation.SET_TEMPLATE_REPORT, data.data )\r\n                commit(mutation.BUTTON_STATUS, false)\r\n        }catch(err){\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message,'', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n    async [action.EXPORT_ORDER_TEMPLATE]({commit, dispatch}, payload) {\r\n        try {\r\n            let token = localStorage.getItem('token');\r\n            const jsonData = JSON.stringify({\r\n                daterange           : payload.startdate +'-'+ payload.duedate,\r\n                idtemplate          : payload.idtemplate,\r\n            });\r\n            let {data} = await localAxios.post('/'+payload.type+'/reporting',\r\n            jsonData,\r\n                {\r\n                    headers: {'Authorization': 'Bearer ' + token}\r\n                })\r\n            let jsonfile = JSON.stringify(data.data).split(' ');\r\n            let jsonT = jsonfile[1].split(':');\r\n            let combJson = jsonT[1] +':'+ jsonT[2];\r\n            let fileDownload = combJson.split('}')[0];\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            return fileDownload\r\n        } catch (err) {\r\n            commit(mutation.BUTTON_STATUS, false)\r\n            swal(err.response.data.message, '', 'error')\r\n            dispatch(action.DATA_ERROR, err)\r\n        }\r\n    },\r\n};\r\n"]}]}