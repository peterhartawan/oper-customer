{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/dispathcer/dispatcher.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/dispathcer/dispatcher.vue","mtime":1640440454979},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444342},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1640440454211}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\nimport DispatcherCount from '@/components/dispatcher/total-acount';\nimport Affix from '@/components/Affix';\nimport { mapGetters } from 'vuex';\nimport * as getter from \"../../../store/getters-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport * as action from \"../../../store/action-types\";\nexport default {\n  name: 'Table',\n  data: function data() {\n    return {\n      currentPage: 1,\n      input: '',\n      affixEnabled: true,\n      indexT: 1,\n      status: 1,\n      select: [{\n        name: \"ACTIVE\",\n        status: 1\n      }, {\n        name: \"INACTIVE\",\n        status: 2\n      }, {\n        name: \"SUSPENDED\",\n        status: 3\n      }],\n      type: '',\n      dispatcher_type: [{\n        name: \"REGULER\",\n        status: 4\n      }, {\n        name: \"PLUS\",\n        status: 5\n      }]\n    };\n  },\n  components: {\n    Affix: Affix,\n    DispatcherCount: DispatcherCount\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    listData: getter.GET_LIST_DISPATCHER,\n    paginate: getter.GET_PAGINATE_DISPATCHER,\n    loading: getter.GET_BUTTON\n  })), {}, {\n    paginato: function paginato() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    }\n  }),\n  //    async created(){\n  //         this.$store.commit(mutation.BUTTON_STATUS, true);\n  //         await this.$store.dispatch(action.LIST_DISPATCHER,{\n  //             page: this.currentPage,\n  //             typedispatcher : this.type,\n  //             status: this.status});\n  //         },\n  methods: {\n    newCorp: function newCorp() {\n      this.$router.replace('new-dispatcher');\n    },\n    handlePageChange: function handlePageChange(page) {\n      this.currentPage = page;\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch(action.LIST_DISPATCHER, {\n        page: this.currentPage,\n        typedispatcher: this.type,\n        status: this.status\n      });\n    },\n    search: function search() {\n      this.$store.dispatch(action.LIST_DATA_COR, this.input.trim());\n    },\n    getId: function () {\n      var _getId = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$store.dispatch(action.DATA_ID_DISPATCHER, id.id);\n\n              case 2:\n                this.$router.replace({\n                  path: '/detail-dispatcher'\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getId(_x) {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }(),\n    indexMethod: function indexMethod(index) {\n      return index + this.paginato.fromP;\n    },\n    filterStatus: function filterStatus(status) {\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.status = status;\n      this.$store.dispatch(action.LIST_DISPATCHER, {\n        page: 1,\n        typedispatcher: this.type,\n        status: this.status\n      });\n    },\n    filterTypeDispatcher: function filterTypeDispatcher(type) {\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.type = type;\n      this.$store.dispatch(action.LIST_DISPATCHER, {\n        page: 1,\n        typedispatcher: this.type,\n        status: this.status\n      });\n    }\n  }\n};",{"version":3,"sources":["dispatcher.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n        <dispatcher-count />\n    </div>\n</template>\n\n<script>\n    import DispatcherCount from '@/components/dispatcher/total-acount'\n    import Affix from '@/components/Affix'\n    import { mapGetters } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as mutation from '../../../store/mutation-types'\n    import * as action from '../../../store/action-types'\n\n    export default {\n        name: 'Table',\n        data() {\n            return {\n                currentPage: 1,\n                input:'',\n                affixEnabled: true,\n                indexT: 1,\n                status:1 ,\n                select: [\n                {\n                    name: \"ACTIVE\",\n                    status: 1,\n                },\n                {\n                    name: \"INACTIVE\",\n                    status: 2,\n                },\n                {\n                    name: \"SUSPENDED\",\n                    status: 3\n                }\n            ],\n                type : '',\n                dispatcher_type: [\n                    {\n                        name: \"REGULER\",\n                        status: 4\n                    },\n                    {\n                        name: \"PLUS\",\n                        status: 5\n                    }\n                ]\n            }\n        },\n        components: {\n            Affix,\n            DispatcherCount\n        },\n        computed: {\n            ...mapGetters({\n                listData : getter.GET_LIST_DISPATCHER,\n                paginate : getter.GET_PAGINATE_DISPATCHER,\n                loading  : getter.GET_BUTTON\n            }),\n            paginato(){\n                return this.paginate\n            },\n            indexTam(){\n                return this.indexT\n            }\n        },\n    //    async created(){\n    //         this.$store.commit(mutation.BUTTON_STATUS, true);\n    //         await this.$store.dispatch(action.LIST_DISPATCHER,{\n    //             page: this.currentPage,\n    //             typedispatcher : this.type,\n    //             status: this.status});\n    //         },\n        methods: {\n            newCorp()   {\n                this.$router.replace('new-dispatcher')\n            },\n            handlePageChange(page) {\n                this.currentPage = page\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.$store.dispatch( action.LIST_DISPATCHER,\n                    {\n                        page: this.currentPage,\n                        typedispatcher : this.type,\n                        status: this.status\n                    });\n                },\n            search(){\n                this.$store.dispatch( action.LIST_DATA_COR, this.input.trim() )\n            },\n            async getId(id){\n                await this.$store.dispatch(action.DATA_ID_DISPATCHER, id.id)\n                this.$router.replace({ path: '/detail-dispatcher' })\n            },\n            indexMethod(index) {\n                return index + this.paginato.fromP;\n            },\n            filterStatus(status){\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.status = status;\n                this.$store.dispatch(action.LIST_DISPATCHER,\n                    {\n                        page: 1,\n                        typedispatcher : this.type,\n                        status: this.status\n                    });\n            },\n            filterTypeDispatcher(type){\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.type = type;\n                this.$store.dispatch(action.LIST_DISPATCHER,\n                    {\n                        page: 1,\n                        typedispatcher : this.type,\n                        status: this.status\n                    });\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n    .table-box {\n        overflow: auto;\n    }\n    .el-pagination {\n        padding-top: 20px;\n    }\n    .el-input {\n        width: 300px !important;\n    }\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px 10px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n\n</style>\n\n"],"sourceRoot":"src/views/pages/dispathcer"}]}