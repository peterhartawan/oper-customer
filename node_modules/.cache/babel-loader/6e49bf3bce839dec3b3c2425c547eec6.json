{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\src\\views\\pages\\tasktemplate\\template-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\src\\views\\pages\\tasktemplate\\template-list.vue","mtime":1647032353883},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/ASUS/Documents/GitHub/update-request-driver-automation-update/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../../router\";\nimport { mapGetters } from 'vuex';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport Swal from 'sweetalert2';\nexport default {\n  name: 'Table',\n  data: function data() {\n    return {\n      currentPage: 1,\n      input: '',\n      buttonStatus: null,\n      affixEnabled: true,\n      indexT: 1\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    listData: getter.GET_TEMPLATE_LIST,\n    paginate: getter.GET_TEMPLATE_PAGINATE,\n    identer: getter.GET_ID_ENTERPRISE\n  })), {}, {\n    paginat: function paginat() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    }\n  }),\n  created: function created() {\n    JSON.parse(localStorage.getItem('user')).idrole === 2 ? this.buttonStatus = false : this.buttonStatus = true;\n    var obj = {\n      id: this.identer,\n      page: this.currentPage\n    };\n    this.$store.dispatch(action.TEMPLATE_LIST, obj);\n  },\n  methods: {\n    newTemplate: function newTemplate() {\n      this.$router.push('/new-template-task');\n      this.$store.commit(mutation.SET_ID_ENTERPRISE, this.identer);\n    },\n    handlePageChange: function handlePageChange(page) {\n      this.currentPage = page;\n      var obj = {\n        id: this.identer,\n        page: this.currentPage\n      };\n      this.$store.dispatch(action.TEMPLATE_LIST, obj);\n    },\n    delButton: function delButton(e) {\n      var _this = this;\n\n      var obj = {\n        idList: e,\n        id: this.identer,\n        currPage: this.currentPage\n      };\n      Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(function (result) {\n        if (result.value) {\n          _this.$store.dispatch(action.DELETE_TEMPLATE, obj);\n        }\n      });\n    },\n    indexMethod: function indexMethod(index) {\n      return index + this.paginat.fromP;\n    },\n    handleEdit: function handleEdit(e) {\n      this.$router.push('/edit-template-task');\n      this.$store.commit(mutation.SET_ID_ENTERPRISE, e);\n    },\n    onBackButton: function onBackButton() {\n      if (this.buttonStatus) {\n        router.push(\"/detail-enterprise/\".concat(this.identer));\n      } else {\n        router.push(\"/employee/inprogress\");\n      }\n    }\n  }\n};",{"version":3,"sources":["template-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n        <div class=\"card-base card-shadow--medium bg-white\">\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"16\">\r\n                    <el-button\r\n                            @click=\"onBackButton\"\r\n                    >\r\n                        Back\r\n                    </el-button>\r\n                    <el-button @click=\"newTemplate\" type=\"primary\">\r\n                        + New Template\r\n                    </el-button>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <el-row>\r\n                <el-col :span=\"24\">\r\n                    <el-table\r\n                            :data=\"listData\"\r\n                            stripe\r\n                            style=\"width: 100%\">\r\n                        <el-table-column\r\n                                type=\"index\"\r\n                                label=\"No\"\r\n                                :index=\"indexMethod\"\r\n                                width=\"200\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"task_template_name\"\r\n                                label=\"Template Name\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                fixed=\"right\"\r\n                                width=\"120\">\r\n                            <template slot-scope=\"scope\">\r\n                                <el-button\r\n                                        type=\"danger\"\r\n                                        icon=\"el-icon-delete\"\r\n                                        size=\"mini\"\r\n                                        @click=\"delButton(scope.row.task_template_id)\"\r\n                                        style=\"margin-top: 10px;\">\r\n                                </el-button>\r\n                                <el-button\r\n                                        type=\"success\"\r\n                                        icon=\"el-icon-edit\"\r\n                                        @click=\"handleEdit(scope.row.task_template_id)\"\r\n                                        size=\"mini\"></el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <el-row>\r\n                <el-col :span=\"24\">\r\n                    <div class=\"grid-content\">\r\n                        <el-pagination\r\n                                background\r\n                                layout=\"prev, pager, next\"\r\n                                @current-change=\"handlePageChange\"\r\n                                :total=\"paginat.totalP\">\r\n\r\n                        </el-pagination>\r\n                    </div>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import router from '../../../router'\r\n    import { mapGetters } from 'vuex'\r\n    import * as getter from '../../../store/getters-types'\r\n    import * as action from '../../../store/action-types'\r\n    import * as mutation from '../../../store/mutation-types'\r\n    import Swal from 'sweetalert2'\r\n\r\n    export default {\r\n        name: 'Table',\r\n        data() {\r\n            return {\r\n                currentPage: 1,\r\n                input:'',\r\n                buttonStatus: null,\r\n                affixEnabled: true,\r\n                indexT: 1\r\n\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                listData : getter.GET_TEMPLATE_LIST,\r\n                paginate : getter.GET_TEMPLATE_PAGINATE,\r\n                identer  : getter.GET_ID_ENTERPRISE\r\n            }),\r\n            paginat(){\r\n                return this.paginate\r\n            },\r\n            indexTam(){\r\n                return this.indexT\r\n            }\r\n        },\r\n        created(){\r\n            (JSON.parse(localStorage.getItem('user')).idrole === 2) ? this.buttonStatus = false : this.buttonStatus = true;\r\n            let obj = {\r\n                    id : this.identer,\r\n                    page: this.currentPage\r\n            };\r\n            this.$store.dispatch(action.TEMPLATE_LIST, obj)\r\n        },\r\n        methods: {\r\n            newTemplate()   {\r\n                this.$router.push('/new-template-task')\r\n                this.$store.commit(mutation.SET_ID_ENTERPRISE, this.identer)\r\n            },\r\n            handlePageChange(page) {\r\n                this.currentPage = page;\r\n                let obj = {\r\n                    id : this.identer,\r\n                    page: this.currentPage\r\n                };\r\n                this.$store.dispatch( action.TEMPLATE_LIST, obj )\r\n            },\r\n            delButton(e){\r\n                let obj = {\r\n                    idList: e,\r\n                    id: this.identer,\r\n                    currPage: this.currentPage\r\n                }\r\n                Swal.fire({\r\n                    title: 'Are you sure?',\r\n                    text: \"You won't be able to revert this!\",\r\n                    type: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#3085d6',\r\n                    cancelButtonColor: '#d33',\r\n                    confirmButtonText: 'Yes, delete it!'\r\n                }).then((result) => {\r\n                    if (result.value) {\r\n                        this.$store.dispatch(action.DELETE_TEMPLATE, obj)\r\n                    }\r\n                })\r\n            },\r\n            indexMethod(index) {\r\n                return index + this.paginat.fromP;\r\n            },\r\n            handleEdit(e){\r\n                this.$router.push('/edit-template-task')\r\n                this.$store.commit(mutation.SET_ID_ENTERPRISE, e)\r\n            },\r\n            onBackButton() {\r\n                if(this.buttonStatus){\r\n                    router.push(`/detail-enterprise/${this.identer}`)\r\n                }else {\r\n                    router.push(`/employee/inprogress`)\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import '../../../assets/scss/variables';\r\n\r\n    .table-box {\r\n        overflow: auto;\r\n    }\r\n    .el-pagination {\r\n        padding-top: 20px;\r\n    }\r\n    .el-input {\r\n        width: 300px !important;\r\n    }\r\n    .card-base {\r\n        padding: 20px;\r\n    }\r\n    .el-row {\r\n        padding: 0px 10px;\r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n    .el-col {\r\n        border-radius: 5px;\r\n    }\r\n</style>\r\n\r\n"],"sourceRoot":"src/views/pages/tasktemplate"}]}