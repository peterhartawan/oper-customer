{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/components/enterprise/popup_admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/components/enterprise/popup_admin.vue","mtime":1640440454000},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444000},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":1641690456207},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1641690444038},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1641690456354}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport router from \"../../router\";\nimport * as getter from \"../../store/getters-types\";\nimport * as action from \"../../store/action-types\";\nimport Swal from 'sweetalert2';\nimport * as mutation from \"../../store/mutation-types\";\nexport default {\n  props: ['identerprise', 'picture'],\n  data: function data() {\n    return {\n      currentPage: 1,\n      dialogTableVisible: false,\n      form: {\n        search: ''\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    paginate: getter.GET_PAGINATE_DISPATCHER,\n    enterprise: getter.ENTERPRISE,\n    loading: getter.GET_BUTTON\n  })), {}, {\n    paginato: function paginato() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    },\n    admin: function admin() {\n      var idrole = JSON.parse(localStorage.getItem('user')).idrole;\n\n      if (idrole === 1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }),\n  methods: {\n    handlePageChange: function () {\n      var _handlePageChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(page) {\n        var obj;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.currentPage = page;\n                obj = {\n                  role: 4,\n                  page: this.currentPage\n                };\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context.next = 5;\n                return this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handlePageChange(_x) {\n        return _handlePageChange.apply(this, arguments);\n      }\n\n      return handlePageChange;\n    }(),\n    addButton: function addButton() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      router.replace(\"/new-admin-enterprise/\".concat(this.enterprise.identerprise));\n    },\n    editAdmin: function editAdmin(e) {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$store.commit(mutation.SET_DATA_ADMIN_ENTERPRISE, e);\n      this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise);\n      router.replace('/edit-admin');\n    },\n    indexMethod: function indexMethod(index) {\n      return index + this.paginato.fromP;\n    },\n    buttonSearch: function buttonSearch() {\n      this.$store.dispatch(action.SEARCH_DISPATCHER, this.form.search);\n    },\n    getId: function () {\n      var _getId = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {\n        var _this = this;\n\n        var obj;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.dialogTableVisible = false;\n                obj = {\n                  id: id.id,\n                  identerprise: this.identerprise\n                };\n                Swal.fire({\n                  title: 'Are you sure?',\n                  text: \"You want to assign to dispatcher!\",\n                  type: 'warning',\n                  showCancelButton: true,\n                  confirmButtonColor: '#3085d6',\n                  cancelButtonColor: '#d33',\n                  confirmButtonText: 'Yes, assign it!'\n                }).then(function (result) {\n                  if (result.value) {\n                    _this.$store.dispatch(action.ASSIGN_TO_ENTERPRISE, obj);\n                  } else {\n                    _this.dialogTableVisible = true;\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getId(_x2) {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }()\n  }\n};",{"version":3,"sources":["popup_admin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<span>\n    <div class=\"hoverhand\" slot=\"reference\">\n        <div v-if='enterprise.admins[0].profile_picture == \"\" || enterprise.admins[0].profile_picture == null'>\n            <img @click=\"dialogTableVisible = admin\" src=\"../../../src/assets/images/avatar-2.jpg\" class=\"avatar\">\n        </div>\n        <div v-else>\n            <img @click=\"dialogTableVisible = admin\" :src=\"enterprise.admins[0].profile_picture\" class=\"avatar\">\n        </div>\n    </div>\n    <el-dialog :visible.sync=\"dialogTableVisible\" title=\"Admin Enterprise\">\n        <el-row>\n                <el-button type=\"danger\" style=\"background-color: #D50000;\" @click=\"addButton\">\n                    Add New Admin\n                </el-button>\n        </el-row>\n        <div v-for=\"(domain) in enterprise.admins\" :key=\"domain.key\">\n            <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n                <el-col :span=\"8\">\n                    <b>Admin Name</b>\n                    <br>\n                    {{ domain.name}}\n                </el-col>\n                <el-col :span=\"5\">\n                    <b>Admin Mobile Phone</b>\n                    <br>\n                    {{ domain.phonenumber}}\n                </el-col>\n                <el-col :span=\"9\">\n                    <b>Admin Email</b>\n                    <br>\n                    <span style=\"word-break: break-all\">{{ domain.email}}</span>\n                </el-col>\n                <el-col :span=\"2\">\n                    <el-button type=\"success\" @click=\"editAdmin(domain)\" icon=\"el-icon-edit\" style=\"padding: 12px\"></el-button>\n                </el-col>\n            </el-row>\n        </div>\n    </el-dialog>\n</span>\n</template>\n\n<script>\nimport {\n    mapGetters\n} from 'vuex'\nimport router from '../../router'\nimport * as getter from '../../store/getters-types'\nimport * as action from '../../store/action-types'\nimport Swal from 'sweetalert2'\nimport * as mutation from '../../store/mutation-types'\n\nexport default {\n    props: ['identerprise', 'picture'],\n    data() {\n        return {\n            currentPage: 1,\n            dialogTableVisible: false,\n            form: {\n                search: ''\n            }\n        };\n    },\n    computed: {\n        ...mapGetters({\n            paginate: getter.GET_PAGINATE_DISPATCHER,\n            enterprise: getter.ENTERPRISE,\n            loading: getter.GET_BUTTON,\n        }),\n        paginato() {\n            return this.paginate\n        },\n        indexTam() {\n            return this.indexT\n        },\n        admin() {\n            let idrole = JSON.parse(localStorage.getItem('user')).idrole\n            if (idrole === 1) {\n                return true\n            } else {\n                return false\n            }\n        }\n    },\n    methods: {\n        async handlePageChange(page) {\n            this.currentPage = page;\n            let obj = {\n                role: 4,\n                page: this.currentPage\n            };\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            await this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\n        },\n        addButton() {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            router.replace(`/new-admin-enterprise/${this.enterprise.identerprise}`)\n        },\n        editAdmin(e) {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$store.commit(mutation.SET_DATA_ADMIN_ENTERPRISE, e);\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\n            router.replace('/edit-admin')\n        },\n        indexMethod(index) {\n            return index + this.paginato.fromP;\n        },\n        buttonSearch() {\n            this.$store.dispatch(action.SEARCH_DISPATCHER, this.form.search)\n        },\n        async getId(id) {\n            this.dialogTableVisible = false\n            let obj = {\n                id: id.id,\n                identerprise: this.identerprise\n            }\n            Swal.fire({\n                title: 'Are you sure?',\n                text: \"You want to assign to dispatcher!\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, assign it!'\n            }).then((result) => {\n                if (result.value) {\n                    this.$store.dispatch(action.ASSIGN_TO_ENTERPRISE, obj)\n                } else {\n                    this.dialogTableVisible = true\n                }\n            })\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.table-box {\n    overflow: auto;\n}\n\n.el-pagination {\n    padding-top: 20px;\n}\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    padding: 0px 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.image {\n    max-width: 100%;\n    height: 150px;\n    display: block;\n}\n\n.vl {\n    border-left: 3px solid #f2f2f2;\n    height: 90%;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n.avatar {\n    border-radius: 50%;\n    max-width: 80px;\n    height: 80px;\n    border: 1px solid #fff;\n    box-sizing: border-box;\n    display: block;\n    box-shadow: 0 2px 5px 0 rgba(49, 49, 93, 0.1),\n        0 1px 2px 0 rgba(0, 0, 0, 0.08);\n    transition: box-shadow 0.5s;\n}\n\n.left {\n    text-align: left;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n.middle {\n    margin-top: -30px\n}\n\n.drive-acount {\n    height: 39px;\n    margin-top: -11px;\n    margin-bottom: -10px;\n}\n\n.hoverhand:hover {\n    cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/components/enterprise"}]}