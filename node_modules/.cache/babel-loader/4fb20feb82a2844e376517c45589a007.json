{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/order-client/list-assign-order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/order-client/list-assign-order.vue","mtime":1640440454989},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444342},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":1640440453952},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1640440454211}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport OrderBar from \"../../../components/order/order-bar\";\nimport Affix from '@/components/Affix';\nimport { mapGetters } from 'vuex';\nimport * as getter from \"../../../store/getters-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport * as action from \"../../../store/action-types\";\nimport swal from 'sweetalert2';\nexport default {\n  name: 'Order',\n  data: function data() {\n    return {\n      role: '',\n      dropDown: '',\n      currentPage: 1,\n      path: null,\n      rolePath: '',\n      input: '',\n      affixEnabled: true,\n      indexT: 1,\n      offset: null,\n      spanMonth: 6,\n      spanDriver: 5,\n      start: '',\n      end: '',\n      form: {\n        enterprise_name: '',\n        month: '',\n        trx_id: '',\n        driver_name: '',\n        idvendor: '',\n        range_date: ''\n      },\n      changeTab: 'open'\n    };\n  },\n  components: {\n    Affix: Affix,\n    OrderBar: OrderBar\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    listData: getter.GET_L_ORDER_CLIENT,\n    paginate: getter.GET_PAG_ORDER_CLIENT,\n    loading: getter.GET_BUTTON,\n    vendor: getter.GET_DROPDOWN_VENDOR,\n    tab: getter.GET_ROLE_PATH_ORDER\n  })), {}, {\n    paginato: function paginato() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var userProfile;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // await this.$store.dispatch(action.ORDER_GRAPHIC_BAR, 'today');\n              userProfile = JSON.parse(localStorage.getItem('user')).idrole;\n              this.path = userProfile === 5;\n              this.role = userProfile;\n\n              if (userProfile === 1) {\n                this.$store.dispatch(action.DROPDOWN_VENDOR);\n              }\n\n              this.changeTab = this.tab;\n              this.rolePath = \"/order/\".concat(this.tab);\n\n              if (this.changeTab === 'open') {\n                this.spanMonth = 6;\n                this.spanDriver = 5;\n              } else {\n                this.spanDriver = 3;\n                this.spanMonth = 3;\n              }\n\n              this.sendForm();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    headerRowStyle: function headerRowStyle(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      // if (columnIndex === 2 && this.changeTab === 'open') {\n      // return {\"wordSpacing\":\"80px\"};\n      // } else if (columnIndex === 3 && this.changeTab === 'open') {\n      // return {\"wordSpacing\":\"70px\"};\n      // } else if (columnIndex === 5 && this.changeTab === 'open') {\n      // return {\"wordSpacing\":\"50px\"};\n      // } else \n      if (columnIndex === 3 && this.changeTab !== 'open') {\n        return {\n          \"wordSpacing\": \"170px\"\n        };\n      } else if (columnIndex === 4 && this.changeTab !== 'open') {\n        return {\n          \"wordSpacing\": \"180px\"\n        };\n      } else if (columnIndex === 6 && this.changeTab !== 'open') {\n        return {\n          \"wordSpacing\": \"170px\"\n        };\n      }\n    },\n    newCorp: function newCorp() {\n      this.$router.replace('/order/create');\n    },\n    exportExcel: function () {\n      var _exportExcel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var data, obj, firstD, secondD;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = '';\n\n                if (!(this.form.month === '' || this.form.month === '0')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                swal('please select month (except all month)', '', 'error');\n                _context2.next = 12;\n                break;\n\n              case 5:\n                obj = {\n                  path: \"/order/\".concat(this.changeTab),\n                  month: this.form.month\n                };\n                _context2.next = 8;\n                return this.$store.dispatch(action.EXPORT_ORDER_LIST, obj);\n\n              case 8:\n                data = _context2.sent;\n                firstD = data.slice(1);\n                secondD = firstD.slice(0, firstD.length - 1);\n                window.open(secondD);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function exportExcel() {\n        return _exportExcel.apply(this, arguments);\n      }\n\n      return exportExcel;\n    }(),\n    handlePageChange: function handlePageChange(page) {\n      this.currentPage = page;\n      this.sendForm();\n    },\n    search: function search() {\n      this.$store.dispatch(action.LIST_ORDER_CLIENT, this.input.trim());\n    },\n    getId: function () {\n      var _getId = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(id) {\n        var obj;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                obj = {\n                  id: id.idorder,\n                  path: this.rolePath\n                };\n                _context3.next = 3;\n                return this.$store.dispatch(action.ID_ORDER_CLIENT, obj);\n\n              case 3:\n                if (this.changeTab === 'open') {\n                  this.$router.replace('/order/detail');\n                } else {\n                  this.$router.replace('/detail-order');\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getId(_x) {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }(),\n    indexMethod: function indexMethod(index) {\n      return index + this.paginato.fromP;\n    },\n    searchSquare: function searchSquare() {\n      this.sendForm();\n    },\n    tabChange: function () {\n      var _tabChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(v) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.$store.commit(mutation.SET_ROLE_PATH_ORDER, v);\n\n                if (v === 'open') {\n                  this.spanMonth = 6;\n                  this.spanDriver = 5;\n                } else {\n                  this.spanDriver = 3;\n                  this.spanMonth = 3;\n                }\n\n                this.rolePath = \"/order/\".concat(v);\n                this.currentPage = 1;\n                this.sendForm();\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function tabChange(_x2) {\n        return _tabChange.apply(this, arguments);\n      }\n\n      return tabChange;\n    }(),\n    imgAlt: function imgAlt(event) {\n      event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\n    },\n    sendForm: function () {\n      var _sendForm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var obj;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.form.range_date === null || this.form.range_date === '') {\n                  this.start = '', this.end = '';\n                } else {\n                  this.start = this.form.range_date[0], this.end = this.form.range_date[1];\n                }\n\n                obj = {\n                  page: this.currentPage,\n                  path: this.rolePath,\n                  enterprise_name: this.form.enterprise_name,\n                  month: this.form.month,\n                  trx_id: this.form.trx_id,\n                  driver_name: this.form.driver_name,\n                  idvendor: this.form.idvendor,\n                  start_date: this.start,\n                  end_date: this.end\n                };\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                _context5.next = 5;\n                return this.$store.dispatch(action.LIST_ORDER_CLIENT, obj);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function sendForm() {\n        return _sendForm.apply(this, arguments);\n      }\n\n      return sendForm;\n    }()\n  }\n};",{"version":3,"sources":["list-assign-order.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n        <order-bar />\n\n        <div class=\"card-base card-shadow--medium bg-white\">\n        <el-row>\n            <el-col :span=\"24\">\n                <el-radio-group v-model=\"changeTab\" @change=\"tabChange\" fill=\"#fffafa\" >\n                    <el-radio-button label=\"open\">\n                        <img src=\"../../../assets/oper_asset/openorder_red.png\" class=\"drive-acount\" v-if=\"changeTab === 'open'\">\n                        <img src=\"../../../assets/oper_asset/openorder_grey.png\" class=\"drive-acount\" v-else>\n                    </el-radio-button>\n                    <el-radio-button label=\"inprogress\">\n                        <img src=\"../../../assets/oper_asset/inprogress_red.png\" class=\"drive-acount\" v-if=\"changeTab === 'inprogress'\">\n                        <img src=\"../../../assets/oper_asset/inprogress_grey.png\" class=\"drive-acount\" v-else>\n                    </el-radio-button>\n                    <el-radio-button label=\"complete\">\n                        <img src=\"../../../assets/oper_asset/completed_red.png\" class=\"drive-acount\" v-if=\"changeTab === 'complete'\">\n                        <img src=\"../../../assets/oper_asset/completed_grey.png\" class=\"drive-acount\" v-else>\n                    </el-radio-button>\n                </el-radio-group>\n            </el-col>\n        </el-row>\n\n            <el-row :gutter=\"20\">\n                <el-col :span=\"16\">\n                    <div class=\"grid-content\" >\n                        <el-button\n                                v-if=\"path\"\n                                @click=\"newCorp\"\n                                type=\"primary\">\n                            New Order\n                        </el-button>\n                    </div>\n                </el-col>\n                <!--<el-col :span=\"8\" :offset=\"offset\">-->\n                    <!--<el-input-->\n                            <!--placeholder=\"Search\"-->\n                            <!--style=\"width: 300px\"-->\n                            <!--v-model=\"input\"-->\n                            <!--@change=\"search\">-->\n                    <!--</el-input>-->\n                <!--</el-col>-->\n            </el-row>\n\n            <!--<el-row :gutter=\"10\" style=\"margin-top: 20px\">-->\n                <!--<el-col :span=\"7\">-->\n                    <!--<el-breadcrumb separator=\"/\">-->\n                        <!--<el-breadcrumb-item :to=\"{ path: '/order/open' }\">Open</el-breadcrumb-item>-->\n                        <!--<el-breadcrumb-item :to=\"{ path: '/order/inprogress' }\">Inprogress</el-breadcrumb-item>-->\n                        <!--<el-breadcrumb-item :to=\"{ path: '/order/complete' }\">Complete</el-breadcrumb-item>-->\n                        <!--<el-breadcrumb-item ></el-breadcrumb-item>-->\n                    <!--</el-breadcrumb>-->\n                <!--</el-col>-->\n            <!--</el-row>-->\n            <el-row :gutter=\"10\" style=\"margin-top: 20px\">\n                <el-col :span=\"spanMonth\">\n                    <el-select v-model=\"form.month\" placeholder=\"Select Month\">\n                        <el-option label=\"All Months\" selected value=\"0\">All Months</el-option>\n                        <el-option label=\"January\" selected value=\"1\">January</el-option>\n                        <el-option label=\"February\" value=\"2\">February</el-option>\n                        <el-option label=\"March\" value=\"3\">March</el-option>\n                        <el-option label=\"April\" value=\"4\">April</el-option>\n                        <el-option label=\"May\" value=\"5\">May</el-option>\n                        <el-option label=\"June\" value=\"6\">June</el-option>\n                        <el-option label=\"July\" value=\"7\">July</el-option>\n                        <el-option label=\"August\" value=\"8\">August</el-option>\n                        <el-option label=\"September\" value=\"9\">September</el-option>\n                        <el-option label=\"October\" value=\"10\">October</el-option>\n                        <el-option label=\"November\" value=\"11\">November</el-option>\n                        <el-option label=\"December\" value=\"12\">December</el-option>\n                    </el-select>\n                </el-col>\n                 <div v-if=\"role === 1\">\n                 <el-col :span=\"4\">\n                    <el-select v-model=\"form.idvendor\" placeholder=\"Select Vendor\">\n                        <el-option v-for=\"item in vendor\" :key=\"item.idvendor\" :value=\"item.idvendor\" :label=\"item.name\"></el-option>\n                    </el-select>\n                </el-col>\n                 </div>\n                <el-col :span=\"5\">\n                    <el-input\n                            placeholder=\"Enterprise Name\"\n                            v-model=\"form.enterprise_name\">\n                    </el-input>\n                </el-col>\n                <el-col :span=\"5\" v-if=\"changeTab !== 'open'\">\n                    <el-input\n                            placeholder=\"Driver Name\"\n                            v-model=\"form.driver_name\">\n                    </el-input>\n                </el-col>\n                <el-col :span=\"spanDriver\">\n                    <el-input\n                            placeholder=\"Transaction ID\"\n                            v-model=\"form.trx_id\">\n                    </el-input>\n                </el-col>\n\n                <el-col :span=\"6\">\n                    <el-date-picker\n                    value-format=\"yyyy-MM-dd\"\n                    style=\"width: 100%;\"\n                    v-model=\"form.range_date\" \n                    default-value=\"2019-06-01\"\n                    type=\"daterange\"\n                    start-placeholder=\"Start\"\n                    end-placeholder=\"End\"\n                ></el-date-picker>\n                </el-col>\n\n                <el-col :span=\"1\">\n                    <el-button\n                            icon=\"el-icon-search\"\n                            @click=\"searchSquare\"\n                            style=\"background: #D50000; font-size: 17px; color: white; \"\n                            square>\n\n                    </el-button>\n                </el-col>\n\n            </el-row>\n\n            <el-row >\n                <el-col :span=\"24\">\n                    <el-table\n                            v-loading=\"loading\"\n                            :data=\"listData\"\n                            stripe\n                            :header-cell-style=\"headerRowStyle\"\n                            style=\"width: 100%\"\n                            @row-click=\"getId\">\n                        <el-table-column\n                                type=\"index\"\n                                :index=\"indexMethod\"\n                                label=\"NO\"\n                                width=\"70\">\n                        </el-table-column>\n                        <el-table-column\n                                align=\"center\"\n                                width=\"100\"\n                                label=\"PHOTO\">\n                            <template slot-scope=\"scope\">\n                                <img v-if=\"changeTab === 'open'\" style=\"width: 35px; height: 35px; border-radius: 50%\" src=\"../../../assets/images/avatar-2.jpg\">\n                                <img v-else style=\"width: 35px; height: 35px; border-radius: 50%\" :src=\"scope.row.profile_picture\" @error=\"imgAlt\">\n                            </template>\n                        </el-table-column>\n                        <el-table-column\n                                v-if=\"changeTab !== 'open'\"\n                                prop=\"nama_driver\"\n                                label=\"DRIVER INFO\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"user_fullname\"\n                                label=\"USER CUSTOMER\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"nama_client_enterprise\"\n                                label=\"ENTERPRISE NAME\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"vehicle_type\"\n                                label=\"VEHICLE\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"client_vehicle_license\"\n                                label=\"POLICE NUMBER\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"status_text\"\n                                label=\"STATUS\">\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n            <el-row>\n                <el-col :span=\"20\">\n                    <div class=\"grid-content\">\n                        <el-pagination\n                                background\n                                layout=\"prev, pager, next\"\n                                @current-change=\"handlePageChange\"\n                                :current-page=\"currentPage\"\n                                :total=\"paginato.totalP\">\n                        </el-pagination>\n                    </div>\n                </el-col>\n\n                <el-col :lg=\"4\">\n                    <el-button\n                            type=\"primary\"\n                            @click=\"exportExcel\"\n                            style=\"margin-top: 15px\">\n                        Export\n                    </el-button>\n                </el-col>\n            </el-row>\n        </div>\n    </div>\n</template>\n\n<script>\n    import  OrderBar from '../../../components/order/order-bar'\n    import Affix from '@/components/Affix'\n    import { mapGetters } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as mutation from '../../../store/mutation-types'\n    import * as action from '../../../store/action-types'\n    import swal from 'sweetalert2'\n\n    export default {\n        name: 'Order',\n        data() {\n            return {\n                role            : '',\n                dropDown        : '',\n                currentPage     : 1,\n                path            : null,\n                rolePath        : '',\n                input           :'',\n                affixEnabled    : true,\n                indexT          : 1,\n                offset          : null,\n                spanMonth       : 6,\n                spanDriver      : 5,\n                start           : '',\n                end             : '',\n                form            : {\n                    enterprise_name : '',\n                    month           : '',\n                    trx_id          : '',\n                    driver_name     : '',\n                    idvendor        : '',\n                    range_date      : '',\n                },\n                changeTab           : 'open'\n            }\n        },\n        components: {\n            Affix,\n            OrderBar\n        },\n        computed: {\n            ...mapGetters({\n                listData    : getter.GET_L_ORDER_CLIENT,\n                paginate    : getter.GET_PAG_ORDER_CLIENT,\n                loading     : getter.GET_BUTTON,\n                vendor      : getter.GET_DROPDOWN_VENDOR,\n                tab         : getter.GET_ROLE_PATH_ORDER\n            }),\n            paginato(){\n                return this.paginate\n            },\n            indexTam(){\n                return this.indexT\n            },\n        },\n        async created(){\n            // await this.$store.dispatch(action.ORDER_GRAPHIC_BAR, 'today');\n            let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\n            this.path = userProfile === 5;\n            this.role = userProfile;\n            if(userProfile === 1){\n                this.$store.dispatch(action.DROPDOWN_VENDOR);\n            }\n            this.changeTab = this.tab;\n            this.rolePath = `/order/${this.tab}`;\n            if(this.changeTab === 'open'){\n                this.spanMonth = 6;\n                this.spanDriver = 5;\n            }else {\n                this.spanDriver = 3;\n                this.spanMonth = 3\n            }\n            this.sendForm();\n        },\n        methods: {\n            headerRowStyle({row, column, rowIndex, columnIndex}) {\n                // if (columnIndex === 2 && this.changeTab === 'open') {\n                // return {\"wordSpacing\":\"80px\"};\n                // } else if (columnIndex === 3 && this.changeTab === 'open') {\n                // return {\"wordSpacing\":\"70px\"};\n                // } else if (columnIndex === 5 && this.changeTab === 'open') {\n                // return {\"wordSpacing\":\"50px\"};\n                // } else \n                if (columnIndex === 3 && this.changeTab !== 'open') {\n                return {\"wordSpacing\":\"170px\"};\n                } else if (columnIndex === 4 && this.changeTab !== 'open') {\n                return {\"wordSpacing\":\"180px\"};\n                } else if (columnIndex === 6 && this.changeTab !== 'open') {\n                return {\"wordSpacing\":\"170px\"};\n                }\n            },\n            newCorp()   {\n                this.$router.replace('/order/create')\n            },\n            async exportExcel(){\n                let data = '';\n                if(this.form.month === '' || this.form.month === '0' ){\n                    swal('please select month (except all month)','', 'error')\n                }else {\n                    let obj = {\n                        path    : `/order/${this.changeTab}`,\n                        month   : this.form.month\n                    };\n                    data = await this.$store.dispatch(action.EXPORT_ORDER_LIST, obj)\n                    let firstD = data.slice(1)\n                    let secondD = firstD.slice(0, firstD.length -1)\n                    window.open(secondD)\n                }\n            },\n            handlePageChange(page) {\n                this.currentPage = page;\n                this.sendForm();\n            },\n            search(){\n                this.$store.dispatch( action.LIST_ORDER_CLIENT, this.input.trim() )\n            },\n            async getId(id){\n                let obj = {\n                    id    : id.idorder,\n                    path  : this.rolePath\n                };\n                await this.$store.dispatch(action.ID_ORDER_CLIENT, obj);\n                if(this.changeTab === 'open'){\n                    this.$router.replace('/order/detail')\n                }else {\n                    this.$router.replace('/detail-order')\n                }\n            },\n            indexMethod(index) {\n                return index + this.paginato.fromP;\n            },\n            searchSquare(){\n                this.sendForm()\n            },\n            async tabChange(v){\n                this.$store.commit(mutation.SET_ROLE_PATH_ORDER, v);\n                if(v === 'open'){\n                    this.spanMonth = 6;\n                    this.spanDriver = 5;\n                }else {\n                    this.spanDriver = 3;\n                    this.spanMonth = 3\n                }\n                this.rolePath = `/order/${v}`;\n                this.currentPage = 1;\n                this.sendForm();\n            },\n            imgAlt(event) {\n                event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\n            },\n            async sendForm(){\n                if(this.form.range_date === null || this.form.range_date === ''){\n                    this.start = '',\n                        this.end   = ''\n                }else {\n                    this.start = this.form.range_date[0],\n                        this.end   = this.form.range_date[1]\n                }\n                let obj = {\n                    page            : this.currentPage,\n                    path            : this.rolePath,\n                    enterprise_name : this.form.enterprise_name,\n                    month           : this.form.month,\n                    trx_id          : this.form.trx_id,\n                    driver_name     : this.form.driver_name,\n                    idvendor        : this.form.idvendor,\n                    start_date      : this.start,\n                    end_date        : this.end\n                };\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                await this.$store.dispatch(action.LIST_ORDER_CLIENT, obj)\n            }\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n    .table-box {\n        overflow: auto;\n    }\n    .el-pagination {\n        padding-top: 20px;\n    }\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px 5px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n    .el-select {\n        width: 100%;\n    }\n    .drive-acount {\n        height: 113px;\n        margin-top: 10px;\n    }\n    @media only screen and (min-width: 1590px) {\n    .drive-acount {\n        height: 147px;\n        margin-top: 10px;\n        }\n    }\n\n</style>\n\n"],"sourceRoot":"src/views/pages/order-client"}]}