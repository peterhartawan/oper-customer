{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\inspector\\pic-task-list-page.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\inspector\\pic-task-list-page.vue","mtime":1644413760590},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\.babelrc","mtime":1644413672252},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/ASUS/Documents/GitHub/oper-customer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../../router\";\nimport { mapGetters, mapMutations } from 'vuex';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport Swal from 'sweetalert2';\nexport default {\n  name: 'Table',\n  data: function data() {\n    return {\n      currentPage: 1,\n      input: '',\n      affixEnabled: true,\n      indexT: 1\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    listData: getter.GET_PICTASK_LIST,\n    paginate: getter.GET_PICTASK_PAGINATE,\n    identer: getter.GET_ID_ENTERPRISE,\n    loading: getter.GET_LOADING\n  })), {}, {\n    paginat: function paginat() {\n      return this.paginate;\n    },\n    indexTam: function indexTam() {\n      return this.indexT;\n    }\n  }),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var obj;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              obj = {\n                currentP: 1,\n                identerpriseS: this.identer\n              };\n              _context.next = 3;\n              return this.$store.dispatch(action.PICTASK_LIST, obj);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: _objectSpread(_objectSpread({}, mapMutations({\n    setIdEnt: mutation.SET_ID_ENTERPRISE,\n    idInspec: mutation.SET_ID_INSPECTOR\n  })), {}, {\n    newCorp: function newCorp() {\n      this.$router.replace('/new-pic');\n      this.$store.commit(mutation.SET_ID_ENTERPRISE, this.identer);\n    },\n    handlePageChange: function handlePageChange(page) {\n      this.currentPage = page;\n      var obj = {\n        currentP: this.currentPage,\n        identerpriseS: this.identer\n      };\n      this.$store.dispatch(action.PICTASK_LIST, obj);\n    },\n    search: function search() {},\n    delButton: function delButton(e) {\n      var _this = this;\n\n      var obj = {\n        idList: e,\n        currPage: this.currentPage,\n        identer: this.identer\n      };\n      Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(function (result) {\n        if (result.value) {\n          _this.$store.dispatch(action.DELETE_INSPECTOR, obj); // router.replace('/pic-task-list')\n          // this.$store.dispatch(action.PICTASK_LIST, this.currentPage)\n\n        }\n      });\n    },\n    indexMethod: function indexMethod(index) {\n      return index + this.paginat.fromP;\n    },\n    handleEdit: function () {\n      var _handleEdit = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(e) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.setIdEnt(this.identer);\n\n              case 2:\n                _context2.next = 4;\n                return this.idInspec(e);\n\n              case 4:\n                this.$router.replace('/edit-inspector');\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleEdit(_x) {\n        return _handleEdit.apply(this, arguments);\n      }\n\n      return handleEdit;\n    }(),\n    onBackButton: function onBackButton() {\n      router.replace(\"/detail-enterprise/\".concat(this.identer));\n    }\n  })\n};",{"version":3,"sources":["pic-task-list-page.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n        <div class=\"card-base card-shadow--medium bg-white\">\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"16\">\r\n                    <el-button\r\n                            @click=\"onBackButton\"\r\n                    >\r\n                        Back\r\n                    </el-button>\r\n                    <el-button\r\n                            @click=\"newCorp\"\r\n                            type=\"primary\">\r\n                        New Pic\r\n                    </el-button>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                    <el-input placeholder=\"Search\" v-model=\"input\" @change=\"search\">\r\n                    </el-input>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <el-row>\r\n                <el-col :span=\"24\">\r\n                    <el-table\r\n                            v-loading=\"loading\"\r\n                            :data=\"listData\"\r\n                            stripe\r\n                            style=\"width: 100%\">\r\n                        <el-table-column\r\n                                type=\"index\"\r\n                                label=\"No\"\r\n                                :index=\"indexMethod\"\r\n                                width=\"80\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"name\"\r\n                                label=\"PIC Name\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"phonenumber\"\r\n                                label=\"PIC Mobile Phone\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                fixed=\"right\"\r\n                                width=\"120\">\r\n                            <template slot-scope=\"scope\">\r\n                                <el-button\r\n                                        type=\"danger\"\r\n                                        icon=\"el-icon-delete\"\r\n                                        size=\"mini\"\r\n                                        @click=\"delButton(scope.row.idinspector)\"\r\n                                        style=\"margin-top: 10px;\">\r\n                                </el-button>\r\n                                <el-button\r\n                                        type=\"success\"\r\n                                        icon=\"el-icon-edit\"\r\n                                        @click=\"handleEdit(scope.row.idinspector)\"\r\n                                        size=\"mini\"></el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <el-row>\r\n                <el-col :span=\"24\">\r\n                    <div class=\"grid-content\">\r\n                        <el-pagination\r\n                                background\r\n                                layout=\"prev, pager, next\"\r\n                                @current-change=\"handlePageChange\"\r\n                                :total=\"paginat.totalP\">\r\n\r\n                        </el-pagination>\r\n                    </div>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import router from '../../../router'\r\n    import { mapGetters, mapMutations } from 'vuex'\r\n    import * as getter from '../../../store/getters-types'\r\n    import * as action from '../../../store/action-types'\r\n    import * as mutation from '../../../store/mutation-types'\r\n    import Swal from 'sweetalert2'\r\n\r\n    export default {\r\n        name: 'Table',\r\n        data() {\r\n            return {\r\n                currentPage: 1,\r\n                input:'',\r\n                affixEnabled: true,\r\n                indexT: 1\r\n\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                listData : getter.GET_PICTASK_LIST,\r\n                paginate : getter.GET_PICTASK_PAGINATE,\r\n                identer  : getter.GET_ID_ENTERPRISE,\r\n                loading  : getter.GET_LOADING\r\n            }),\r\n            paginat(){\r\n                return this.paginate\r\n            },\r\n            indexTam(){\r\n                return this.indexT\r\n            }\r\n        },\r\n       async created(){\r\n            let obj = {\r\n                currentP        : 1,\r\n                identerpriseS   : this.identer\r\n            };\r\n            await this.$store.dispatch(action.PICTASK_LIST, obj)\r\n        },\r\n        methods: {\r\n            ...mapMutations({\r\n                setIdEnt : mutation.SET_ID_ENTERPRISE,\r\n                idInspec : mutation.SET_ID_INSPECTOR\r\n            }),\r\n\r\n            newCorp()   {\r\n                this.$router.replace('/new-pic')\r\n                this.$store.commit(mutation.SET_ID_ENTERPRISE, this.identer)\r\n            },\r\n            handlePageChange(page) {\r\n                this.currentPage = page\r\n                let obj = {\r\n                    currentP        : this.currentPage,\r\n                    identerpriseS   : this.identer\r\n                }\r\n                this.$store.dispatch( action.PICTASK_LIST, obj)\r\n            },\r\n            search(){\r\n            },\r\n            delButton(e){\r\n                let obj = {\r\n                    idList: e,\r\n                    currPage: this.currentPage,\r\n                    identer : this.identer\r\n                }\r\n                Swal.fire({\r\n                    title: 'Are you sure?',\r\n                    text: \"You won't be able to revert this!\",\r\n                    type: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#3085d6',\r\n                    cancelButtonColor: '#d33',\r\n                    confirmButtonText: 'Yes, delete it!'\r\n                }).then((result) => {\r\n                    if (result.value) {\r\n                        this.$store.dispatch(action.DELETE_INSPECTOR, obj)\r\n                        // router.replace('/pic-task-list')\r\n                        // this.$store.dispatch(action.PICTASK_LIST, this.currentPage)\r\n\r\n                    }\r\n                })\r\n            },\r\n            indexMethod(index) {\r\n                return index + this.paginat.fromP;\r\n            },\r\n            async handleEdit(e){\r\n                await this.setIdEnt(this.identer)\r\n                await this.idInspec(e)\r\n                this.$router.replace('/edit-inspector')\r\n            },\r\n            onBackButton() {\r\n                router.replace(`/detail-enterprise/${this.identer}`)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import '../../../assets/scss/variables';\r\n\r\n    .table-box {\r\n        overflow: auto;\r\n    }\r\n    .el-pagination {\r\n        padding-top: 20px;\r\n    }\r\n    .el-input {\r\n        width: 300px !important;\r\n    }\r\n    .card-base {\r\n        padding: 20px;\r\n    }\r\n    .el-row {\r\n        padding: 0px 10px;\r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n    .el-col {\r\n        border-radius: 5px;\r\n    }\r\n</style>\r\n\r\n"],"sourceRoot":"src/views/pages/inspector"}]}