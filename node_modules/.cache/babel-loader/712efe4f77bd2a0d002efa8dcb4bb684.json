{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/store/modules/linkactivation/index.js","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/store/modules/linkactivation/index.js","mtime":1628175042612},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/.babelrc","mtime":1628175042295},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport * as action from \"../../action-types\";\nimport * as mutation from \"../../mutation-types\";\nimport * as getter from \"../../getters-types\";\nimport localAxios from \"../../../services/http/client\";\nimport * as typeS from \"../../../services/path_service\";\nimport swal from 'sweetalert2';\nvar state = {};\nvar mutations = {};\n\nvar actions = _defineProperty({}, action.RESEND_LINK_ACTIVATION, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, payload) {\n    var commit, dispatch, token, obj, _yield$localAxios$pos, data;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit, dispatch = _ref.dispatch;\n            _context.prev = 1;\n            token = localStorage.getItem('token');\n\n            if (payload.page === '/vendor') {\n              obj = {\n                idvendor: payload.id\n              };\n            } else if (payload.page === '/enterprise') {\n              obj = {\n                identerprise: payload.id\n              };\n            } else if (payload.page === '/dispatcher') {\n              obj = {\n                iddispatcher: payload.iddispatcher\n              };\n            }\n\n            _context.next = 6;\n            return localAxios.post(\"\".concat(payload.page, \"/resend-activation\"), obj, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n\n          case 6:\n            _yield$localAxios$pos = _context.sent;\n            data = _yield$localAxios$pos.data;\n            swal(data.message, '', 'success');\n            commit(mutation.SET_BUTTON_RESEND_ACTIVE, false);\n            commit(mutation.BUTTON_STATUS, false);\n            _context.next = 18;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            commit(mutation.BUTTON_STATUS, false);\n            commit(mutation.SET_BUTTON_RESEND_ACTIVE, false);\n            dispatch(action.DATA_ERROR, _context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/store/modules/linkactivation/index.js"],"names":["action","mutation","getter","localAxios","typeS","swal","state","mutations","actions","RESEND_LINK_ACTIVATION","payload","commit","dispatch","token","localStorage","getItem","page","obj","idvendor","id","identerprise","iddispatcher","post","headers","data","message","SET_BUTTON_RESEND_ACTIVE","BUTTON_STATUS","DATA_ERROR","getters"],"mappings":";;;AAAA,OAAO,KAAKA,MAAZ;AACA,OAAO,KAAKC,QAAZ;AACA,OAAO,KAAKC,MAAZ;AACA,OAAOC,UAAP;AACA,OAAO,KAAKC,KAAZ;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,IAAMC,KAAK,GAAG,EAAd;AAGA,IAAMC,SAAS,GAAG,EAAlB;;AAGA,IAAMC,OAAO,uBACFR,MAAM,CAACS,sBADL;AAAA,6FACiDC,OADjD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC8BC,YAAAA,MAD9B,QAC8BA,MAD9B,EACsCC,QADtC,QACsCA,QADtC;AAAA;AAGGC,YAAAA,KAHH,GAGWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAHX;;AAKD,gBAAGL,OAAO,CAACM,IAAR,KAAiB,SAApB,EAA8B;AAC1BC,cAAAA,GAAG,GAAG;AAAEC,gBAAAA,QAAQ,EAAGR,OAAO,CAACS;AAArB,eAAN;AACH,aAFD,MAEM,IAAGT,OAAO,CAACM,IAAR,KAAiB,aAApB,EAAmC;AACrCC,cAAAA,GAAG,GAAG;AAAEG,gBAAAA,YAAY,EAAGV,OAAO,CAACS;AAAzB,eAAN;AACH,aAFK,MAEA,IAAGT,OAAO,CAACM,IAAR,KAAiB,aAApB,EAAmC;AACrCC,cAAAA,GAAG,GAAG;AAAEI,gBAAAA,YAAY,EAAGX,OAAO,CAACW;AAAzB,eAAN;AACH;;AAXA;AAAA,mBAYmBlB,UAAU,CAACmB,IAAX,WAAmBZ,OAAO,CAACM,IAA3B,yBAChBC,GADgB,EAEZ;AAAEM,cAAAA,OAAO,EAAE;AAAC,iCAAiB,YAAUV;AAA5B;AAAX,aAFY,CAZnB;;AAAA;AAAA;AAYIW,YAAAA,IAZJ,yBAYIA,IAZJ;AAgBDnB,YAAAA,IAAI,CAACmB,IAAI,CAACC,OAAN,EAAc,EAAd,EAAkB,SAAlB,CAAJ;AACAd,YAAAA,MAAM,CAACV,QAAQ,CAACyB,wBAAV,EAAoC,KAApC,CAAN;AACAf,YAAAA,MAAM,CAACV,QAAQ,CAAC0B,aAAV,EAAyB,KAAzB,CAAN;AAlBC;AAAA;;AAAA;AAAA;AAAA;AAoBDhB,YAAAA,MAAM,CAACV,QAAQ,CAAC0B,aAAV,EAAyB,KAAzB,CAAN;AACAhB,YAAAA,MAAM,CAACV,QAAQ,CAACyB,wBAAV,EAAoC,KAApC,CAAN;AACAd,YAAAA,QAAQ,CAACZ,MAAM,CAAC4B,UAAR,cAAR;;AAtBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,IAAb;;AA2BA,IAAMC,OAAO,GAAG,EAAhB;AAGA,eAAe;AACXvB,EAAAA,KAAK,EAALA,KADW;AAEXC,EAAAA,SAAS,EAATA,SAFW;AAGXC,EAAAA,OAAO,EAAPA,OAHW;AAIXqB,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import * as action from '../../action-types'\nimport * as mutation from '../../mutation-types'\nimport * as getter from '../../getters-types'\nimport localAxios from \"../../../services/http/client\";\nimport * as typeS from '../../../services/path_service'\nimport swal from 'sweetalert2'\n\nconst state = {\n};\n\nconst mutations = {\n};\n\nconst actions = {\n    async [action.RESEND_LINK_ACTIVATION]({commit, dispatch}, payload) {\n        try {\n            let token = localStorage.getItem('token');\n            let obj;\n            if(payload.page === '/vendor'){\n                obj = { idvendor : payload.id}\n            }else if(payload.page === '/enterprise') {\n                obj = { identerprise : payload.id}\n            }else if(payload.page === '/dispatcher') {\n                obj = { iddispatcher : payload.iddispatcher}\n            }\n            let {data}  = await localAxios.post(`${payload.page}/resend-activation`,\n                obj,\n                    { headers: {'Authorization': 'Bearer '+token}\n                    });\n            swal(data.message,'', 'success');\n            commit(mutation.SET_BUTTON_RESEND_ACTIVE, false);\n            commit(mutation.BUTTON_STATUS, false)\n        } catch (err) {\n            commit(mutation.BUTTON_STATUS, false);\n            commit(mutation.SET_BUTTON_RESEND_ACTIVE, false);\n            dispatch(action.DATA_ERROR, err)\n        }\n    },\n};\n\nconst getters = {\n};\n\nexport default {\n    state,\n    mutations,\n    actions,\n    getters\n}"]}]}