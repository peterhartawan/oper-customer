{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/components/dispatcher/total-acount.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/components/dispatcher/total-acount.vue","mtime":1640440454955},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/.babelrc","mtime":1640440444342},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1640440454211}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from \"../../router\";\nimport Swal from 'sweetalert2';\nimport Contacts from '@/assets/data/CONTACTS_MOCK_DATA.json';\nimport { mapGetters, mapActions } from 'vuex';\nimport * as getter from \"../../store/getters-types\";\nimport * as action from \"../../store/action-types\";\nimport * as mutation from \"../../store/mutation-types\";\nexport default {\n  name: 'Contacts',\n  data: function data() {\n    return {\n      currentPage: 1,\n      status: 1,\n      type: '',\n      search: '',\n      dialogvisible: false,\n      pageWidth: 0,\n      userdata: {},\n      contacts: Contacts.slice(0, 30),\n      options: [{\n        value: 'Option1',\n        label: 'Option1'\n      }, {\n        value: 'Option2',\n        label: 'Option2',\n        disabled: true\n      }, {\n        value: 'Option3',\n        label: 'Option3'\n      }, {\n        value: 'Option4',\n        label: 'Option4'\n      }, {\n        value: 'Option5',\n        label: 'Option5'\n      }],\n      value: '',\n      input4: '',\n      form: {\n        name: '',\n        photo: '',\n        status: '',\n        company: '',\n        phone: '',\n        email: '',\n        companyAdress: '',\n        nik: '',\n        id: ''\n      },\n      payload: {\n        reason_suspend: \"\",\n        users_id: null,\n        iddispatcher: \"\"\n      },\n      select: [{\n        name: \"ACTIVE\",\n        status: 1\n      }, {\n        name: \"INACTIVE\",\n        status: 2\n      }, {\n        name: \"SUSPENDED\",\n        status: 3\n      }]\n    };\n  },\n  methods: {\n    searchChange: function searchChange(v) {\n      var trimName = this.input4.trim();\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch(action.LIST_DISPATCHER, {\n        page: 1,\n        typedispatcher: this.type,\n        dispathcer_search: trimName,\n        status: this.status\n      });\n      this.firstData();\n    },\n    newDispatcher: function newDispatcher() {\n      this.$router.replace('new-dispatcher');\n    },\n    imgAlt: function imgAlt(event) {\n      event.target.src = require(\"../../assets/images/avatar-2.jpg\");\n    },\n    handlePageChange: function handlePageChange(page) {\n      this.currentPage = page;\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch(action.LIST_DISPATCHER, {\n        page: this.currentPage,\n        dispathcer_search: input4,\n        typedispatcher: this.type,\n        status: this.status\n      });\n    },\n    filterStatus: function () {\n      var _filterStatus = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(status) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.status = status;\n                _context.next = 4;\n                return this.$store.dispatch(action.LIST_DISPATCHER, {\n                  page: 1,\n                  dispathcer_search: this.input4,\n                  typedispatcher: this.type,\n                  status: this.status\n                });\n\n              case 4:\n                this.firstData();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function filterStatus(_x) {\n        return _filterStatus.apply(this, arguments);\n      }\n\n      return filterStatus;\n    }(),\n    openDialog: function openDialog(data) {\n      this.form.photos = data.profile_pictures;\n      this.form.phone = data.phonenumber;\n      this.form.email = data.email;\n      this.form.photo = data.profile_picture;\n      this.form.id = data.id;\n      this.form.name = data.name;\n\n      if (data.enterprise !== null) {\n        this.form.company = data.enterprise.name;\n        this.form.companyAdress = data.enterprise.office_address;\n      }\n\n      if (data.enterprise === null) {\n        this.form.company = '';\n        this.form.companyAdress = '';\n      }\n\n      if (data.dispatcher_profile !== null) {\n        this.form.nik = data.dispatcher_profile.nik;\n        this.payload.iddispatcher = data.dispatcher_profile.iddispatcher;\n      } else {\n        this.form.nik = '';\n        this.payload.iddispatcher = '';\n      }\n    },\n    deleteB: function deleteB() {\n      var _this = this;\n\n      Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(result) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!result.value) {\n                    _context2.next = 6;\n                    break;\n                  }\n\n                  _this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n\n                  _this.$store.commit(mutation.BUTTON_STATUS, true);\n\n                  _context2.next = 5;\n                  return _this.$store.dispatch(action.DELETE_DISPATCHER, _this.form.id);\n\n                case 5:\n                  _this.firstData();\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    resendActivation: function resendActivation() {\n      var obj = {\n        page: '/dispatcher',\n        iddispatcher: this.payload.iddispatcher\n      };\n      this.$store.commit(mutation.SET_BUTTON_RESEND_ACTIVE, true);\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch(action.RESEND_LINK_ACTIVATION, obj);\n    },\n    activeButton: function activeButton() {\n      var _this2 = this;\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, activate it!\"\n      }).then(function (result) {\n        if (result.value) {\n          _this2.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n\n          _this2.$store.commit(mutation.BUTTON_STATUS, true);\n\n          _this2.$store.dispatch(action.ACTIVATE_DISPATCHER, _this2.form.id);\n        }\n      });\n    },\n    suspendButton: function () {\n      var _suspendButton = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$Swal$fire, reason;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Swal.fire({\n                  title: 'Enter the reason of suspending',\n                  input: 'text',\n                  showCancelButton: true,\n                  confirmButtonColor: '#3085d6',\n                  cancelButtonColor: '#d33',\n                  confirmButtonText: 'Yes, suspend it!',\n                  inputValidator: function inputValidator(value) {\n                    if (!value) {\n                      return 'You need to write something!';\n                    }\n                  }\n                });\n\n              case 2:\n                _yield$Swal$fire = _context3.sent;\n                reason = _yield$Swal$fire.value;\n\n                if (reason) {\n                  this.payload.reason_suspend = reason;\n                  this.payload.users_id = this.form.id;\n                  this.$store.commit(mutation.SET_BUTTON_SUSPEND, true);\n                  this.$store.commit(mutation.BUTTON_STATUS, true);\n                  this.$store.dispatch(action.SUSPEND_DISPATCHER, this.payload);\n                  this.firstData();\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function suspendButton() {\n        return _suspendButton.apply(this, arguments);\n      }\n\n      return suspendButton;\n    }(),\n    editButton: function () {\n      var _editButton = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.$store.commit(mutation.SET_ID_DISPATCHER, this.form.id);\n\n              case 2:\n                router.push({\n                  path: \"/edit-dispatcher\"\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function editButton() {\n        return _editButton.apply(this, arguments);\n      }\n\n      return editButton;\n    }(),\n    firstData: function firstData() {\n      if (this.listData !== null) {\n        if (this.listData.length > 0) {\n          this.form.photos = this.listData[0].profile_pictures;\n          this.form.phone = this.listData[0].phonenumber;\n          this.form.email = this.listData[0].email;\n          this.form.id = this.listData[0].id;\n          this.form.photo = this.listData[0].profile_picture;\n          this.form.name = this.listData[0].name;\n\n          if (this.listData[0].enterprise !== null) {\n            this.form.company = this.listData[0].enterprise.name;\n            this.form.companyAdress = this.listData[0].enterprise.office_address;\n          }\n\n          if (this.listData[0].enterprise === null) {\n            this.form.company = '';\n            this.form.companyAdress = '';\n          }\n\n          if (this.listData[0].dispatcher_profile !== null) {\n            this.form.nik = this.listData[0].dispatcher_profile.nik;\n          } else {\n            this.form.nik = '';\n          }\n        }\n      }\n    }\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.$store.dispatch(action.TOTAL_ACCOUNT_DISPATCHER);\n\n            case 2:\n              this.$store.commit(mutation.BUTTON_STATUS, true);\n              _context5.next = 5;\n              return this.$store.dispatch(action.LIST_DISPATCHER, {\n                page: this.currentPage,\n                typedispatcher: this.type,\n                dispathcer_search: this.input4,\n                status: this.status\n              });\n\n            case 5:\n              this.firstData();\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  // async mounted(){\n  //     this.firstData()\n  // },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    total: getter.GET_TOTAL_ACCOUNT_DISPAT,\n    listData: getter.GET_LIST_DISPATCHER,\n    paginate: getter.GET_PAGINATE_DISPATCHER,\n    loading: getter.GET_BUTTON,\n    totalEmployee: getter.GET_ACCOUNT_EMPLOYEE,\n    buttonDelete: getter.GET_BUTTON_DELETE,\n    buttonResendPIN: getter.GET_BUTTON_RESEND_PIN,\n    buttonActive: getter.GET_BUTTON_ACTIVE,\n    buttonSuspend: getter.GET_BUTTON_SUSPEND,\n    buttonEdit: getter.GET_BUTTON_EDIT,\n    buttonResActive: getter.GET_BUTTON_RESEND_ACTIVE\n  })), {}, {\n    contactsFiltered: function contactsFiltered() {\n      var _this3 = this;\n\n      return this.contacts.filter(function (_ref2) {\n        var full_name = _ref2.full_name,\n            email = _ref2.email,\n            phone = _ref2.phone;\n        return (full_name + email + phone).toString().toLowerCase().indexOf(_this3.search.toString().toLowerCase()) !== -1;\n      });\n    },\n    contactsClass: function contactsClass() {\n      return this.pageWidth >= 870 ? 'large' : this.pageWidth >= 760 ? 'medium' : 'small';\n    }\n  }),\n  paginato: function paginato() {\n    return this.paginate;\n  },\n  indexTam: function indexTam() {\n    return this.indexT;\n  }\n};",{"version":3,"sources":["total-acount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA,OAAA,MAAA;AACA,OAAA,IAAA,MAAA,aAAA;AACA,OAAA,QAAA,MAAA,uCAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,KAAA,MAAA;AACA,OAAA,KAAA,MAAA;AACA,OAAA,KAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,CADA;AAEA,MAAA,MAAA,EAAA,CAFA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA,EAJA;AAKA,MAAA,aAAA,EAAA,KALA;AAMA,MAAA,SAAA,EAAA,CANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,QAAA,EAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CARA;AASA,MAAA,OAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,EAGA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA,SAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAHA,EAOA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAPA,EAUA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAVA,EAaA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA,CATA;AA0BA,MAAA,KAAA,EAAA,EA1BA;AA2BA,MAAA,MAAA,EAAA,EA3BA;AA4BA,MAAA,IAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,OAAA,EAAA,EAJA;AAKA,QAAA,KAAA,EAAA,EALA;AAMA,QAAA,KAAA,EAAA,EANA;AAOA,QAAA,aAAA,EAAA,EAPA;AAQA,QAAA,GAAA,EAAA,EARA;AASA,QAAA,EAAA,EAAA;AATA,OA5BA;AAuCA,MAAA,OAAA,EAAA;AACA,QAAA,cAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,YAAA,EAAA;AAHA,OAvCA;AA4CA,MAAA,MAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,MAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,MAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,MAAA,EAAA;AAFA,OATA;AA5CA,KAAA;AA2DA,GA9DA;AA+DA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,CADA,EACA;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,IAAA,EAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,eAAA,EAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,cAAA,EAAA,KAAA,IAFA;AAGA,QAAA,iBAAA,EAAA,QAHA;AAIA,QAAA,MAAA,EAAA,KAAA;AAJA,OAAA;AAMA,WAAA,SAAA;AACA,KAXA;AAYA,IAAA,aAZA,2BAYA;AACA,WAAA,OAAA,CAAA,OAAA,CAAA,gBAAA;AACA,KAdA;AAeA,IAAA,MAfA,kBAeA,KAfA,EAeA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,GAAA,GAAA,OAAA,oCAAA;AACA,KAjBA;AAkBA,IAAA,gBAlBA,4BAkBA,IAlBA,EAkBA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,eAAA,EACA;AACA,QAAA,IAAA,EAAA,KAAA,WADA;AAEA,QAAA,iBAAA,EAAA,MAFA;AAGA,QAAA,cAAA,EAAA,KAAA,IAHA;AAIA,QAAA,MAAA,EAAA,KAAA;AAJA,OADA;AAOA,KA5BA;AA6BA,IAAA,YA7BA;AAAA,mGA6BA,MA7BA;AAAA;AAAA;AAAA;AAAA;AA8BA,qBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;AACA,qBAAA,MAAA,GAAA,MAAA;AA/BA;AAAA,uBAgCA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,eAAA,EACA;AACA,kBAAA,IAAA,EAAA,CADA;AAEA,kBAAA,iBAAA,EAAA,KAAA,MAFA;AAGA,kBAAA,cAAA,EAAA,KAAA,IAHA;AAIA,kBAAA,MAAA,EAAA,KAAA;AAJA,iBADA,CAhCA;;AAAA;AAuCA,qBAAA,SAAA;;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyCA,IAAA,UAzCA,sBAyCA,IAzCA,EAyCA;AACA,WAAA,IAAA,CAAA,MAAA,GAAA,IAAA,CAAA,gBAAA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,WAAA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,eAAA;AACA,WAAA,IAAA,CAAA,EAAA,GAAA,IAAA,CAAA,EAAA;AACA,WAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;;AACA,UAAA,IAAA,CAAA,UAAA,KAAA,IAAA,EAAA;AACA,aAAA,IAAA,CAAA,OAAA,GAAA,IAAA,CAAA,UAAA,CAAA,IAAA;AACA,aAAA,IAAA,CAAA,aAAA,GAAA,IAAA,CAAA,UAAA,CAAA,cAAA;AACA;;AACA,UAAA,IAAA,CAAA,UAAA,KAAA,IAAA,EAAA;AACA,aAAA,IAAA,CAAA,OAAA,GAAA,EAAA;AACA,aAAA,IAAA,CAAA,aAAA,GAAA,EAAA;AACA;;AACA,UAAA,IAAA,CAAA,kBAAA,KAAA,IAAA,EAAA;AACA,aAAA,IAAA,CAAA,GAAA,GAAA,IAAA,CAAA,kBAAA,CAAA,GAAA;AACA,aAAA,OAAA,CAAA,YAAA,GAAA,IAAA,CAAA,kBAAA,CAAA,YAAA;AACA,OAHA,MAGA;AACA,aAAA,IAAA,CAAA,GAAA,GAAA,EAAA;AACA,aAAA,OAAA,CAAA,YAAA,GAAA,EAAA;AACA;AACA,KA/DA;AAgEA,IAAA,OAhEA,qBAgEA;AAAA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,eADA;AAEA,QAAA,IAAA,EAAA,mCAFA;AAGA,QAAA,IAAA,EAAA,SAHA;AAIA,QAAA,gBAAA,EAAA,IAJA;AAKA,QAAA,kBAAA,EAAA,SALA;AAMA,QAAA,iBAAA,EAAA,MANA;AAOA,QAAA,iBAAA,EAAA;AAPA,OAAA,EAQA,IARA;AAAA,2EAQA,kBAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,MAAA,CAAA,KADA;AAAA;AAAA;AAAA;;AAEA,kBAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA,IAAA;;AACA,kBAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;;AAHA;AAAA,yBAIA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,iBAAA,EAAA,KAAA,CAAA,IAAA,CAAA,EAAA,CAJA;;AAAA;AAKA,kBAAA,KAAA,CAAA,SAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARA;;AAAA;AAAA;AAAA;AAAA;AAgBA,KAjFA;AAkFA,IAAA,gBAlFA,8BAkFA;AACA,UAAA,GAAA,GAAA;AACA,QAAA,IAAA,EAAA,aADA;AAEA,QAAA,YAAA,EAAA,KAAA,OAAA,CAAA;AAFA,OAAA;AAIA,WAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,wBAAA,EAAA,IAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,sBAAA,EAAA,GAAA;AACA,KA1FA;AA2FA,IAAA,YA3FA,0BA2FA;AAAA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,eADA;AAEA,QAAA,IAAA,EAAA,SAFA;AAGA,QAAA,gBAAA,EAAA,IAHA;AAIA,QAAA,kBAAA,EAAA,SAJA;AAKA,QAAA,iBAAA,EAAA,MALA;AAMA,QAAA,iBAAA,EAAA;AANA,OAAA,EAOA,IAPA,CAOA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA,IAAA;;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,MAAA,CAAA,IAAA,CAAA,EAAA;AACA;AACA,OAbA;AAcA,KA1GA;AA2GA,IAAA,aA3GA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA8GA,IAAA,CAAA,IAAA,CAAA;AACA,kBAAA,KAAA,EAAA,gCADA;AAEA,kBAAA,KAAA,EAAA,MAFA;AAGA,kBAAA,gBAAA,EAAA,IAHA;AAIA,kBAAA,kBAAA,EAAA,SAJA;AAKA,kBAAA,iBAAA,EAAA,MALA;AAMA,kBAAA,iBAAA,EAAA,kBANA;AAOA,kBAAA,cAAA,EAAA,wBAAA,KAAA,EAAA;AACA,wBAAA,CAAA,KAAA,EAAA;AACA,6BAAA,8BAAA;AACA;AACA;AAXA,iBAAA,CA9GA;;AAAA;AAAA;AA6GA,gBAAA,MA7GA,oBA6GA,KA7GA;;AA2HA,oBAAA,MAAA,EAAA;AACA,uBAAA,OAAA,CAAA,cAAA,GAAA,MAAA;AACA,uBAAA,OAAA,CAAA,QAAA,GAAA,KAAA,IAAA,CAAA,EAAA;AACA,uBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA,IAAA;AACA,uBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;AACA,uBAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,KAAA,OAAA;AACA,uBAAA,SAAA;AACA;;AAlIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoIA,IAAA,UApIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAqIA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA,KAAA,IAAA,CAAA,EAAA,CArIA;;AAAA;AAsIA,gBAAA,MAAA,CAAA,IAAA,CAAA;AACA,kBAAA,IAAA;AADA,iBAAA;;AAtIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0IA,IAAA,SA1IA,uBA0IA;AACA,UAAA,KAAA,QAAA,KAAA,IAAA,EAAA;AACA,YAAA,KAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,IAAA,CAAA,MAAA,GAAA,KAAA,QAAA,CAAA,CAAA,EAAA,gBAAA;AACA,eAAA,IAAA,CAAA,KAAA,GAAA,KAAA,QAAA,CAAA,CAAA,EAAA,WAAA;AACA,eAAA,IAAA,CAAA,KAAA,GAAA,KAAA,QAAA,CAAA,CAAA,EAAA,KAAA;AACA,eAAA,IAAA,CAAA,EAAA,GAAA,KAAA,QAAA,CAAA,CAAA,EAAA,EAAA;AACA,eAAA,IAAA,CAAA,KAAA,GAAA,KAAA,QAAA,CAAA,CAAA,EAAA,eAAA;AACA,eAAA,IAAA,CAAA,IAAA,GAAA,KAAA,QAAA,CAAA,CAAA,EAAA,IAAA;;AACA,cAAA,KAAA,QAAA,CAAA,CAAA,EAAA,UAAA,KAAA,IAAA,EAAA;AACA,iBAAA,IAAA,CAAA,OAAA,GAAA,KAAA,QAAA,CAAA,CAAA,EAAA,UAAA,CAAA,IAAA;AACA,iBAAA,IAAA,CAAA,aAAA,GAAA,KAAA,QAAA,CAAA,CAAA,EAAA,UAAA,CAAA,cAAA;AACA;;AACA,cAAA,KAAA,QAAA,CAAA,CAAA,EAAA,UAAA,KAAA,IAAA,EAAA;AACA,iBAAA,IAAA,CAAA,OAAA,GAAA,EAAA;AACA,iBAAA,IAAA,CAAA,aAAA,GAAA,EAAA;AACA;;AACA,cAAA,KAAA,QAAA,CAAA,CAAA,EAAA,kBAAA,KAAA,IAAA,EAAA;AACA,iBAAA,IAAA,CAAA,GAAA,GAAA,KAAA,QAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,GAAA;AACA,WAFA,MAEA;AACA,iBAAA,IAAA,CAAA,GAAA,GAAA,EAAA;AACA;AACA;AACA;AACA;AAlKA,GA/DA;AAmOA,EAAA,OAnOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAoOA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,wBAAA,CApOA;;AAAA;AAqOA,mBAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,IAAA;AArOA;AAAA,qBAsOA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,eAAA,EAAA;AACA,gBAAA,IAAA,EAAA,KAAA,WADA;AAEA,gBAAA,cAAA,EAAA,KAAA,IAFA;AAGA,gBAAA,iBAAA,EAAA,KAAA,MAHA;AAIA,gBAAA,MAAA,EAAA,KAAA;AAJA,eAAA,CAtOA;;AAAA;AA2OA,mBAAA,SAAA;;AA3OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6OA;AACA;AACA;AACA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,KAAA,EAAA,MAAA,CAAA,wBADA;AAEA,IAAA,QAAA,EAAA,MAAA,CAAA,mBAFA;AAGA,IAAA,QAAA,EAAA,MAAA,CAAA,uBAHA;AAIA,IAAA,OAAA,EAAA,MAAA,CAAA,UAJA;AAKA,IAAA,aAAA,EAAA,MAAA,CAAA,oBALA;AAMA,IAAA,YAAA,EAAA,MAAA,CAAA,iBANA;AAOA,IAAA,eAAA,EAAA,MAAA,CAAA,qBAPA;AAQA,IAAA,YAAA,EAAA,MAAA,CAAA,iBARA;AASA,IAAA,aAAA,EAAA,MAAA,CAAA,kBATA;AAUA,IAAA,UAAA,EAAA,MAAA,CAAA,eAVA;AAWA,IAAA,eAAA,EAAA,MAAA,CAAA;AAXA,GAAA,CADA;AAcA,IAAA,gBAdA,8BAcA;AAAA;;AACA,aAAA,KAAA,QAAA,CAAA,MAAA,CAAA;AAAA,YAAA,SAAA,SAAA,SAAA;AAAA,YAAA,KAAA,SAAA,KAAA;AAAA,YAAA,KAAA,SAAA,KAAA;AAAA,eAAA,CAAA,SAAA,GAAA,KAAA,GAAA,KAAA,EAAA,QAAA,GAAA,WAAA,GAAA,OAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,GAAA,WAAA,EAAA,MAAA,CAAA,CAAA;AAAA,OAAA,CAAA;AACA,KAhBA;AAiBA,IAAA,aAjBA,2BAiBA;AACA,aAAA,KAAA,SAAA,IAAA,GAAA,GAAA,OAAA,GAAA,KAAA,SAAA,IAAA,GAAA,GAAA,QAAA,GAAA,OAAA;AACA;AAnBA,IAhPA;AAqQA,EAAA,QArQA,sBAqQA;AACA,WAAA,KAAA,QAAA;AACA,GAvQA;AAwQA,EAAA,QAxQA,sBAwQA;AACA,WAAA,KAAA,MAAA;AACA;AA1QA,CAAA","sourcesContent":["<template>\n  <div class=\"container mb-200\">\n    <p class=\"font-weight-600\">ACCOUNT</p>\n    <el-row :gutter=\"50\">\n      <el-col :span=\"19\">\n        <el-card shadow=\"always\" :body-style=\"{padding: '5px'}\" class=\"card-border\">\n          <el-row :gutter=\"20\" v-if=\"total !== null\">\n            <el-col :span=\"8\">\n              <div class=\"line\">\n                <p class=\"pb-20 font-weight-600 mt-8\">TOTAL DISPATCHER</p>\n                <span class=\"font-size-44 font-weight-600\">{{total.total_dispatcher}}</span>\n              </div>\n            </el-col>\n            <el-col :span=\"8\">\n              <div class=\"line\">\n                <p class=\"pb-20 font-weight-600 mt-8\">ACTIVE ACCOUNT</p>\n                <span class=\"font-size-44 font-weight-600\">{{total.active_account}}</span>\n              </div>\n            </el-col>\n            <el-col :span=\"8\">\n              <div class=\"text-center\">\n                <p class=\"pb-20 font-weight-600 mt-8\">SUSPENDED ACCOUNT</p>\n                <span class=\"font-size-44 font-weight-600\">{{total.suspended_account}}</span>\n              </div>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-col>\n      <el-col :span=\"4\">\n        <el-button @click=\"newDispatcher\" shadow=\"always\" :body-style=\"{padding: '10px'}\" class=\"card-border plus-bg text-center\">\n          <i class=\"mdi mdi-plus font-size-60 font-weight-500 white-text\"></i>\n          <span class=\"text-p\">Add New</span>\n          <span class=\"text-p\">Dispatcher</span>\n        </el-button>\n      </el-col>\n    </el-row>\n\n    <p class=\"font-weight-600 mt-40\">INFO</p>\n    <el-row class=\"mt-20\">\n      <el-card shadow=\"always\" class=\"card-border\" >\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <div class=\"avatar2 align-vertical text-center\">\n              <img :src=\"form.photo\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\" >\n              <h1 class=\"name-of\">{{ form.name }}</h1>\n              <span>{{ form.status }}</span>\n            </div>\n            <el-row type=\"flex\" justify=\"center\">\n              <el-col :span=\"9\" class=\"break-word\">\n                <div>\n                <dl>\n                  <dt v-if=\"form.company !== ''\">COMPANY</dt>\n                  <dd>{{ form.company }}</dd>\n\n                  <dt>PHONE</dt>\n                  <dd>{{ form.phone }}</dd>\n\n                  <dt>EMAIL</dt>\n                  <dd>{{ form.email }}</dd>\n                </dl>\n                </div>\n              </el-col>\n              <el-col :span=\"9\">\n                <div>\n                <dl>\n                  <dt v-if=\"form.companyAdress !== ''\">COMPANY ADDRESS</dt>\n                  <dd>{{ form.companyAdress }}</dd>\n\n                  <dt>NIK</dt>\n                  <dd>{{ form.nik }}</dd>\n                </dl>\n                </div>\n              </el-col>\n            </el-row>\n            <el-row type=\"flex\"  justify=\"center\" class=\"mt-10\">\n              <el-col :span=\"6\"><el-button @click=\"editButton\" type=\"info\" size=\"small\" class=\"small-edit\">Edit</el-button></el-col>\n              <el-col :span=\"10\">\n                <el-button\n                        type=\"danger\"\n                        size=\"small\"\n                        :loading=\"buttonSuspend\"\n                        @click=\"suspendButton\"\n                        v-if=\"status === 1\">\n                  Suspend\n                </el-button>\n                <el-button\n                        type=\"success\"\n                        size=\"small\"\n                        :loading=\"buttonResActive\"\n                        @click=\"resendActivation\"\n                        v-if=\"status === 2\">\n                  Resend Activation\n                </el-button>\n                <el-button\n                        type=\"danger\"\n                        size=\"small\"\n                        :loading=\"buttonDelete\"\n                        @click=\"deleteB\"\n                        v-if=\"status === 3\">\n                  Delete\n                </el-button>\n                <el-button\n                        type=\"primary\"\n                        size=\"small\"\n                        :loading=\"buttonActive\"\n                        @click=\"activeButton\"\n                        v-if=\"status === 3\">\n                  Active\n                </el-button>\n                </el-col>\n            </el-row>\n          </el-col>\n\n\n          <el-col :span=\"12\" class=\"line-not-center\">\n            <el-row type=\"flex\"  justify=\"center\" :gutter=\"20\" class=\"mt-10\">\n              <el-col :span=\"10\">\n                <el-input\n                      size=\"mini\"\n                      placeholder=\"Search\"\n                      @keyup.native=\"searchChange\"\n                      v-model=\"input4\">\n                  <i slot=\"suffix\" class=\"el-input__icon el-icon-search\"></i>\n                </el-input>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-select @change=\"filterStatus\" v-model=\"status\" filterable size=\"mini\" placeholder=\"All Status\">\n                  <el-option\n                          v-for=\"item in select\"\n                          :key=\"item.status\"\n                          :label=\"item.name\"\n                          :value=\"item.status\">\n                  </el-option>\n                </el-select>\n              </el-col>\n            </el-row>\n\n            <div class=\"contacts-list box grow scrollable only-y\" v-loading=\"loading\">\n              <el-row :gutter=\"20\">\n              <div v-for=\"c in listData\" :key=\"c.id\" class=\"flex contact\" @click=\"openDialog(c)\">\n                <div class=\"avatar align-vertical el-col el-col-4\">\n                  <img :src=\"c.profile_picture\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\n                </div>\n                <div class=\"info box grow flex el-col el-col-20\">\n                  <div class=\"name box grow flex column justify-center p-10 scrollable only-x\">\n                    <div class=\"fullname fs-18\"><strong>{{c.name}}</strong></div>\n                    <div class=\"phone fs-14 secondary-text\">{{c.phonenumber}}</div>\n                    <div class=\"email fs-14 secondary-text\">{{c.email}}</div>\n                  </div>\n                  <div class=\"phone align-vertical p-10 green\" v-if=\"c.status === 1\"><span class=\"align-vertical-middle font-weight-600\">ACTIVE</span></div>\n                  <div class=\"phone align-vertical p-10\" v-if=\"c.status === 2\"><span class=\"align-vertical-middle font-weight-600\">IN ACTIVE</span></div>\n                  <div class=\"phone align-vertical p-10 red\" v-if=\"c.status === 3\"><span class=\"align-vertical-middle font-weight-600\">SUSPANDED</span></div>\n                </div>\n              </div>\n              </el-row>\n                <div class=\"grid-content\">\n                    <el-pagination\n                        background\n                        layout=\"prev, pager, next\"\n                        @current-change=\"handlePageChange\"\n                        :total=\"paginate.totalP\">\n                    </el-pagination>\n              </div>\n            </div>\n          </el-col>\n        </el-row>\n      </el-card>\n    </el-row>\n  </div>\n</template>\n\n<script>\n  import router from '../../router'\n  import Swal from 'sweetalert2'\n  import Contacts from '@/assets/data/CONTACTS_MOCK_DATA.json'\n  import { mapGetters, mapActions } from 'vuex'\n  import * as getter from '../../store/getters-types'\n  import * as action from '../../store/action-types'\n  import * as mutation from '../../store/mutation-types'\n\n  export default {\n    name: 'Contacts',\n    data() {\n      return {\n        currentPage: 1,\n        status: 1,\n        type: '',\n        search: '',\n        dialogvisible: false,\n        pageWidth: 0,\n        userdata: {},\n        contacts: Contacts.slice(0, 30),\n        options: [{\n          value: 'Option1',\n          label: 'Option1'\n        }, {\n          value: 'Option2',\n          label: 'Option2',\n          disabled: true\n        }, {\n          value: 'Option3',\n          label: 'Option3'\n        }, {\n          value: 'Option4',\n          label: 'Option4'\n        }, {\n          value: 'Option5',\n          label: 'Option5'\n        }],\n        value: '',\n        input4: '',\n        form: {\n          name: '',\n          photo: '',\n          status: '',\n          company:'',\n          phone: '',\n          email: '',\n          companyAdress: '',\n          nik: '',\n          id: ''\n        },\n        payload: {\n          reason_suspend: \"\",\n          users_id: null,\n          iddispatcher: \"\",\n        },\n        select: [\n                {\n                    name: \"ACTIVE\",\n                    status: 1,\n                },\n                {\n                    name: \"INACTIVE\",\n                    status: 2,\n                },\n                {\n                    name: \"SUSPENDED\",\n                    status: 3\n                }\n            ],\n      }\n    },\n    methods: {\n      searchChange(v){\n        let trimName = this.input4.trim()\n          this.$store.commit(mutation.BUTTON_STATUS, true);\n          this.$store.dispatch(action.LIST_DISPATCHER, {\n              page: 1,\n              typedispatcher: this.type,\n              dispathcer_search: trimName,\n              status: this.status\n            });\n        this.firstData()\n      },\n      newDispatcher()   {\n        this.$router.replace('new-dispatcher')\n      },\n      imgAlt(event) {\n          event.target.src = require(\"../../assets/images/avatar-2.jpg\");\n      },\n      handlePageChange(page) {\n        this.currentPage = page;\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        this.$store.dispatch( action.LIST_DISPATCHER,\n            {\n              page: this.currentPage,\n              dispathcer_search: input4,\n              typedispatcher : this.type,\n              status: this.status\n            });\n      },\n      async filterStatus(status){\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        this.status = status;\n        await this.$store.dispatch(action.LIST_DISPATCHER,\n            {\n              page: 1,\n              dispathcer_search: this.input4,\n              typedispatcher : this.type,\n              status: this.status\n            });\n        this.firstData()\n      },\n      openDialog(data) {\n        this.form.photos = data.profile_pictures;\n        this.form.phone = data.phonenumber;\n        this.form.email = data.email;\n        this.form.photo = data.profile_picture;\n        this.form.id    = data.id;\n        this.form.name = data.name;\n        if(data.enterprise !== null){\n          this.form.company = data.enterprise.name;\n          this.form.companyAdress = data.enterprise.office_address\n        }\n        if(data.enterprise === null){\n          this.form.company = '';\n          this.form.companyAdress = ''\n        }\n        if(data.dispatcher_profile !== null ){\n          this.form.nik   = data.dispatcher_profile.nik;\n          this.payload.iddispatcher = data.dispatcher_profile.iddispatcher;\n        }else {\n          this.form.nik   = '';\n          this.payload.iddispatcher = '';\n        }\n      },\n        deleteB() {\n            Swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, delete it!'\n            }).then(async (result) => {\n                if (result.value) {\n                    this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    await this.$store.dispatch(action.DELETE_DISPATCHER, this.form.id)\n                    this.firstData()\n                }\n            })\n        },\n        resendActivation(){\n            let obj ={\n                page : '/dispatcher',\n                iddispatcher   : this.payload.iddispatcher\n            };\n            this.$store.commit(mutation.SET_BUTTON_RESEND_ACTIVE, true);\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.$store.dispatch(action.RESEND_LINK_ACTIVATION, obj)\n        },\n        activeButton() {\n            Swal.fire({\n                title: \"Are you sure?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, activate it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    this.$store.dispatch(action.ACTIVATE_DISPATCHER, this.form.id);\n                }\n            });\n        },\n        async suspendButton() {\n            const {\n                value: reason\n            } = await Swal.fire({\n                title: 'Enter the reason of suspending',\n                input: 'text',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, suspend it!',\n                inputValidator: (value) => {\n                    if (!value) {\n                        return 'You need to write something!'\n                    }\n                }\n            });\n            if (reason) {\n                this.payload.reason_suspend = reason;\n                this.payload.users_id = this.form.id;\n                this.$store.commit(mutation.SET_BUTTON_SUSPEND, true);\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.$store.dispatch(action.SUSPEND_DISPATCHER, this.payload)\n                this.firstData();\n            }\n        },\n      async editButton() {\n          await this.$store.commit(mutation.SET_ID_DISPATCHER, this.form.id)\n          router.push({\n              path: `/edit-dispatcher`\n          })\n        },\n      firstData(){\n        if(this.listData !== null) {\n          if(this.listData.length > 0){\n            this.form.photos = this.listData[0].profile_pictures;\n            this.form.phone = this.listData[0].phonenumber;\n            this.form.email = this.listData[0].email;\n            this.form.id    = this.listData[0].id;\n            this.form.photo = this.listData[0].profile_picture;\n            this.form.name = this.listData[0].name;\n            if(this.listData[0].enterprise !== null){\n              this.form.company = this.listData[0].enterprise.name;\n              this.form.companyAdress = this.listData[0].enterprise.office_address\n            }\n            if(this.listData[0].enterprise === null){\n              this.form.company = '';\n              this.form.companyAdress = ''\n            }\n            if(this.listData[0].dispatcher_profile !== null ){\n              this.form.nik   = this.listData[0].dispatcher_profile.nik;\n            }else {\n              this.form.nik   = '';\n            }\n          }\n        }\n      }\n    },\n      async created(){\n        await this.$store.dispatch(action.TOTAL_ACCOUNT_DISPATCHER)\n              this.$store.commit(mutation.BUTTON_STATUS, true);\n        await this.$store.dispatch(action.LIST_DISPATCHER,{\n                page: this.currentPage,\n                typedispatcher : this.type,\n                dispathcer_search: this.input4,\n                status: this.status});\n        this.firstData()\n      },\n      // async mounted(){\n      //     this.firstData()\n      // },\n    computed: {\n      ...mapGetters({\n        total           : getter.GET_TOTAL_ACCOUNT_DISPAT,\n        listData        : getter.GET_LIST_DISPATCHER,\n        paginate        : getter.GET_PAGINATE_DISPATCHER,\n        loading         : getter.GET_BUTTON,\n        totalEmployee   : getter.GET_ACCOUNT_EMPLOYEE,\n        buttonDelete    : getter.GET_BUTTON_DELETE,\n        buttonResendPIN : getter.GET_BUTTON_RESEND_PIN,\n        buttonActive    : getter.GET_BUTTON_ACTIVE,\n        buttonSuspend   : getter.GET_BUTTON_SUSPEND,\n        buttonEdit      : getter.GET_BUTTON_EDIT,\n        buttonResActive : getter.GET_BUTTON_RESEND_ACTIVE\n      }),\n      contactsFiltered() {\n        return this.contacts.filter(({full_name, email, phone}) => (full_name + email + phone).toString().toLowerCase().indexOf(this.search.toString().toLowerCase()) !== -1)\n      },\n      contactsClass() {\n        return this.pageWidth >= 870 ? 'large' : this.pageWidth >= 760 ? 'medium' : 'small'\n      }\n      },\n      paginato(){\n          return this.paginate\n      },\n      indexTam(){\n          return this.indexT\n      }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/scss/_variables\";\n    .card-border {\n        border-radius: 11px;\n    }\n    .line-not-center {\n      border-left: 1px solid $text-color-info;\n    }\n    .line {\n      border-right: 1px solid $text-color-info;\n      text-align: center;\n    }\n    .text-p {\n      display: block;\n      color: white;\n      font-weight: 600;\n    }\n    .plus-bg {\n      background-color: #a31424;\n      height: 139px;\n\n    }\n    .avatar {\n      img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 60px;\n        height: 60px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n      }\n    }\n    .avatar2 {\n      img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 120px;\n        height: 120px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n      }\n    }\n    .name-of {\n      margin-bottom: 10px;\n      color: #a31424;\n    }\n    .contacts-list {\n      //margin: 0 auto;\n      height: 400px;\n      width: 100%;\n      max-width: 965px;\n      padding: 0px 30px;\n      box-sizing: border-box;\n      .contact {\n        margin: 10px 0;\n        padding: 5px;\n        box-sizing: border-box;\n        cursor: pointer;\n        border-bottom: 1px solid $text-color-info;\n      }\n    }\n    .small-edit {\n      width: 90px;\n    }\n    .break-word {\n      overflow-wrap: break-word;\n    }\n    .green {\n      color: green;\n    }\n    .red {\n      color: red;\n    }\n</style>"],"sourceRoot":"src/components/dispatcher"}]}