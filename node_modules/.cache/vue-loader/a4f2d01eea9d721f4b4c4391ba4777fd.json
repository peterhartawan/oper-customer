{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\pages\\enterprise\\detail-enterprise.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\pages\\enterprise\\detail-enterprise.vue","mtime":1644413760531},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport router from '../../../router'\r\nimport {\r\n    mapGetters\r\n} from 'vuex'\r\nimport * as getter from '../../../store/getters-types'\r\nimport * as action from '../../../store/action-types'\r\nimport * as mutation from '../../../store/mutation-types'\r\nimport Swal from 'sweetalert2'\r\nimport PopupDispatcher from '../../../components/enterprise/popup_dispatcher'\r\nimport PopupAdmin from '../../../components/enterprise/popup_admin'\r\nimport enterprise from '../../../router/enterprise';\r\n\r\nexport default {\r\n    components: {\r\n        PopupDispatcher,\r\n        PopupAdmin\r\n    },\r\n    data() {\r\n        return {\r\n            nameOfCorp: null,\r\n            corporateOfPhone: null,\r\n            corporateVendor: null,\r\n            corporateAdress: null,\r\n            corporateEmail: null,\r\n            corporateType: null,\r\n            corporateOAddress: null,\r\n            dispatcherMount: null,\r\n            buttonStatus: null,\r\n            dialogTableVisible: false,\r\n            currentPage: 1,\r\n            payload: {\r\n                identerprise: null,\r\n                page: 1,\r\n                reason_suspend: null,\r\n            },\r\n            enterpriseStatus: null,\r\n            offsetV: null,\r\n            offsetY: null,\r\n            offsetActive: null,\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            enterprise: getter.ENTERPRISE,\r\n            adminEnterprise: getter.ADMIN_ENTERPRISE,\r\n            button: getter.GET_BUTTON,\r\n            profile: getter.GET_DATA_PROFILE\r\n        }),\r\n        showAdmin() {\r\n            if (this.profile.idrole === 1) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n    },\r\n    async created() {\r\n        let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\r\n        this.buttonStatus = userProfile === 1;\r\n        this.payload.identerprise = this.enterprise.identerprise;\r\n        // let obj = {\r\n        //     role: 4,\r\n        //     page: 1\r\n        // };\r\n        if (!this.buttonStatus) {\r\n            await this.$store.dispatch(action.DISPATCHER_AVAILABLE);\r\n        }\r\n        (this.enterprise.enterprise_type.identerprise_type === 2) ? this.dispatcherMount = true: this.dispatcherMount = false;\r\n\r\n        for (let i = 0; i < this.enterprise.admins.length; i++) {\r\n            if (this.enterprise.admins[i].status === 2 || this.enterprise.status === 2) {\r\n                this.enterpriseStatus = true;\r\n                this.offsetV = 9\r\n                this.offsetY = 7\r\n                this.offsetActive = 8\r\n            } else {\r\n                this.enterpriseStatus = false;\r\n                this.offsetV = 9\r\n                this.offsetY = 11\r\n                this.offsetActive = 12\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async inspector() {\r\n            this.$store.commit(mutation.SET_LOADING, true);\r\n            await this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n            router.replace('/pic-task-list')\r\n        },\r\n        templateTask() {\r\n            router.replace('/template-list')\r\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n        },\r\n        addButton() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            router.replace(`/new-admin-enterprise/${this.enterprise.identerprise}`)\r\n        },\r\n        editAdmin(e) {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$store.commit(mutation.SET_DATA_ADMIN_ENTERPRISE, e);\r\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n            router.replace('/edit-admin')\r\n        },\r\n        resendActivation() {\r\n            let obj = {\r\n                page: '/enterprise',\r\n                id: this.payload.identerprise\r\n            }\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            this.$store.dispatch(action.RESEND_LINK_ACTIVATION, obj)\r\n        },\r\n        async created() {\r\n            let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\r\n            this.buttonStatus = userProfile === 1;\r\n            this.payload.identerprise = this.enterprise.identerprise;\r\n            let obj = {\r\n                role: 4,\r\n                page: 1\r\n            };\r\n            if (!this.buttonStatus) {\r\n                await this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\r\n            }\r\n            (this.enterprise.enterprise_type.identerprise_type === 2) ? this.dispatcherMount = true: this.dispatcherMount = false;\r\n        },\r\n        deleteB() {\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"You won't be able to revert this!\",\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!'\r\n            }).then((result) => {\r\n                if (result.value) {\r\n                    this.$store.dispatch(action.DELETE_CORP_ID, this.enterprise.identerprise)\r\n                }\r\n            })\r\n        },\r\n        activeButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, activate it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.dispatch(action.ACTIVATE_ENTERPRISE, this.payload);\r\n                }\r\n            });\r\n        },\r\n        async suspend() {\r\n            const {\r\n                value: reason\r\n            } = await Swal.fire({\r\n                title: 'Enter the reason of suspending',\r\n                input: 'text',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, suspend it!',\r\n                inputValidator: (value) => {\r\n                    if (!value) {\r\n                        return 'You need to write something!'\r\n                    }\r\n                }\r\n            })\r\n            if (reason) {\r\n                this.payload.reason_suspend = reason;\r\n                this.$store.dispatch(action.SUSPEND_ENTERPRISE, this.payload)\r\n            }\r\n        },\r\n        editCorp(item) {\r\n            router.push({\r\n                path: `/edit-enterprise/${item}`\r\n            })\r\n        },\r\n        enterpriseDriver() {\r\n\r\n            router.push({\r\n                path: `/list-driver-enterprise/` + this.enterprise.identerprise\r\n            })\r\n        },\r\n        backLCorp() {\r\n            router.replace('/enterprise')\r\n\r\n        },\r\n        async location() {\r\n            this.$store.dispatch(action.LIST_LOCATION, this.payload);\r\n            this.$router.replace({\r\n                path: \"/location-enterprise/\" + this.enterprise.identerprise\r\n            });\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["detail-enterprise.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"detail-enterprise.vue","sourceRoot":"src/views/pages/enterprise","sourcesContent":["<template>\r\n<!--<vue-scroll class=\"page-typography\">-->\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <p class=\"font-weight-600 mt-40\">INFO</p>\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-row :gutter=\"20\">\r\n            <el-button @click=\"backLCorp\">Back</el-button>\r\n            <center>\r\n                <div class=\"greyh3\">\r\n                    <el-col :span=\"7\">\r\n                        <h3>COMPANY</h3>\r\n                        <el-col>\r\n                            <div v-if='enterprise.image_logo == \"\" || enterprise.image_logo == null'>\r\n                                <img src=\"../../../../src/assets/images/Oper_Logo_Landscape_Red.png\" class=\"image middle\">\r\n                            </div>\r\n                            <div v-else>\r\n                                <img :src=\"enterprise.image_logo\" class=\"image\">\r\n                            </div>\r\n                        </el-col>\r\n                    </el-col>\r\n                    <el-col :span=\"1\">\r\n                        <br>\r\n                        <el-col>\r\n                            <div class=\"vl\"></div>\r\n                        </el-col>\r\n                    </el-col>\r\n                    <div v-if=\"enterprise.enterprise_type.identerprise_type == 2\">\r\n                        <el-col :span=\"8\">\r\n                            <h3>DISPATCHER</h3>\r\n                            <div v-if=\"enterprise.dispatcher\">\r\n                                <el-col :span=\"8\">\r\n                                    <PopupDispatcher :identerprise=\"enterprise.identerprise\" :picture=\"enterprise.dispatcher.profile_picture\">\r\n                                    </PopupDispatcher>\r\n                                </el-col>\r\n                            </div>\r\n                            <div v-else>\r\n                                <el-col style=\"width: 100%\" :span=\"8\">\r\n                                    <PopupDispatcher :identerprise=\"enterprise.identerprise\" :picture=\"99\">\r\n                                    </PopupDispatcher>\r\n                                </el-col>\r\n                            </div>\r\n                            <el-col :span=\"15\">\r\n                                <div class=\"left\">\r\n                                    <br>\r\n                                    <div v-if=\"enterprise.dispatcher\">\r\n                                        <b>{{enterprise.dispatcher.name}}</b>\r\n                                        <br>\r\n                                        <span style=\"font-size: 14px; word-wrap: break-word;\">\r\n                                            {{enterprise.vendor.name}}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </el-col>\r\n                        </el-col>\r\n                        <el-col :span=\"8\" style=\"margin-left: -60px\">\r\n                            <h3>ADMIN</h3>\r\n                            <el-col :span=\"8\">\r\n                                <div v-if='enterprise.admins[0].profile_picture == \"\" || enterprise.admins[0].profile_picture == null'>\r\n                                    <PopupAdmin>\r\n                                    </PopupAdmin>\r\n                                </div>\r\n                                <div v-else>\r\n                                    <PopupAdmin>\r\n                                    </PopupAdmin>\r\n                                </div>\r\n                            </el-col>\r\n                            <el-col :span=\"16\">\r\n                                <div class=\"right\" style=\"margin-top: 30px\">\r\n                                    <b>{{enterprise.admins[0].name}}</b>\r\n                                    <br>\r\n                                    <span style=\"font-size: 14px\">\r\n                                        {{enterprise.admins[0].phonenumber}}\r\n                                        <br>\r\n                                        <span style=\"font-size: 12px; word-wrap: break-word;\">\r\n                                            {{enterprise.admins[0].email}}\r\n                                        </span>\r\n                                        <br>\r\n                                        {{enterprise.vendor.name}}\r\n                                    </span>\r\n                                </div>\r\n                            </el-col>\r\n                        </el-col>\r\n                    </div>\r\n                    <div v-else>\r\n                        <el-col :span=\"16\">\r\n                            <h3>ADMIN</h3>\r\n                            <el-col :span=\"8\">\r\n                                <PopupAdmin>\r\n                                </PopupAdmin>\r\n                            </el-col>\r\n                            <el-col :span=\"16\">\r\n                                <div class=\"right\" style=\"margin-top: 30px\">\r\n                                    <b>{{enterprise.admins[0].name}}</b>\r\n                                    <br>\r\n                                    <span style=\"font-size: 14px\">\r\n                                        {{enterprise.admins[0].phonenumber}}\r\n                                        <br>\r\n                                        <span style=\"font-size: 12px; word-wrap: break-word;\">\r\n                                               {{enterprise.admins[0].email}}\r\n                                        </span>\r\n                                        <br>\r\n                                        {{enterprise.vendor.name}}\r\n                                    </span>\r\n                                </div>\r\n                            </el-col>\r\n                        </el-col>\r\n                    </div>\r\n                </div>\r\n            </center>\r\n        </el-row>\r\n        <el-row style=\"margin-top: 20px\" :gutter=\"20\">\r\n            <el-col :span=\"8\">\r\n                <b>NAME</b>\r\n                <br>\r\n                {{enterprise.name}}\r\n                <br>\r\n                <br>\r\n                <b>PHONE</b>\r\n                <br>\r\n                {{enterprise.office_phone}}\r\n                <br>\r\n                <br>\r\n                <b>EMAIL</b>\r\n                <br>\r\n                <span style=\"word-wrap: break-word;\">\r\n                    {{enterprise.email}}\r\n                </span>\r\n                <br>\r\n                <br>\r\n                <b>ADDRESS</b>\r\n                <br>\r\n                <span style=\"word-wrap: break-word;\">\r\n                    {{enterprise.office_address}}\r\n                </span>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <b>VENDOR</b>\r\n                <br>\r\n                {{enterprise.vendor.name}}\r\n                <br>\r\n                <br>\r\n                <b>TYPE</b>\r\n                <br>\r\n                <span style=\"text-transform: capitalize;\">\r\n                    {{enterprise.enterprise_type.name}}\r\n                </span>\r\n                <br>\r\n                <br>\r\n                <b>DESCRIPTION</b>\r\n                <br>\r\n                <span style=\"word-wrap: break-word;\">\r\n                    {{enterprise.description}}\r\n                </span>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <br><br><br><br><br>\r\n                <div v-if=\"buttonStatus\">\r\n                    <el-row>\r\n                        <el-button @click=\"inspector\" style=\"width: 100%; border-color: #f4f4f5;\" type=\"info\" plain>\r\n                            <span style=\" text-align: justify;\">\r\n                                <h2>&nbsp; Inspector</h2>\r\n                            </span>\r\n                        </el-button>\r\n                    </el-row>\r\n                    <el-row style=\"margin-top: 10px;\">\r\n                        <el-button @click=\"templateTask\" style=\"width: 100%; border-color: #f4f4f5;\" type=\"info\" plain>\r\n                            <span style=\" text-align: justify;\">\r\n                                <h2>&nbsp; Template Task</h2>\r\n                            </span>\r\n                        </el-button>\r\n                    </el-row>\r\n                </div>\r\n                <div v-else>\r\n                    <el-row>\r\n                        <el-button @click=\"enterpriseDriver\" style=\"width: 100%; border-color: #f4f4f5;\" type=\"info\" plain>\r\n                            <span style=\" text-align: justify;\">\r\n                                <h2><img src=\"../../../assets/oper_asset/driver_grey.png\" class=\"drive-acount\">&nbsp; Driver List</h2>\r\n                            </span>\r\n                        </el-button>\r\n                    </el-row>\r\n                    <el-row style=\"margin-top: 10px;\">\r\n                        <el-button @click=\"location\" style=\"width: 100%; border-color: #f4f4f5;\" type=\"info\" plain>\r\n                            <span style=\" text-align: justify;\">\r\n                                <h2><i class=\"mdi mdi-map-marker mdi-36px\"></i>&nbsp; List Location</h2>\r\n                            </span>\r\n                        </el-button>\r\n                    </el-row>\r\n                </div>\r\n            </el-col>\r\n            <el-col :span=\"24\" style=\"margin-top: 20px\">\r\n                <div v-if=\"buttonStatus\">\r\n                    <el-col :lg=\"offsetV\">\r\n                        <el-button type=\"primary\" @click=\"editCorp(enterprise.identerprise)\">Edit</el-button>\r\n                    </el-col>\r\n                    <!-- <el-col :offset=\"1\" :span=\"6\">\r\n                    <el-button type=\"danger\" @click=\"deleteB\" v-if=\"buttonStatus\">Delete</el-button>\r\n                </el-col> -->\r\n                    <div v-if=\"enterpriseStatus\">\r\n                        <el-col :offset=\"2\" :lg=\"2\">\r\n                            <el-button type=\"success\" @click=\"resendActivation\">Resend Activation</el-button>\r\n                        </el-col>\r\n                    </div>\r\n                    <div v-if=\"enterprise.status==1\">\r\n                        <el-col :offset=\"offsetY\" :lg=\"4\">\r\n                            <el-button style=\"width: 100%\" type=\"danger\" @click=\"suspend\">Suspend</el-button>\r\n                        </el-col>\r\n                    </div>\r\n                    <div v-else-if=\"enterprise.status==3 || enterprise.status===2\">\r\n                        <el-col :offset=\"offsetActive\" :lg=\"3\">\r\n                            <el-button style=\"width: 100%\" @click=\"activeButton\" type=\"success\">Activate</el-button>\r\n                        </el-col>\r\n                    </div>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</div>\r\n<!--</vue-scroll>-->\r\n</template>\r\n\r\n<script>\r\nimport router from '../../../router'\r\nimport {\r\n    mapGetters\r\n} from 'vuex'\r\nimport * as getter from '../../../store/getters-types'\r\nimport * as action from '../../../store/action-types'\r\nimport * as mutation from '../../../store/mutation-types'\r\nimport Swal from 'sweetalert2'\r\nimport PopupDispatcher from '../../../components/enterprise/popup_dispatcher'\r\nimport PopupAdmin from '../../../components/enterprise/popup_admin'\r\nimport enterprise from '../../../router/enterprise';\r\n\r\nexport default {\r\n    components: {\r\n        PopupDispatcher,\r\n        PopupAdmin\r\n    },\r\n    data() {\r\n        return {\r\n            nameOfCorp: null,\r\n            corporateOfPhone: null,\r\n            corporateVendor: null,\r\n            corporateAdress: null,\r\n            corporateEmail: null,\r\n            corporateType: null,\r\n            corporateOAddress: null,\r\n            dispatcherMount: null,\r\n            buttonStatus: null,\r\n            dialogTableVisible: false,\r\n            currentPage: 1,\r\n            payload: {\r\n                identerprise: null,\r\n                page: 1,\r\n                reason_suspend: null,\r\n            },\r\n            enterpriseStatus: null,\r\n            offsetV: null,\r\n            offsetY: null,\r\n            offsetActive: null,\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            enterprise: getter.ENTERPRISE,\r\n            adminEnterprise: getter.ADMIN_ENTERPRISE,\r\n            button: getter.GET_BUTTON,\r\n            profile: getter.GET_DATA_PROFILE\r\n        }),\r\n        showAdmin() {\r\n            if (this.profile.idrole === 1) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n    },\r\n    async created() {\r\n        let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\r\n        this.buttonStatus = userProfile === 1;\r\n        this.payload.identerprise = this.enterprise.identerprise;\r\n        // let obj = {\r\n        //     role: 4,\r\n        //     page: 1\r\n        // };\r\n        if (!this.buttonStatus) {\r\n            await this.$store.dispatch(action.DISPATCHER_AVAILABLE);\r\n        }\r\n        (this.enterprise.enterprise_type.identerprise_type === 2) ? this.dispatcherMount = true: this.dispatcherMount = false;\r\n\r\n        for (let i = 0; i < this.enterprise.admins.length; i++) {\r\n            if (this.enterprise.admins[i].status === 2 || this.enterprise.status === 2) {\r\n                this.enterpriseStatus = true;\r\n                this.offsetV = 9\r\n                this.offsetY = 7\r\n                this.offsetActive = 8\r\n            } else {\r\n                this.enterpriseStatus = false;\r\n                this.offsetV = 9\r\n                this.offsetY = 11\r\n                this.offsetActive = 12\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async inspector() {\r\n            this.$store.commit(mutation.SET_LOADING, true);\r\n            await this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n            router.replace('/pic-task-list')\r\n        },\r\n        templateTask() {\r\n            router.replace('/template-list')\r\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n        },\r\n        addButton() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            router.replace(`/new-admin-enterprise/${this.enterprise.identerprise}`)\r\n        },\r\n        editAdmin(e) {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$store.commit(mutation.SET_DATA_ADMIN_ENTERPRISE, e);\r\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\r\n            router.replace('/edit-admin')\r\n        },\r\n        resendActivation() {\r\n            let obj = {\r\n                page: '/enterprise',\r\n                id: this.payload.identerprise\r\n            }\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            this.$store.dispatch(action.RESEND_LINK_ACTIVATION, obj)\r\n        },\r\n        async created() {\r\n            let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\r\n            this.buttonStatus = userProfile === 1;\r\n            this.payload.identerprise = this.enterprise.identerprise;\r\n            let obj = {\r\n                role: 4,\r\n                page: 1\r\n            };\r\n            if (!this.buttonStatus) {\r\n                await this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\r\n            }\r\n            (this.enterprise.enterprise_type.identerprise_type === 2) ? this.dispatcherMount = true: this.dispatcherMount = false;\r\n        },\r\n        deleteB() {\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"You won't be able to revert this!\",\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!'\r\n            }).then((result) => {\r\n                if (result.value) {\r\n                    this.$store.dispatch(action.DELETE_CORP_ID, this.enterprise.identerprise)\r\n                }\r\n            })\r\n        },\r\n        activeButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, activate it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.dispatch(action.ACTIVATE_ENTERPRISE, this.payload);\r\n                }\r\n            });\r\n        },\r\n        async suspend() {\r\n            const {\r\n                value: reason\r\n            } = await Swal.fire({\r\n                title: 'Enter the reason of suspending',\r\n                input: 'text',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, suspend it!',\r\n                inputValidator: (value) => {\r\n                    if (!value) {\r\n                        return 'You need to write something!'\r\n                    }\r\n                }\r\n            })\r\n            if (reason) {\r\n                this.payload.reason_suspend = reason;\r\n                this.$store.dispatch(action.SUSPEND_ENTERPRISE, this.payload)\r\n            }\r\n        },\r\n        editCorp(item) {\r\n            router.push({\r\n                path: `/edit-enterprise/${item}`\r\n            })\r\n        },\r\n        enterpriseDriver() {\r\n\r\n            router.push({\r\n                path: `/list-driver-enterprise/` + this.enterprise.identerprise\r\n            })\r\n        },\r\n        backLCorp() {\r\n            router.replace('/enterprise')\r\n\r\n        },\r\n        async location() {\r\n            this.$store.dispatch(action.LIST_LOCATION, this.payload);\r\n            this.$router.replace({\r\n                path: \"/location-enterprise/\" + this.enterprise.identerprise\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    padding: 0px 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.greyh3 h3 {\r\n    color: #A9A9A9;\r\n}\r\n\r\n.image {\r\n    max-width: 100%;\r\n    height: 150px;\r\n    display: block;\r\n}\r\n\r\n.vl {\r\n    border-left: 3px solid #f2f2f2;\r\n    height: 90%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.avatar {\r\n    border-radius: 50%;\r\n    max-width: 80px;\r\n    height: 80px;\r\n    border: 1px solid #fff;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    box-shadow: 0 2px 5px 0 rgba(49, 49, 93, 0.1),\r\n        0 1px 2px 0 rgba(0, 0, 0, 0.08);\r\n    transition: box-shadow 0.5s;\r\n}\r\n\r\n.left {\r\n    text-align: left;\r\n    position: absolute;\r\n    top: 50%;\r\n    max-width: 150px;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.right {\r\n    text-align: left;\r\n    position: absolute;\r\n    top: 50%;\r\n    max-width: 250px;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.middle {\r\n    margin-top: -30px\r\n}\r\n\r\n.drive-acount {\r\n    height: 39px;\r\n    margin-top: -11px;\r\n    margin-bottom: -10px;\r\n}\r\n\r\n.hoverhand:hover {\r\n    cursor: pointer;\r\n}\r\n</style>\r\n"]}]}