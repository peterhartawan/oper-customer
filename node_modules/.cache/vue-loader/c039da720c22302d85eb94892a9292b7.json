{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\dispathcer\\edit-dispatcher.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\dispathcer\\edit-dispatcher.vue","mtime":1647032353997},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { mapGetters } from 'vuex'\nimport * as getter from '../../../store/getters-types'\nimport * as mutation from '../../../store/mutation-types'\nimport * as action from '../../../store/action-types'\nexport default {\n    data() {\n        return {\n            form: {\n                name                : '',\n                fullscreen_loading  : false,\n                nik                 : '',\n                email               : '',\n                phone               : '',\n                birthdate           : '',\n                gender              : '',\n                address             : '',\n                id_dispatcher_type  : '',\n                idDispatch          : '',\n                id                  : ''\n            },\n            rules: {\n                name: [\n                    { required: true, message:'Please Input Dispatcher Name', trigger: ['blur', 'change']}\n                ],\n                nik: [\n                    { required: true, message:'Please Input Dispatcher Nik', trigger: ['blur', 'change']}\n                ],\n                email:  [\n                    { required: true, message:'Please Input Dispatcher Email', trigger: ['blur', 'change']},\n                    {type: 'email', message:'Pleas Input Valid Email', trigger:['blur', 'change']}\n                ],\n                phone:  [\n                    { required: true, message:'Please Input Dispatcher Phone Number', trigger: ['blur', 'change']}\n                ],\n                gender: [\n                    { required: true, message:'Please Select Gender', trigger: ['blur', 'change']}\n                ],\n                id_dispatcher_type: [\n                    { required: true, message:'Please Input Id Dispatcher Type', trigger: ['blur', 'change']}\n                ],\n                file: [\n                    { required: true, message:'Please Input Description', trigger: ['blur', 'change']}\n                ],\n                browse: [\n                    { required: true, message:'Please Upload Foto', trigger: ['blur', 'change']}\n                ],\n                birthdate: [\n                    { required: true, message:'Please Fill Birth Date', trigger: ['blur', 'change']}\n                ],\n                address: [\n                    { required: true, message:'Please Input Address', trigger: ['blur', 'change']}\n                ]\n            }\n        }\n    },\n    async created(){\n         let data = await this.$store.dispatch(action.DATA_ID_DISPATCHER, this.iddispatcher)\n            this.form.name                  = data.name\n            this.form.nik                   = data.dispatcher_profile.nik\n            this.form.email                 = data.email\n            this.form.phone                 = data.phonenumber\n            this.form.birthdate             = data.dispatcher_profile.birthdate\n            this.form.gender                = data.dispatcher_profile.gender\n            this.form.address               = data.dispatcher_profile.address\n            this.form.id_dispatcher_type    = data.idrole\n            this.form.idDispatch            = data.vendor.idvendor\n            this.form.id                    = data.id\n    },\n    methods: {\n        onSubmit(formName) {\n            this.$refs[formName].validate((valid) => {\n            if (valid) {\n                this.$store.commit(mutation.BUTTON_STATUS, true)\n                this.$store.dispatch(action.UPDATE_DISPATCHER, this.form)\n            } else {\n                return false;\n            }\n            });\n        },\n        onPickFile() {\n            this.$refs.fileInput.click()\n        },\n        addButton() {\n            this.form.inspectors.push({\n                key: Date.now(),\n                name:'',\n                phone:''\n            })\n        },\n        isCancel()  {\n            this.$router.push('dispatcher')\n        },\n        removeDomain(item){\n            let index = this.form.inspectors.indexOf(item);\n            if(index !== -1) {\n                this.form.inspectors.splice(index, 1);\n            }\n        },\n        isNumber(evt) {\n            evt = (evt) ? evt : window.event;\n            var charCode = (evt.which) ? evt.which : evt.keyCode;\n            if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\n                evt.preventDefault();;\n            } else {\n                return true;\n            }\n        },\n        handleFileChange(event) {\n            this.form.file      = event.target.files[0]\n            this.form.browse    = event.target.files[0].name\n        }\n    },\n    computed: {\n        ...mapGetters({\n            error : getter.GET_ERROR,\n            iddispatcher: getter.ID_DISPATCHER,\n            button : getter.GET_BUTTON\n        }),\n        buttonStatuz: function () {\n            return this.form.fullscreen_loading = this.button\n        }\n    }\n}\n",{"version":3,"sources":["edit-dispatcher.vue"],"names":[],"mappingsfile":"edit-dispatcher.vue","sourceRoot":"src/views/pages/dispathcer","sourcesContent":["<template>\r\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n        <div class=\"card-base card-shadow--medium bg-white\">\r\n            <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\r\n                <el-row :gutter=\"20\">\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"grid-content\">\r\n                            <el-form-item prop=\"name\">\r\n                                <el-input\r\n                                        placeholder=\"Dispatcher Name\"\r\n                                        v-model=\"form.name\">\r\n                                </el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </el-col >\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"grid-content\">\r\n                            <el-form-item prop=\"nik\">\r\n                                <el-input\r\n                                        placeholder=\"Dispatcher NIK\"\r\n                                        v-model=\"form.nik\">\r\n                                </el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </el-col >\r\n                </el-row>\r\n\r\n                <el-row :gutter=\"20\">\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"grid-content\">\r\n                            <el-form-item prop=\"radio\">\r\n                                <el-radio-group v-model=\"form.gender\">\r\n                                <el-radio  :label=\"1\">Male</el-radio>\r\n                                <el-radio  :label=\"2\">Female</el-radio>\r\n                                </el-radio-group>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </el-col>\r\n\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"grid-content\">\r\n                            <el-form-item prop=\"phone\">\r\n                                <el-input\r\n                                        placeholder=\"Dispatcher Phone Number\"\r\n                                        v-model=\"form.phone\"\r\n                                        v-on:keypress.native=\"isNumber\"></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n                <el-row :gutter=\"20\">\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"grid-content\">\r\n                            <el-form-item prop=\"birthdate\">\r\n                                <el-date-picker\r\n                                        v-model=\"form.birthdate\"\r\n                                        type=\"date\"\r\n                                        placeholder=\"Birth date\"\r\n                                        format=\"yyyy/MM/dd\"\r\n                                        value-format=\"yyyy-MM-dd\">\r\n                                </el-date-picker>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </el-col>\r\n\r\n                    <el-col :span=\"12\">\r\n                        <el-form-item prop=\"email\">\r\n                            <el-input  placeholder=\"Dispatcher Email\" v-model=\"form.email\"></el-input>\r\n                        </el-form-item>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n                <el-row :gutter=\"20\">\r\n\r\n                    <el-col :span=\"12\" :offset=\"12\">\r\n                        <div class=\"grid-content\">\r\n                            <el-form-item prop=\"address\" >\r\n                                <el-input\r\n                                        type=\"textarea\"\r\n                                        v-model=\"form.address\"\r\n                                        placeholder=\"Enterprise Office Address\"\r\n                                        :autosize=\"{ minRows: 5, maxRows: 7}\"></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </el-col>\r\n\r\n                </el-row>\r\n\r\n                <el-row >\r\n                    <el-col :lg=\"{offset:18, span:6}\" style=\"display: flex; justify-content: flex-end\">\r\n                        <div class=\"grid-content\">\r\n                            <el-form-item>\r\n                                <el-button @click=\"isCancel\">Cancel</el-button>\r\n                                <el-button\r\n                                        type=\"success\"\r\n                                        v-loading.fullscreen.lock=\"buttonStatuz\"\r\n                                        @click=\"onSubmit('form')\">Save</el-button>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import { mapGetters } from 'vuex'\r\n    import * as getter from '../../../store/getters-types'\r\n    import * as mutation from '../../../store/mutation-types'\r\n    import * as action from '../../../store/action-types'\r\n    export default {\r\n        data() {\r\n            return {\r\n                form: {\r\n                    name                : '',\r\n                    fullscreen_loading  : false,\r\n                    nik                 : '',\r\n                    email               : '',\r\n                    phone               : '',\r\n                    birthdate           : '',\r\n                    gender              : '',\r\n                    address             : '',\r\n                    id_dispatcher_type  : '',\r\n                    idDispatch          : '',\r\n                    id                  : ''\r\n                },\r\n                rules: {\r\n                    name: [\r\n                        { required: true, message:'Please Input Dispatcher Name', trigger: ['blur', 'change']}\r\n                    ],\r\n                    nik: [\r\n                        { required: true, message:'Please Input Dispatcher Nik', trigger: ['blur', 'change']}\r\n                    ],\r\n                    email:  [\r\n                        { required: true, message:'Please Input Dispatcher Email', trigger: ['blur', 'change']},\r\n                        {type: 'email', message:'Pleas Input Valid Email', trigger:['blur', 'change']}\r\n                    ],\r\n                    phone:  [\r\n                        { required: true, message:'Please Input Dispatcher Phone Number', trigger: ['blur', 'change']}\r\n                    ],\r\n                    gender: [\r\n                        { required: true, message:'Please Select Gender', trigger: ['blur', 'change']}\r\n                    ],\r\n                    id_dispatcher_type: [\r\n                        { required: true, message:'Please Input Id Dispatcher Type', trigger: ['blur', 'change']}\r\n                    ],\r\n                    file: [\r\n                        { required: true, message:'Please Input Description', trigger: ['blur', 'change']}\r\n                    ],\r\n                    browse: [\r\n                        { required: true, message:'Please Upload Foto', trigger: ['blur', 'change']}\r\n                    ],\r\n                    birthdate: [\r\n                        { required: true, message:'Please Fill Birth Date', trigger: ['blur', 'change']}\r\n                    ],\r\n                    address: [\r\n                        { required: true, message:'Please Input Address', trigger: ['blur', 'change']}\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        async created(){\r\n             let data = await this.$store.dispatch(action.DATA_ID_DISPATCHER, this.iddispatcher)\r\n                this.form.name                  = data.name\r\n                this.form.nik                   = data.dispatcher_profile.nik\r\n                this.form.email                 = data.email\r\n                this.form.phone                 = data.phonenumber\r\n                this.form.birthdate             = data.dispatcher_profile.birthdate\r\n                this.form.gender                = data.dispatcher_profile.gender\r\n                this.form.address               = data.dispatcher_profile.address\r\n                this.form.id_dispatcher_type    = data.idrole\r\n                this.form.idDispatch            = data.vendor.idvendor\r\n                this.form.id                    = data.id\r\n        },\r\n        methods: {\r\n            onSubmit(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.UPDATE_DISPATCHER, this.form)\r\n                } else {\r\n                    return false;\r\n                }\r\n                });\r\n            },\r\n            onPickFile() {\r\n                this.$refs.fileInput.click()\r\n            },\r\n            addButton() {\r\n                this.form.inspectors.push({\r\n                    key: Date.now(),\r\n                    name:'',\r\n                    phone:''\r\n                })\r\n            },\r\n            isCancel()  {\r\n                this.$router.push('dispatcher')\r\n            },\r\n            removeDomain(item){\r\n                let index = this.form.inspectors.indexOf(item);\r\n                if(index !== -1) {\r\n                    this.form.inspectors.splice(index, 1);\r\n                }\r\n            },\r\n            isNumber(evt) {\r\n                evt = (evt) ? evt : window.event;\r\n                var charCode = (evt.which) ? evt.which : evt.keyCode;\r\n                if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\r\n                    evt.preventDefault();;\r\n                } else {\r\n                    return true;\r\n                }\r\n            },\r\n            handleFileChange(event) {\r\n                this.form.file      = event.target.files[0]\r\n                this.form.browse    = event.target.files[0].name\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                error : getter.GET_ERROR,\r\n                iddispatcher: getter.ID_DISPATCHER,\r\n                button : getter.GET_BUTTON\r\n            }),\r\n            buttonStatuz: function () {\r\n                return this.form.fullscreen_loading = this.button\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .card-base {\r\n        padding: 20px;\r\n    }\r\n    .el-row {\r\n        padding: 0px 10px;\r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n    .el-col {\r\n        border-radius: 5px;\r\n    }\r\n</style>\r\n"]}]}