{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/ui/Element/ElementCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/ui/Element/ElementCheckbox.vue","mtime":1628175042634},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ThemePicker from '@/components/theme-picker'\nconst cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\nexport default {\n\tname: 'ElementCheckbox',\n\tdata() {\n\t\treturn {\n\t\t\tchecked: true,\n\t\t\tcheckAll: false,\n\t\t\tcheckedCities: ['Shanghai', 'Beijing'],\n\t\t\tcities: cityOptions,\n\t\t\tisIndeterminate: true,\n\t\t\tcode1: \n`\n<!-- 'checked' should be true or false -->\n<el-checkbox v-model=\"checked\">Option</el-checkbox>\n`\n\t\t,code2 : \n`\n<template>\n  <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">Check all</el-checkbox>\n  <div style=\"margin: 15px 0;\"></div>\n  <el-checkbox-group v-model=\"checkedCities\" @change=\"handleCheckedCitiesChange\">\n    <el-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{city}}</el-checkbox>\n  </el-checkbox-group>\n</template>\n<script>\n  const cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\n  export default {\n    data() {\n      return {\n        checkAll: false,\n        checkedCities: ['Shanghai', 'Beijing'],\n        cities: cityOptions,\n        isIndeterminate: true\n      };\n    },\n    methods: {\n      handleCheckAllChange(val) {\n        this.checkedCities = val ? cityOptions : [];\n        this.isIndeterminate = false;\n      },\n      handleCheckedCitiesChange(value) {\n        let checkedCount = value.length;\n        this.checkAll = checkedCount === this.cities.length;\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n      }\n    }\n  };\n<\\/script>\n`\n\t\t}\n\t},\n\tmethods: {\n\t\thandleCheckAllChange(val) {\n\t\t\tthis.checkedCities = val ? cityOptions : [];\n\t\t\tthis.isIndeterminate = false;\n\t\t},\n\t\thandleCheckedCitiesChange(value) {\n\t\t\tlet checkedCount = value.length;\n\t\t\tthis.checkAll = checkedCount === this.cities.length;\n\t\t\tthis.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n\t\t}\n    },\n\tcomponents: {\n\t\tThemePicker\n\t}\n}\n",{"version":3,"sources":["ElementCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ElementCheckbox.vue","sourceRoot":"src/views/ui/Element","sourcesContent":["<template>\n\t<vue-scroll class=\"page-element-checkbox\">\n\t\t<div class=\"page-header\">\n\t\t\t<h1>Element Checkbox\n\t\t\t\t<theme-picker style=\"float:right\"></theme-picker>\n\t\t\t</h1>\n\t\t\t<h4><a href=\"http://element.eleme.io/#/en-US/component/checkbox\" target=\"_blank\"><i class=\"mdi mdi-book-open-page-variant\"></i> see from the complete documentation</a></h4>\n\t\t</div>\n\t\t<div class=\"card-base card-shadow--medium demo-box bg-white\">\n\t\t\t<el-collapse value=\"1\">\n\t\t\t\t<el-collapse-item title=\"Basic usage\" name=\"1\">\n\t\t\t\t\t<el-checkbox v-model=\"checked\">Option</el-checkbox>\n\t\t\t\t</el-collapse-item>\n\t\t\t\t<el-collapse-item title=\"Code\" name=\"2\">\n\t\t\t\t\t<pre v-highlightjs=\"code1\"><code class=\"html\"></code></pre>\n\t\t\t\t</el-collapse-item>\n\t\t\t</el-collapse>\n\t\t</div>\n\t\t<div class=\"card-base card-shadow--medium demo-box bg-white\">\n\t\t\t<el-collapse value=\"1\">\n\t\t\t\t<el-collapse-item title=\"Indeterminate\" name=\"1\">\n\t\t\t\t\t<el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">Check all</el-checkbox>\n\t\t\t\t\t<div style=\"margin: 15px 0;\"></div>\n\t\t\t\t\t<el-checkbox-group v-model=\"checkedCities\" @change=\"handleCheckedCitiesChange\">\n\t\t\t\t\t\t<el-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{city}}</el-checkbox>\n\t\t\t\t\t</el-checkbox-group>\n\t\t\t\t</el-collapse-item>\n\t\t\t\t<el-collapse-item title=\"Code\" name=\"2\">\n\t\t\t\t\t<pre v-highlightjs=\"code2\"><code class=\"html\"></code></pre>\n\t\t\t\t</el-collapse-item>\n\t\t\t</el-collapse>\n\t\t</div>\n\t</vue-scroll>\n</template>\n\n<script>\nimport ThemePicker from '@/components/theme-picker'\nconst cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\nexport default {\n\tname: 'ElementCheckbox',\n\tdata() {\n\t\treturn {\n\t\t\tchecked: true,\n\t\t\tcheckAll: false,\n\t\t\tcheckedCities: ['Shanghai', 'Beijing'],\n\t\t\tcities: cityOptions,\n\t\t\tisIndeterminate: true,\n\t\t\tcode1: \n`\n<!-- 'checked' should be true or false -->\n<el-checkbox v-model=\"checked\">Option</el-checkbox>\n`\n\t\t,code2 : \n`\n<template>\n  <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">Check all</el-checkbox>\n  <div style=\"margin: 15px 0;\"></div>\n  <el-checkbox-group v-model=\"checkedCities\" @change=\"handleCheckedCitiesChange\">\n    <el-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{city}}</el-checkbox>\n  </el-checkbox-group>\n</template>\n<script>\n  const cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\n  export default {\n    data() {\n      return {\n        checkAll: false,\n        checkedCities: ['Shanghai', 'Beijing'],\n        cities: cityOptions,\n        isIndeterminate: true\n      };\n    },\n    methods: {\n      handleCheckAllChange(val) {\n        this.checkedCities = val ? cityOptions : [];\n        this.isIndeterminate = false;\n      },\n      handleCheckedCitiesChange(value) {\n        let checkedCount = value.length;\n        this.checkAll = checkedCount === this.cities.length;\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n      }\n    }\n  };\n<\\/script>\n`\n\t\t}\n\t},\n\tmethods: {\n\t\thandleCheckAllChange(val) {\n\t\t\tthis.checkedCities = val ? cityOptions : [];\n\t\t\tthis.isIndeterminate = false;\n\t\t},\n\t\thandleCheckedCitiesChange(value) {\n\t\t\tlet checkedCount = value.length;\n\t\t\tthis.checkAll = checkedCount === this.cities.length;\n\t\t\tthis.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n\t\t}\n    },\n\tcomponents: {\n\t\tThemePicker\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.demo-box {\n\tpadding: 20px;\n\tmargin-bottom: 20px;\n}\npre {\n\tmargin: 0;\n\tbackground: white;\n}\ncode {\n\tpadding: 0;\n}\n\n@media (max-width: 768px) {code{font-size: 70%;}}\n\n</style>\n\n"]}]}