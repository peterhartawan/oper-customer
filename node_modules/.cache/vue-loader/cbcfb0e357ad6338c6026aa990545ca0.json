{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/tracking/tracking.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/tracking/tracking.vue","mtime":1628175042631},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { mapGetters } from 'vuex'\nimport * as getter from '../../../store/getters-types'\nimport * as action from '../../../store/action-types'\nimport Swal from 'sweetalert2'\nimport * as mutation from '../../../store/mutation-types'\n\nexport default {\n    data() {\n        return {\n            currentPage     : 1,\n            dialogVisible   : false,\n            location        : null,\n            form: {\n                search      : ''\n            }\n        };\n    },\n    computed: {\n        ...mapGetters({\n            paginate        : getter.GET_TRACKING_PAGINATE,\n            listData        : getter.GET_TRACKING_ORDER,\n            idorder         : getter.GET_ID_ORDER,\n            trackingType    : getter.GET_TRACKING_TYPE,\n            backPath        : getter.GET_PATH\n        }),\n        paginato(){\n            return this.paginate\n        },\n        indexTam(){\n            return this.indexT\n        }\n    },\n    async created(){\n        let obj = {\n            id      : this.idorder,\n            page    : 1,\n            type    : this.trackingType\n        };\n        await this.$store.dispatch(action.TRACKING, obj)\n    },\n    methods: {\n        handlePageChange(page) {\n            this.currentPage = page\n            let obj = {\n                id      : this.idorder,\n                page    : this.currentPage,\n                type    : this.trackingType\n            }\n            this.$store.dispatch( action.TRACKING, obj )\n        },\n        indexMethod(index) {\n            return index + this.paginato.fromP;\n        },\n        buttonSearch(){\n            this.$store.dispatch(action.SEARCH_DISPATCHER, this.form.search)\n        },\n        backButton() {\n            this.$router.replace('/detail-order')\n        },\n        async getId(id){\n            this.dialogVisible = true\n            let obj = {\n                    lat:    Number(id.latitude),\n                    lng:    Number(id.longitude)\n                }\n            this.location = obj\n        },\n    },\n};\n",{"version":3,"sources":["tracking.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tracking.vue","sourceRoot":"src/views/pages/tracking","sourcesContent":["<template>\n    <span>\n    <!--<div class=\"page-table scrollable only-y\" id=\"affix-container\">-->\n        <!--<div class=\"card-base card-shadow&#45;&#45;medium bg-white\">-->\n            <el-row>\n            <el-table\n                    :data=\"listData\"\n                    @row-click=\"getId\">\n                <el-table-column\n                        type=\"index\"\n                        :index=\"indexMethod\"\n                        label=\"No\"\n                        width=\"80\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"id\"\n                        label=\"ID\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"latitude\"\n                        label=\"Latitude\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"longitude\"\n                        label=\"Longitude\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"created_at\"\n                        label=\"Last Update\">\n                </el-table-column>\n            </el-table>\n            </el-row>\n            <el-row>\n\n                <el-col :lg=\"20\">\n                    <div class=\"grid-content\">\n                        <el-pagination\n                                background\n                                layout=\"prev, pager, next\"\n                                @current-change=\"handlePageChange\"\n                                :total=\"paginato.totalP\">\n\n                        </el-pagination>\n                    </div>\n                </el-col>\n                <!--<el-col :lg=\"4\" style=\"margin-top: 10px\">-->\n                    <!--<el-button @click=\"backButton\">-->\n                        <!--Back-->\n                    <!--</el-button>-->\n                <!--</el-col>-->\n            </el-row>\n            <el-dialog\n                    :visible.sync=\"dialogVisible\"\n                    width=\"70%\">\n                    <div class=\"card-base card-shadow--medium\">\n                        <gmap-map ref=\"map\"\n                                  :center=\"location\"\n                                  :zoom=\"14\"\n                                  :options=\"{gestureHandling:'cooperative'}\"\n                                  map-type-id=\"roadmap\"\n                                  style=\"width: 100%; height: 500px\"\n                        >\n                            <GmapMarker :position=\"location\" label=\"S\" />\n                        </gmap-map>\n                    </div>\n    <!--<el-button @click=\"dialogVisible = false\">Cancel</el-button>-->\n            </el-dialog>\n        </span>\n        <!--</div>-->\n    <!--</div>-->\n</template>\n<script>\n\n    import { mapGetters } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as action from '../../../store/action-types'\n    import Swal from 'sweetalert2'\n    import * as mutation from '../../../store/mutation-types'\n\n    export default {\n        data() {\n            return {\n                currentPage     : 1,\n                dialogVisible   : false,\n                location        : null,\n                form: {\n                    search      : ''\n                }\n            };\n        },\n        computed: {\n            ...mapGetters({\n                paginate        : getter.GET_TRACKING_PAGINATE,\n                listData        : getter.GET_TRACKING_ORDER,\n                idorder         : getter.GET_ID_ORDER,\n                trackingType    : getter.GET_TRACKING_TYPE,\n                backPath        : getter.GET_PATH\n            }),\n            paginato(){\n                return this.paginate\n            },\n            indexTam(){\n                return this.indexT\n            }\n        },\n        async created(){\n            let obj = {\n                id      : this.idorder,\n                page    : 1,\n                type    : this.trackingType\n            };\n            await this.$store.dispatch(action.TRACKING, obj)\n        },\n        methods: {\n            handlePageChange(page) {\n                this.currentPage = page\n                let obj = {\n                    id      : this.idorder,\n                    page    : this.currentPage,\n                    type    : this.trackingType\n                }\n                this.$store.dispatch( action.TRACKING, obj )\n            },\n            indexMethod(index) {\n                return index + this.paginato.fromP;\n            },\n            buttonSearch(){\n                this.$store.dispatch(action.SEARCH_DISPATCHER, this.form.search)\n            },\n            backButton() {\n                this.$router.replace('/detail-order')\n            },\n            async getId(id){\n                this.dialogVisible = true\n                let obj = {\n                        lat:    Number(id.latitude),\n                        lng:    Number(id.longitude)\n                    }\n                this.location = obj\n            },\n        },\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n\n    .table-box {\n        overflow: auto;\n    }\n    .el-pagination {\n        padding-top: 20px;\n    }\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n\n</style>"]}]}