{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\enterprise\\edit-admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\enterprise\\edit-admin.vue","mtime":1644413760534},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport router from '../../../router'\r\nimport * as action from '../../../store/action-types'\r\nimport * as getter from '../../../store/getters-types'\r\nimport * as mutation from '../../../store/mutation-types'\r\nimport {\r\n    mapGetters\r\n} from 'vuex'\r\nimport Swal from \"sweetalert2\";\r\nexport default {\r\n    name: 'new-pic',\r\n    data() {\r\n        return {\r\n            form: {\r\n                fullscreen_loading: false,\r\n                name: '',\r\n                phone: '',\r\n                email: '',\r\n                idAdmin: '',\r\n                status: '',\r\n            },\r\n            payload: {\r\n                idadmin: \"\",\r\n                reason_suspend: null,\r\n                identerprise: \"\",\r\n\r\n            },\r\n            rules: {\r\n                name: [{\r\n                    required: true,\r\n                    message: 'Please input Activity name',\r\n                    trigger: ['blur', 'change']\r\n                }],\r\n                phone: [{\r\n                    required: true,\r\n                    message: 'Please input Admin Phone Number',\r\n                    trigger: ['blur', 'change']\r\n                }],\r\n                email: [{\r\n                        required: true,\r\n                        message: 'Please input Admin Email',\r\n                        trigger: ['blur', 'change']\r\n                    },\r\n                    {\r\n                        type: 'email',\r\n                        message: 'Please input valid Email',\r\n                        trigger: ['blur', 'change']\r\n                    }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.form.idAdmin = this.adminEnterprise.id;\r\n        this.form.name = this.adminEnterprise.name;\r\n        this.form.phone = this.adminEnterprise.phonenumber;\r\n        this.form.email = this.adminEnterprise.email;\r\n        this.form.status = this.adminEnterprise.status;\r\n        this.payload.idadmin = this.adminEnterprise.id;\r\n        this.payload.identerprise = this.identer;\r\n    },\r\n    methods: {\r\n        onSubmit(formName) {\r\n            let newForm = {\r\n                name: this.form.name,\r\n                phone: this.form.phone,\r\n                email: this.form.email,\r\n                idAdmin: this.form.idAdmin,\r\n                identer: this.identer\r\n            }\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.UPDATE_ADMIN_CLIENT, newForm)\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        async suspend() {\r\n            const {\r\n                value: reason\r\n            } = await Swal.fire({\r\n                title: 'Enter the reason of suspending',\r\n                input: 'text',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, suspend it!',\r\n                inputValidator: (value) => {\r\n                    if (!value) {\r\n                        return 'You need to write something!'\r\n                    }\r\n                }\r\n            })\r\n            if (reason) {\r\n                this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                this.payload.reason_suspend = reason;\r\n                this.$store.dispatch(action.SUSPEND_ADMIN_ENTERPRISE, this.payload)\r\n            }\r\n        },\r\n        activeButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, activate it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.ACTIVATE_ADMIN_ENTERPRISE, this.payload);\r\n                }\r\n            });\r\n        },\r\n        deleteB() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                    this.$store.dispatch(action.DELETE_ADMIN_ENTERPRISE, this.payload);\r\n                }\r\n            });\r\n        },\r\n        isNumber(evt) {\r\n            evt = evt ? evt : window.event;\r\n            var charCode = evt.which ? evt.which : evt.keyCode;\r\n            if (\r\n                charCode > 31 &&\r\n                (charCode < 48 || charCode > 57)\r\n            ) {\r\n                evt.preventDefault();\r\n            } else {\r\n                return true;\r\n            }\r\n        },\r\n        Cancel() {\r\n            router.replace(`/detail-enterprise/${this.identer}`)\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            identer: getter.GET_ID_ENTERPRISE,\r\n            button: getter.GET_BUTTON,\r\n            adminEnterprise: getter.GET_ADMIN_DATA_ENTERPRISE\r\n        }),\r\n        buttonStatus: function () {\r\n            return this.form.fullscreen_loading = this.button\r\n        }\r\n    },\r\n}\r\n",{"version":3,"sources":["edit-admin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"edit-admin.vue","sourceRoot":"src/views/pages/enterprise","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-form :model=\"form\" :rules=\"rules\" ref=\"form\">\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                    <div class=\"grid-content\">\r\n                        <el-form-item prop=\"name\">\r\n                            <el-input placeholder=\"Admin Name\" v-model=\"form.name\"></el-input>\r\n                        </el-form-item>\r\n                    </div>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                    <div class=\"grid-content\">\r\n                        <el-form-item prop=\"phone\">\r\n                            <el-input v-on:keypress.native=\"isNumber\" placeholder=\"Admin Phone Number\" v-model=\"form.phone\"></el-input>\r\n                        </el-form-item>\r\n                    </div>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                    <div class=\"grid-content\">\r\n                        <el-form-item prop=\"email\">\r\n                            <el-input placeholder=\"Admin Email\" v-model=\"form.email\"></el-input>\r\n                        </el-form-item>\r\n                    </div>\r\n                </el-col>\r\n            </el-row>\r\n            <el-row>\r\n                <el-col :lg=\"2\">\r\n                    <el-button :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\r\n                </el-col>\r\n                <el-col :offset=\"1\" :lg=\"2\">\r\n                    <el-button @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\r\n                </el-col>\r\n                <div v-if=\"form.status===1\">\r\n                    <el-col :offset=\"16\" :lg=\"2\">\r\n                        <el-button :loading=\"button\" type=\"danger\" @click=\"suspend\">Suspend</el-button>\r\n                    </el-col>\r\n                </div>\r\n                <div v-else-if=\"form.status===3\">\r\n                    <el-col :offset=\"13\" :lg=\"3\">\r\n                        <el-button :loading=\"button\" @click=\"deleteB\" type=\"danger\">Delete</el-button>\r\n                    </el-col>\r\n                    <el-col :lg=\"3\">\r\n                        <el-button :loading=\"button\" @click=\"activeButton\" type=\"primary\">Active</el-button>\r\n                    </el-col>\r\n                </div>\r\n            </el-row>\r\n        </el-form>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport router from '../../../router'\r\nimport * as action from '../../../store/action-types'\r\nimport * as getter from '../../../store/getters-types'\r\nimport * as mutation from '../../../store/mutation-types'\r\nimport {\r\n    mapGetters\r\n} from 'vuex'\r\nimport Swal from \"sweetalert2\";\r\nexport default {\r\n    name: 'new-pic',\r\n    data() {\r\n        return {\r\n            form: {\r\n                fullscreen_loading: false,\r\n                name: '',\r\n                phone: '',\r\n                email: '',\r\n                idAdmin: '',\r\n                status: '',\r\n            },\r\n            payload: {\r\n                idadmin: \"\",\r\n                reason_suspend: null,\r\n                identerprise: \"\",\r\n\r\n            },\r\n            rules: {\r\n                name: [{\r\n                    required: true,\r\n                    message: 'Please input Activity name',\r\n                    trigger: ['blur', 'change']\r\n                }],\r\n                phone: [{\r\n                    required: true,\r\n                    message: 'Please input Admin Phone Number',\r\n                    trigger: ['blur', 'change']\r\n                }],\r\n                email: [{\r\n                        required: true,\r\n                        message: 'Please input Admin Email',\r\n                        trigger: ['blur', 'change']\r\n                    },\r\n                    {\r\n                        type: 'email',\r\n                        message: 'Please input valid Email',\r\n                        trigger: ['blur', 'change']\r\n                    }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.form.idAdmin = this.adminEnterprise.id;\r\n        this.form.name = this.adminEnterprise.name;\r\n        this.form.phone = this.adminEnterprise.phonenumber;\r\n        this.form.email = this.adminEnterprise.email;\r\n        this.form.status = this.adminEnterprise.status;\r\n        this.payload.idadmin = this.adminEnterprise.id;\r\n        this.payload.identerprise = this.identer;\r\n    },\r\n    methods: {\r\n        onSubmit(formName) {\r\n            let newForm = {\r\n                name: this.form.name,\r\n                phone: this.form.phone,\r\n                email: this.form.email,\r\n                idAdmin: this.form.idAdmin,\r\n                identer: this.identer\r\n            }\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.UPDATE_ADMIN_CLIENT, newForm)\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        async suspend() {\r\n            const {\r\n                value: reason\r\n            } = await Swal.fire({\r\n                title: 'Enter the reason of suspending',\r\n                input: 'text',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, suspend it!',\r\n                inputValidator: (value) => {\r\n                    if (!value) {\r\n                        return 'You need to write something!'\r\n                    }\r\n                }\r\n            })\r\n            if (reason) {\r\n                this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                this.payload.reason_suspend = reason;\r\n                this.$store.dispatch(action.SUSPEND_ADMIN_ENTERPRISE, this.payload)\r\n            }\r\n        },\r\n        activeButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, activate it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.ACTIVATE_ADMIN_ENTERPRISE, this.payload);\r\n                }\r\n            });\r\n        },\r\n        deleteB() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                    this.$store.dispatch(action.DELETE_ADMIN_ENTERPRISE, this.payload);\r\n                }\r\n            });\r\n        },\r\n        isNumber(evt) {\r\n            evt = evt ? evt : window.event;\r\n            var charCode = evt.which ? evt.which : evt.keyCode;\r\n            if (\r\n                charCode > 31 &&\r\n                (charCode < 48 || charCode > 57)\r\n            ) {\r\n                evt.preventDefault();\r\n            } else {\r\n                return true;\r\n            }\r\n        },\r\n        Cancel() {\r\n            router.replace(`/detail-enterprise/${this.identer}`)\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            identer: getter.GET_ID_ENTERPRISE,\r\n            button: getter.GET_BUTTON,\r\n            adminEnterprise: getter.GET_ADMIN_DATA_ENTERPRISE\r\n        }),\r\n        buttonStatus: function () {\r\n            return this.form.fullscreen_loading = this.button\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    padding: 0px 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n</style>\r\n"]}]}