{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\inspector\\edit-inspector.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\inspector\\edit-inspector.vue","mtime":1647032353994},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport router from '../../../router'\nimport * as action from '../../../store/action-types'\nimport * as getter from '../../../store/getters-types'\nimport * as mutation from '../../../store/mutation-types'\nimport { mapGetters } from 'vuex'\n\nexport default {\n    name: 'new-pic',\n    data() {\n        let validatePhone = (rule, value, callback) => {\n            if((value+'').length > 13) {\n                callback(new Error('Phone must be less than 13 digits'))\n            } else {\n                if((value+'').length < 10){\n                    callback(new Error('Phone must be more than 10 digits'))\n                }else {\n                    callback()\n                }\n            }\n\n        };\n        return {\n            form : {\n                name   : '',\n                phone  : '',\n                fullscreen_loading: false\n            },\n            rules: {\n                name: [\n                    { required: true, message: 'Please Input Inspector Name', trigger: ['blur', 'change'] }\n                ],\n                phone: [\n                    { required: true, message: 'Please Input Inspector Phone Number', trigger: ['blur', 'change']},\n                    { validator: validatePhone, trigger: ['change', 'blur'] }\n                ]\n\n            }\n        };\n    },\n    async created(){\n        let data        = await this.$store.dispatch(action.ID_INSPECTOR, this.idinspec)\n\n        this.form.name  = data.name\n        this.form.phone = data.phonenumber\n    },\n    methods : {\n        onSubmit(formName) {\n            let newForm = {\n                name            : this.form.name,\n                phone           : this.form.phone,\n                identerprise    : this.identer,\n                idinspector     : this.idinspec\n            }\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.$store.commit(mutation.SET_LOADING, true);\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    this.$store.dispatch(action.UPDATE_INSPECTOR, newForm)\n                } else {\n                    return false;\n                }\n            });\n        },\n        cancleButton(){\n            router.push('/pic-task-list')\n        },\n        isNumber(evt) {\n            evt = (evt) ? evt : window.event;\n            var charCode = (evt.which) ? evt.which : evt.keyCode;\n            if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\n                evt.preventDefault();;\n            } else {\n                return true;\n            }\n        }\n    },\n    computed: {\n        ...mapGetters({\n            identer     : getter.GET_ID_ENTERPRISE,\n            idinspec    : getter.GET_ID_INSPECTOR,\n            button      : getter.GET_BUTTON\n        }),\n        buttonStatuz: function () {\n            return this.form.fullscreen_loading = this.button\n        }\n    },\n}\n",{"version":3,"sources":["edit-inspector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-inspector.vue","sourceRoot":"src/views/pages/inspector","sourcesContent":["<template>\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <div class=\"card-base card-shadow--medium bg-white\">\r\n            <el-form :model=\"form\" :rules=\"rules\"  ref=\"form\">\r\n                <el-row :gutter=\"20\">\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"grid-content\">\r\n                            <el-form-item prop=\"name\">\r\n                                <el-input\r\n                                        placeholder=\"Inspector Name\"\r\n                                        v-model=\"form.name\"></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </el-col>\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"grid-content\">\r\n                            <el-form-item prop=\"phone\">\r\n                                <el-input\r\n                                        placeholder=\"Inspector Phone Number\"\r\n                                        v-on:keypress.native=\"isNumber\"\r\n                                        v-model=\"form.phone\"></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n                <el-row >\r\n                    <el-col :lg=\"{offset:18, span:6}\" style=\"display: flex; justify-content: flex-end\">\r\n                        <el-button @click=\"cancleButton\">Cancel</el-button>\r\n                        <el-button\r\n                                type=\"success\"\r\n                                v-loading.fullscreen.lock=\"buttonStatuz\"\r\n                                @click=\"onSubmit('form')\">Save</el-button>\r\n                    </el-col>\r\n                </el-row>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import router from '../../../router'\r\n    import * as action from '../../../store/action-types'\r\n    import * as getter from '../../../store/getters-types'\r\n    import * as mutation from '../../../store/mutation-types'\r\n    import { mapGetters } from 'vuex'\r\n\r\n    export default {\r\n        name: 'new-pic',\r\n        data() {\r\n            let validatePhone = (rule, value, callback) => {\r\n                if((value+'').length > 13) {\r\n                    callback(new Error('Phone must be less than 13 digits'))\r\n                } else {\r\n                    if((value+'').length < 10){\r\n                        callback(new Error('Phone must be more than 10 digits'))\r\n                    }else {\r\n                        callback()\r\n                    }\r\n                }\r\n\r\n            };\r\n            return {\r\n                form : {\r\n                    name   : '',\r\n                    phone  : '',\r\n                    fullscreen_loading: false\r\n                },\r\n                rules: {\r\n                    name: [\r\n                        { required: true, message: 'Please Input Inspector Name', trigger: ['blur', 'change'] }\r\n                    ],\r\n                    phone: [\r\n                        { required: true, message: 'Please Input Inspector Phone Number', trigger: ['blur', 'change']},\r\n                        { validator: validatePhone, trigger: ['change', 'blur'] }\r\n                    ]\r\n\r\n                }\r\n            };\r\n        },\r\n        async created(){\r\n            let data        = await this.$store.dispatch(action.ID_INSPECTOR, this.idinspec)\r\n\r\n            this.form.name  = data.name\r\n            this.form.phone = data.phonenumber\r\n        },\r\n        methods : {\r\n            onSubmit(formName) {\r\n                let newForm = {\r\n                    name            : this.form.name,\r\n                    phone           : this.form.phone,\r\n                    identerprise    : this.identer,\r\n                    idinspector     : this.idinspec\r\n                }\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        this.$store.commit(mutation.SET_LOADING, true);\r\n                        this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                        this.$store.dispatch(action.UPDATE_INSPECTOR, newForm)\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            cancleButton(){\r\n                router.push('/pic-task-list')\r\n            },\r\n            isNumber(evt) {\r\n                evt = (evt) ? evt : window.event;\r\n                var charCode = (evt.which) ? evt.which : evt.keyCode;\r\n                if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\r\n                    evt.preventDefault();;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                identer     : getter.GET_ID_ENTERPRISE,\r\n                idinspec    : getter.GET_ID_INSPECTOR,\r\n                button      : getter.GET_BUTTON\r\n            }),\r\n            buttonStatuz: function () {\r\n                return this.form.fullscreen_loading = this.button\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .card-base {\r\n        padding: 20px;\r\n    }\r\n    .el-row {\r\n        padding: 0px 10px;\r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n    .el-col {\r\n        border-radius: 5px;\r\n    }\r\n</style>\r\n"]}]}