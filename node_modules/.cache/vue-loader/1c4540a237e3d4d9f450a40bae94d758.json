{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/authentication/ResetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/authentication/ResetPassword.vue","mtime":1628175042619},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapGetters } from 'vuex'\nimport localAxios from '../../../services/http/client'\nimport formMixin from '../../../mixins/form.js'\nimport { required, sameAs, minLength } from 'vuelidate/lib/validators'\nimport * as getter from '../../../store/getters-types'\nimport * as action from '../../../store/action-types'\nimport * as mutation from '../../../store/mutation-types'\n\nexport default {\n\tname: 'change-password',\n\tmixins: [formMixin],\n\tdata() {\n\t\treturn {\n\t\t\t\tpassword: '',\n\t\t\t\tconfirmPassword: '',\n\t\t\t\ttoken: '',\n\t\t\t\tisValid: null\n\t\t}\n\t},\n\tvalidations: {\n\t\tpassword: {\n\t\t\trequired,\n\t\t\tminLen: minLength(6)\n\t\t},\n\t\tconfirmPassword: {\n\t\t\tsameAs: sameAs('password')\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapGetters({\n\t\t\t\tgetError\t: getter.GET_ERROR,\n\t\t\t\terrorMessage \t: getter.GET_ERROR_MESSAGE,\n\t\t\t\tbutton\t\t\t: getter.GET_BUTTON,\n\t\t}),\n\t\tisLogged() {\n\t\t\treturn this.$store.getters.isLogged;\n\t\t},\n\t\terrorButton(){\n\t\t\tif(this.getError){\t\t\t\n\t\t\t\treturn true\n\t\t\t}else{\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t},\n\tasync created(){\n\t\ttry {\n\t\tconst tokent = this.$route.params.token\n\t\tlet cekToken = await localAxios.get('/password/find/' + tokent)\n\t\t\tif(cekToken.data.status){\n\t\t\t\tthis.isValid = true, \n\t\t\t\tthis.token = tokent\n\t\t\t}\n\t\t}\n\t\tcatch(err) {\n\t\t}\n\t},\n\tmethods: {\n\t\t// ...mapActions(['login']),\n\t\treset() {\n\t\t\tconst formData = {\n\t\t\t\tpassword: this.password,\n\t\t\t\tconfirmPassword: this.confirmPassword,\n\t\t\t\ttoken: this.token\n\t\t\t};\n\t\t\tthis.$store.commit(mutation.BUTTON_STATUS, true)\n\t\t\tthis.$store.dispatch(action.CHANGE_PASSWORD,formData)\n\t\t},\n\t}\n}\n",{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ResetPassword.vue","sourceRoot":"src/views/pages/authentication","sourcesContent":["<template>\n\t<vue-scroll class=\"login-page align-vertical\">\n\t\t<div class=\"form-wrapper align-vertical-middle\">\n\t\t\t<div class=\"form-box card-base card-shadow--extraLarge\" v-if=\"isValid\">\n\t\t\t\t<img class=\"image-logo\" src=\"@/assets/images/logo.svg\" alt=\"logo\"/>\n\t\t\t\t<p style=\"color: red\" v-show=\"errorButton\">{{ errorMessage.message }}</p>\n\t\t\t\t<float-label class=\"styled\">\n\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t:class=\"{'is-danger': errors.has('password')}\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tref=\"password\"\n\t\t\t\t\t\t\tv-validate=\"'required|min:8|max:16'\"\n\t\t\t\t\t\t\tv-model=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"New Password\">\n\t\t\t\t\t\t\t<span v-if=\"errors.has('password')\" style=\"color : red\">\n\t\t\t\t\t\t\t\t{{ errors.first('password') }}\n\t\t\t\t\t\t\t</span>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<!-- <p v-show=\"!$v.password.required\" style=\"color: red\">password tidak boleh kosong</p>\n\t\t\t\t\t\t\t<p v-show=\"!$v.password.minLen\" style=\"color: red\">minimal password 6 karakter</p> -->\n\t\t\t\t</float-label>\n\t\t\t\t<float-label class=\"styled\">\n\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t:class=\"{'is-danger': errors.has('password_confirmation')}\"\n\t\t\t\t\t\t\tname=\"password_confirmation\"\n\t\t\t\t\t\t\tdata-vv-as=\"password\"\n\t\t\t\t\t\t\tv-validate=\"'confirmed:password|required'\"\n\t\t\t\t\t\t\tv-model=\"confirmPassword\"\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\">\n\t\t\t\t\t\t\t<!-- <p v-show=\"!$v.confirmPassword.sameAs\" style=\"color: red\">Confirm Password tidak sama dengan New Password</p> -->\n\t\t\t\t\t\t\t<span v-if=\"errors.has('password_confirmation')\" style=\"color : red\">\n\t\t\t\t\t\t\t\t<!--{{ errors.first('password_confirmation') }}-->\n\t\t\t\t\t\t\t</span>\n\t\t\t\t</float-label>\n\n\t\t\t\t<div class=\"flex text-center center pt-30 pb-10\">\t\t\t\n\t\t\t\t\t<el-button plain size=\"small\" @click=\"reset\" :loading=\"button\" class=\"login-btn tada animated\">\n\t\t\t\t\t\tCREATE\n\t\t\t\t\t</el-button>\n\t\t\t\t</div>\n\t\t\t\t<!-- <div class=\"text-divider mv-10\">or</div>\n\n\t\t\t\t<div class=\"flex column center pt-10 pb-10\">\t\t\t\n\t\t\t\t\t<el-button plain size=\"small\" @click=\"login\" class=\"social-btn google\">\n\t\t\t\t\t\tLog in with Google\n\t\t\t\t\t</el-button>\n\t\t\t\t\t<el-button plain size=\"small\" @click=\"login\" class=\"social-btn facebook\">\n\t\t\t\t\t\tLog in with Facebook\n\t\t\t\t\t</el-button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"text-center signin-box pt-20\">\n\t\t\t\t\tDon't have an account? <a>Sign in</a>\n\t\t\t\t</div> -->\n\t\t\t</div>\n\t\t\t<div class=\"form-box card-base card-shadow--extraLarge\" v-else>\n\t\t\t\t<img class=\"image-logo\" src=\"@/assets/images/logo.svg\" alt=\"logo\"/>\n\t\t\t\t<h3> Your Link Is Expired </h3>\n\t\t\t</div>\n\t\t</div>\n\t</vue-scroll>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\nimport localAxios from '../../../services/http/client'\nimport formMixin from '../../../mixins/form.js'\nimport { required, sameAs, minLength } from 'vuelidate/lib/validators'\nimport * as getter from '../../../store/getters-types'\nimport * as action from '../../../store/action-types'\nimport * as mutation from '../../../store/mutation-types'\n\nexport default {\n\tname: 'change-password',\n\tmixins: [formMixin],\n\tdata() {\n\t\treturn {\n\t\t\t\tpassword: '',\n\t\t\t\tconfirmPassword: '',\n\t\t\t\ttoken: '',\n\t\t\t\tisValid: null\n\t\t}\n\t},\n\tvalidations: {\n\t\tpassword: {\n\t\t\trequired,\n\t\t\tminLen: minLength(6)\n\t\t},\n\t\tconfirmPassword: {\n\t\t\tsameAs: sameAs('password')\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapGetters({\n\t\t\t\tgetError\t: getter.GET_ERROR,\n\t\t\t\terrorMessage \t: getter.GET_ERROR_MESSAGE,\n\t\t\t\tbutton\t\t\t: getter.GET_BUTTON,\n\t\t}),\n\t\tisLogged() {\n\t\t\treturn this.$store.getters.isLogged;\n\t\t},\n\t\terrorButton(){\n\t\t\tif(this.getError){\t\t\t\n\t\t\t\treturn true\n\t\t\t}else{\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t},\n\tasync created(){\n\t\ttry {\n\t\tconst tokent = this.$route.params.token\n\t\tlet cekToken = await localAxios.get('/password/find/' + tokent)\n\t\t\tif(cekToken.data.status){\n\t\t\t\tthis.isValid = true, \n\t\t\t\tthis.token = tokent\n\t\t\t}\n\t\t}\n\t\tcatch(err) {\n\t\t}\n\t},\n\tmethods: {\n\t\t// ...mapActions(['login']),\n\t\treset() {\n\t\t\tconst formData = {\n\t\t\t\tpassword: this.password,\n\t\t\t\tconfirmPassword: this.confirmPassword,\n\t\t\t\ttoken: this.token\n\t\t\t};\n\t\t\tthis.$store.commit(mutation.BUTTON_STATUS, true)\n\t\t\tthis.$store.dispatch(action.CHANGE_PASSWORD,formData)\n\t\t},\n\t}\n}\n</script>\n\n<style lang=\"scss\">\n@import '../../../assets/scss/_variables';\n\n.login-page {\n\tbackground: $text-color;\n\tmargin-left: -30px;\n\tmargin-right: -30px;\n\n\t.form-wrapper {\n\t\twidth: 100%;\n\t}\n\t\n\t.form-box {\n\t\twidth: 100%;\n\t\tmax-width: 340px;\n\t\tpadding: 30px;\n\t\tbox-sizing: border-box;\n\t\tmargin: 20px auto;\n\n\t\ta {\n\t\t\tfont-size: 14px;\n\t\t\tcolor: $text-color-accent;\n\t\t\ttext-decoration: none;\n\t\t\tfont-weight: 500;\n\t\t}\n\n\t\t.image-logo {\n\t\t\twidth: 80px;\n\t\t\tmargin: 0px auto;\n\t\t\tmargin-bottom: 30px;\n\t\t\tdisplay: block;\n\t\t}\n\t\t.input.invalid input {\n\t\t\tborder: 1px solid red;\n\t\t\tbackground-color: #ffc9aa;\n\t\t}\n\t\t.input.invalid label {\n\t\t\tcolor: red;\n\t\t}\n\n\t\t.login-btn ,\n\t\t.social-btn {\n\t\t\twidth: 160px;\n\n\t\t\t&.google {\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t\tbackground-color: #d73d32;\n\t\t\t\tcolor: white;\n\n\t\t\t\t&:hover {\n\t\t\t\t\tborder-color: #d73d32;\n\t\t\t\t}\n\t\t\t}\n\t\t\t&.facebook {\n\t\t\t\tbackground-color: #3f5c9a;\n\t\t\t\tcolor: white;\n\n\t\t\t\t&:hover {\n\t\t\t\t\tborder-color: #3f5c9a;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.signin-box {\n\t\t\tfont-size: 14px;\n\t\t}\n\t}\n}\n\n@media (max-width: 768px) {\n\t.layout-container .container .view.login-page {\n\t\tmargin-left: -5px;\n\t\tmargin-right: -5px;\n\t\tmax-width: calc(100% + 10px);\n\t}\n}\n</style>"]}]}