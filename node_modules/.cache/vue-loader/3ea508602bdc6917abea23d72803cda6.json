{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/order-client/list-order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/order-client/list-order.vue","mtime":1628175042629},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport  OrderBar from '../../../components/order/order-bar'\nimport Affix from '@/components/Affix'\nimport { mapGetters } from 'vuex'\nimport * as getter from '../../../store/getters-types'\nimport * as mutation from '../../../store/mutation-types'\nimport * as action from '../../../store/action-types'\nimport swal from 'sweetalert2'\n\nexport default {\n    name: 'Table',\n    data() {\n        return {\n            role            : '',\n            currentPage     : 1,\n            path            : null,\n            input           :'',\n            affixEnabled    : true,\n            indexT          : 1,\n            api             : \"\",\n            downloadFile    : \"\",\n            offset          : null,\n            form            : {\n                enterprise_name : '',\n                month           : '',\n                trx_id          : '',\n                driver_name     : '',\n                idvendor        : '',\n                range_date      : ''\n            },\n            changeTab: 'inprogress',\n        }\n    },\n    components: {\n        Affix,\n        OrderBar\n    },\n    computed: {\n        ...mapGetters({\n            listData : getter.GET_L_ORDER_CLIENT,\n            paginate : getter.GET_PAG_ORDER_CLIENT,\n            loading  : getter.GET_BUTTON,\n            vendor      : getter.GET_DROPDOWN_VENDOR\n        }),\n        paginato(){\n            return this.paginate\n        },\n        indexTam(){\n            return this.indexT\n        }\n    },\n    async created(){\n        let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\n        this.path = this.$route.path === '/order/open';\n        (this.$route.path == '/order/complete') ? this.changeTab = 'complete' : this.changeTab = 'inprogress';\n        this.role = userProfile;\n        let start, end;\n            if(this.form.range_date === null || this.form.range_date === ''){\n                start = '',\n                end   = ''\n            }else {\n                start = this.form.range_date[0],\n                end   = this.form.range_date[1]\n            }\n        let obj = {\n            page    : this.currentPage,\n            path    : this.$route.path,\n            enterprise_name  : this.form.enterprise_name,\n            month           : this.form.month,\n            trx_id          : this.form.trx_id,\n            driver_name     : this.form.driver_name,\n            idvendor        : this.form.idvendor,\n            start_date      : start,\n            end_date        : end\n        };\n\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        let data = await this.$store.dispatch(action.LIST_ORDER_CLIENT, obj)\n    },\n    methods: {\n        headerRowStyle({row, column, rowIndex, columnIndex}) {\n            // if (columnIndex === 2 && this.changeTab === 'open') {\n            // return {\"wordSpacing\":\"80px\"};\n            // } else if (columnIndex === 3 && this.changeTab === 'open') {\n            // return {\"wordSpacing\":\"70px\"};\n            // } else if (columnIndex === 5 && this.changeTab === 'open') {\n            // return {\"wordSpacing\":\"50px\"};\n            // } else \n            if (columnIndex === 3 && this.changeTab !== 'open') {\n            return {\"wordSpacing\":\"170px\"};\n            } else if (columnIndex === 4 && this.changeTab !== 'open') {\n            return {\"wordSpacing\":\"180px\"};\n            } else if (columnIndex === 6 && this.changeTab !== 'open') {\n            return {\"wordSpacing\":\"170px\"};\n            }\n        },\n        newCorp()   {\n            this.$router.replace('/order/create')\n        },\n        async exportExcel(){\n            let data = '';\n            if(this.form.month === '' || this.form.month === '0' ){\n                swal('please select month (except all month)','', 'error')\n            }else {\n                let obj = {\n                    path    : this.$route.path,\n                    month   : this.form.month\n                };\n               data = await this.$store.dispatch(action.EXPORT_ORDER_LIST, obj)\n                let firstD = data.slice(1)\n                let secondD = firstD.slice(0, firstD.length -1)\n                window.open(secondD)\n            }\n        },\n        handlePageChange(page) {\n            let start, end;\n            if(this.form.range_date === null || this.form.range_date === ''){\n                start = '',\n                end   = ''\n            }else {\n                start = this.form.range_date[0],\n                end   = this.form.range_date[1]\n            }\n            let obj = {\n                page    : page,\n                path    : this.$route.path,\n                enterprise_name  : this.form.enterprise_name,\n                month           : this.form.month,\n                trx_id          : this.form.trx_id,\n                driver_name     : this.form.driver_name,\n                idvendor        : this.form.idvendor,\n                start_date      : start,\n                end_date        : end\n            };\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.currentPage = page;\n            this.$store.dispatch( action.LIST_ORDER_CLIENT, obj )\n        },\n        search(){\n            this.$store.dispatch( action.LIST_ORDER_CLIENT, this.input.trim() )\n        },\n        async getId(id){\n            let obj = {\n                id    : id.idorder,\n                path  : this.$route.path\n            };\n            await this.$store.dispatch(action.ID_ORDER_CLIENT, obj)\n            this.$router.replace('/detail-order')\n        },\n        indexMethod(index) {\n            return index + this.paginato.fromP;\n        },\n        searchSquare(){\n            let start, end;\n            if(this.form.range_date === null || this.form.range_date === ''){\n                start = '',\n                end   = ''\n            }else {\n                start = this.form.range_date[0],\n                end   = this.form.range_date[1]\n            }\n            let obj = {\n                page            : this.currentPage,\n                path            : this.$route.path,\n                enterprise_name  : this.form.enterprise_name,\n                month           : this.form.month,\n                trx_id          : this.form.trx_id,\n                driver_name     : this.form.driver_name,\n                idvendor        : this.form.idvendor,\n                start_date      : start,\n                end_date        : end\n            };\n            this.$store.dispatch(action.LIST_ORDER_CLIENT, obj)\n        },\n        tabChange(v) {\n            this.$router.replace(v)\n        },\n        imgAlt(event) {\n            event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\n        },\n    }\n}\n",{"version":3,"sources":["list-order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"list-order.vue","sourceRoot":"src/views/pages/order-client","sourcesContent":["<template>\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n        <order-bar />\n\n        <div class=\"card-base card-shadow--medium bg-white\">\n            <el-radio-group v-model=\"changeTab\" @change=\"tabChange\" fill=\"#fffafa\" >\n                <el-radio-button label=\"open\">\n                    <img src=\"../../../assets/oper_asset/openorder_red.png\" class=\"drive-acount\" v-if=\"changeTab === 'open'\">\n                    <img src=\"../../../assets/oper_asset/openorder_grey.png\" class=\"drive-acount\" v-else>\n                </el-radio-button>\n                <el-radio-button label=\"inprogress\">\n                    <img src=\"../../../assets/oper_asset/inprogress_red.png\" class=\"drive-acount\" v-if=\"changeTab === 'inprogress'\">\n                    <img src=\"../../../assets/oper_asset/inprogress_grey.png\" class=\"drive-acount\" v-else>\n                </el-radio-button>\n                <el-radio-button label=\"complete\">\n                    <img src=\"../../../assets/oper_asset/completed_red.png\" class=\"drive-acount\" v-if=\"changeTab === 'complete'\">\n                    <img src=\"../../../assets/oper_asset/completed_grey.png\" class=\"drive-acount\" v-else>\n                </el-radio-button>\n            </el-radio-group>\n\n            <el-row :gutter=\"20\">\n                <el-col :span=\"16\">\n                    <div >\n                        <el-button\n                                v-if=\"path\"\n                                @click=\"newCorp\"\n                                type=\"primary\">\n                            New Order\n                        </el-button>\n                    </div>\n                </el-col>\n                <!--<el-col :lg=\"{span: 8, offset}\">-->\n                    <!--<el-input-->\n                            <!--placeholder=\"Search\"-->\n                            <!--style=\"width: 300px\"-->\n                            <!--v-model=\"input\"-->\n                            <!--@change=\"search\">-->\n                    <!--</el-input>-->\n                <!--</el-col>-->\n            </el-row>\n\n            <!--<el-row :gutter=\"10\" style=\"margin-top: 20px\">-->\n                <!--<el-col :span=\"7\">-->\n                    <!--<el-breadcrumb separator=\"/\">-->\n                        <!--<el-breadcrumb-item :to=\"{ path: '/order/open' }\">Open</el-breadcrumb-item>-->\n                        <!--<el-breadcrumb-item :to=\"{ path: '/order/inprogress' }\">Inprogress</el-breadcrumb-item>-->\n                        <!--<el-breadcrumb-item :to=\"{ path: '/order/complete' }\">Complete</el-breadcrumb-item>-->\n                        <!--<el-breadcrumb-item ></el-breadcrumb-item>-->\n                    <!--</el-breadcrumb>-->\n                <!--</el-col>-->\n            <!--</el-row>-->\n            <el-row :gutter=\"10\" style=\"margin-top: 20px\">\n                <el-col :span=\"3\">\n                    <el-select v-model=\"form.month\" placeholder=\"Select Month\">\n                        <el-option label=\"All Months\" selected value=\"0\">All Months</el-option>\n                        <el-option label=\"January\" selected value=\"1\">January</el-option>\n                        <el-option label=\"February\" value=\"2\">February</el-option>\n                        <el-option label=\"March\" value=\"3\">March</el-option>\n                        <el-option label=\"April\" value=\"4\">April</el-option>\n                        <el-option label=\"May\" value=\"5\">May</el-option>\n                        <el-option label=\"June\" value=\"6\">June</el-option>\n                        <el-option label=\"July\" value=\"7\">July</el-option>\n                        <el-option label=\"August\" value=\"8\">August</el-option>\n                        <el-option label=\"September\" value=\"9\">September</el-option>\n                        <el-option label=\"October\" value=\"10\">October</el-option>\n                        <el-option label=\"November\" value=\"11\">November</el-option>\n                        <el-option label=\"December\" value=\"12\">December</el-option>\n                    </el-select>\n                </el-col>\n                <div v-if=\"role === 1\">\n                 <el-col :span=\"4\">\n                    <el-select v-model=\"form.idvendor\" placeholder=\"Select Vendor\">\n                        <el-option v-for=\"item in vendor\" :key=\"item.idvendor\" :value=\"item.idvendor\" :label=\"item.name\"></el-option>\n                    </el-select>\n                </el-col>\n                </div>\n                <el-col :span=\"3\">\n                    <el-input\n                            placeholder=\"Enterprise Name\"\n                            v-model=\"form.enterprise_name\">\n                    </el-input>\n                </el-col>\n                <el-col :span=\"3\">\n                    <el-input\n                            placeholder=\"Driver Name\"\n                            v-model=\"form.driver_name\">\n                    </el-input>\n                </el-col>\n                <el-col :span=\"4\">\n                    <el-input\n                            placeholder=\"Transaction ID\"\n                            v-model=\"form.trx_id\">\n                    </el-input>\n                </el-col>\n\n                <el-col :span=\"6\">\n                    <el-date-picker\n                    value-format=\"yyyy-MM-dd\"\n                    style=\"width: 100%;\"\n                    v-model=\"form.range_date\" \n                    default-value=\"2019-06-01\"\n                    type=\"daterange\"\n                    start-placeholder=\"Start\"\n                    end-placeholder=\"End\"\n                    ></el-date-picker>\n                </el-col>\n\n                <el-col :span=\"1\">\n                    <el-button\n                            icon=\"el-icon-search\"\n                            @click=\"searchSquare\"\n                            style=\"background: #D50000; font-size: 17px; color: white; \"\n                            square>\n\n                    </el-button>\n                </el-col>\n\n            </el-row>\n\n            <div class=\"contacts-list box grow scrollable only-y\">\n            <el-row>\n                <el-col :span=\"24\">\n                    <el-table\n                            v-loading=\"loading\"\n                            :data=\"listData\"\n                            stripe\n                            :header-cell-style=\"headerRowStyle\"\n                            style=\"width: 100%\"\n                            @row-click=\"getId\">\n                        <el-table-column\n                                type=\"index\"\n                                :index=\"indexMethod\"\n                                label=\"NO\"\n                                width=\"70\">\n                        </el-table-column>\n                        <el-table-column\n                                align=\"center\"\n                                width=\"100\"\n                                label=\"PHOTO\">\n                            <template slot-scope=\"scope\">\n                                <img style=\"width: 35px; height: 35px; border-radius: 50%\" :src=\"scope.row.profile_picture\" @error=\"imgAlt\">\n                            </template>\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"nama_driver\"\n                                label=\"DRIVER INFO\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"user_fullname\"\n                                label=\"USER CUSTOMER\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"nama_client_enterprise\"\n                                label=\"ENTERPRISE NAME\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"vehicle_type\"\n                                label=\"VEHICLE\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"client_vehicle_license\"\n                                label=\"POLICE NUMBER\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"status_text\"\n                                label=\"STATUS\">\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n            <el-row>\n                <el-col :lg=\"20\">\n                    <div class=\"grid-content\">\n                        <el-pagination\n                                background\n                                layout=\"prev, pager, next\"\n                                @current-change=\"handlePageChange\"\n                                :current-page=\"currentPage\"\n                                :total=\"paginato.totalP\">\n\n                        </el-pagination>\n                    </div>\n                </el-col>\n                <el-col :lg=\"4\">\n                    <el-button\n                            type=\"primary\"\n                            @click=\"exportExcel\"\n                            style=\"margin-top: 15px\">\n                        Export\n                    </el-button>\n                </el-col>\n            </el-row>\n        </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import  OrderBar from '../../../components/order/order-bar'\n    import Affix from '@/components/Affix'\n    import { mapGetters } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as mutation from '../../../store/mutation-types'\n    import * as action from '../../../store/action-types'\n    import swal from 'sweetalert2'\n\n    export default {\n        name: 'Table',\n        data() {\n            return {\n                role            : '',\n                currentPage     : 1,\n                path            : null,\n                input           :'',\n                affixEnabled    : true,\n                indexT          : 1,\n                api             : \"\",\n                downloadFile    : \"\",\n                offset          : null,\n                form            : {\n                    enterprise_name : '',\n                    month           : '',\n                    trx_id          : '',\n                    driver_name     : '',\n                    idvendor        : '',\n                    range_date      : ''\n                },\n                changeTab: 'inprogress',\n            }\n        },\n        components: {\n            Affix,\n            OrderBar\n        },\n        computed: {\n            ...mapGetters({\n                listData : getter.GET_L_ORDER_CLIENT,\n                paginate : getter.GET_PAG_ORDER_CLIENT,\n                loading  : getter.GET_BUTTON,\n                vendor      : getter.GET_DROPDOWN_VENDOR\n            }),\n            paginato(){\n                return this.paginate\n            },\n            indexTam(){\n                return this.indexT\n            }\n        },\n        async created(){\n            let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\n            this.path = this.$route.path === '/order/open';\n            (this.$route.path == '/order/complete') ? this.changeTab = 'complete' : this.changeTab = 'inprogress';\n            this.role = userProfile;\n            let start, end;\n                if(this.form.range_date === null || this.form.range_date === ''){\n                    start = '',\n                    end   = ''\n                }else {\n                    start = this.form.range_date[0],\n                    end   = this.form.range_date[1]\n                }\n            let obj = {\n                page    : this.currentPage,\n                path    : this.$route.path,\n                enterprise_name  : this.form.enterprise_name,\n                month           : this.form.month,\n                trx_id          : this.form.trx_id,\n                driver_name     : this.form.driver_name,\n                idvendor        : this.form.idvendor,\n                start_date      : start,\n                end_date        : end\n            };\n\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            let data = await this.$store.dispatch(action.LIST_ORDER_CLIENT, obj)\n        },\n        methods: {\n            headerRowStyle({row, column, rowIndex, columnIndex}) {\n                // if (columnIndex === 2 && this.changeTab === 'open') {\n                // return {\"wordSpacing\":\"80px\"};\n                // } else if (columnIndex === 3 && this.changeTab === 'open') {\n                // return {\"wordSpacing\":\"70px\"};\n                // } else if (columnIndex === 5 && this.changeTab === 'open') {\n                // return {\"wordSpacing\":\"50px\"};\n                // } else \n                if (columnIndex === 3 && this.changeTab !== 'open') {\n                return {\"wordSpacing\":\"170px\"};\n                } else if (columnIndex === 4 && this.changeTab !== 'open') {\n                return {\"wordSpacing\":\"180px\"};\n                } else if (columnIndex === 6 && this.changeTab !== 'open') {\n                return {\"wordSpacing\":\"170px\"};\n                }\n            },\n            newCorp()   {\n                this.$router.replace('/order/create')\n            },\n            async exportExcel(){\n                let data = '';\n                if(this.form.month === '' || this.form.month === '0' ){\n                    swal('please select month (except all month)','', 'error')\n                }else {\n                    let obj = {\n                        path    : this.$route.path,\n                        month   : this.form.month\n                    };\n                   data = await this.$store.dispatch(action.EXPORT_ORDER_LIST, obj)\n                    let firstD = data.slice(1)\n                    let secondD = firstD.slice(0, firstD.length -1)\n                    window.open(secondD)\n                }\n            },\n            handlePageChange(page) {\n                let start, end;\n                if(this.form.range_date === null || this.form.range_date === ''){\n                    start = '',\n                    end   = ''\n                }else {\n                    start = this.form.range_date[0],\n                    end   = this.form.range_date[1]\n                }\n                let obj = {\n                    page    : page,\n                    path    : this.$route.path,\n                    enterprise_name  : this.form.enterprise_name,\n                    month           : this.form.month,\n                    trx_id          : this.form.trx_id,\n                    driver_name     : this.form.driver_name,\n                    idvendor        : this.form.idvendor,\n                    start_date      : start,\n                    end_date        : end\n                };\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.currentPage = page;\n                this.$store.dispatch( action.LIST_ORDER_CLIENT, obj )\n            },\n            search(){\n                this.$store.dispatch( action.LIST_ORDER_CLIENT, this.input.trim() )\n            },\n            async getId(id){\n                let obj = {\n                    id    : id.idorder,\n                    path  : this.$route.path\n                };\n                await this.$store.dispatch(action.ID_ORDER_CLIENT, obj)\n                this.$router.replace('/detail-order')\n            },\n            indexMethod(index) {\n                return index + this.paginato.fromP;\n            },\n            searchSquare(){\n                let start, end;\n                if(this.form.range_date === null || this.form.range_date === ''){\n                    start = '',\n                    end   = ''\n                }else {\n                    start = this.form.range_date[0],\n                    end   = this.form.range_date[1]\n                }\n                let obj = {\n                    page            : this.currentPage,\n                    path            : this.$route.path,\n                    enterprise_name  : this.form.enterprise_name,\n                    month           : this.form.month,\n                    trx_id          : this.form.trx_id,\n                    driver_name     : this.form.driver_name,\n                    idvendor        : this.form.idvendor,\n                    start_date      : start,\n                    end_date        : end\n                };\n                this.$store.dispatch(action.LIST_ORDER_CLIENT, obj)\n            },\n            tabChange(v) {\n                this.$router.replace(v)\n            },\n            imgAlt(event) {\n                event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\n            },\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n    .table-box {\n        overflow: auto;\n    }\n    .el-pagination {\n        padding-top: 20px;\n    }\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px 5px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n    .el-select {\n        width: 100%;\n    }\n    .drive-acount {\n        height: 113px;\n        margin-top: 10px;\n    }\n    @media only screen and (min-width: 1590px) {\n        .drive-acount {\n            height: 147px;\n            margin-top: 10px;\n        }\n    }\n\n</style>\n\n"]}]}