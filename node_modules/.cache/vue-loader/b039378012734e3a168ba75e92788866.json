{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\order-client\\list-order.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\order-client\\list-order.vue","mtime":1672718313796},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport  OrderBar from '../../../components/order/order-bar'\nimport Affix from '@/components/Affix'\nimport { mapGetters } from 'vuex'\nimport * as getter from '../../../store/getters-types'\nimport * as mutation from '../../../store/mutation-types'\nimport * as action from '../../../store/action-types'\nimport swal from 'sweetalert2'\n\nexport default {\n    name: 'Table',\n    data() {\n        return {\n            role            : '',\n            currentPage     : 1,\n            path            : null,\n            input           :'',\n            affixEnabled    : true,\n            indexT          : 1,\n            api             : \"\",\n            downloadFile    : \"\",\n            offset          : null,\n            form            : {\n                enterprise_name : '',\n                month           : '',\n                trx_id          : '',\n                driver_name     : '',\n                idvendor        : '',\n                range_date      : ''\n            },\n            changeTab: 'inprogress',\n        }\n    },\n    components: {\n        Affix,\n        OrderBar\n    },\n    computed: {\n        ...mapGetters({\n            listData : getter.GET_L_ORDER_CLIENT,\n            paginate : getter.GET_PAG_ORDER_CLIENT,\n            loading  : getter.GET_BUTTON,\n            vendor      : getter.GET_DROPDOWN_VENDOR\n        }),\n        paginato(){\n            return this.paginate\n        },\n        indexTam(){\n            return this.indexT\n        }\n    },\n    async created(){\n        let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\n        this.path = this.$route.path === '/order/open';\n        if(this.$route.path == '/order/inprogress')\n            this.changeTab = 'inprogress'\n        else if(this.$route.path == '/order/complete')\n            this.changeTab = 'complete'\n        else\n            this.changeTab = 'cancel'\n        // (this.$route.path == '/order/complete') ? this.changeTab = 'complete' : this.changeTab = 'inprogress';\n        this.role = userProfile;\n        let start, end;\n            if(this.form.range_date === null || this.form.range_date === ''){\n                start = '',\n                end   = ''\n            }else {\n                start = this.form.range_date[0],\n                end   = this.form.range_date[1]\n            }\n        let obj = {\n            page    : this.currentPage,\n            path    : this.$route.path,\n            enterprise_name  : this.form.enterprise_name,\n            month           : this.form.month,\n            trx_id          : this.form.trx_id,\n            driver_name     : this.form.driver_name,\n            idvendor        : this.form.idvendor,\n            start_date      : start,\n            end_date        : end\n        };\n\n        if(this.listData == null)\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            await this.$store.dispatch(action.LIST_ORDER_CLIENT, obj)\n        if(this.paginato.curPage != null)\n            this.currentPage = this.paginato.curPage\n    },\n    methods: {\n        headerRowStyle({row, column, rowIndex, columnIndex}) {\n            // if (columnIndex === 2 && this.changeTab === 'open') {\n            // return {\"wordSpacing\":\"80px\"};\n            // } else if (columnIndex === 3 && this.changeTab === 'open') {\n            // return {\"wordSpacing\":\"70px\"};\n            // } else if (columnIndex === 5 && this.changeTab === 'open') {\n            // return {\"wordSpacing\":\"50px\"};\n            // } else \n            if (columnIndex === 3 && this.changeTab !== 'open') {\n            return {\"wordSpacing\":\"170px\"};\n            } else if (columnIndex === 4 && this.changeTab !== 'open') {\n            return {\"wordSpacing\":\"180px\"};\n            } else if (columnIndex === 6 && this.changeTab !== 'open') {\n            return {\"wordSpacing\":\"170px\"};\n            }\n        },\n        newCorp()   {\n            this.$router.push('/order/create')\n        },\n        async exportExcel(){\n            let data = '';\n            if(this.form.month === '' || this.form.month === '0' ){\n                swal('please select month (except all month)','', 'error')\n            }else {\n                // let obj = {\n                //     path    : this.$route.path,\n                //     month   : this.form.month\n                // };\n                \n                let start, end;\n                    if(this.form.range_date === null || this.form.range_date === ''){\n                        start = '',\n                        end   = ''\n                    }else {\n                        start = this.form.range_date[0],\n                        end   = this.form.range_date[1]\n                    }\n                let obj = {\n                    path            : this.$route.path,\n                    month           : this.form.month,\n                    start_date      : start,\n                    end_date        : end\n                };\n\n                data = await this.$store.dispatch(action.EXPORT_ORDER_LIST, obj)\n                let firstD = data.slice(1)\n                let secondD = firstD.slice(0, firstD.length -1)\n                window.open(secondD)\n            }\n        },\n        handlePageChange(page) {\n            let start, end;\n            if(this.form.range_date === null || this.form.range_date === ''){\n                start = '',\n                end   = ''\n            }else {\n                start = this.form.range_date[0],\n                end   = this.form.range_date[1]\n            }\n            let obj = {\n                page    : page,\n                path    : this.$route.path,\n                enterprise_name  : this.form.enterprise_name,\n                month           : this.form.month,\n                trx_id          : this.form.trx_id,\n                driver_name     : this.form.driver_name,\n                idvendor        : this.form.idvendor,\n                start_date      : start,\n                end_date        : end\n            };\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.currentPage = page;\n            this.$store.dispatch( action.LIST_ORDER_CLIENT, obj )\n        },\n        search(){\n            this.$store.dispatch( action.LIST_ORDER_CLIENT, this.input.trim() )\n        },\n        async getId(id){\n            let obj = {\n                id    : id.idorder,\n                path  : this.$route.path\n            };\n            await this.$store.dispatch(action.ID_ORDER_CLIENT, obj)\n            this.$router.push('/detail-order')\n        },\n        indexMethod(index) {\n            return index + this.paginato.fromP;\n        },\n        searchSquare(){\n            let start, end;\n            if(this.form.range_date === null || this.form.range_date === ''){\n                start = '',\n                end   = ''\n            }else {\n                start = this.form.range_date[0],\n                end   = this.form.range_date[1]\n            }\n            let obj = {\n                page            : this.currentPage,\n                path            : this.$route.path,\n                enterprise_name  : this.form.enterprise_name,\n                month           : this.form.month,\n                trx_id          : this.form.trx_id,\n                driver_name     : this.form.driver_name,\n                idvendor        : this.form.idvendor,\n                start_date      : start,\n                end_date        : end\n            };\n            this.$store.dispatch(action.LIST_ORDER_CLIENT, obj)\n        },\n        tabChange(v) {\n            this.$router.push(v)\n        },\n        imgAlt(event) {\n            event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\n        },\n    }\n}\n",{"version":3,"sources":["list-order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list-order.vue","sourceRoot":"src/views/pages/order-client","sourcesContent":["<template>\r\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n        <order-bar />\r\n\r\n        <div class=\"card-base card-shadow--medium bg-white\">\r\n            <el-radio-group v-model=\"changeTab\" @change=\"tabChange\" fill=\"#fffafa\" >\r\n                <el-radio-button label=\"open\">\r\n                    <img src=\"../../../assets/oper_asset/openorder_red.png\" class=\"drive-acount\" v-if=\"changeTab === 'open'\">\r\n                    <img src=\"../../../assets/oper_asset/openorder_grey.png\" class=\"drive-acount\" v-else>\r\n                </el-radio-button>\r\n                <el-radio-button label=\"inprogress\">\r\n                    <img src=\"../../../assets/oper_asset/inprogress_red.png\" class=\"drive-acount\" v-if=\"changeTab === 'inprogress'\">\r\n                    <img src=\"../../../assets/oper_asset/inprogress_grey.png\" class=\"drive-acount\" v-else>\r\n                </el-radio-button>\r\n                <el-radio-button label=\"cancel\">\r\n                    <img src=\"../../../assets/oper_asset/cancelled_red.png\" class=\"drive-acount\" v-if=\"changeTab === 'cancel'\">\r\n                    <img src=\"../../../assets/oper_asset/cancelled_grey.png\" class=\"drive-acount\" v-else>\r\n                </el-radio-button>\r\n                <el-radio-button label=\"complete\">\r\n                    <img src=\"../../../assets/oper_asset/completed_red.png\" class=\"drive-acount\" v-if=\"changeTab === 'complete'\">\r\n                    <img src=\"../../../assets/oper_asset/completed_grey.png\" class=\"drive-acount\" v-else>\r\n                </el-radio-button>\r\n            </el-radio-group>\r\n\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"16\">\r\n                    <div >\r\n                        <el-button\r\n                                v-if=\"path\"\r\n                                @click=\"newCorp\"\r\n                                type=\"primary\">\r\n                            New Order\r\n                        </el-button>\r\n                    </div>\r\n                </el-col>\r\n                <!--<el-col :lg=\"{span: 8, offset}\">-->\r\n                    <!--<el-input-->\r\n                            <!--placeholder=\"Search\"-->\r\n                            <!--style=\"width: 300px\"-->\r\n                            <!--v-model=\"input\"-->\r\n                            <!--@change=\"search\">-->\r\n                    <!--</el-input>-->\r\n                <!--</el-col>-->\r\n            </el-row>\r\n\r\n            <!--<el-row :gutter=\"10\" style=\"margin-top: 20px\">-->\r\n                <!--<el-col :span=\"7\">-->\r\n                    <!--<el-breadcrumb separator=\"/\">-->\r\n                        <!--<el-breadcrumb-item :to=\"{ path: '/order/open' }\">Open</el-breadcrumb-item>-->\r\n                        <!--<el-breadcrumb-item :to=\"{ path: '/order/inprogress' }\">Inprogress</el-breadcrumb-item>-->\r\n                        <!--<el-breadcrumb-item :to=\"{ path: '/order/complete' }\">Complete</el-breadcrumb-item>-->\r\n                        <!--<el-breadcrumb-item ></el-breadcrumb-item>-->\r\n                    <!--</el-breadcrumb>-->\r\n                <!--</el-col>-->\r\n            <!--</el-row>-->\r\n            <el-row :gutter=\"10\" style=\"margin-top: 20px\">\r\n                <el-col :span=\"3\">\r\n                    <el-select v-model=\"form.month\" placeholder=\"Select Month\">\r\n                        <el-option label=\"All Months\" selected value=\"0\">All Months</el-option>\r\n                        <el-option label=\"January\" selected value=\"1\">January</el-option>\r\n                        <el-option label=\"February\" value=\"2\">February</el-option>\r\n                        <el-option label=\"March\" value=\"3\">March</el-option>\r\n                        <el-option label=\"April\" value=\"4\">April</el-option>\r\n                        <el-option label=\"May\" value=\"5\">May</el-option>\r\n                        <el-option label=\"June\" value=\"6\">June</el-option>\r\n                        <el-option label=\"July\" value=\"7\">July</el-option>\r\n                        <el-option label=\"August\" value=\"8\">August</el-option>\r\n                        <el-option label=\"September\" value=\"9\">September</el-option>\r\n                        <el-option label=\"October\" value=\"10\">October</el-option>\r\n                        <el-option label=\"November\" value=\"11\">November</el-option>\r\n                        <el-option label=\"December\" value=\"12\">December</el-option>\r\n                    </el-select>\r\n                </el-col>\r\n                <div v-if=\"role === 1\">\r\n                 <el-col :span=\"4\">\r\n                    <el-select v-model=\"form.idvendor\" placeholder=\"Select Vendor\">\r\n                        <el-option v-for=\"item in vendor\" :key=\"item.idvendor\" :value=\"item.idvendor\" :label=\"item.name\"></el-option>\r\n                    </el-select>\r\n                </el-col>\r\n                </div>\r\n                <el-col :span=\"3\">\r\n                    <el-input\r\n                            placeholder=\"Enterprise Name\"\r\n                            v-model=\"form.enterprise_name\">\r\n                    </el-input>\r\n                </el-col>\r\n                <el-col :span=\"3\">\r\n                    <el-input\r\n                            placeholder=\"Driver Name\"\r\n                            v-model=\"form.driver_name\">\r\n                    </el-input>\r\n                </el-col>\r\n                <el-col :span=\"4\">\r\n                    <el-input\r\n                            placeholder=\"Transaction ID\"\r\n                            v-model=\"form.trx_id\">\r\n                    </el-input>\r\n                </el-col>\r\n\r\n                <el-col :span=\"6\">\r\n                    <el-date-picker\r\n                    value-format=\"yyyy-MM-dd\"\r\n                    style=\"width: 100%;\"\r\n                    v-model=\"form.range_date\" \r\n                    type=\"daterange\"\r\n                    start-placeholder=\"Start\"\r\n                    end-placeholder=\"End\"\r\n                    ></el-date-picker>\r\n                </el-col>\r\n\r\n                <el-col :span=\"1\">\r\n                    <el-button\r\n                            icon=\"el-icon-search\"\r\n                            @click=\"searchSquare\"\r\n                            style=\"background: #D50000; font-size: 17px; color: white; \"\r\n                            square>\r\n\r\n                    </el-button>\r\n                </el-col>\r\n\r\n            </el-row>\r\n\r\n            <div class=\"contacts-list box grow scrollable only-y\">\r\n            <el-row>\r\n                <el-col :span=\"24\">\r\n                    <el-table\r\n                            v-loading=\"loading\"\r\n                            :data=\"listData\"\r\n                            stripe\r\n                            :header-cell-style=\"headerRowStyle\"\r\n                            style=\"width: 100%\"\r\n                            @row-click=\"getId\">\r\n                        <el-table-column\r\n                                type=\"index\"\r\n                                :index=\"indexMethod\"\r\n                                label=\"NO\"\r\n                                width=\"70\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                align=\"center\"\r\n                                width=\"100\"\r\n                                label=\"PHOTO\">\r\n                            <template slot-scope=\"scope\">\r\n                                <img style=\"width: 35px; height: 35px; border-radius: 50%\" :src=\"scope.row.profile_picture\" @error=\"imgAlt\">\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"driver.user.nama_driver\"\r\n                                label=\"DRIVER INFO\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"user_fullname\"\r\n                                label=\"USER CUSTOMER\">\r\n                        </el-table-column>                        \r\n                        <el-table-column\r\n                                prop=\"booking_time\"\r\n                                label=\"BOOKING TIME\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"enterprise.nama_client_enterprise\"\r\n                                label=\"ENTERPRISE NAME\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"vehicle_type\"\r\n                                label=\"VEHICLE\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"client_vehicle_license\"\r\n                                label=\"POLICE NUMBER\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"status_text\"\r\n                                label=\"STATUS\">\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-col>\r\n            </el-row>\r\n            <el-row>\r\n                <el-col :lg=\"20\">\r\n                    <div class=\"grid-content\">\r\n                        <el-pagination\r\n                                background\r\n                                layout=\"prev, pager, next\"\r\n                                @current-change=\"handlePageChange\"\r\n                                :current-page=\"currentPage\"\r\n                                :total=\"paginato.totalP\">\r\n\r\n                        </el-pagination>\r\n                    </div>\r\n                </el-col>\r\n                <el-col :lg=\"4\">\r\n                    <el-button\r\n                            type=\"primary\"\r\n                            @click=\"exportExcel\"\r\n                            style=\"margin-top: 15px\">\r\n                        Export\r\n                    </el-button>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import  OrderBar from '../../../components/order/order-bar'\r\n    import Affix from '@/components/Affix'\r\n    import { mapGetters } from 'vuex'\r\n    import * as getter from '../../../store/getters-types'\r\n    import * as mutation from '../../../store/mutation-types'\r\n    import * as action from '../../../store/action-types'\r\n    import swal from 'sweetalert2'\r\n\r\n    export default {\r\n        name: 'Table',\r\n        data() {\r\n            return {\r\n                role            : '',\r\n                currentPage     : 1,\r\n                path            : null,\r\n                input           :'',\r\n                affixEnabled    : true,\r\n                indexT          : 1,\r\n                api             : \"\",\r\n                downloadFile    : \"\",\r\n                offset          : null,\r\n                form            : {\r\n                    enterprise_name : '',\r\n                    month           : '',\r\n                    trx_id          : '',\r\n                    driver_name     : '',\r\n                    idvendor        : '',\r\n                    range_date      : ''\r\n                },\r\n                changeTab: 'inprogress',\r\n            }\r\n        },\r\n        components: {\r\n            Affix,\r\n            OrderBar\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                listData : getter.GET_L_ORDER_CLIENT,\r\n                paginate : getter.GET_PAG_ORDER_CLIENT,\r\n                loading  : getter.GET_BUTTON,\r\n                vendor      : getter.GET_DROPDOWN_VENDOR\r\n            }),\r\n            paginato(){\r\n                return this.paginate\r\n            },\r\n            indexTam(){\r\n                return this.indexT\r\n            }\r\n        },\r\n        async created(){\r\n            let userProfile = JSON.parse(localStorage.getItem('user')).idrole;\r\n            this.path = this.$route.path === '/order/open';\r\n            if(this.$route.path == '/order/inprogress')\r\n                this.changeTab = 'inprogress'\r\n            else if(this.$route.path == '/order/complete')\r\n                this.changeTab = 'complete'\r\n            else\r\n                this.changeTab = 'cancel'\r\n            // (this.$route.path == '/order/complete') ? this.changeTab = 'complete' : this.changeTab = 'inprogress';\r\n            this.role = userProfile;\r\n            let start, end;\r\n                if(this.form.range_date === null || this.form.range_date === ''){\r\n                    start = '',\r\n                    end   = ''\r\n                }else {\r\n                    start = this.form.range_date[0],\r\n                    end   = this.form.range_date[1]\r\n                }\r\n            let obj = {\r\n                page    : this.currentPage,\r\n                path    : this.$route.path,\r\n                enterprise_name  : this.form.enterprise_name,\r\n                month           : this.form.month,\r\n                trx_id          : this.form.trx_id,\r\n                driver_name     : this.form.driver_name,\r\n                idvendor        : this.form.idvendor,\r\n                start_date      : start,\r\n                end_date        : end\r\n            };\r\n\r\n            if(this.listData == null)\r\n                this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                await this.$store.dispatch(action.LIST_ORDER_CLIENT, obj)\r\n            if(this.paginato.curPage != null)\r\n                this.currentPage = this.paginato.curPage\r\n        },\r\n        methods: {\r\n            headerRowStyle({row, column, rowIndex, columnIndex}) {\r\n                // if (columnIndex === 2 && this.changeTab === 'open') {\r\n                // return {\"wordSpacing\":\"80px\"};\r\n                // } else if (columnIndex === 3 && this.changeTab === 'open') {\r\n                // return {\"wordSpacing\":\"70px\"};\r\n                // } else if (columnIndex === 5 && this.changeTab === 'open') {\r\n                // return {\"wordSpacing\":\"50px\"};\r\n                // } else \r\n                if (columnIndex === 3 && this.changeTab !== 'open') {\r\n                return {\"wordSpacing\":\"170px\"};\r\n                } else if (columnIndex === 4 && this.changeTab !== 'open') {\r\n                return {\"wordSpacing\":\"180px\"};\r\n                } else if (columnIndex === 6 && this.changeTab !== 'open') {\r\n                return {\"wordSpacing\":\"170px\"};\r\n                }\r\n            },\r\n            newCorp()   {\r\n                this.$router.push('/order/create')\r\n            },\r\n            async exportExcel(){\r\n                let data = '';\r\n                if(this.form.month === '' || this.form.month === '0' ){\r\n                    swal('please select month (except all month)','', 'error')\r\n                }else {\r\n                    // let obj = {\r\n                    //     path    : this.$route.path,\r\n                    //     month   : this.form.month\r\n                    // };\r\n                    \r\n                    let start, end;\r\n                        if(this.form.range_date === null || this.form.range_date === ''){\r\n                            start = '',\r\n                            end   = ''\r\n                        }else {\r\n                            start = this.form.range_date[0],\r\n                            end   = this.form.range_date[1]\r\n                        }\r\n                    let obj = {\r\n                        path            : this.$route.path,\r\n                        month           : this.form.month,\r\n                        start_date      : start,\r\n                        end_date        : end\r\n                    };\r\n\r\n                    data = await this.$store.dispatch(action.EXPORT_ORDER_LIST, obj)\r\n                    let firstD = data.slice(1)\r\n                    let secondD = firstD.slice(0, firstD.length -1)\r\n                    window.open(secondD)\r\n                }\r\n            },\r\n            handlePageChange(page) {\r\n                let start, end;\r\n                if(this.form.range_date === null || this.form.range_date === ''){\r\n                    start = '',\r\n                    end   = ''\r\n                }else {\r\n                    start = this.form.range_date[0],\r\n                    end   = this.form.range_date[1]\r\n                }\r\n                let obj = {\r\n                    page    : page,\r\n                    path    : this.$route.path,\r\n                    enterprise_name  : this.form.enterprise_name,\r\n                    month           : this.form.month,\r\n                    trx_id          : this.form.trx_id,\r\n                    driver_name     : this.form.driver_name,\r\n                    idvendor        : this.form.idvendor,\r\n                    start_date      : start,\r\n                    end_date        : end\r\n                };\r\n                this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                this.currentPage = page;\r\n                this.$store.dispatch( action.LIST_ORDER_CLIENT, obj )\r\n            },\r\n            search(){\r\n                this.$store.dispatch( action.LIST_ORDER_CLIENT, this.input.trim() )\r\n            },\r\n            async getId(id){\r\n                let obj = {\r\n                    id    : id.idorder,\r\n                    path  : this.$route.path\r\n                };\r\n                await this.$store.dispatch(action.ID_ORDER_CLIENT, obj)\r\n                this.$router.push('/detail-order')\r\n            },\r\n            indexMethod(index) {\r\n                return index + this.paginato.fromP;\r\n            },\r\n            searchSquare(){\r\n                let start, end;\r\n                if(this.form.range_date === null || this.form.range_date === ''){\r\n                    start = '',\r\n                    end   = ''\r\n                }else {\r\n                    start = this.form.range_date[0],\r\n                    end   = this.form.range_date[1]\r\n                }\r\n                let obj = {\r\n                    page            : this.currentPage,\r\n                    path            : this.$route.path,\r\n                    enterprise_name  : this.form.enterprise_name,\r\n                    month           : this.form.month,\r\n                    trx_id          : this.form.trx_id,\r\n                    driver_name     : this.form.driver_name,\r\n                    idvendor        : this.form.idvendor,\r\n                    start_date      : start,\r\n                    end_date        : end\r\n                };\r\n                this.$store.dispatch(action.LIST_ORDER_CLIENT, obj)\r\n            },\r\n            tabChange(v) {\r\n                this.$router.push(v)\r\n            },\r\n            imgAlt(event) {\r\n                event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n    .table-box {\r\n        overflow: auto;\r\n    }\r\n    .el-pagination {\r\n        padding-top: 20px;\r\n    }\r\n    .card-base {\r\n        padding: 20px;\r\n    }\r\n    .el-row {\r\n        padding: 0px 10px 5px;\r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n    .el-col {\r\n        border-radius: 5px;\r\n    }\r\n    .el-select {\r\n        width: 100%;\r\n    }\r\n    .drive-acount {\r\n        height: 113px;\r\n        margin-top: 10px;\r\n    }\r\n    @media only screen and (min-width: 1590px) {\r\n        .drive-acount {\r\n            height: 147px;\r\n            margin-top: 10px;\r\n        }\r\n    }\r\n\r\n</style>\r\n\r\n"]}]}