{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/order-client/detail-order.vue?vue&type=template&id=7a4129e2&scoped=true&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/order-client/detail-order.vue","mtime":1640440454000},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1641690456354},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1641690456354}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"page-table scrollable only-y\",\n      attrs: { id: \"affix-container\" },\n    },\n    [\n      _c(\"order-bar\"),\n      _c(\n        \"div\",\n        { staticClass: \"card-base card-shadow--medium bg-white\" },\n        [\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 11 } },\n                [\n                  _c(\n                    \"el-row\",\n                    {\n                      staticClass: \"line margin-top-25\",\n                      attrs: { gutter: 20 },\n                    },\n                    [\n                      _c(\"el-col\", { attrs: { span: 8 } }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"avatar2 align-vertical text-center\" },\n                          [\n                            _c(\"img\", {\n                              staticClass: \"align-vertical-middle\",\n                              attrs: {\n                                src: _vm.order.driver.user.profile_picture,\n                                alt: \"user avatar\",\n                              },\n                              on: { error: _vm.imgAlt },\n                            }),\n                          ]\n                        ),\n                      ]),\n                      _c(\n                        \"el-col\",\n                        {\n                          staticStyle: { \"overflow-wrap\": \"break-word\" },\n                          attrs: { span: 16 },\n                        },\n                        [\n                          _c(\"span\", { staticClass: \"p-name\" }, [\n                            _vm._v(_vm._s(_vm.order.user_fullname)),\n                          ]),\n                          _c(\"span\", { staticClass: \"p\" }, [\n                            _vm._v(_vm._s(_vm.order.user_phonenumber)),\n                          ]),\n                          _c(\"span\", { staticClass: \"p\" }, [\n                            _vm._v(_vm._s(_vm.order.email)),\n                          ]),\n                        ]\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-col\",\n                { attrs: { span: 13 } },\n                [\n                  _c(\n                    \"h3\",\n                    {\n                      staticClass:\n                        \"margin-bottom-1 margin-top-0 margin-left-10\",\n                    },\n                    [_vm._v(\" DETAIL \")]\n                  ),\n                  _c(\n                    \"el-row\",\n                    { attrs: { gutter: 30 } },\n                    [\n                      _c(\"el-col\", { attrs: { span: 8 } }, [\n                        _c(\"dl\", [\n                          _c(\"dt\", [_vm._v(\"TRANSACTION ID\")]),\n                          _c(\"dd\", [_vm._v(_vm._s(_vm.order.trx_id))]),\n                          _c(\"dt\", [_vm._v(\"BOOKING TIME\")]),\n                          _c(\"dd\", [_vm._v(_vm._s(_vm.order.booking_time))]),\n                        ]),\n                      ]),\n                      _c(\"el-col\", { attrs: { span: 8 } }, [\n                        _c(\"dl\", [\n                          _c(\"dt\", [_vm._v(\" TYPE \")]),\n                          _c(\"dd\", [\n                            _vm._v(\n                              _vm._s(\n                                _vm.order.enterprise !== null\n                                  ? _vm.order.enterprise.enterprise_type.name\n                                  : \"\"\n                              )\n                            ),\n                          ]),\n                          _c(\"dt\", [_vm._v(\"PLACE\")]),\n                          _c(\"dd\", [_vm._v(_vm._s(_vm.order.driver.address))]),\n                        ]),\n                      ]),\n                      _c(\"el-col\", { attrs: { span: 8 } }, [\n                        _c(\"dl\", [\n                          _c(\"dt\", [_vm._v(\"VEHICLE\")]),\n                          _c(\"dd\", [\n                            _vm._v(\" \" + _vm._s(_vm.order.vehicle_type) + \" \"),\n                          ]),\n                          _c(\"dt\", [_vm._v(\"POLICE NO.\")]),\n                          _c(\"dd\", [\n                            _vm._v(\n                              \" \" +\n                                _vm._s(_vm.order.client_vehicle_license) +\n                                \" \"\n                            ),\n                          ]),\n                        ]),\n                      ]),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\"hr\"),\n          _c(\n            \"el-row\",\n            { staticClass: \"margin-top-25\" },\n            [\n              _c(\"el-col\", { attrs: { span: 11 } }, [\n                _c(\"h3\", [_vm._v(\"TASK\")]),\n              ]),\n              _c(\"el-col\", { staticClass: \"line\", attrs: { span: 8 } }, [\n                _c(\"dl\", [\n                  _c(\"dt\", [_vm._v(\"MESSAGE\")]),\n                  _c(\"dd\", { staticStyle: { \"overflow-wrap\": \"break-word\" } }, [\n                    _vm._v(_vm._s(\"\" + _vm.order.message)),\n                  ]),\n                ]),\n              ]),\n              _c(\"el-col\", { staticClass: \"text-center\", attrs: { span: 5 } }, [\n                _c(\n                  \"span\",\n                  { staticClass: \"p font-weight-600 margin-bottom-10\" },\n                  [_vm._v(\"STATUS\")]\n                ),\n                _vm.status === \"ORDER_INPROGRESS\"\n                  ? _c(\"div\", [\n                      _c(\"img\", {\n                        staticStyle: { width: \"20%\" },\n                        attrs: {\n                          src: require(\"../../../assets/oper_asset/progress.png\"),\n                          alt: \"\",\n                        },\n                      }),\n                      _c(\"span\", { staticClass: \"p margin-top-10\" }, [\n                        _vm._v(\"IN PROGRESS\"),\n                      ]),\n                    ])\n                  : _c(\"div\", [\n                      _c(\"img\", {\n                        staticStyle: { width: \"20%\" },\n                        attrs: {\n                          src: require(\"../../../assets/oper_asset/completed.png\"),\n                          alt: \"\",\n                        },\n                      }),\n                      _c(\"span\", { staticClass: \"p margin-top-10\" }, [\n                        _vm._v(\"COMPLETED\"),\n                      ]),\n                    ]),\n              ]),\n            ],\n            1\n          ),\n          _c(\n            \"el-row\",\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 24 } },\n                [\n                  _c(\n                    \"el-table\",\n                    {\n                      staticStyle: { width: \"100%\" },\n                      attrs: { data: _vm.order.order_tasks, stripe: \"\" },\n                      on: { \"row-click\": _vm.getId },\n                    },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: { prop: \"name\", label: \"TASK NAME\" },\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"description\",\n                          label: \"TASK DESCRIPTION\",\n                        },\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { prop: \"last_update_status\", label: \"TIME\" },\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          align: \"center\",\n                          width: \"100\",\n                          label: \"PHOTO\",\n                        },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function (scope) {\n                              return [\n                                _c(\"img\", {\n                                  staticStyle: {\n                                    width: \"35px\",\n                                    height: \"35px\",\n                                    \"border-radius\": \"50%\",\n                                  },\n                                  attrs: { src: scope.row.attachment_url },\n                                  on: { error: _vm.imgAlt },\n                                }),\n                              ]\n                            },\n                          },\n                        ]),\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { align: \"center\", label: \"STATUS\" },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function (scope) {\n                              return [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(\n                                      scope.row.order_task_status === 0\n                                        ? \"NOT STARTED\"\n                                        : scope.row.order_task_status === 1\n                                        ? \"IN PROGRESS\"\n                                        : scope.row.order_task_status === 2\n                                        ? \"COMPLETED\"\n                                        : \"SKIPPED\"\n                                    ) +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            },\n                          },\n                        ]),\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                {\n                  staticStyle: { \"margin-top\": \"20px\" },\n                  attrs: {\n                    span: {\n                      span: _vm.button.spanVisible,\n                      offset: _vm.button.cancelVisible,\n                    },\n                  },\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"info\", size: \"small\" },\n                      on: { click: _vm.backLCorp },\n                    },\n                    [\n                      _c(\n                        \"span\",\n                        { staticClass: \"padding-left-10 padding-right-10\" },\n                        [\n                          _vm._v(\n                            \"\\n                        Back\\n                    \"\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                  _vm.buttonCancel\n                    ? _c(\n                        \"el-button\",\n                        {\n                          directives: [\n                            {\n                              name: \"loading\",\n                              rawName: \"v-loading.fullscreen.lock\",\n                              value: _vm.loading,\n                              expression: \"loading\",\n                              modifiers: { fullscreen: true, lock: true },\n                            },\n                          ],\n                          attrs: { size: \"small\", type: \"danger\" },\n                          on: { click: _vm.cancelOrder },\n                        },\n                        [\n                          _c(\n                            \"span\",\n                            { staticClass: \"padding-left-10 padding-right-10\" },\n                            [\n                              _vm._v(\n                                \"\\n                        Cancel Order\\n                    \"\n                              ),\n                            ]\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: { visible: _vm.dialogVisible, width: \"70%\" },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.dialogVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { span: 8 } },\n                [\n                  !_vm.map.taskphoto == null || !_vm.map.taskphoto == \"\"\n                    ? _c(\n                        \"div\",\n                        [\n                          _c(\n                            \"el-card\",\n                            {\n                              staticClass: \"middle\",\n                              staticStyle: { width: \"100%\", height: \"300px\" },\n                              attrs: { \"body-style\": { padding: \"0px\" } },\n                            },\n                            [\n                              _c(\"div\", { staticClass: \"thumbnail\" }, [\n                                _c(\"img\", {\n                                  staticClass: \"potrait\",\n                                  attrs: { src: _vm.map.taskphoto },\n                                }),\n                              ]),\n                            ]\n                          ),\n                        ],\n                        1\n                      )\n                    : _c(\n                        \"div\",\n                        [\n                          _c(\n                            \"el-card\",\n                            {\n                              staticClass: \"middle\",\n                              staticStyle: { width: \"100%\", height: \"300px\" },\n                              attrs: { \"body-style\": { padding: \"0px\" } },\n                            },\n                            [_c(\"h3\", [_vm._v(\"User has not taken a picture\")])]\n                          ),\n                        ],\n                        1\n                      ),\n                  _c(\n                    \"el-col\",\n                    {\n                      staticStyle: { \"margin-bottom\": \"5px\" },\n                      attrs: { span: 24 },\n                    },\n                    [\n                      _c(\n                        \"h3\",\n                        [\n                          _c(\n                            \"el-col\",\n                            {\n                              staticStyle: { \"margin-bottom\": \"10px\" },\n                              attrs: { span: 16 },\n                            },\n                            [_vm._v(\"Task Name\")]\n                          ),\n                        ],\n                        1\n                      ),\n                      _c(\"el-col\", { attrs: { span: 20 } }, [\n                        _vm._v(_vm._s(_vm.map.taskname)),\n                      ]),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    {\n                      staticStyle: { \"margin-bottom\": \"5px\" },\n                      attrs: { span: 24 },\n                    },\n                    [\n                      _c(\n                        \"h3\",\n                        [\n                          _c(\n                            \"el-col\",\n                            {\n                              staticStyle: { \"margin-bottom\": \"10px\" },\n                              attrs: { span: 16 },\n                            },\n                            [_vm._v(\"Last Update\")]\n                          ),\n                        ],\n                        1\n                      ),\n                      _c(\"el-col\", { attrs: { span: 20 } }, [\n                        _vm._v(_vm._s(_vm.map.lastupdate)),\n                      ]),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 24 } },\n                    [\n                      _c(\n                        \"h3\",\n                        [\n                          _c(\n                            \"el-col\",\n                            {\n                              staticStyle: { \"margin-bottom\": \"10px\" },\n                              attrs: { span: 16 },\n                            },\n                            [_vm._v(\"Description\")]\n                          ),\n                        ],\n                        1\n                      ),\n                      _c(\"el-col\", { attrs: { span: 20 } }, [\n                        _c(\"span\", { staticClass: \"word-wrap\" }, [\n                          _vm._v(_vm._s(_vm.map.description)),\n                        ]),\n                      ]),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\"el-col\", { attrs: { span: 16 } }, [\n                _vm.location\n                  ? _c(\n                      \"div\",\n                      [\n                        _c(\n                          \"el-card\",\n                          {\n                            staticStyle: { width: \"100%\", height: \"500px\" },\n                            attrs: { \"body-style\": { padding: \"0px\" } },\n                          },\n                          [\n                            _c(\n                              \"gmap-map\",\n                              {\n                                ref: \"map\",\n                                staticStyle: { width: \"100%\", height: \"500px\" },\n                                attrs: {\n                                  center: _vm.location,\n                                  zoom: 14,\n                                  options: { gestureHandling: \"cooperative\" },\n                                  \"map-type-id\": \"roadmap\",\n                                },\n                              },\n                              [\n                                _c(\"GmapMarker\", {\n                                  attrs: { position: _vm.location, label: \"S\" },\n                                }),\n                              ],\n                              1\n                            ),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    )\n                  : _c(\n                      \"div\",\n                      [\n                        _c(\n                          \"el-card\",\n                          {\n                            staticClass: \"center\",\n                            staticStyle: { width: \"100%\", height: \"500px\" },\n                            attrs: { \"body-style\": { padding: \"0px\" } },\n                          },\n                          [\n                            _c(\"h1\", [\n                              _vm._v(\"User has not completed the task\"),\n                            ]),\n                          ]\n                        ),\n                      ],\n                      1\n                    ),\n              ]),\n            ],\n            1\n          ),\n          _c(\n            \"el-row\",\n            { staticStyle: { \"margin-top\": \"10px\" }, attrs: { gutter: 20 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { offset: 10 } },\n                [\n                  _c(\n                    \"el-checkbox\",\n                    { attrs: { checked: _vm.map.required, disabled: \"\" } },\n                    [_vm._v(\"Is Required\")]\n                  ),\n                  _c(\n                    \"el-checkbox\",\n                    { attrs: { checked: _vm.map.photo, disabled: \"\" } },\n                    [_vm._v(\"Is Required Photo\")]\n                  ),\n                  _c(\n                    \"el-checkbox\",\n                    { attrs: { checked: _vm.map.inspector, disabled: \"\" } },\n                    [_vm._v(\"Is Required Inspector Validation\")]\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}