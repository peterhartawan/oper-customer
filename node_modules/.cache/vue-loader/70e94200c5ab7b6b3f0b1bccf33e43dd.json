{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\vendor\\edit-admin-vendor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\vendor\\edit-admin-vendor.vue","mtime":1647032353883},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport router from \"../../../router\";\r\nimport moment from \"moment\";\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from '../../../store/mutation-types';\r\nimport Swal from \"sweetalert2\";\r\nexport default {\r\n    name: \"EditAdminVendor\",\r\n    data() {\r\n        return {\r\n            payload: {\r\n                idadmin: \"\",\r\n                reason_suspend: null,\r\n                idvendor: \"\",\r\n\r\n            },\r\n            form: {\r\n                idvendor: \"\",\r\n                idadmin: \"\",\r\n                admin_name: \"\",\r\n                admin_phonenumber: \"\",\r\n                admin_email: \"\",\r\n                status: \"\",\r\n            },\r\n            rules: {\r\n                admin_name: [{\r\n                    required: true,\r\n                    message: \"Admin Name is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                admin_phonenumber: [{\r\n                    required: true,\r\n                    message: \"Admin Mobile Number is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                admin_email: [{\r\n                    required: true,\r\n                    message: \"Admin Email is required!\",\r\n                    trigger: \"blur\"\r\n                }]\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.form.idvendor = this.vendor.idvendor;\r\n        this.form.idadmin = this.adminVendor.id;\r\n        this.form.admin_name = this.adminVendor.name;\r\n        this.form.status = this.adminVendor.status;\r\n        this.form.admin_phonenumber = this.adminVendor.phonenumber;\r\n        this.form.admin_email = this.adminVendor.email;\r\n        this.payload.idadmin = this.adminVendor.id;\r\n        this.payload.idvendor = this.vendor.idvendor;\r\n    },\r\n    methods: {\r\n        onSubmit() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            this.$store.dispatch(action.UPDATE_DATA_ADMIN, this.form);\r\n        },\r\n        Cancel() {\r\n            this.$router.push({\r\n                path: \"/detail-vendor/\" + this.vendor.idvendor\r\n            });\r\n        },\r\n        isNumber(evt) {\r\n            evt = evt ? evt : window.event;\r\n            var charCode = evt.which ? evt.which : evt.keyCode;\r\n            if (\r\n                charCode > 31 &&\r\n                (charCode < 48 || charCode > 57)\r\n            ) {\r\n                evt.preventDefault();\r\n            } else {\r\n                return true;\r\n            }\r\n        },\r\n        async suspend() {\r\n            const {\r\n                value: reason\r\n            } = await Swal.fire({\r\n                title: 'Enter the reason of suspending',\r\n                input: 'text',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, suspend it!',\r\n                inputValidator: (value) => {\r\n                    if (!value) {\r\n                        return 'You need to write something!'\r\n                    }\r\n                }\r\n            })\r\n            if (reason) {\r\n                this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                this.payload.reason_suspend = reason;\r\n                this.$store.dispatch(action.SUSPEND_ADMIN, this.payload)\r\n            }\r\n        },\r\n        activeButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, activate it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.ACTIVATE_ADMIN_VENDOR, this.payload);\r\n                }\r\n            });\r\n        },\r\n        deleteB() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                    this.$store.dispatch(action.DELETE_ADMIN_VENDOR, this.payload);\r\n                }\r\n            });\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            button: getter.GET_BUTTON,\r\n            vendor: getter.VENDOR,\r\n            adminVendor: getter.GET_ADMIN_DATA_VEND\r\n        })\r\n    }\r\n};\r\n",{"version":3,"sources":["edit-admin-vendor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-admin-vendor.vue","sourceRoot":"src/views/pages/vendor","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\r\n            <el-row :gutter=\"20\">\r\n                <el-col>Admin</el-col>\r\n            </el-row>\r\n            <el-row :gutter=\"20\">\r\n                <el-col :lg=\"8\">\r\n                    <el-form-item prop=\"admin_name\">\r\n                        <el-input placeholder=\"Admin Name\" v-model=\"form.admin_name\"></el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n                <el-col :lg=\"8\">\r\n                    <el-form-item prop=\"admin_phonenumber\">\r\n                        <el-input v-on:keypress.native=\"isNumber\" placeholder=\"Admin Mobile Phone\" v-model=\"form.admin_phonenumber\">\r\n                        </el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n                <el-col :lg=\"8\">\r\n                    <el-form-item prop=\"admin_email\">\r\n                        <el-input placeholder=\"Admin Email\" v-model=\"form.admin_email\"></el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n            </el-row>\r\n        </el-form>\r\n        <div style=\"margin: 50px 0;\"></div>\r\n        <el-row>\r\n            <el-col :lg=\"2\">\r\n                <el-button :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\" index=\"/vendor\">Save</el-button>\r\n            </el-col>\r\n            <el-col :offset=\"1\" :lg=\"2\">\r\n                <el-button @click=\"Cancel()\" type=\"succes\" index=\"/vendor\">Cancel</el-button>\r\n            </el-col>\r\n            <div v-if=\"form.status===1\">\r\n                <el-col :offset=\"16\" :lg=\"2\">\r\n                    <el-button :loading=\"button\" type=\"danger\" @click=\"suspend\">Suspend</el-button>\r\n                </el-col>\r\n            </div>\r\n            <div v-else-if=\"form.status===3\">\r\n                <el-col :offset=\"13\" :lg=\"3\">\r\n                    <el-button :loading=\"button\" @click=\"deleteB\" type=\"danger\">Delete</el-button>\r\n                </el-col>\r\n                <el-col :lg=\"3\">\r\n                    <el-button :loading=\"button\" @click=\"activeButton\" type=\"primary\">Active</el-button>\r\n                </el-col>\r\n            </div>\r\n        </el-row>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.el-row {\r\n    margin-bottom: 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n</style>\r\n\r\n<script>\r\nimport router from \"../../../router\";\r\nimport moment from \"moment\";\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from '../../../store/mutation-types';\r\nimport Swal from \"sweetalert2\";\r\nexport default {\r\n    name: \"EditAdminVendor\",\r\n    data() {\r\n        return {\r\n            payload: {\r\n                idadmin: \"\",\r\n                reason_suspend: null,\r\n                idvendor: \"\",\r\n\r\n            },\r\n            form: {\r\n                idvendor: \"\",\r\n                idadmin: \"\",\r\n                admin_name: \"\",\r\n                admin_phonenumber: \"\",\r\n                admin_email: \"\",\r\n                status: \"\",\r\n            },\r\n            rules: {\r\n                admin_name: [{\r\n                    required: true,\r\n                    message: \"Admin Name is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                admin_phonenumber: [{\r\n                    required: true,\r\n                    message: \"Admin Mobile Number is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                admin_email: [{\r\n                    required: true,\r\n                    message: \"Admin Email is required!\",\r\n                    trigger: \"blur\"\r\n                }]\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.form.idvendor = this.vendor.idvendor;\r\n        this.form.idadmin = this.adminVendor.id;\r\n        this.form.admin_name = this.adminVendor.name;\r\n        this.form.status = this.adminVendor.status;\r\n        this.form.admin_phonenumber = this.adminVendor.phonenumber;\r\n        this.form.admin_email = this.adminVendor.email;\r\n        this.payload.idadmin = this.adminVendor.id;\r\n        this.payload.idvendor = this.vendor.idvendor;\r\n    },\r\n    methods: {\r\n        onSubmit() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            this.$store.dispatch(action.UPDATE_DATA_ADMIN, this.form);\r\n        },\r\n        Cancel() {\r\n            this.$router.push({\r\n                path: \"/detail-vendor/\" + this.vendor.idvendor\r\n            });\r\n        },\r\n        isNumber(evt) {\r\n            evt = evt ? evt : window.event;\r\n            var charCode = evt.which ? evt.which : evt.keyCode;\r\n            if (\r\n                charCode > 31 &&\r\n                (charCode < 48 || charCode > 57)\r\n            ) {\r\n                evt.preventDefault();\r\n            } else {\r\n                return true;\r\n            }\r\n        },\r\n        async suspend() {\r\n            const {\r\n                value: reason\r\n            } = await Swal.fire({\r\n                title: 'Enter the reason of suspending',\r\n                input: 'text',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, suspend it!',\r\n                inputValidator: (value) => {\r\n                    if (!value) {\r\n                        return 'You need to write something!'\r\n                    }\r\n                }\r\n            })\r\n            if (reason) {\r\n                this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                this.payload.reason_suspend = reason;\r\n                this.$store.dispatch(action.SUSPEND_ADMIN, this.payload)\r\n            }\r\n        },\r\n        activeButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, activate it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.ACTIVATE_ADMIN_VENDOR, this.payload);\r\n                }\r\n            });\r\n        },\r\n        deleteB() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                    this.$store.dispatch(action.DELETE_ADMIN_VENDOR, this.payload);\r\n                }\r\n            });\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            button: getter.GET_BUTTON,\r\n            vendor: getter.VENDOR,\r\n            adminVendor: getter.GET_ADMIN_DATA_VEND\r\n        })\r\n    }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.card-base {\r\n  padding: 20px;\r\n}\r\n\r\n.el-row {\r\n  // display: flex;\r\n  // align-items: center;\r\n  // justify-content: center;\r\n  padding: 0px 10px;\r\n  margin-bottom: 20px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.el-col {\r\n  border-radius: 5px;\r\n}\r\n\r\n.el-select {\r\n  width: 100%;\r\n}\r\n\r\n.thumbnail {\r\n  position: relative;\r\n  width: 300px;\r\n  height: 300px;\r\n  overflow: hidden;\r\n}\r\n\r\n.thumbnail img {\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  height: 100%;\r\n  width: auto;\r\n  -webkit-transform: translate(-50%, -50%);\r\n  -ms-transform: translate(-50%, -50%);\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.thumbnail img.portrait {\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\na {\r\n  border-style: dotted;\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  height: 150px;\r\n}\r\n\r\ntd {\r\n  padding: 10px;\r\n}\r\n</style>\r\n"]}]}