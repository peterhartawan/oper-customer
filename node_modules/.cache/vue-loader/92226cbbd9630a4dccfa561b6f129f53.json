{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/tasktemplate/new-template-task.vue?vue&type=template&id=4337b840&scoped=true&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/tasktemplate/new-template-task.vue","mtime":1628175042630},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"vue-scroll\", { staticClass: \"page-typography\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"card-base card-shadow--medium bg-white\" },\n      [\n        _c(\n          \"el-form\",\n          { ref: \"form\", attrs: { rules: _vm.rules, model: _vm.form } },\n          [\n            _c(\n              \"el-row\",\n              { attrs: { gutter: 20 } },\n              [\n                _c(\"el-col\", { attrs: { span: 24 } }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"grid-content\" },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { prop: \"name\" } },\n                        [\n                          _c(\"el-input\", {\n                            staticStyle: { width: \"70%\" },\n                            attrs: { placeholder: \"Template Name\" },\n                            model: {\n                              value: _vm.form.name,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"name\", $$v)\n                              },\n                              expression: \"form.name\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ])\n              ],\n              1\n            ),\n            _c(\n              \"el-row\",\n              { attrs: { gutter: 20 } },\n              [\n                _c(\"el-col\", { attrs: { span: 24 } }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"grid-content\" },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { prop: \"description\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              type: \"textarea\",\n                              placeholder: \"Template Description\",\n                              autosize: { minRows: 5, maxRows: 7 }\n                            },\n                            model: {\n                              value: _vm.form.description,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"description\", $$v)\n                              },\n                              expression: \"form.description\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ])\n              ],\n              1\n            ),\n            _c(\n              \"el-row\",\n              [\n                _c(\n                  \"el-col\",\n                  { attrs: { span: 24 } },\n                  [\n                    _c(\n                      \"el-col\",\n                      [\n                        _c(\"span\", [_vm._v(\"Task\")]),\n                        _c(\"el-button\", {\n                          staticClass: \"el-icon-plus\",\n                          staticStyle: { \"margin-left\": \"10px\" },\n                          attrs: { type: \"success\", size: \"mini\", circle: \"\" },\n                          on: { click: _vm.addButton }\n                        }),\n                        _c(\"hr\")\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._l(_vm.form.tasks, function(domain, index) {\n              return _c(\n                \"div\",\n                { key: domain.key },\n                [\n                  _c(\n                    \"el-row\",\n                    { attrs: { gutter: 20 } },\n                    [\n                      _c(\"el-col\", { attrs: { span: 24 } }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"grid-content\" },\n                          [\n                            _c(\n                              \"el-form-item\",\n                              {\n                                attrs: {\n                                  prop: \"tasks.\" + index + \".name\",\n                                  rules: {\n                                    required: true,\n                                    message: \"Task Name can not be null\",\n                                    trigger: \"blur\"\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"el-input\", {\n                                  attrs: { placeholder: \"Task Name\" },\n                                  model: {\n                                    value: domain.name,\n                                    callback: function($$v) {\n                                      _vm.$set(domain, \"name\", $$v)\n                                    },\n                                    expression: \"domain.name\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ])\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-row\",\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 24 } },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: {\n                                prop: \"tasks.\" + index + \".task_description\",\n                                rules: {\n                                  required: true,\n                                  message: \"Task Description can not be null\",\n                                  trigger: \"blur\"\n                                }\n                              }\n                            },\n                            [\n                              _c(\"el-input\", {\n                                attrs: {\n                                  type: \"textarea\",\n                                  placeholder: \"Task Description\",\n                                  autosize: { minRows: 5, maxRows: 7 }\n                                },\n                                model: {\n                                  value: domain.task_description,\n                                  callback: function($$v) {\n                                    _vm.$set(domain, \"task_description\", $$v)\n                                  },\n                                  expression: \"domain.task_description\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  !_vm.buttonStatus\n                    ? _c(\n                        \"el-row\",\n                        { attrs: { gutter: 20 } },\n                        [\n                          _c(\n                            \"el-col\",\n                            { attrs: { span: 24 } },\n                            [\n                              _c(\n                                \"el-form-item\",\n                                {\n                                  attrs: {\n                                    prop: \"tasks.\" + index + \".location_name\"\n                                  }\n                                },\n                                [\n                                  _c(\"el-input\", {\n                                    staticClass: \"sixsix\",\n                                    attrs: {\n                                      disabled: \"\",\n                                      type: \"textarea\",\n                                      placeholder: \"Location Name\",\n                                      autosize: { minRows: 1, maxRows: 3 }\n                                    },\n                                    model: {\n                                      value: domain.location_name,\n                                      callback: function($$v) {\n                                        _vm.$set(domain, \"location_name\", $$v)\n                                      },\n                                      expression: \"domain.location_name\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\"el-col\", { attrs: { span: 11 } }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"grid-content\" },\n                              [\n                                _c(\n                                  \"el-form-item\",\n                                  {\n                                    attrs: { prop: \"tasks.\" + index + \".lat\" }\n                                  },\n                                  [\n                                    _c(\"el-input\", {\n                                      staticClass: \"sixsix\",\n                                      attrs: {\n                                        placeholder: \"Latitude\",\n                                        disabled: \"\"\n                                      },\n                                      model: {\n                                        value: domain.lat,\n                                        callback: function($$v) {\n                                          _vm.$set(domain, \"lat\", $$v)\n                                        },\n                                        expression: \"domain.lat\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ]),\n                          _c(\n                            \"el-col\",\n                            { attrs: { span: 11 } },\n                            [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"tasks.\" + index + \".long\" } },\n                                [\n                                  _c(\"el-input\", {\n                                    staticClass: \"sixsix\",\n                                    attrs: {\n                                      disabled: \"\",\n                                      placeholder: \"Longitude\"\n                                    },\n                                    model: {\n                                      value: domain.long,\n                                      callback: function($$v) {\n                                        _vm.$set(domain, \"long\", $$v)\n                                      },\n                                      expression: \"domain.long\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-col\",\n                            { attrs: { span: 2 } },\n                            [\n                              _c(\"el-button\", {\n                                attrs: {\n                                  type: \"primary\",\n                                  icon: \"el-icon-location\",\n                                  circle: \"\"\n                                },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.dialogTrack(domain)\n                                  }\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _c(\n                    \"el-row\",\n                    { attrs: { gutter: 20 } },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 6 } },\n                        [\n                          _c(\"el-checkbox\", {\n                            attrs: { label: \"is Required\" },\n                            model: {\n                              value: domain.is_required,\n                              callback: function($$v) {\n                                _vm.$set(domain, \"is_required\", $$v)\n                              },\n                              expression: \"domain.is_required\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 6 } },\n                        [\n                          _c(\"el-checkbox\", {\n                            attrs: { label: \"need Foto\" },\n                            model: {\n                              value: domain.is_need_photo,\n                              callback: function($$v) {\n                                _vm.$set(domain, \"is_need_photo\", $$v)\n                              },\n                              expression: \"domain.is_need_photo\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 6 } },\n                        [\n                          _vm.buttonStatus\n                            ? _c(\"el-checkbox\", {\n                                attrs: { label: \"need Validation\" },\n                                model: {\n                                  value: domain.is_need_inspector_validation,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      domain,\n                                      \"is_need_inspector_validation\",\n                                      $$v\n                                    )\n                                  },\n                                  expression:\n                                    \"domain.is_need_inspector_validation\"\n                                }\n                              })\n                            : _vm._e()\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 6 } },\n                        [\n                          _c(\"el-button\", {\n                            staticClass: \"el-icon-minus\",\n                            staticStyle: {\n                              \"margin-bottom\": \"11px\",\n                              \"margin-left\": \"20px\"\n                            },\n                            attrs: { type: \"danger\", size: \"mini\", circle: \"\" },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.removeDomain(domain)\n                              }\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\"hr\")\n                ],\n                1\n              )\n            }),\n            _c(\n              \"el-row\",\n              [\n                _c(\n                  \"el-col\",\n                  {\n                    staticStyle: {\n                      display: \"flex\",\n                      \"justify-content\": \"flex-end\"\n                    },\n                    attrs: { lg: { offset: 18, span: 6 } }\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      { staticClass: \"grid-content\" },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          [\n                            _c(\n                              \"el-button\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"loading\",\n                                    rawName: \"v-loading.fullscreen.lock\",\n                                    value: _vm.buttonStatuz,\n                                    expression: \"buttonStatuz\",\n                                    modifiers: { fullscreen: true, lock: true }\n                                  }\n                                ],\n                                attrs: { type: \"success\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.onSubmit(\"form\")\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Create\")]\n                            ),\n                            _c(\"el-button\", { on: { click: _vm.isCancle } }, [\n                              _vm._v(\"Cancel\")\n                            ])\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                )\n              ],\n              1\n            )\n          ],\n          2\n        ),\n        _c(\n          \"el-dialog\",\n          {\n            attrs: {\n              visible: _vm.dialogV,\n              \"before-close\": _vm.handleClose,\n              width: \"70%\"\n            },\n            on: {\n              \"update:visible\": function($event) {\n                _vm.dialogV = $event\n              }\n            }\n          },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"card-base card-shadow--medium\" },\n              [\n                _c(\n                  \"gmap-map\",\n                  {\n                    ref: \"map\",\n                    staticStyle: { width: \"100%\", height: \"500px\" },\n                    attrs: {\n                      center: _vm.center,\n                      zoom: 12,\n                      options: { gestureHandling: \"cooperative\" },\n                      \"map-type-id\": \"roadmap\"\n                    }\n                  },\n                  [\n                    _c(\"GmapMarker\", {\n                      attrs: {\n                        draggable: true,\n                        position: _vm.markers,\n                        label: \"S\"\n                      },\n                      on: { drag: _vm.updateCoordinates }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-button\",\n              { staticClass: \"mt-10\", on: { click: _vm.closeDialog } },\n              [_vm._v(\"Save\")]\n            )\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}