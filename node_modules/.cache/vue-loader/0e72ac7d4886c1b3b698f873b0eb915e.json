{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\src\\views\\pages\\enterprise\\list-driver-enterprise.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\src\\views\\pages\\enterprise\\list-driver-enterprise.vue","mtime":1644413760545},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Affix from \"@/components/Affix\";\r\nimport { mapGetters } from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from \"../../../store/mutation-types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  name: \"ListDriverEnterprise\",\r\n  data() {\r\n    return {\r\n      currentPage: 1,\r\n      input: \"\",\r\n      affixEnabled: true,\r\n      indexT: 1,\r\n      vendorId: null,\r\n      input4: \"\",\r\n      status: 1,\r\n      spanPIN: 8,\r\n      form: {\r\n        name: \"\",\r\n        status: \"\",\r\n        nik: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        driver_type: \"\",\r\n        gender: \"\",\r\n        address: \"\",\r\n        birthdate: \"\",\r\n        photo: \"\",\r\n        id: \"\",\r\n        first_login: \"\",\r\n      },\r\n      payload: {\r\n        reason_suspend: \"\",\r\n        forenterprise: 1,\r\n        users_id: null,\r\n        iddriver: \"\",\r\n        identerprise: \"\",\r\n      },\r\n      select: [\r\n        {\r\n          name: \"ACTIVE\",\r\n          status: 1,\r\n        },\r\n        {\r\n          name: \"INACTIVE\",\r\n          status: 2,\r\n        },\r\n        {\r\n          name: \"SUSPENDED\",\r\n          status: 3,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  components: {\r\n    Affix,\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      listData: getter.GET_LIST_DRIVER,\r\n      paginate: getter.GET_PAGINATE_DRIVER,\r\n      totalDriver: getter.GET_DRIVER_TOTAL,\r\n      dropDown: getter.GET_DROPDOWN_DRIVER,\r\n      driverAcc: getter.GET_TOTAL_ACCOUNT_DRIVER,\r\n      enterprise: getter.ENTERPRISE,\r\n      loading: getter.GET_BUTTON,\r\n      totalEmployee: getter.GET_ACCOUNT_EMPLOYEE,\r\n      buttonDelete: getter.GET_BUTTON_DELETE,\r\n      buttonResendPIN: getter.GET_BUTTON_RESEND_PIN,\r\n      buttonActive: getter.GET_BUTTON_ACTIVE,\r\n      buttonSuspend: getter.GET_BUTTON_SUSPEND,\r\n      buttonEdit: getter.GET_BUTTON_EDIT,\r\n    }),\r\n    paginator() {\r\n      return this.paginate;\r\n    },\r\n    indexTam() {\r\n      return this.indexT;\r\n    },\r\n    forTotal() {\r\n      if (this.listData) {\r\n        return this.totalDriver;\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    await this.$store.dispatch(action.TOTAL_ACCOUNT_DRIVER);\r\n    this.$store.commit(mutation.BUTTON_STATUS, false);\r\n    await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\r\n      page: this.currentPage,\r\n      q: this.input4,\r\n      status: this.status,\r\n      identerprise: this.enterprise.identerprise,\r\n    });\r\n    this.firstData();\r\n  },\r\n\r\n  methods: {\r\n    async searchChange(v) {\r\n      let trimName = this.input4.trim();\r\n      if (trimName.length > 0) {\r\n        this.$store.commit(mutation.BUTTON_STATUS, true);\r\n        await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\r\n          page: 1,\r\n          typedispatcher: this.type,\r\n          q: trimName,\r\n          status: this.status,\r\n          identerprise: this.enterprise.identerprise,\r\n        });\r\n        this.firstData();\r\n      }\r\n    },\r\n    async handlePageChange(page) {\r\n      this.currentPage = page;\r\n      await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\r\n        page: this.currentPage,\r\n        q: this.input4,\r\n        status: this.status,\r\n        identerprise: this.enterprise.identerprise,\r\n      });\r\n      this.firstData();\r\n    },\r\n    Create() {\r\n      this.$store.commit(mutation.BUTTON_STATUS, false);\r\n      this.$router.push({\r\n        name: \"assignee-driver\",\r\n      });\r\n    },\r\n    async filterStatus(status) {\r\n      this.$store.commit(mutation.BUTTON_STATUS, true);\r\n      this.status = status;\r\n      await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\r\n        page: 1,\r\n        q: this.input4,\r\n        status: this.status,\r\n        identerprise: this.enterprise.identerprise,\r\n      });\r\n      this.firstData();\r\n    },\r\n    openDialog(data) {\r\n      this.form.name = data.name;\r\n      this.form.status =\r\n        data.status === 1\r\n          ? \"ACTIVE\"\r\n          : data.status === 2\r\n          ? \"INACTIVE\"\r\n          : \"SUSPENDED\";\r\n      this.form.nik = data.nik;\r\n      this.form.phone = data.phonenumber;\r\n      this.form.photo = data.profile_picture;\r\n      this.form.email = data.email;\r\n      this.form.driver_type = data.drivertype.name;\r\n      this.form.gender = data.gender === 1 ? \"Male\" : \"Female\";\r\n      this.form.address = data.address;\r\n      this.form.birthdate = data.birthdate;\r\n      this.form.id = data.id;\r\n      this.payload.iddriver = data.iddriver;\r\n      this.form.first_login = data.is_first_login;\r\n      this.form.first_login === 1 ? (this.spanPIN = 10) : (this.spanPIN = 8);\r\n    },\r\n    getId(id) {\r\n      this.$store.dispatch(action.DATA_ID_DRIVER, id.users_id);\r\n    },\r\n    imgAlt(event) {\r\n      event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\r\n    },\r\n    resendPIN() {\r\n      let obj = {\r\n        pin_type: \"/driver/resend-pin\",\r\n        id: this.form.id,\r\n      };\r\n      this.$store.commit(mutation.SET_RESEND_PIN_BUTTON, true);\r\n      this.$store.dispatch(action.RESEND_PIN, obj);\r\n    },\r\n    editButton() {\r\n      this.$store.commit(mutation.BUTTON_STATUS, false);\r\n      this.$store.dispatch(action.EDIT_DRIVER_ENTERPRISE, this.form.id);\r\n    },\r\n    async deleteB() {\r\n      await Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payload.users_id = this.form.id;\r\n          this.$store.commit(mutation.SET_BUTTON_DELETE, true);\r\n          this.$store.commit(mutation.BUTTON_STATUS, true);\r\n          this.$store.dispatch(action.DELETE_DRIVER, this.payload);\r\n        }\r\n        this.firstData();\r\n      });\r\n    },\r\n    async activeButton() {\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, activate it!\",\r\n      }).then(async (result) => {\r\n        if (result.value) {\r\n          this.payload.users_id = this.form.id;\r\n          this.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\r\n          this.$store.commit(mutation.BUTTON_STATUS, true);\r\n          await this.$store.dispatch(action.ACTIVATE_DRIVER, this.payload);\r\n        }\r\n        this.firstData();\r\n      });\r\n    },\r\n    async suspendButton() {\r\n      const { value: reason } = await Swal.fire({\r\n        title: \"Enter the reason of suspending\",\r\n        input: \"text\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, suspend it!\",\r\n        inputValidator: (value) => {\r\n          if (!value) {\r\n            return \"You need to write something!\";\r\n          }\r\n        },\r\n      });\r\n      if (reason) {\r\n        this.$store.commit(mutation.SET_BUTTON_SUSPEND, true);\r\n        this.$store.commit(mutation.BUTTON_STATUS, true);\r\n        this.payload.reason_suspend = reason;\r\n        this.payload.users_id = this.form.id;\r\n        await this.$store.dispatch(action.SUSPEND_DRIVER, this.payload);\r\n      }\r\n      this.firstData();\r\n    },\r\n    Back() {\r\n      this.$router.replace({\r\n        path: \"/detail-enterprise/\" + this.enterprise.identerprise,\r\n      });\r\n    },\r\n    firstData() {\r\n      if (this.listData.length > 0) {\r\n        let data = this.listData[0];\r\n        this.form.name = data.name;\r\n        this.form.status =\r\n          data.status === 1\r\n            ? \"ACTIVE\"\r\n            : data.status === 2\r\n            ? \"INACTIVE\"\r\n            : \"SUSPENDED\";\r\n        this.form.nik = data.nik;\r\n        this.form.phone = data.phonenumber;\r\n        this.form.photo = data.profile_picture;\r\n        this.form.email = data.email;\r\n        this.form.driver_type = data.drivertype.name;\r\n        this.form.gender = data.gender === 1 ? \"Male\" : \"Female\";\r\n        this.form.address = data.address;\r\n        this.form.birthdate = data.birthdate;\r\n        this.form.id = data.id;\r\n        this.payload.iddriver = data.iddriver;\r\n        this.form.first_login = data.is_first_login;\r\n      } else {\r\n        this.form.name = \"\";\r\n        this.form.status = \"\";\r\n        this.form.nik = \"\";\r\n        this.form.phone = \"\";\r\n        this.form.photo = \"\";\r\n        this.form.email = \"\";\r\n        this.form.driver_type = \"\";\r\n        this.form.gender = \"\";\r\n        this.form.address = \"\";\r\n        this.form.birthdate = \"\";\r\n        this.form.id = \"\";\r\n        this.payload.iddriver = \"\";\r\n        this.form.first_login = \"\";\r\n      }\r\n      this.form.first_login === 1 ? (this.spanPIN = 10) : (this.spanPIN = 8);\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["list-driver-enterprise.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4OA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list-driver-enterprise.vue","sourceRoot":"src/views/pages/enterprise","sourcesContent":["<template>\r\n  <div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"container mb-200\">\r\n      <p class=\"font-weight-600 mt-40\">DRIVER LIST</p>\r\n      <el-row class=\"mt-20\">\r\n        <el-card shadow=\"always\" class=\"card-border\">\r\n          <el-row :gutter=\"20\">\r\n            <div>\r\n              <el-button style=\"position: absolute; left: 10px\" @click=\"Back()\"\r\n                >Back</el-button\r\n              >\r\n            </div>\r\n            <el-col :span=\"12\" class=\"line-not-center\">\r\n              <div class=\"avatar2 align-vertical text-center\">\r\n                <img\r\n                  :src=\"form.photo\"\r\n                  class=\"align-vertical-middle\"\r\n                  alt=\"user avatar\"\r\n                  @error=\"imgAlt\"\r\n                />\r\n                <h1 class=\"name-of\">{{ form.name }}</h1>\r\n                <span>{{ form.status }}</span>\r\n              </div>\r\n              <el-row type=\"flex\" justify=\"center\" :gutter=\"20\">\r\n                <el-col :span=\"9\">\r\n                  <div style=\"overflow-wrap: break-word\">\r\n                    <dl>\r\n                      <dt>NIK</dt>\r\n                      <dd>{{ form.nik }}</dd>\r\n\r\n                      <dt>PHONE</dt>\r\n                      <dd>{{ form.phone }}</dd>\r\n\r\n                      <dt>EMAIL</dt>\r\n                      <dd>{{ form.email }}</dd>\r\n\r\n                      <dt>DRIVER TYPE</dt>\r\n                      <dd>{{ form.driver_type }}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </el-col>\r\n                <el-col :span=\"9\">\r\n                  <div>\r\n                    <dl>\r\n                      <dt>GENDER</dt>\r\n                      <dd>{{ form.gender }}</dd>\r\n\r\n                      <dt>ADDRESS</dt>\r\n                      <dd>{{ form.address }}</dd>\r\n\r\n                      <dt>BIRTHDAY</dt>\r\n                      <dd>{{ form.birthdate }}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </el-col>\r\n              </el-row>\r\n\r\n              <el-row type=\"flex\" justify=\"center\" class=\"mt-10\">\r\n                <el-col :span=\"6\">\r\n                  <el-button\r\n                    @click=\"editButton()\"\r\n                    type=\"info\"\r\n                    size=\"small\"\r\n                    class=\"small-edit\"\r\n                    >Edit</el-button\r\n                  >\r\n                </el-col>\r\n                <el-col :span=\"spanPIN\">\r\n                  <el-button\r\n                    type=\"danger\"\r\n                    size=\"small\"\r\n                    :loading=\"buttonSuspend\"\r\n                    @click=\"suspendButton\"\r\n                    v-if=\"status === 1\"\r\n                  >\r\n                    Suspend\r\n                  </el-button>\r\n                  <el-button\r\n                    style=\"font-size: 10px\"\r\n                    type=\"success\"\r\n                    size=\"small\"\r\n                    :loading=\"buttonResendPIN\"\r\n                    @click=\"resendPIN\"\r\n                    v-if=\"form.first_login === 1 && status === 1\"\r\n                  >\r\n                    Resend PIN\r\n                  </el-button>\r\n                  <el-button\r\n                    type=\"danger\"\r\n                    size=\"small\"\r\n                    @click=\"deleteB\"\r\n                    :loading=\"buttonDelete\"\r\n                    v-if=\"status === 3\"\r\n                  >\r\n                    Delete\r\n                  </el-button>\r\n                  <el-button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    @click=\"activeButton\"\r\n                    :loading=\"buttonActive\"\r\n                    v-if=\"status === 3\"\r\n                  >\r\n                    Active\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n            </el-col>\r\n\r\n            <el-col :span=\"12\">\r\n              <el-row type=\"flex\" justify=\"center\" :gutter=\"20\" class=\"mt-10\">\r\n                <el-col :span=\"10\">\r\n                  <el-input\r\n                    size=\"mini\"\r\n                    placeholder=\"Search\"\r\n                    @keyup.native=\"searchChange\"\r\n                    v-model=\"input4\"\r\n                  >\r\n                    <i slot=\"suffix\" class=\"el-input__icon el-icon-search\"></i>\r\n                  </el-input>\r\n                </el-col>\r\n                <el-col :span=\"6\">\r\n                  <el-select\r\n                    @change=\"filterStatus\"\r\n                    v-model=\"status\"\r\n                    filterable\r\n                    size=\"mini\"\r\n                    placeholder=\"All Status\"\r\n                  >\r\n                    <el-option\r\n                      v-for=\"item in select\"\r\n                      :key=\"item.status\"\r\n                      :label=\"item.name\"\r\n                      :value=\"item.status\"\r\n                    >\r\n                    </el-option>\r\n                  </el-select>\r\n                </el-col>\r\n                <el-col :span=\"1\">\r\n                  <el-button\r\n                    @click=\"Create()\"\r\n                    size=\"mini\"\r\n                    style=\"text-align: center\"\r\n                    type=\"danger\"\r\n                    ><i class=\"mdi mdi-plus\"></i\r\n                  ></el-button>\r\n                </el-col>\r\n              </el-row>\r\n\r\n              <div\r\n                class=\"contacts-list box grow scrollable only-y\"\r\n                v-loading=\"loading\"\r\n              >\r\n                <div\r\n                  v-for=\"c in listData\"\r\n                  :key=\"c.id\"\r\n                  class=\"flex contact\"\r\n                  @click=\"openDialog(c)\"\r\n                >\r\n                  <div class=\"avatar align-vertical el-col el-col-4\">\r\n                    <img\r\n                      :src=\"c.profile_picture\"\r\n                      class=\"align-vertical-middle\"\r\n                      alt=\"user avatar\"\r\n                      @error=\"imgAlt\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"info box grow flex el-col el-col-20\">\r\n                    <div\r\n                      class=\"\r\n                        name\r\n                        box\r\n                        grow\r\n                        flex\r\n                        column\r\n                        justify-center\r\n                        p-10\r\n                        scrollable\r\n                        only-x\r\n                      \"\r\n                    >\r\n                      <div class=\"fullname fs-18\">\r\n                        <strong>{{ c.name }}</strong>\r\n                      </div>\r\n                      <div class=\"phone fs-14 secondary-text\">\r\n                        {{ c.phonenumber }}\r\n                      </div>\r\n                      <div class=\"email fs-14 secondary-text\">\r\n                        {{ c.email }}\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      class=\"phone align-vertical p-10 green\"\r\n                      v-if=\"c.status === 1\"\r\n                    >\r\n                      <span class=\"align-vertical-middle font-weight-600\"\r\n                        >ACTIVE</span\r\n                      >\r\n                    </div>\r\n                    <div\r\n                      class=\"phone align-vertical p-10\"\r\n                      v-if=\"c.status === 2\"\r\n                    >\r\n                      <span class=\"align-vertical-middle font-weight-600\"\r\n                        >IN ACTIVE</span\r\n                      >\r\n                    </div>\r\n                    <div\r\n                      class=\"phone align-vertical p-10 red\"\r\n                      v-if=\"c.status === 3\"\r\n                    >\r\n                      <span class=\"align-vertical-middle font-weight-600\"\r\n                        >SUSPENDED</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"grid-content\">\r\n                  <el-pagination\r\n                    background\r\n                    layout=\"prev, pager, next\"\r\n                    @current-change=\"handlePageChange\"\r\n                    :total=\"forTotal\"\r\n                  ></el-pagination>\r\n                </div>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n        </el-card>\r\n      </el-row>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Affix from \"@/components/Affix\";\r\nimport { mapGetters } from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from \"../../../store/mutation-types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  name: \"ListDriverEnterprise\",\r\n  data() {\r\n    return {\r\n      currentPage: 1,\r\n      input: \"\",\r\n      affixEnabled: true,\r\n      indexT: 1,\r\n      vendorId: null,\r\n      input4: \"\",\r\n      status: 1,\r\n      spanPIN: 8,\r\n      form: {\r\n        name: \"\",\r\n        status: \"\",\r\n        nik: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        driver_type: \"\",\r\n        gender: \"\",\r\n        address: \"\",\r\n        birthdate: \"\",\r\n        photo: \"\",\r\n        id: \"\",\r\n        first_login: \"\",\r\n      },\r\n      payload: {\r\n        reason_suspend: \"\",\r\n        forenterprise: 1,\r\n        users_id: null,\r\n        iddriver: \"\",\r\n        identerprise: \"\",\r\n      },\r\n      select: [\r\n        {\r\n          name: \"ACTIVE\",\r\n          status: 1,\r\n        },\r\n        {\r\n          name: \"INACTIVE\",\r\n          status: 2,\r\n        },\r\n        {\r\n          name: \"SUSPENDED\",\r\n          status: 3,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  components: {\r\n    Affix,\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      listData: getter.GET_LIST_DRIVER,\r\n      paginate: getter.GET_PAGINATE_DRIVER,\r\n      totalDriver: getter.GET_DRIVER_TOTAL,\r\n      dropDown: getter.GET_DROPDOWN_DRIVER,\r\n      driverAcc: getter.GET_TOTAL_ACCOUNT_DRIVER,\r\n      enterprise: getter.ENTERPRISE,\r\n      loading: getter.GET_BUTTON,\r\n      totalEmployee: getter.GET_ACCOUNT_EMPLOYEE,\r\n      buttonDelete: getter.GET_BUTTON_DELETE,\r\n      buttonResendPIN: getter.GET_BUTTON_RESEND_PIN,\r\n      buttonActive: getter.GET_BUTTON_ACTIVE,\r\n      buttonSuspend: getter.GET_BUTTON_SUSPEND,\r\n      buttonEdit: getter.GET_BUTTON_EDIT,\r\n    }),\r\n    paginator() {\r\n      return this.paginate;\r\n    },\r\n    indexTam() {\r\n      return this.indexT;\r\n    },\r\n    forTotal() {\r\n      if (this.listData) {\r\n        return this.totalDriver;\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    await this.$store.dispatch(action.TOTAL_ACCOUNT_DRIVER);\r\n    this.$store.commit(mutation.BUTTON_STATUS, false);\r\n    await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\r\n      page: this.currentPage,\r\n      q: this.input4,\r\n      status: this.status,\r\n      identerprise: this.enterprise.identerprise,\r\n    });\r\n    this.firstData();\r\n  },\r\n\r\n  methods: {\r\n    async searchChange(v) {\r\n      let trimName = this.input4.trim();\r\n      if (trimName.length > 0) {\r\n        this.$store.commit(mutation.BUTTON_STATUS, true);\r\n        await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\r\n          page: 1,\r\n          typedispatcher: this.type,\r\n          q: trimName,\r\n          status: this.status,\r\n          identerprise: this.enterprise.identerprise,\r\n        });\r\n        this.firstData();\r\n      }\r\n    },\r\n    async handlePageChange(page) {\r\n      this.currentPage = page;\r\n      await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\r\n        page: this.currentPage,\r\n        q: this.input4,\r\n        status: this.status,\r\n        identerprise: this.enterprise.identerprise,\r\n      });\r\n      this.firstData();\r\n    },\r\n    Create() {\r\n      this.$store.commit(mutation.BUTTON_STATUS, false);\r\n      this.$router.push({\r\n        name: \"assignee-driver\",\r\n      });\r\n    },\r\n    async filterStatus(status) {\r\n      this.$store.commit(mutation.BUTTON_STATUS, true);\r\n      this.status = status;\r\n      await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\r\n        page: 1,\r\n        q: this.input4,\r\n        status: this.status,\r\n        identerprise: this.enterprise.identerprise,\r\n      });\r\n      this.firstData();\r\n    },\r\n    openDialog(data) {\r\n      this.form.name = data.name;\r\n      this.form.status =\r\n        data.status === 1\r\n          ? \"ACTIVE\"\r\n          : data.status === 2\r\n          ? \"INACTIVE\"\r\n          : \"SUSPENDED\";\r\n      this.form.nik = data.nik;\r\n      this.form.phone = data.phonenumber;\r\n      this.form.photo = data.profile_picture;\r\n      this.form.email = data.email;\r\n      this.form.driver_type = data.drivertype.name;\r\n      this.form.gender = data.gender === 1 ? \"Male\" : \"Female\";\r\n      this.form.address = data.address;\r\n      this.form.birthdate = data.birthdate;\r\n      this.form.id = data.id;\r\n      this.payload.iddriver = data.iddriver;\r\n      this.form.first_login = data.is_first_login;\r\n      this.form.first_login === 1 ? (this.spanPIN = 10) : (this.spanPIN = 8);\r\n    },\r\n    getId(id) {\r\n      this.$store.dispatch(action.DATA_ID_DRIVER, id.users_id);\r\n    },\r\n    imgAlt(event) {\r\n      event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\r\n    },\r\n    resendPIN() {\r\n      let obj = {\r\n        pin_type: \"/driver/resend-pin\",\r\n        id: this.form.id,\r\n      };\r\n      this.$store.commit(mutation.SET_RESEND_PIN_BUTTON, true);\r\n      this.$store.dispatch(action.RESEND_PIN, obj);\r\n    },\r\n    editButton() {\r\n      this.$store.commit(mutation.BUTTON_STATUS, false);\r\n      this.$store.dispatch(action.EDIT_DRIVER_ENTERPRISE, this.form.id);\r\n    },\r\n    async deleteB() {\r\n      await Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.payload.users_id = this.form.id;\r\n          this.$store.commit(mutation.SET_BUTTON_DELETE, true);\r\n          this.$store.commit(mutation.BUTTON_STATUS, true);\r\n          this.$store.dispatch(action.DELETE_DRIVER, this.payload);\r\n        }\r\n        this.firstData();\r\n      });\r\n    },\r\n    async activeButton() {\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, activate it!\",\r\n      }).then(async (result) => {\r\n        if (result.value) {\r\n          this.payload.users_id = this.form.id;\r\n          this.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\r\n          this.$store.commit(mutation.BUTTON_STATUS, true);\r\n          await this.$store.dispatch(action.ACTIVATE_DRIVER, this.payload);\r\n        }\r\n        this.firstData();\r\n      });\r\n    },\r\n    async suspendButton() {\r\n      const { value: reason } = await Swal.fire({\r\n        title: \"Enter the reason of suspending\",\r\n        input: \"text\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, suspend it!\",\r\n        inputValidator: (value) => {\r\n          if (!value) {\r\n            return \"You need to write something!\";\r\n          }\r\n        },\r\n      });\r\n      if (reason) {\r\n        this.$store.commit(mutation.SET_BUTTON_SUSPEND, true);\r\n        this.$store.commit(mutation.BUTTON_STATUS, true);\r\n        this.payload.reason_suspend = reason;\r\n        this.payload.users_id = this.form.id;\r\n        await this.$store.dispatch(action.SUSPEND_DRIVER, this.payload);\r\n      }\r\n      this.firstData();\r\n    },\r\n    Back() {\r\n      this.$router.replace({\r\n        path: \"/detail-enterprise/\" + this.enterprise.identerprise,\r\n      });\r\n    },\r\n    firstData() {\r\n      if (this.listData.length > 0) {\r\n        let data = this.listData[0];\r\n        this.form.name = data.name;\r\n        this.form.status =\r\n          data.status === 1\r\n            ? \"ACTIVE\"\r\n            : data.status === 2\r\n            ? \"INACTIVE\"\r\n            : \"SUSPENDED\";\r\n        this.form.nik = data.nik;\r\n        this.form.phone = data.phonenumber;\r\n        this.form.photo = data.profile_picture;\r\n        this.form.email = data.email;\r\n        this.form.driver_type = data.drivertype.name;\r\n        this.form.gender = data.gender === 1 ? \"Male\" : \"Female\";\r\n        this.form.address = data.address;\r\n        this.form.birthdate = data.birthdate;\r\n        this.form.id = data.id;\r\n        this.payload.iddriver = data.iddriver;\r\n        this.form.first_login = data.is_first_login;\r\n      } else {\r\n        this.form.name = \"\";\r\n        this.form.status = \"\";\r\n        this.form.nik = \"\";\r\n        this.form.phone = \"\";\r\n        this.form.photo = \"\";\r\n        this.form.email = \"\";\r\n        this.form.driver_type = \"\";\r\n        this.form.gender = \"\";\r\n        this.form.address = \"\";\r\n        this.form.birthdate = \"\";\r\n        this.form.id = \"\";\r\n        this.payload.iddriver = \"\";\r\n        this.form.first_login = \"\";\r\n      }\r\n      this.form.first_login === 1 ? (this.spanPIN = 10) : (this.spanPIN = 8);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.card-border {\r\n  border-radius: 11px;\r\n}\r\n\r\n.line-not-center {\r\n  border-right: 1px solid $text-color-info;\r\n}\r\n\r\n.line {\r\n  border-right: 1px solid $text-color-info;\r\n  text-align: center;\r\n}\r\n\r\n.text-p {\r\n  display: block;\r\n  color: white;\r\n  font-weight: 600;\r\n}\r\n\r\n.plus-bg {\r\n  background-color: #a31424;\r\n  height: 139px;\r\n}\r\n\r\n.avatar {\r\n  img {\r\n    border: 1px solid transparentize($text-color, 0.9);\r\n    box-sizing: border-box;\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 50%;\r\n    transition: all 0.5s 0.25s;\r\n  }\r\n}\r\n\r\n.avatar2 {\r\n  img {\r\n    border: 1px solid transparentize($text-color, 0.9);\r\n    box-sizing: border-box;\r\n    width: 120px;\r\n    height: 120px;\r\n    border-radius: 50%;\r\n    transition: all 0.5s 0.25s;\r\n  }\r\n}\r\n\r\n.name-of {\r\n  margin-bottom: 10px;\r\n  color: #a31424;\r\n}\r\n\r\n.contacts-list {\r\n  //margin: 0 auto;\r\n  height: 500px;\r\n  width: 100%;\r\n  max-width: 965px;\r\n  padding: 0px 30px;\r\n  box-sizing: border-box;\r\n\r\n  .contact {\r\n    margin: 10px 0;\r\n    padding: 5px;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    border-bottom: 1px solid $text-color-info;\r\n  }\r\n}\r\n\r\n.small-edit {\r\n  width: 90px;\r\n}\r\n.green {\r\n  color: green;\r\n}\r\n.red {\r\n  color: red;\r\n}\r\n/*.card-base {*/\r\n/*padding: 20px;*/\r\n/*}*/\r\n\r\n/*.el-row {*/\r\n/*// display: flex;*/\r\n/*// align-items: center;*/\r\n/*// justify-content: center;*/\r\n/*padding: 0px 10px;*/\r\n/*margin-bottom: 20px;*/\r\n\r\n/*&:last-child {*/\r\n/*margin-bottom: 0;*/\r\n/*}*/\r\n/*}*/\r\n\r\n/*.el-col {*/\r\n/*border-radius: 5px;*/\r\n/*}*/\r\n\r\n/*.el-select {*/\r\n/*width: 100%;*/\r\n/*}*/\r\n</style>\r\n"]}]}