{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/components/dispatcher/total-acount.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/components/dispatcher/total-acount.vue","mtime":1628175042599},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport router from '../../router'\nimport Swal from 'sweetalert2'\nimport Contacts from '@/assets/data/CONTACTS_MOCK_DATA.json'\nimport { mapGetters, mapActions } from 'vuex'\nimport * as getter from '../../store/getters-types'\nimport * as action from '../../store/action-types'\nimport * as mutation from '../../store/mutation-types'\n\nexport default {\n  name: 'Contacts',\n  data() {\n    return {\n      currentPage: 1,\n      status: 1,\n      type: '',\n      search: '',\n      dialogvisible: false,\n      pageWidth: 0,\n      userdata: {},\n      contacts: Contacts.slice(0, 30),\n      options: [{\n        value: 'Option1',\n        label: 'Option1'\n      }, {\n        value: 'Option2',\n        label: 'Option2',\n        disabled: true\n      }, {\n        value: 'Option3',\n        label: 'Option3'\n      }, {\n        value: 'Option4',\n        label: 'Option4'\n      }, {\n        value: 'Option5',\n        label: 'Option5'\n      }],\n      value: '',\n      input4: '',\n      form: {\n        name: '',\n        photo: '',\n        status: '',\n        company:'',\n        phone: '',\n        email: '',\n        companyAdress: '',\n        nik: '',\n        id: ''\n      },\n      payload: {\n        reason_suspend: \"\",\n        users_id: null,\n        iddispatcher: \"\",\n      },\n      select: [\n              {\n                  name: \"ACTIVE\",\n                  status: 1,\n              },\n              {\n                  name: \"INACTIVE\",\n                  status: 2,\n              },\n              {\n                  name: \"SUSPENDED\",\n                  status: 3\n              }\n          ],\n    }\n  },\n  methods: {\n    searchChange(v){\n      let trimName = this.input4.trim()\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        this.$store.dispatch(action.LIST_DISPATCHER, {\n            page: 1,\n            typedispatcher: this.type,\n            dispathcer_search: trimName,\n            status: this.status\n          });\n      this.firstData()\n    },\n    newDispatcher()   {\n      this.$router.replace('new-dispatcher')\n    },\n    imgAlt(event) {\n        event.target.src = require(\"../../assets/images/avatar-2.jpg\");\n    },\n    handlePageChange(page) {\n      this.currentPage = page;\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.$store.dispatch( action.LIST_DISPATCHER,\n          {\n            page: this.currentPage,\n            dispathcer_search: input4,\n            typedispatcher : this.type,\n            status: this.status\n          });\n    },\n    async filterStatus(status){\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.status = status;\n      await this.$store.dispatch(action.LIST_DISPATCHER,\n          {\n            page: 1,\n            dispathcer_search: this.input4,\n            typedispatcher : this.type,\n            status: this.status\n          });\n      this.firstData()\n    },\n    openDialog(data) {\n      this.form.photos = data.profile_pictures;\n      this.form.phone = data.phonenumber;\n      this.form.email = data.email;\n      this.form.photo = data.profile_picture;\n      this.form.id    = data.id;\n      this.form.name = data.name;\n      if(data.enterprise !== null){\n        this.form.company = data.enterprise.name;\n        this.form.companyAdress = data.enterprise.office_address\n      }\n      if(data.enterprise === null){\n        this.form.company = '';\n        this.form.companyAdress = ''\n      }\n      if(data.dispatcher_profile !== null ){\n        this.form.nik   = data.dispatcher_profile.nik;\n        this.payload.iddispatcher = data.dispatcher_profile.iddispatcher;\n      }else {\n        this.form.nik   = '';\n        this.payload.iddispatcher = '';\n      }\n    },\n      deleteB() {\n          Swal.fire({\n              title: 'Are you sure?',\n              text: \"You won't be able to revert this!\",\n              type: 'warning',\n              showCancelButton: true,\n              confirmButtonColor: '#3085d6',\n              cancelButtonColor: '#d33',\n              confirmButtonText: 'Yes, delete it!'\n          }).then(async (result) => {\n              if (result.value) {\n                  this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n                  this.$store.commit(mutation.BUTTON_STATUS, true);\n                  await this.$store.dispatch(action.DELETE_DISPATCHER, this.form.id)\n                  this.firstData()\n              }\n          })\n      },\n      resendActivation(){\n          let obj ={\n              page : '/dispatcher',\n              iddispatcher   : this.payload.iddispatcher\n          };\n          this.$store.commit(mutation.SET_BUTTON_RESEND_ACTIVE, true);\n          this.$store.commit(mutation.BUTTON_STATUS, true);\n          this.$store.dispatch(action.RESEND_LINK_ACTIVATION, obj)\n      },\n      activeButton() {\n          Swal.fire({\n              title: \"Are you sure?\",\n              type: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: \"Yes, activate it!\"\n          }).then(result => {\n              if (result.value) {\n                  this.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n                  this.$store.commit(mutation.BUTTON_STATUS, true);\n                  this.$store.dispatch(action.ACTIVATE_DISPATCHER, this.form.id);\n              }\n          });\n      },\n      async suspendButton() {\n          const {\n              value: reason\n          } = await Swal.fire({\n              title: 'Enter the reason of suspending',\n              input: 'text',\n              showCancelButton: true,\n              confirmButtonColor: '#3085d6',\n              cancelButtonColor: '#d33',\n              confirmButtonText: 'Yes, suspend it!',\n              inputValidator: (value) => {\n                  if (!value) {\n                      return 'You need to write something!'\n                  }\n              }\n          });\n          if (reason) {\n              this.payload.reason_suspend = reason;\n              this.payload.users_id = this.form.id;\n              this.$store.commit(mutation.SET_BUTTON_SUSPEND, true);\n              this.$store.commit(mutation.BUTTON_STATUS, true);\n              this.$store.dispatch(action.SUSPEND_DISPATCHER, this.payload)\n              this.firstData();\n          }\n      },\n    async editButton() {\n        await this.$store.commit(mutation.SET_ID_DISPATCHER, this.form.id)\n        router.push({\n            path: `/edit-dispatcher`\n        })\n      },\n    firstData(){\n      if(this.listData !== null) {\n        if(this.listData.length > 0){\n          this.form.photos = this.listData[0].profile_pictures;\n          this.form.phone = this.listData[0].phonenumber;\n          this.form.email = this.listData[0].email;\n          this.form.id    = this.listData[0].id;\n          this.form.photo = this.listData[0].profile_picture;\n          this.form.name = this.listData[0].name;\n          if(this.listData[0].enterprise !== null){\n            this.form.company = this.listData[0].enterprise.name;\n            this.form.companyAdress = this.listData[0].enterprise.office_address\n          }\n          if(this.listData[0].enterprise === null){\n            this.form.company = '';\n            this.form.companyAdress = ''\n          }\n          if(this.listData[0].dispatcher_profile !== null ){\n            this.form.nik   = this.listData[0].dispatcher_profile.nik;\n          }else {\n            this.form.nik   = '';\n          }\n        }\n      }\n    }\n  },\n    async created(){\n      await this.$store.dispatch(action.TOTAL_ACCOUNT_DISPATCHER)\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n      await this.$store.dispatch(action.LIST_DISPATCHER,{\n              page: this.currentPage,\n              typedispatcher : this.type,\n              dispathcer_search: this.input4,\n              status: this.status});\n      this.firstData()\n    },\n    // async mounted(){\n    //     this.firstData()\n    // },\n  computed: {\n    ...mapGetters({\n      total           : getter.GET_TOTAL_ACCOUNT_DISPAT,\n      listData        : getter.GET_LIST_DISPATCHER,\n      paginate        : getter.GET_PAGINATE_DISPATCHER,\n      loading         : getter.GET_BUTTON,\n      totalEmployee   : getter.GET_ACCOUNT_EMPLOYEE,\n      buttonDelete    : getter.GET_BUTTON_DELETE,\n      buttonResendPIN : getter.GET_BUTTON_RESEND_PIN,\n      buttonActive    : getter.GET_BUTTON_ACTIVE,\n      buttonSuspend   : getter.GET_BUTTON_SUSPEND,\n      buttonEdit      : getter.GET_BUTTON_EDIT,\n      buttonResActive : getter.GET_BUTTON_RESEND_ACTIVE\n    }),\n    contactsFiltered() {\n      return this.contacts.filter(({full_name, email, phone}) => (full_name + email + phone).toString().toLowerCase().indexOf(this.search.toString().toLowerCase()) !== -1)\n    },\n    contactsClass() {\n      return this.pageWidth >= 870 ? 'large' : this.pageWidth >= 760 ? 'medium' : 'small'\n    }\n    },\n    paginato(){\n        return this.paginate\n    },\n    indexTam(){\n        return this.indexT\n    }\n}\n",{"version":3,"sources":["total-acount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"total-acount.vue","sourceRoot":"src/components/dispatcher","sourcesContent":["<template>\n  <div class=\"container mb-200\">\n    <p class=\"font-weight-600\">ACCOUNT</p>\n    <el-row :gutter=\"50\">\n      <el-col :span=\"19\">\n        <el-card shadow=\"always\" :body-style=\"{padding: '5px'}\" class=\"card-border\">\n          <el-row :gutter=\"20\" v-if=\"total !== null\">\n            <el-col :span=\"8\">\n              <div class=\"line\">\n                <p class=\"pb-20 font-weight-600 mt-8\">TOTAL DISPATCHER</p>\n                <span class=\"font-size-44 font-weight-600\">{{total.total_dispatcher}}</span>\n              </div>\n            </el-col>\n            <el-col :span=\"8\">\n              <div class=\"line\">\n                <p class=\"pb-20 font-weight-600 mt-8\">ACTIVE ACCOUNT</p>\n                <span class=\"font-size-44 font-weight-600\">{{total.active_account}}</span>\n              </div>\n            </el-col>\n            <el-col :span=\"8\">\n              <div class=\"text-center\">\n                <p class=\"pb-20 font-weight-600 mt-8\">SUSPENDED ACCOUNT</p>\n                <span class=\"font-size-44 font-weight-600\">{{total.suspended_account}}</span>\n              </div>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-col>\n      <el-col :span=\"4\">\n        <el-button @click=\"newDispatcher\" shadow=\"always\" :body-style=\"{padding: '10px'}\" class=\"card-border plus-bg text-center\">\n          <i class=\"mdi mdi-plus font-size-60 font-weight-500 white-text\"></i>\n          <span class=\"text-p\">Add New</span>\n          <span class=\"text-p\">Dispatcher</span>\n        </el-button>\n      </el-col>\n    </el-row>\n\n    <p class=\"font-weight-600 mt-40\">INFO</p>\n    <el-row class=\"mt-20\">\n      <el-card shadow=\"always\" class=\"card-border\" >\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <div class=\"avatar2 align-vertical text-center\">\n              <img :src=\"form.photo\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\" >\n              <h1 class=\"name-of\">{{ form.name }}</h1>\n              <span>{{ form.status }}</span>\n            </div>\n            <el-row type=\"flex\" justify=\"center\">\n              <el-col :span=\"9\" class=\"break-word\">\n                <div>\n                <dl>\n                  <dt v-if=\"form.company !== ''\">COMPANY</dt>\n                  <dd>{{ form.company }}</dd>\n\n                  <dt>PHONE</dt>\n                  <dd>{{ form.phone }}</dd>\n\n                  <dt>EMAIL</dt>\n                  <dd>{{ form.email }}</dd>\n                </dl>\n                </div>\n              </el-col>\n              <el-col :span=\"9\">\n                <div>\n                <dl>\n                  <dt v-if=\"form.companyAdress !== ''\">COMPANY ADDRESS</dt>\n                  <dd>{{ form.companyAdress }}</dd>\n\n                  <dt>NIK</dt>\n                  <dd>{{ form.nik }}</dd>\n                </dl>\n                </div>\n              </el-col>\n            </el-row>\n            <el-row type=\"flex\"  justify=\"center\" class=\"mt-10\">\n              <el-col :span=\"6\"><el-button @click=\"editButton\" type=\"info\" size=\"small\" class=\"small-edit\">Edit</el-button></el-col>\n              <el-col :span=\"10\">\n                <el-button\n                        type=\"danger\"\n                        size=\"small\"\n                        :loading=\"buttonSuspend\"\n                        @click=\"suspendButton\"\n                        v-if=\"status === 1\">\n                  Suspend\n                </el-button>\n                <el-button\n                        type=\"success\"\n                        size=\"small\"\n                        :loading=\"buttonResActive\"\n                        @click=\"resendActivation\"\n                        v-if=\"status === 2\">\n                  Resend Activation\n                </el-button>\n                <el-button\n                        type=\"danger\"\n                        size=\"small\"\n                        :loading=\"buttonDelete\"\n                        @click=\"deleteB\"\n                        v-if=\"status === 3\">\n                  Delete\n                </el-button>\n                <el-button\n                        type=\"primary\"\n                        size=\"small\"\n                        :loading=\"buttonActive\"\n                        @click=\"activeButton\"\n                        v-if=\"status === 3\">\n                  Active\n                </el-button>\n                </el-col>\n            </el-row>\n          </el-col>\n\n\n          <el-col :span=\"12\" class=\"line-not-center\">\n            <el-row type=\"flex\"  justify=\"center\" :gutter=\"20\" class=\"mt-10\">\n              <el-col :span=\"10\">\n                <el-input\n                      size=\"mini\"\n                      placeholder=\"Search\"\n                      @keyup.native=\"searchChange\"\n                      v-model=\"input4\">\n                  <i slot=\"suffix\" class=\"el-input__icon el-icon-search\"></i>\n                </el-input>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-select @change=\"filterStatus\" v-model=\"status\" filterable size=\"mini\" placeholder=\"All Status\">\n                  <el-option\n                          v-for=\"item in select\"\n                          :key=\"item.status\"\n                          :label=\"item.name\"\n                          :value=\"item.status\">\n                  </el-option>\n                </el-select>\n              </el-col>\n            </el-row>\n\n            <div class=\"contacts-list box grow scrollable only-y\" v-loading=\"loading\">\n              <el-row :gutter=\"20\">\n              <div v-for=\"c in listData\" :key=\"c.id\" class=\"flex contact\" @click=\"openDialog(c)\">\n                <div class=\"avatar align-vertical el-col el-col-4\">\n                  <img :src=\"c.profile_picture\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\n                </div>\n                <div class=\"info box grow flex el-col el-col-20\">\n                  <div class=\"name box grow flex column justify-center p-10 scrollable only-x\">\n                    <div class=\"fullname fs-18\"><strong>{{c.name}}</strong></div>\n                    <div class=\"phone fs-14 secondary-text\">{{c.phonenumber}}</div>\n                    <div class=\"email fs-14 secondary-text\">{{c.email}}</div>\n                  </div>\n                  <div class=\"phone align-vertical p-10 green\" v-if=\"c.status === 1\"><span class=\"align-vertical-middle font-weight-600\">ACTIVE</span></div>\n                  <div class=\"phone align-vertical p-10\" v-if=\"c.status === 2\"><span class=\"align-vertical-middle font-weight-600\">IN ACTIVE</span></div>\n                  <div class=\"phone align-vertical p-10 red\" v-if=\"c.status === 3\"><span class=\"align-vertical-middle font-weight-600\">SUSPANDED</span></div>\n                </div>\n              </div>\n              </el-row>\n                <div class=\"grid-content\">\n                    <el-pagination\n                        background\n                        layout=\"prev, pager, next\"\n                        @current-change=\"handlePageChange\"\n                        :total=\"paginate.totalP\">\n                    </el-pagination>\n              </div>\n            </div>\n          </el-col>\n        </el-row>\n      </el-card>\n    </el-row>\n  </div>\n</template>\n\n<script>\n  import router from '../../router'\n  import Swal from 'sweetalert2'\n  import Contacts from '@/assets/data/CONTACTS_MOCK_DATA.json'\n  import { mapGetters, mapActions } from 'vuex'\n  import * as getter from '../../store/getters-types'\n  import * as action from '../../store/action-types'\n  import * as mutation from '../../store/mutation-types'\n\n  export default {\n    name: 'Contacts',\n    data() {\n      return {\n        currentPage: 1,\n        status: 1,\n        type: '',\n        search: '',\n        dialogvisible: false,\n        pageWidth: 0,\n        userdata: {},\n        contacts: Contacts.slice(0, 30),\n        options: [{\n          value: 'Option1',\n          label: 'Option1'\n        }, {\n          value: 'Option2',\n          label: 'Option2',\n          disabled: true\n        }, {\n          value: 'Option3',\n          label: 'Option3'\n        }, {\n          value: 'Option4',\n          label: 'Option4'\n        }, {\n          value: 'Option5',\n          label: 'Option5'\n        }],\n        value: '',\n        input4: '',\n        form: {\n          name: '',\n          photo: '',\n          status: '',\n          company:'',\n          phone: '',\n          email: '',\n          companyAdress: '',\n          nik: '',\n          id: ''\n        },\n        payload: {\n          reason_suspend: \"\",\n          users_id: null,\n          iddispatcher: \"\",\n        },\n        select: [\n                {\n                    name: \"ACTIVE\",\n                    status: 1,\n                },\n                {\n                    name: \"INACTIVE\",\n                    status: 2,\n                },\n                {\n                    name: \"SUSPENDED\",\n                    status: 3\n                }\n            ],\n      }\n    },\n    methods: {\n      searchChange(v){\n        let trimName = this.input4.trim()\n          this.$store.commit(mutation.BUTTON_STATUS, true);\n          this.$store.dispatch(action.LIST_DISPATCHER, {\n              page: 1,\n              typedispatcher: this.type,\n              dispathcer_search: trimName,\n              status: this.status\n            });\n        this.firstData()\n      },\n      newDispatcher()   {\n        this.$router.replace('new-dispatcher')\n      },\n      imgAlt(event) {\n          event.target.src = require(\"../../assets/images/avatar-2.jpg\");\n      },\n      handlePageChange(page) {\n        this.currentPage = page;\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        this.$store.dispatch( action.LIST_DISPATCHER,\n            {\n              page: this.currentPage,\n              dispathcer_search: input4,\n              typedispatcher : this.type,\n              status: this.status\n            });\n      },\n      async filterStatus(status){\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        this.status = status;\n        await this.$store.dispatch(action.LIST_DISPATCHER,\n            {\n              page: 1,\n              dispathcer_search: this.input4,\n              typedispatcher : this.type,\n              status: this.status\n            });\n        this.firstData()\n      },\n      openDialog(data) {\n        this.form.photos = data.profile_pictures;\n        this.form.phone = data.phonenumber;\n        this.form.email = data.email;\n        this.form.photo = data.profile_picture;\n        this.form.id    = data.id;\n        this.form.name = data.name;\n        if(data.enterprise !== null){\n          this.form.company = data.enterprise.name;\n          this.form.companyAdress = data.enterprise.office_address\n        }\n        if(data.enterprise === null){\n          this.form.company = '';\n          this.form.companyAdress = ''\n        }\n        if(data.dispatcher_profile !== null ){\n          this.form.nik   = data.dispatcher_profile.nik;\n          this.payload.iddispatcher = data.dispatcher_profile.iddispatcher;\n        }else {\n          this.form.nik   = '';\n          this.payload.iddispatcher = '';\n        }\n      },\n        deleteB() {\n            Swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, delete it!'\n            }).then(async (result) => {\n                if (result.value) {\n                    this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    await this.$store.dispatch(action.DELETE_DISPATCHER, this.form.id)\n                    this.firstData()\n                }\n            })\n        },\n        resendActivation(){\n            let obj ={\n                page : '/dispatcher',\n                iddispatcher   : this.payload.iddispatcher\n            };\n            this.$store.commit(mutation.SET_BUTTON_RESEND_ACTIVE, true);\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.$store.dispatch(action.RESEND_LINK_ACTIVATION, obj)\n        },\n        activeButton() {\n            Swal.fire({\n                title: \"Are you sure?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, activate it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    this.$store.dispatch(action.ACTIVATE_DISPATCHER, this.form.id);\n                }\n            });\n        },\n        async suspendButton() {\n            const {\n                value: reason\n            } = await Swal.fire({\n                title: 'Enter the reason of suspending',\n                input: 'text',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, suspend it!',\n                inputValidator: (value) => {\n                    if (!value) {\n                        return 'You need to write something!'\n                    }\n                }\n            });\n            if (reason) {\n                this.payload.reason_suspend = reason;\n                this.payload.users_id = this.form.id;\n                this.$store.commit(mutation.SET_BUTTON_SUSPEND, true);\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.$store.dispatch(action.SUSPEND_DISPATCHER, this.payload)\n                this.firstData();\n            }\n        },\n      async editButton() {\n          await this.$store.commit(mutation.SET_ID_DISPATCHER, this.form.id)\n          router.push({\n              path: `/edit-dispatcher`\n          })\n        },\n      firstData(){\n        if(this.listData !== null) {\n          if(this.listData.length > 0){\n            this.form.photos = this.listData[0].profile_pictures;\n            this.form.phone = this.listData[0].phonenumber;\n            this.form.email = this.listData[0].email;\n            this.form.id    = this.listData[0].id;\n            this.form.photo = this.listData[0].profile_picture;\n            this.form.name = this.listData[0].name;\n            if(this.listData[0].enterprise !== null){\n              this.form.company = this.listData[0].enterprise.name;\n              this.form.companyAdress = this.listData[0].enterprise.office_address\n            }\n            if(this.listData[0].enterprise === null){\n              this.form.company = '';\n              this.form.companyAdress = ''\n            }\n            if(this.listData[0].dispatcher_profile !== null ){\n              this.form.nik   = this.listData[0].dispatcher_profile.nik;\n            }else {\n              this.form.nik   = '';\n            }\n          }\n        }\n      }\n    },\n      async created(){\n        await this.$store.dispatch(action.TOTAL_ACCOUNT_DISPATCHER)\n              this.$store.commit(mutation.BUTTON_STATUS, true);\n        await this.$store.dispatch(action.LIST_DISPATCHER,{\n                page: this.currentPage,\n                typedispatcher : this.type,\n                dispathcer_search: this.input4,\n                status: this.status});\n        this.firstData()\n      },\n      // async mounted(){\n      //     this.firstData()\n      // },\n    computed: {\n      ...mapGetters({\n        total           : getter.GET_TOTAL_ACCOUNT_DISPAT,\n        listData        : getter.GET_LIST_DISPATCHER,\n        paginate        : getter.GET_PAGINATE_DISPATCHER,\n        loading         : getter.GET_BUTTON,\n        totalEmployee   : getter.GET_ACCOUNT_EMPLOYEE,\n        buttonDelete    : getter.GET_BUTTON_DELETE,\n        buttonResendPIN : getter.GET_BUTTON_RESEND_PIN,\n        buttonActive    : getter.GET_BUTTON_ACTIVE,\n        buttonSuspend   : getter.GET_BUTTON_SUSPEND,\n        buttonEdit      : getter.GET_BUTTON_EDIT,\n        buttonResActive : getter.GET_BUTTON_RESEND_ACTIVE\n      }),\n      contactsFiltered() {\n        return this.contacts.filter(({full_name, email, phone}) => (full_name + email + phone).toString().toLowerCase().indexOf(this.search.toString().toLowerCase()) !== -1)\n      },\n      contactsClass() {\n        return this.pageWidth >= 870 ? 'large' : this.pageWidth >= 760 ? 'medium' : 'small'\n      }\n      },\n      paginato(){\n          return this.paginate\n      },\n      indexTam(){\n          return this.indexT\n      }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/scss/_variables\";\n    .card-border {\n        border-radius: 11px;\n    }\n    .line-not-center {\n      border-left: 1px solid $text-color-info;\n    }\n    .line {\n      border-right: 1px solid $text-color-info;\n      text-align: center;\n    }\n    .text-p {\n      display: block;\n      color: white;\n      font-weight: 600;\n    }\n    .plus-bg {\n      background-color: #a31424;\n      height: 139px;\n\n    }\n    .avatar {\n      img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 60px;\n        height: 60px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n      }\n    }\n    .avatar2 {\n      img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 120px;\n        height: 120px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n      }\n    }\n    .name-of {\n      margin-bottom: 10px;\n      color: #a31424;\n    }\n    .contacts-list {\n      //margin: 0 auto;\n      height: 400px;\n      width: 100%;\n      max-width: 965px;\n      padding: 0px 30px;\n      box-sizing: border-box;\n      .contact {\n        margin: 10px 0;\n        padding: 5px;\n        box-sizing: border-box;\n        cursor: pointer;\n        border-bottom: 1px solid $text-color-info;\n      }\n    }\n    .small-edit {\n      width: 90px;\n    }\n    .break-word {\n      overflow-wrap: break-word;\n    }\n    .green {\n      color: green;\n    }\n    .red {\n      color: red;\n    }\n</style>"]}]}