{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\src\\views\\pages\\employee\\list-position.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\src\\views\\pages\\employee\\list-position.vue","mtime":1647032353995},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters\r\n} from \"vuex\";\r\nimport * as mutation from '../../../store/mutation-types';\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\n\r\nexport default {\r\n    name: \"ListPosition\",\r\n    data() {\r\n        return {\r\n            currentPage: 1,\r\n            input: \"\",\r\n            affixEnabled: true,\r\n            indexT: 1,\r\n            vendorId: null,\r\n            status: 1,\r\n            select: [{\r\n                    name: \"ACTIVE\",\r\n                    status: 1,\r\n                },\r\n                {\r\n                    name: \"SUSPENDED\",\r\n                    status: 3\r\n                }\r\n            ],\r\n        };\r\n    },\r\n    components: {\r\n        Affix\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            listData: getter.GET_LIST_POSITION,\r\n            paginate: getter.GET_PAGINATE_POSITION,\r\n            total: getter.GET_POSITION_TOTAL,\r\n            //   dropDown    : getter.GET_DROPDOWN_EMPLOYEE \r\n        }),\r\n        paginator() {\r\n            return this.paginate;\r\n        },\r\n        indexTam() {\r\n            return this.indexT;\r\n        },\r\n        forTotal() {\r\n            if (this.listData) {\r\n                return this.total;\r\n            }\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.$store.dispatch(action.LIST_POSITION, {\r\n            page: this.currentPage,\r\n            status: this.status\r\n        });\r\n    },\r\n\r\n    methods: {\r\n        newVen() {\r\n            this.$router.push(\"NewVendor\");\r\n        },\r\n        handlePageChange(page) {\r\n            this.currentPage = page;\r\n            this.$store.dispatch(action.LIST_POSITION, {\r\n                page: this.currentPage,\r\n                status: this.status\r\n            });\r\n        },\r\n\r\n        Create() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$router.push({\r\n                name: \"NewPosition\"\r\n            });\r\n        },\r\n        Cancel() {\r\n            this.$store.dispatch(action.LIST_EMPLOYEE, 1);\r\n            this.$router.push({\r\n                path: \"/employee\"\r\n            });\r\n        },\r\n        // filterStatus(status){\r\n        //   this.status = status;\r\n        //    this.$store.dispatch(action.LIST_DATA_EMPLOYEE, \r\n        //   { \r\n        //   page: 1,\r\n        //   status: this.status});\r\n        // },\r\n\r\n        getId(id) {\r\n            this.$store.dispatch(action.DETAIL_POSITION, id.idemployee_position);\r\n            this.$router.push({\r\n                path: \"/employee/list-position/\" + id.idemployee_position\r\n            });\r\n        },\r\n    }\r\n};\r\n",{"version":3,"sources":["list-position.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list-position.vue","sourceRoot":"src/views/pages/employee","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-row :gutter=\"10\">\r\n            <el-col :lg=\"4\">\r\n                <el-button @click=\"Create()\" style=\"width: 100%\" type=\"primary\">New Position</el-button>\r\n            </el-col>\r\n            <el-col :offset=\"17\" :lg=\"3\">\r\n                <el-button style=\"width: 100%\" @click=\"Cancel()\" type=\"success\">Cancel</el-button>\r\n            </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"10\">\r\n            <el-col :lg=\"24\">\r\n                <el-table :data=\"listData\" style=\"width: 100%\" @row-click=\"getId\">\r\n                    <el-table-column type=\"index\" :index=\"paginate.fromP\" label=\"No\" width=\"100\"></el-table-column>\r\n                    <el-table-column align=\"center\" prop=\"job_name\" label=\"Job Name\"></el-table-column>\r\n                </el-table>\r\n            </el-col>\r\n        </el-row>\r\n        <div align=\"right\">\r\n            <el-pagination background layout=\"prev, pager, next\" @current-change=\"handlePageChange\" :total=\"forTotal\"></el-pagination>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters\r\n} from \"vuex\";\r\nimport * as mutation from '../../../store/mutation-types';\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\n\r\nexport default {\r\n    name: \"ListPosition\",\r\n    data() {\r\n        return {\r\n            currentPage: 1,\r\n            input: \"\",\r\n            affixEnabled: true,\r\n            indexT: 1,\r\n            vendorId: null,\r\n            status: 1,\r\n            select: [{\r\n                    name: \"ACTIVE\",\r\n                    status: 1,\r\n                },\r\n                {\r\n                    name: \"SUSPENDED\",\r\n                    status: 3\r\n                }\r\n            ],\r\n        };\r\n    },\r\n    components: {\r\n        Affix\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            listData: getter.GET_LIST_POSITION,\r\n            paginate: getter.GET_PAGINATE_POSITION,\r\n            total: getter.GET_POSITION_TOTAL,\r\n            //   dropDown    : getter.GET_DROPDOWN_EMPLOYEE \r\n        }),\r\n        paginator() {\r\n            return this.paginate;\r\n        },\r\n        indexTam() {\r\n            return this.indexT;\r\n        },\r\n        forTotal() {\r\n            if (this.listData) {\r\n                return this.total;\r\n            }\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.$store.dispatch(action.LIST_POSITION, {\r\n            page: this.currentPage,\r\n            status: this.status\r\n        });\r\n    },\r\n\r\n    methods: {\r\n        newVen() {\r\n            this.$router.push(\"NewVendor\");\r\n        },\r\n        handlePageChange(page) {\r\n            this.currentPage = page;\r\n            this.$store.dispatch(action.LIST_POSITION, {\r\n                page: this.currentPage,\r\n                status: this.status\r\n            });\r\n        },\r\n\r\n        Create() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$router.push({\r\n                name: \"NewPosition\"\r\n            });\r\n        },\r\n        Cancel() {\r\n            this.$store.dispatch(action.LIST_EMPLOYEE, 1);\r\n            this.$router.push({\r\n                path: \"/employee\"\r\n            });\r\n        },\r\n        // filterStatus(status){\r\n        //   this.status = status;\r\n        //    this.$store.dispatch(action.LIST_DATA_EMPLOYEE, \r\n        //   { \r\n        //   page: 1,\r\n        //   status: this.status});\r\n        // },\r\n\r\n        getId(id) {\r\n            this.$store.dispatch(action.DETAIL_POSITION, id.idemployee_position);\r\n            this.$router.push({\r\n                path: \"/employee/list-position/\" + id.idemployee_position\r\n            });\r\n        },\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    // display: flex;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    padding: 0px 10px;\r\n    margin-bottom: 20px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.el-select {\r\n    width: 100%;\r\n}\r\n\r\na {\r\n    border-style: dotted;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n    height: 150px;\r\n}\r\n\r\ntd {\r\n    padding: 10px;\r\n}\r\n</style>\r\n"]}]}