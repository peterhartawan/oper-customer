{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/ui/Element/ElementTabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/ui/Element/ElementTabs.vue","mtime":1628175042638},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ThemePicker from '@/components/theme-picker'\n\nexport default {\n\tname: 'ElementTabs',\n\tmethods: {\n      addTab(targetName) {\n        let newTabName = ++this.tabIndex + '';\n        this.editableTabs2.push({\n          title: 'New Tab',\n          name: newTabName,\n          content: 'New Tab content'\n        });\n        this.editableTabsValue2 = newTabName;\n      },\n      removeTab(targetName) {\n        let tabs = this.editableTabs2;\n        let activeName = this.editableTabsValue2;\n        if (activeName === targetName) {\n          tabs.forEach((tab, index) => {\n            if (tab.name === targetName) {\n              let nextTab = tabs[index + 1] || tabs[index - 1];\n              if (nextTab) {\n                activeName = nextTab.name;\n              }\n            }\n          });\n        }\n        \n        this.editableTabsValue2 = activeName;\n        this.editableTabs2 = tabs.filter(tab => tab.name !== targetName);\n      }\n    },\n\tdata() {\n\t\treturn {\n\t\t\teditableTabsValue2: '2',\n\t\t\teditableTabs2: [{\n\t\t\ttitle: 'Tab 1',\n\t\t\tname: '1',\n\t\t\tcontent: 'Tab 1 content'\n\t\t\t}, {\n\t\t\ttitle: 'Tab 2',\n\t\t\tname: '2',\n\t\t\tcontent: 'Tab 2 content'\n\t\t\t}],\n\t\t\ttabIndex: 2,\n\t\t\ttabPosition: 'top',\n\t\t\tcode1: \n`\n<template>\n  <el-radio-group v-model=\"tabPosition\" style=\"margin-bottom: 30px;\">\n    <el-radio-button label=\"top\">top</el-radio-button>\n    <el-radio-button label=\"right\">right</el-radio-button>\n    <el-radio-button label=\"bottom\">bottom</el-radio-button>\n    <el-radio-button label=\"left\">left</el-radio-button>\n  </el-radio-group>\n\n  <el-tabs :tab-position=\"tabPosition\" style=\"height: 200px;\">\n    <el-tab-pane label=\"User\">User</el-tab-pane>\n    <el-tab-pane label=\"Config\">Config</el-tab-pane>\n    <el-tab-pane label=\"Role\">Role</el-tab-pane>\n    <el-tab-pane label=\"Task\">Task</el-tab-pane>\n  </el-tabs>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        tabPosition: 'top'\n      };\n    }\n  };\n<\\/script>\n`\n\t\t,code2:\n`\n<el-tabs type=\"border-card\">\n  <el-tab-pane>\n    <span slot=\"label\"><i class=\"el-icon-date\"></i> Route</span>\n    Route\n  </el-tab-pane>\n  <el-tab-pane label=\"Config\">Config</el-tab-pane>\n  <el-tab-pane label=\"Role\">Role</el-tab-pane>\n  <el-tab-pane label=\"Task\">Task</el-tab-pane>\n</el-tabs>\n`\n\t\t,code3:\n`\n<div style=\"margin-bottom: 20px;\">\n  <el-button\n    size=\"small\"\n    @click=\"addTab(editableTabsValue2)\"\n  >\n    add tab\n  </el-button>\n</div>\n<el-tabs v-model=\"editableTabsValue2\" type=\"card\" closable @tab-remove=\"removeTab\">\n  <el-tab-pane\n    v-for=\"(item, index) in editableTabs2\"\n    :key=\"item.name\"\n    :label=\"item.title\"\n    :name=\"item.name\"\n  >\n    {{item.content}}\n  </el-tab-pane>\n</el-tabs>\n<script>\n  export default {\n    data() {\n      return {\n        editableTabsValue2: '2',\n        editableTabs2: [{\n          title: 'Tab 1',\n          name: '1',\n          content: 'Tab 1 content'\n        }, {\n          title: 'Tab 2',\n          name: '2',\n          content: 'Tab 2 content'\n        }],\n        tabIndex: 2\n      }\n    },\n    methods: {\n      addTab(targetName) {\n        let newTabName = ++this.tabIndex + '';\n        this.editableTabs2.push({\n          title: 'New Tab',\n          name: newTabName,\n          content: 'New Tab content'\n        });\n        this.editableTabsValue2 = newTabName;\n      },\n      removeTab(targetName) {\n        let tabs = this.editableTabs2;\n        let activeName = this.editableTabsValue2;\n        if (activeName === targetName) {\n          tabs.forEach((tab, index) => {\n            if (tab.name === targetName) {\n              let nextTab = tabs[index + 1] || tabs[index - 1];\n              if (nextTab) {\n                activeName = nextTab.name;\n              }\n            }\n          });\n        }\n        \n        this.editableTabsValue2 = activeName;\n        this.editableTabs2 = tabs.filter(tab => tab.name !== targetName);\n      }\n    }\n  }\n<\\/script>\n`\n\t\t}\n\t},\n\tcomponents: {\n\t\tThemePicker\n\t}\n}\n",{"version":3,"sources":["ElementTabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ElementTabs.vue","sourceRoot":"src/views/ui/Element","sourcesContent":["<template>\n\t<vue-scroll class=\"page-element-tabs\">\n\t\t<div class=\"page-header\">\n\t\t\t<h1>Element Tabs\n\t\t\t\t<theme-picker style=\"float:right\"></theme-picker>\n\t\t\t</h1>\n\t\t\t<h4><a href=\"http://element.eleme.io/#/en-US/component/tabs\" target=\"_blank\"><i class=\"mdi mdi-book-open-page-variant\"></i> see from the complete documentation</a></h4>\n\t\t</div>\n\t\t<div class=\"card-base card-shadow--medium demo-box bg-white\">\n\t\t\t<el-collapse value=\"1\">\n\t\t\t\t<el-collapse-item title=\"Tab position\" name=\"1\">\n\t\t\t\t\t<el-radio-group v-model=\"tabPosition\" style=\"margin-bottom: 30px;\">\n\t\t\t\t\t\t<el-radio-button label=\"top\">top</el-radio-button>\n\t\t\t\t\t\t<el-radio-button label=\"right\">right</el-radio-button>\n\t\t\t\t\t\t<el-radio-button label=\"bottom\">bottom</el-radio-button>\n\t\t\t\t\t\t<el-radio-button label=\"left\">left</el-radio-button>\n\t\t\t\t\t</el-radio-group>\n\n\t\t\t\t\t<el-tabs :tab-position=\"tabPosition\" style=\"height: 200px;\">\n\t\t\t\t\t\t<el-tab-pane label=\"User\">User</el-tab-pane>\n\t\t\t\t\t\t<el-tab-pane label=\"Config\">Config</el-tab-pane>\n\t\t\t\t\t\t<el-tab-pane label=\"Role\">Role</el-tab-pane>\n\t\t\t\t\t\t<el-tab-pane label=\"Task\">Task</el-tab-pane>\n\t\t\t\t\t</el-tabs>\n\t\t\t\t</el-collapse-item>\n\t\t\t\t<el-collapse-item title=\"Code\" name=\"2\">\n\t\t\t\t\t<pre v-highlightjs=\"code1\"><code class=\"html\"></code></pre>\n\t\t\t\t</el-collapse-item>\n\t\t\t</el-collapse>\n\t\t</div>\n\t\t<div class=\"card-base card-shadow--medium demo-box bg-white\">\n\t\t\t<el-collapse value=\"1\">\n\t\t\t\t<el-collapse-item title=\"Custom Tab\" name=\"1\">\n\t\t\t\t\t<el-tabs type=\"border-card\">\n\t\t\t\t\t<el-tab-pane>\n\t\t\t\t\t\t<span slot=\"label\"><i class=\"el-icon-date\"></i> Route</span>\n\t\t\t\t\t\tRoute\n\t\t\t\t\t</el-tab-pane>\n\t\t\t\t\t<el-tab-pane label=\"Config\">Config</el-tab-pane>\n\t\t\t\t\t<el-tab-pane label=\"Role\">Role</el-tab-pane>\n\t\t\t\t\t<el-tab-pane label=\"Task\">Task</el-tab-pane>\n\t\t\t\t\t</el-tabs>\n\t\t\t\t</el-collapse-item>\n\t\t\t\t<el-collapse-item title=\"Code\" name=\"2\">\n\t\t\t\t\t<pre v-highlightjs=\"code2\"><code class=\"html\"></code></pre>\n\t\t\t\t</el-collapse-item>\n\t\t\t</el-collapse>\n\t\t</div>\n\t\t<div class=\"card-base card-shadow--medium demo-box bg-white\">\n\t\t\t<el-collapse value=\"1\">\n\t\t\t\t<el-collapse-item title=\"Customized trigger button of new tab\" name=\"1\">\n\t\t\t\t\t<div style=\"margin-bottom: 20px;\">\n\t\t\t\t\t\t<el-button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t@click=\"addTab(editableTabsValue2)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tadd tab\n\t\t\t\t\t\t</el-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<el-tabs v-model=\"editableTabsValue2\" type=\"card\" closable @tab-remove=\"removeTab\">\n\t\t\t\t\t\t<el-tab-pane\n\t\t\t\t\t\t\tv-for=\"item in editableTabs2\"\n\t\t\t\t\t\t\t:key=\"item.name\"\n\t\t\t\t\t\t\t:label=\"item.title\"\n\t\t\t\t\t\t\t:name=\"item.name\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{item.content}}\n\t\t\t\t\t\t</el-tab-pane>\n\t\t\t\t\t</el-tabs>\n\t\t\t\t</el-collapse-item>\n\t\t\t\t<el-collapse-item title=\"Code\" name=\"2\">\n\t\t\t\t\t<pre v-highlightjs=\"code3\"><code class=\"html\"></code></pre>\n\t\t\t\t</el-collapse-item>\n\t\t\t</el-collapse>\n\t\t</div>\n\t</vue-scroll>\n</template>\n\n<script>\nimport ThemePicker from '@/components/theme-picker'\n\nexport default {\n\tname: 'ElementTabs',\n\tmethods: {\n      addTab(targetName) {\n        let newTabName = ++this.tabIndex + '';\n        this.editableTabs2.push({\n          title: 'New Tab',\n          name: newTabName,\n          content: 'New Tab content'\n        });\n        this.editableTabsValue2 = newTabName;\n      },\n      removeTab(targetName) {\n        let tabs = this.editableTabs2;\n        let activeName = this.editableTabsValue2;\n        if (activeName === targetName) {\n          tabs.forEach((tab, index) => {\n            if (tab.name === targetName) {\n              let nextTab = tabs[index + 1] || tabs[index - 1];\n              if (nextTab) {\n                activeName = nextTab.name;\n              }\n            }\n          });\n        }\n        \n        this.editableTabsValue2 = activeName;\n        this.editableTabs2 = tabs.filter(tab => tab.name !== targetName);\n      }\n    },\n\tdata() {\n\t\treturn {\n\t\t\teditableTabsValue2: '2',\n\t\t\teditableTabs2: [{\n\t\t\ttitle: 'Tab 1',\n\t\t\tname: '1',\n\t\t\tcontent: 'Tab 1 content'\n\t\t\t}, {\n\t\t\ttitle: 'Tab 2',\n\t\t\tname: '2',\n\t\t\tcontent: 'Tab 2 content'\n\t\t\t}],\n\t\t\ttabIndex: 2,\n\t\t\ttabPosition: 'top',\n\t\t\tcode1: \n`\n<template>\n  <el-radio-group v-model=\"tabPosition\" style=\"margin-bottom: 30px;\">\n    <el-radio-button label=\"top\">top</el-radio-button>\n    <el-radio-button label=\"right\">right</el-radio-button>\n    <el-radio-button label=\"bottom\">bottom</el-radio-button>\n    <el-radio-button label=\"left\">left</el-radio-button>\n  </el-radio-group>\n\n  <el-tabs :tab-position=\"tabPosition\" style=\"height: 200px;\">\n    <el-tab-pane label=\"User\">User</el-tab-pane>\n    <el-tab-pane label=\"Config\">Config</el-tab-pane>\n    <el-tab-pane label=\"Role\">Role</el-tab-pane>\n    <el-tab-pane label=\"Task\">Task</el-tab-pane>\n  </el-tabs>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        tabPosition: 'top'\n      };\n    }\n  };\n<\\/script>\n`\n\t\t,code2:\n`\n<el-tabs type=\"border-card\">\n  <el-tab-pane>\n    <span slot=\"label\"><i class=\"el-icon-date\"></i> Route</span>\n    Route\n  </el-tab-pane>\n  <el-tab-pane label=\"Config\">Config</el-tab-pane>\n  <el-tab-pane label=\"Role\">Role</el-tab-pane>\n  <el-tab-pane label=\"Task\">Task</el-tab-pane>\n</el-tabs>\n`\n\t\t,code3:\n`\n<div style=\"margin-bottom: 20px;\">\n  <el-button\n    size=\"small\"\n    @click=\"addTab(editableTabsValue2)\"\n  >\n    add tab\n  </el-button>\n</div>\n<el-tabs v-model=\"editableTabsValue2\" type=\"card\" closable @tab-remove=\"removeTab\">\n  <el-tab-pane\n    v-for=\"(item, index) in editableTabs2\"\n    :key=\"item.name\"\n    :label=\"item.title\"\n    :name=\"item.name\"\n  >\n    {{item.content}}\n  </el-tab-pane>\n</el-tabs>\n<script>\n  export default {\n    data() {\n      return {\n        editableTabsValue2: '2',\n        editableTabs2: [{\n          title: 'Tab 1',\n          name: '1',\n          content: 'Tab 1 content'\n        }, {\n          title: 'Tab 2',\n          name: '2',\n          content: 'Tab 2 content'\n        }],\n        tabIndex: 2\n      }\n    },\n    methods: {\n      addTab(targetName) {\n        let newTabName = ++this.tabIndex + '';\n        this.editableTabs2.push({\n          title: 'New Tab',\n          name: newTabName,\n          content: 'New Tab content'\n        });\n        this.editableTabsValue2 = newTabName;\n      },\n      removeTab(targetName) {\n        let tabs = this.editableTabs2;\n        let activeName = this.editableTabsValue2;\n        if (activeName === targetName) {\n          tabs.forEach((tab, index) => {\n            if (tab.name === targetName) {\n              let nextTab = tabs[index + 1] || tabs[index - 1];\n              if (nextTab) {\n                activeName = nextTab.name;\n              }\n            }\n          });\n        }\n        \n        this.editableTabsValue2 = activeName;\n        this.editableTabs2 = tabs.filter(tab => tab.name !== targetName);\n      }\n    }\n  }\n<\\/script>\n`\n\t\t}\n\t},\n\tcomponents: {\n\t\tThemePicker\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.demo-box {\n\tpadding: 20px;\n\tmargin-bottom: 20px;\n}\npre {\n  margin: 0;\n  background: white;\n}\ncode {\n\tpadding: 0;\n}\n\n@media (max-width: 768px) {code{font-size: 70%;}}\n\n</style>\n\n<style lang=\"scss\">\n.page-element-tabs .el-radio-button__inner {\n  padding: 10px 14px;\n}\n</style>"]}]}