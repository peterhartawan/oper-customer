{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/helper/list-pages.vue?vue&type=template&id=fb7322be&scoped=true&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/helper/list-pages.vue","mtime":1628175042627},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"page-table scrollable only-y\",\n      attrs: { id: \"affix-container\" }\n    },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"card-base card-shadow--medium bg-white\" },\n        [\n          _c(\n            \"el-row\",\n            { attrs: { gutter: 10 } },\n            [\n              _c(\n                \"el-col\",\n                { attrs: { offset: 18, lg: 6 } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { filterable: \"\", placeholder: \"Select\" },\n                      on: { change: _vm.filterStatus },\n                      model: {\n                        value: _vm.payload.idrole,\n                        callback: function($$v) {\n                          _vm.$set(_vm.payload, \"idrole\", $$v)\n                        },\n                        expression: \"payload.idrole\"\n                      }\n                    },\n                    _vm._l(_vm.select, function(item) {\n                      return _c(\"el-option\", {\n                        key: item.idrole,\n                        attrs: { label: item.name, value: item.idrole }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-col\",\n                { attrs: { lg: 24 } },\n                [\n                  _c(\n                    \"el-table\",\n                    {\n                      staticStyle: { width: \"100%\" },\n                      attrs: { data: _vm.listData }\n                    },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          type: \"index\",\n                          index: _vm.paginate.fromP,\n                          label: \"No\",\n                          width: \"100\"\n                        }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { prop: \"name\", label: \"Content Name\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          fixed: \"right\",\n                          label: \"Operations\",\n                          width: \"120\"\n                        },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                _c(\"el-button\", {\n                                  attrs: {\n                                    type: \"success\",\n                                    icon: \"el-icon-edit\",\n                                    circle: \"\"\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.Edit(scope.row)\n                                    }\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ])\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}