{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/enterprise/list-driver-enterprise.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/enterprise/list-driver-enterprise.vue","mtime":1641647319000},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1641690444038},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1641690456354}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Affix from \"@/components/Affix\";\nimport { mapGetters } from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  name: \"ListDriverEnterprise\",\n  data() {\n    return {\n      currentPage: 1,\n      input: \"\",\n      affixEnabled: true,\n      indexT: 1,\n      vendorId: null,\n      input4: \"\",\n      status: 1,\n      spanPIN: 8,\n      form: {\n        name: \"\",\n        status: \"\",\n        nik: \"\",\n        phone: \"\",\n        email: \"\",\n        driver_type: \"\",\n        gender: \"\",\n        address: \"\",\n        birthdate: \"\",\n        photo: \"\",\n        id: \"\",\n        first_login: \"\",\n      },\n      payload: {\n        reason_suspend: \"\",\n        forenterprise: 1,\n        users_id: null,\n        iddriver: \"\",\n        identerprise: \"\",\n      },\n      select: [\n        {\n          name: \"ACTIVE\",\n          status: 1,\n        },\n        {\n          name: \"INACTIVE\",\n          status: 2,\n        },\n        {\n          name: \"SUSPENDED\",\n          status: 3,\n        },\n      ],\n    };\n  },\n  components: {\n    Affix,\n  },\n  computed: {\n    ...mapGetters({\n      listData: getter.GET_LIST_DRIVER,\n      paginate: getter.GET_PAGINATE_DRIVER,\n      totalDriver: getter.GET_DRIVER_TOTAL,\n      dropDown: getter.GET_DROPDOWN_DRIVER,\n      driverAcc: getter.GET_TOTAL_ACCOUNT_DRIVER,\n      enterprise: getter.ENTERPRISE,\n      loading: getter.GET_BUTTON,\n      totalEmployee: getter.GET_ACCOUNT_EMPLOYEE,\n      buttonDelete: getter.GET_BUTTON_DELETE,\n      buttonResendPIN: getter.GET_BUTTON_RESEND_PIN,\n      buttonActive: getter.GET_BUTTON_ACTIVE,\n      buttonSuspend: getter.GET_BUTTON_SUSPEND,\n      buttonEdit: getter.GET_BUTTON_EDIT,\n    }),\n    paginator() {\n      return this.paginate;\n    },\n    indexTam() {\n      return this.indexT;\n    },\n    forTotal() {\n      if (this.listData) {\n        return this.totalDriver;\n      }\n    },\n  },\n\n  async created() {\n    await this.$store.dispatch(action.TOTAL_ACCOUNT_DRIVER);\n    this.$store.commit(mutation.BUTTON_STATUS, false);\n    await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\n      page: this.currentPage,\n      q: this.input4,\n      status: this.status,\n      identerprise: this.enterprise.identerprise,\n    });\n    this.firstData();\n  },\n\n  methods: {\n    async searchChange(v) {\n      let trimName = this.input4.trim();\n      if (trimName.length > 0) {\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\n          page: 1,\n          typedispatcher: this.type,\n          q: trimName,\n          status: this.status,\n          identerprise: this.enterprise.identerprise,\n        });\n        this.firstData();\n      }\n    },\n    async handlePageChange(page) {\n      this.currentPage = page;\n      await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\n        page: this.currentPage,\n        q: this.input4,\n        status: this.status,\n        identerprise: this.enterprise.identerprise,\n      });\n      this.firstData();\n    },\n    Create() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$router.push({\n        name: \"assignee-driver\",\n      });\n    },\n    async filterStatus(status) {\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.status = status;\n      await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\n        page: 1,\n        q: this.input4,\n        status: this.status,\n        identerprise: this.enterprise.identerprise,\n      });\n      this.firstData();\n    },\n    openDialog(data) {\n      this.form.name = data.name;\n      this.form.status =\n        data.status === 1\n          ? \"ACTIVE\"\n          : data.status === 2\n          ? \"INACTIVE\"\n          : \"SUSPENDED\";\n      this.form.nik = data.nik;\n      this.form.phone = data.phonenumber;\n      this.form.photo = data.profile_picture;\n      this.form.email = data.email;\n      this.form.driver_type = data.drivertype.name;\n      this.form.gender = data.gender === 1 ? \"Male\" : \"Female\";\n      this.form.address = data.address;\n      this.form.birthdate = data.birthdate;\n      this.form.id = data.id;\n      this.payload.iddriver = data.iddriver;\n      this.form.first_login = data.is_first_login;\n      this.form.first_login === 1 ? (this.spanPIN = 10) : (this.spanPIN = 8);\n    },\n    getId(id) {\n      this.$store.dispatch(action.DATA_ID_DRIVER, id.users_id);\n    },\n    imgAlt(event) {\n      event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\n    },\n    resendPIN() {\n      let obj = {\n        pin_type: \"/driver/resend-pin\",\n        id: this.form.id,\n      };\n      this.$store.commit(mutation.SET_RESEND_PIN_BUTTON, true);\n      this.$store.dispatch(action.RESEND_PIN, obj);\n    },\n    editButton() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$store.dispatch(action.EDIT_DRIVER_ENTERPRISE, this.form.id);\n    },\n    async deleteB() {\n      await Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          this.payload.users_id = this.form.id;\n          this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n          this.$store.commit(mutation.BUTTON_STATUS, true);\n          this.$store.dispatch(action.DELETE_DRIVER, this.payload);\n        }\n        this.firstData();\n      });\n    },\n    async activeButton() {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, activate it!\",\n      }).then(async (result) => {\n        if (result.value) {\n          this.payload.users_id = this.form.id;\n          this.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n          this.$store.commit(mutation.BUTTON_STATUS, true);\n          await this.$store.dispatch(action.ACTIVATE_DRIVER, this.payload);\n        }\n        this.firstData();\n      });\n    },\n    async suspendButton() {\n      const { value: reason } = await Swal.fire({\n        title: \"Enter the reason of suspending\",\n        input: \"text\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, suspend it!\",\n        inputValidator: (value) => {\n          if (!value) {\n            return \"You need to write something!\";\n          }\n        },\n      });\n      if (reason) {\n        this.$store.commit(mutation.SET_BUTTON_SUSPEND, true);\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        this.payload.reason_suspend = reason;\n        this.payload.users_id = this.form.id;\n        await this.$store.dispatch(action.SUSPEND_DRIVER, this.payload);\n      }\n      this.firstData();\n    },\n    Back() {\n      this.$router.replace({\n        path: \"/detail-enterprise/\" + this.enterprise.identerprise,\n      });\n    },\n    firstData() {\n      if (this.listData.length > 0) {\n        let data = this.listData[0];\n        this.form.name = data.name;\n        this.form.status =\n          data.status === 1\n            ? \"ACTIVE\"\n            : data.status === 2\n            ? \"INACTIVE\"\n            : \"SUSPENDED\";\n        this.form.nik = data.nik;\n        this.form.phone = data.phonenumber;\n        this.form.photo = data.profile_picture;\n        this.form.email = data.email;\n        this.form.driver_type = data.drivertype.name;\n        this.form.gender = data.gender === 1 ? \"Male\" : \"Female\";\n        this.form.address = data.address;\n        this.form.birthdate = data.birthdate;\n        this.form.id = data.id;\n        this.payload.iddriver = data.iddriver;\n        this.form.first_login = data.is_first_login;\n      } else {\n        this.form.name = \"\";\n        this.form.status = \"\";\n        this.form.nik = \"\";\n        this.form.phone = \"\";\n        this.form.photo = \"\";\n        this.form.email = \"\";\n        this.form.driver_type = \"\";\n        this.form.gender = \"\";\n        this.form.address = \"\";\n        this.form.birthdate = \"\";\n        this.form.id = \"\";\n        this.payload.iddriver = \"\";\n        this.form.first_login = \"\";\n      }\n      this.form.first_login === 1 ? (this.spanPIN = 10) : (this.spanPIN = 8);\n    },\n  },\n};\n",{"version":3,"sources":["list-driver-enterprise.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4OA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list-driver-enterprise.vue","sourceRoot":"src/views/pages/enterprise","sourcesContent":["<template>\n  <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <div class=\"container mb-200\">\n      <p class=\"font-weight-600 mt-40\">DRIVER LIST</p>\n      <el-row class=\"mt-20\">\n        <el-card shadow=\"always\" class=\"card-border\">\n          <el-row :gutter=\"20\">\n            <div>\n              <el-button style=\"position: absolute; left: 10px\" @click=\"Back()\"\n                >Back</el-button\n              >\n            </div>\n            <el-col :span=\"12\" class=\"line-not-center\">\n              <div class=\"avatar2 align-vertical text-center\">\n                <img\n                  :src=\"form.photo\"\n                  class=\"align-vertical-middle\"\n                  alt=\"user avatar\"\n                  @error=\"imgAlt\"\n                />\n                <h1 class=\"name-of\">{{ form.name }}</h1>\n                <span>{{ form.status }}</span>\n              </div>\n              <el-row type=\"flex\" justify=\"center\" :gutter=\"20\">\n                <el-col :span=\"9\">\n                  <div style=\"overflow-wrap: break-word\">\n                    <dl>\n                      <dt>NIK</dt>\n                      <dd>{{ form.nik }}</dd>\n\n                      <dt>PHONE</dt>\n                      <dd>{{ form.phone }}</dd>\n\n                      <dt>EMAIL</dt>\n                      <dd>{{ form.email }}</dd>\n\n                      <dt>DRIVER TYPE</dt>\n                      <dd>{{ form.driver_type }}</dd>\n                    </dl>\n                  </div>\n                </el-col>\n                <el-col :span=\"9\">\n                  <div>\n                    <dl>\n                      <dt>GENDER</dt>\n                      <dd>{{ form.gender }}</dd>\n\n                      <dt>ADDRESS</dt>\n                      <dd>{{ form.address }}</dd>\n\n                      <dt>BIRTHDAY</dt>\n                      <dd>{{ form.birthdate }}</dd>\n                    </dl>\n                  </div>\n                </el-col>\n              </el-row>\n\n              <el-row type=\"flex\" justify=\"center\" class=\"mt-10\">\n                <el-col :span=\"6\">\n                  <el-button\n                    @click=\"editButton()\"\n                    type=\"info\"\n                    size=\"small\"\n                    class=\"small-edit\"\n                    >Edit</el-button\n                  >\n                </el-col>\n                <el-col :span=\"spanPIN\">\n                  <el-button\n                    type=\"danger\"\n                    size=\"small\"\n                    :loading=\"buttonSuspend\"\n                    @click=\"suspendButton\"\n                    v-if=\"status === 1\"\n                  >\n                    Suspend\n                  </el-button>\n                  <el-button\n                    style=\"font-size: 10px\"\n                    type=\"success\"\n                    size=\"small\"\n                    :loading=\"buttonResendPIN\"\n                    @click=\"resendPIN\"\n                    v-if=\"form.first_login === 1 && status === 1\"\n                  >\n                    Resend PIN\n                  </el-button>\n                  <el-button\n                    type=\"danger\"\n                    size=\"small\"\n                    @click=\"deleteB\"\n                    :loading=\"buttonDelete\"\n                    v-if=\"status === 3\"\n                  >\n                    Delete\n                  </el-button>\n                  <el-button\n                    type=\"primary\"\n                    size=\"small\"\n                    @click=\"activeButton\"\n                    :loading=\"buttonActive\"\n                    v-if=\"status === 3\"\n                  >\n                    Active\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-row type=\"flex\" justify=\"center\" :gutter=\"20\" class=\"mt-10\">\n                <el-col :span=\"10\">\n                  <el-input\n                    size=\"mini\"\n                    placeholder=\"Search\"\n                    @keyup.native=\"searchChange\"\n                    v-model=\"input4\"\n                  >\n                    <i slot=\"suffix\" class=\"el-input__icon el-icon-search\"></i>\n                  </el-input>\n                </el-col>\n                <el-col :span=\"6\">\n                  <el-select\n                    @change=\"filterStatus\"\n                    v-model=\"status\"\n                    filterable\n                    size=\"mini\"\n                    placeholder=\"All Status\"\n                  >\n                    <el-option\n                      v-for=\"item in select\"\n                      :key=\"item.status\"\n                      :label=\"item.name\"\n                      :value=\"item.status\"\n                    >\n                    </el-option>\n                  </el-select>\n                </el-col>\n                <el-col :span=\"1\">\n                  <el-button\n                    @click=\"Create()\"\n                    size=\"mini\"\n                    style=\"text-align: center\"\n                    type=\"danger\"\n                    ><i class=\"mdi mdi-plus\"></i\n                  ></el-button>\n                </el-col>\n              </el-row>\n\n              <div\n                class=\"contacts-list box grow scrollable only-y\"\n                v-loading=\"loading\"\n              >\n                <div\n                  v-for=\"c in listData\"\n                  :key=\"c.id\"\n                  class=\"flex contact\"\n                  @click=\"openDialog(c)\"\n                >\n                  <div class=\"avatar align-vertical el-col el-col-4\">\n                    <img\n                      :src=\"c.profile_picture\"\n                      class=\"align-vertical-middle\"\n                      alt=\"user avatar\"\n                      @error=\"imgAlt\"\n                    />\n                  </div>\n                  <div class=\"info box grow flex el-col el-col-20\">\n                    <div\n                      class=\"\n                        name\n                        box\n                        grow\n                        flex\n                        column\n                        justify-center\n                        p-10\n                        scrollable\n                        only-x\n                      \"\n                    >\n                      <div class=\"fullname fs-18\">\n                        <strong>{{ c.name }}</strong>\n                      </div>\n                      <div class=\"phone fs-14 secondary-text\">\n                        {{ c.phonenumber }}\n                      </div>\n                      <div class=\"email fs-14 secondary-text\">\n                        {{ c.email }}\n                      </div>\n                    </div>\n                    <div\n                      class=\"phone align-vertical p-10 green\"\n                      v-if=\"c.status === 1\"\n                    >\n                      <span class=\"align-vertical-middle font-weight-600\"\n                        >ACTIVE</span\n                      >\n                    </div>\n                    <div\n                      class=\"phone align-vertical p-10\"\n                      v-if=\"c.status === 2\"\n                    >\n                      <span class=\"align-vertical-middle font-weight-600\"\n                        >IN ACTIVE</span\n                      >\n                    </div>\n                    <div\n                      class=\"phone align-vertical p-10 red\"\n                      v-if=\"c.status === 3\"\n                    >\n                      <span class=\"align-vertical-middle font-weight-600\"\n                        >SUSPENDED</span\n                      >\n                    </div>\n                  </div>\n                </div>\n                <div class=\"grid-content\">\n                  <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    @current-change=\"handlePageChange\"\n                    :total=\"forTotal\"\n                  ></el-pagination>\n                </div>\n              </div>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-row>\n      <div></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Affix from \"@/components/Affix\";\nimport { mapGetters } from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from \"../../../store/mutation-types\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  name: \"ListDriverEnterprise\",\n  data() {\n    return {\n      currentPage: 1,\n      input: \"\",\n      affixEnabled: true,\n      indexT: 1,\n      vendorId: null,\n      input4: \"\",\n      status: 1,\n      spanPIN: 8,\n      form: {\n        name: \"\",\n        status: \"\",\n        nik: \"\",\n        phone: \"\",\n        email: \"\",\n        driver_type: \"\",\n        gender: \"\",\n        address: \"\",\n        birthdate: \"\",\n        photo: \"\",\n        id: \"\",\n        first_login: \"\",\n      },\n      payload: {\n        reason_suspend: \"\",\n        forenterprise: 1,\n        users_id: null,\n        iddriver: \"\",\n        identerprise: \"\",\n      },\n      select: [\n        {\n          name: \"ACTIVE\",\n          status: 1,\n        },\n        {\n          name: \"INACTIVE\",\n          status: 2,\n        },\n        {\n          name: \"SUSPENDED\",\n          status: 3,\n        },\n      ],\n    };\n  },\n  components: {\n    Affix,\n  },\n  computed: {\n    ...mapGetters({\n      listData: getter.GET_LIST_DRIVER,\n      paginate: getter.GET_PAGINATE_DRIVER,\n      totalDriver: getter.GET_DRIVER_TOTAL,\n      dropDown: getter.GET_DROPDOWN_DRIVER,\n      driverAcc: getter.GET_TOTAL_ACCOUNT_DRIVER,\n      enterprise: getter.ENTERPRISE,\n      loading: getter.GET_BUTTON,\n      totalEmployee: getter.GET_ACCOUNT_EMPLOYEE,\n      buttonDelete: getter.GET_BUTTON_DELETE,\n      buttonResendPIN: getter.GET_BUTTON_RESEND_PIN,\n      buttonActive: getter.GET_BUTTON_ACTIVE,\n      buttonSuspend: getter.GET_BUTTON_SUSPEND,\n      buttonEdit: getter.GET_BUTTON_EDIT,\n    }),\n    paginator() {\n      return this.paginate;\n    },\n    indexTam() {\n      return this.indexT;\n    },\n    forTotal() {\n      if (this.listData) {\n        return this.totalDriver;\n      }\n    },\n  },\n\n  async created() {\n    await this.$store.dispatch(action.TOTAL_ACCOUNT_DRIVER);\n    this.$store.commit(mutation.BUTTON_STATUS, false);\n    await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\n      page: this.currentPage,\n      q: this.input4,\n      status: this.status,\n      identerprise: this.enterprise.identerprise,\n    });\n    this.firstData();\n  },\n\n  methods: {\n    async searchChange(v) {\n      let trimName = this.input4.trim();\n      if (trimName.length > 0) {\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\n          page: 1,\n          typedispatcher: this.type,\n          q: trimName,\n          status: this.status,\n          identerprise: this.enterprise.identerprise,\n        });\n        this.firstData();\n      }\n    },\n    async handlePageChange(page) {\n      this.currentPage = page;\n      await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\n        page: this.currentPage,\n        q: this.input4,\n        status: this.status,\n        identerprise: this.enterprise.identerprise,\n      });\n      this.firstData();\n    },\n    Create() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$router.push({\n        name: \"assignee-driver\",\n      });\n    },\n    async filterStatus(status) {\n      this.$store.commit(mutation.BUTTON_STATUS, true);\n      this.status = status;\n      await this.$store.dispatch(action.LIST_DRIVER_ENTERPRISE, {\n        page: 1,\n        q: this.input4,\n        status: this.status,\n        identerprise: this.enterprise.identerprise,\n      });\n      this.firstData();\n    },\n    openDialog(data) {\n      this.form.name = data.name;\n      this.form.status =\n        data.status === 1\n          ? \"ACTIVE\"\n          : data.status === 2\n          ? \"INACTIVE\"\n          : \"SUSPENDED\";\n      this.form.nik = data.nik;\n      this.form.phone = data.phonenumber;\n      this.form.photo = data.profile_picture;\n      this.form.email = data.email;\n      this.form.driver_type = data.drivertype.name;\n      this.form.gender = data.gender === 1 ? \"Male\" : \"Female\";\n      this.form.address = data.address;\n      this.form.birthdate = data.birthdate;\n      this.form.id = data.id;\n      this.payload.iddriver = data.iddriver;\n      this.form.first_login = data.is_first_login;\n      this.form.first_login === 1 ? (this.spanPIN = 10) : (this.spanPIN = 8);\n    },\n    getId(id) {\n      this.$store.dispatch(action.DATA_ID_DRIVER, id.users_id);\n    },\n    imgAlt(event) {\n      event.target.src = require(\"../../../assets/images/avatar-2.jpg\");\n    },\n    resendPIN() {\n      let obj = {\n        pin_type: \"/driver/resend-pin\",\n        id: this.form.id,\n      };\n      this.$store.commit(mutation.SET_RESEND_PIN_BUTTON, true);\n      this.$store.dispatch(action.RESEND_PIN, obj);\n    },\n    editButton() {\n      this.$store.commit(mutation.BUTTON_STATUS, false);\n      this.$store.dispatch(action.EDIT_DRIVER_ENTERPRISE, this.form.id);\n    },\n    async deleteB() {\n      await Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          this.payload.users_id = this.form.id;\n          this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n          this.$store.commit(mutation.BUTTON_STATUS, true);\n          this.$store.dispatch(action.DELETE_DRIVER, this.payload);\n        }\n        this.firstData();\n      });\n    },\n    async activeButton() {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, activate it!\",\n      }).then(async (result) => {\n        if (result.value) {\n          this.payload.users_id = this.form.id;\n          this.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n          this.$store.commit(mutation.BUTTON_STATUS, true);\n          await this.$store.dispatch(action.ACTIVATE_DRIVER, this.payload);\n        }\n        this.firstData();\n      });\n    },\n    async suspendButton() {\n      const { value: reason } = await Swal.fire({\n        title: \"Enter the reason of suspending\",\n        input: \"text\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, suspend it!\",\n        inputValidator: (value) => {\n          if (!value) {\n            return \"You need to write something!\";\n          }\n        },\n      });\n      if (reason) {\n        this.$store.commit(mutation.SET_BUTTON_SUSPEND, true);\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n        this.payload.reason_suspend = reason;\n        this.payload.users_id = this.form.id;\n        await this.$store.dispatch(action.SUSPEND_DRIVER, this.payload);\n      }\n      this.firstData();\n    },\n    Back() {\n      this.$router.replace({\n        path: \"/detail-enterprise/\" + this.enterprise.identerprise,\n      });\n    },\n    firstData() {\n      if (this.listData.length > 0) {\n        let data = this.listData[0];\n        this.form.name = data.name;\n        this.form.status =\n          data.status === 1\n            ? \"ACTIVE\"\n            : data.status === 2\n            ? \"INACTIVE\"\n            : \"SUSPENDED\";\n        this.form.nik = data.nik;\n        this.form.phone = data.phonenumber;\n        this.form.photo = data.profile_picture;\n        this.form.email = data.email;\n        this.form.driver_type = data.drivertype.name;\n        this.form.gender = data.gender === 1 ? \"Male\" : \"Female\";\n        this.form.address = data.address;\n        this.form.birthdate = data.birthdate;\n        this.form.id = data.id;\n        this.payload.iddriver = data.iddriver;\n        this.form.first_login = data.is_first_login;\n      } else {\n        this.form.name = \"\";\n        this.form.status = \"\";\n        this.form.nik = \"\";\n        this.form.phone = \"\";\n        this.form.photo = \"\";\n        this.form.email = \"\";\n        this.form.driver_type = \"\";\n        this.form.gender = \"\";\n        this.form.address = \"\";\n        this.form.birthdate = \"\";\n        this.form.id = \"\";\n        this.payload.iddriver = \"\";\n        this.form.first_login = \"\";\n      }\n      this.form.first_login === 1 ? (this.spanPIN = 10) : (this.spanPIN = 8);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.card-border {\n  border-radius: 11px;\n}\n\n.line-not-center {\n  border-right: 1px solid $text-color-info;\n}\n\n.line {\n  border-right: 1px solid $text-color-info;\n  text-align: center;\n}\n\n.text-p {\n  display: block;\n  color: white;\n  font-weight: 600;\n}\n\n.plus-bg {\n  background-color: #a31424;\n  height: 139px;\n}\n\n.avatar {\n  img {\n    border: 1px solid transparentize($text-color, 0.9);\n    box-sizing: border-box;\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    transition: all 0.5s 0.25s;\n  }\n}\n\n.avatar2 {\n  img {\n    border: 1px solid transparentize($text-color, 0.9);\n    box-sizing: border-box;\n    width: 120px;\n    height: 120px;\n    border-radius: 50%;\n    transition: all 0.5s 0.25s;\n  }\n}\n\n.name-of {\n  margin-bottom: 10px;\n  color: #a31424;\n}\n\n.contacts-list {\n  //margin: 0 auto;\n  height: 500px;\n  width: 100%;\n  max-width: 965px;\n  padding: 0px 30px;\n  box-sizing: border-box;\n\n  .contact {\n    margin: 10px 0;\n    padding: 5px;\n    box-sizing: border-box;\n    cursor: pointer;\n    border-bottom: 1px solid $text-color-info;\n  }\n}\n\n.small-edit {\n  width: 90px;\n}\n.green {\n  color: green;\n}\n.red {\n  color: red;\n}\n/*.card-base {*/\n/*padding: 20px;*/\n/*}*/\n\n/*.el-row {*/\n/*// display: flex;*/\n/*// align-items: center;*/\n/*// justify-content: center;*/\n/*padding: 0px 10px;*/\n/*margin-bottom: 20px;*/\n\n/*&:last-child {*/\n/*margin-bottom: 0;*/\n/*}*/\n/*}*/\n\n/*.el-col {*/\n/*border-radius: 5px;*/\n/*}*/\n\n/*.el-select {*/\n/*width: 100%;*/\n/*}*/\n</style>\n"]}]}