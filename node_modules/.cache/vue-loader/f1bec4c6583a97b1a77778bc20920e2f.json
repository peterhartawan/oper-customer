{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/inspector/pic-task-list-page.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/inspector/pic-task-list-page.vue","mtime":1640440454987},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1640440454211}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport router from '../../../router'\nimport { mapGetters, mapMutations } from 'vuex'\nimport * as getter from '../../../store/getters-types'\nimport * as action from '../../../store/action-types'\nimport * as mutation from '../../../store/mutation-types'\nimport Swal from 'sweetalert2'\n\nexport default {\n    name: 'Table',\n    data() {\n        return {\n            currentPage: 1,\n            input:'',\n            affixEnabled: true,\n            indexT: 1\n\n        }\n    },\n    computed: {\n        ...mapGetters({\n            listData : getter.GET_PICTASK_LIST,\n            paginate : getter.GET_PICTASK_PAGINATE,\n            identer  : getter.GET_ID_ENTERPRISE,\n            loading  : getter.GET_LOADING\n        }),\n        paginat(){\n            return this.paginate\n        },\n        indexTam(){\n            return this.indexT\n        }\n    },\n   async created(){\n        let obj = {\n            currentP        : 1,\n            identerpriseS   : this.identer\n        };\n        await this.$store.dispatch(action.PICTASK_LIST, obj)\n    },\n    methods: {\n        ...mapMutations({\n            setIdEnt : mutation.SET_ID_ENTERPRISE,\n            idInspec : mutation.SET_ID_INSPECTOR\n        }),\n\n        newCorp()   {\n            this.$router.replace('/new-pic')\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.identer)\n        },\n        handlePageChange(page) {\n            this.currentPage = page\n            let obj = {\n                currentP        : this.currentPage,\n                identerpriseS   : this.identer\n            }\n            this.$store.dispatch( action.PICTASK_LIST, obj)\n        },\n        search(){\n        },\n        delButton(e){\n            let obj = {\n                idList: e,\n                currPage: this.currentPage,\n                identer : this.identer\n            }\n            Swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, delete it!'\n            }).then((result) => {\n                if (result.value) {\n                    this.$store.dispatch(action.DELETE_INSPECTOR, obj)\n                    // router.replace('/pic-task-list')\n                    // this.$store.dispatch(action.PICTASK_LIST, this.currentPage)\n\n                }\n            })\n        },\n        indexMethod(index) {\n            return index + this.paginat.fromP;\n        },\n        async handleEdit(e){\n            await this.setIdEnt(this.identer)\n            await this.idInspec(e)\n            this.$router.replace('/edit-inspector')\n        },\n        onBackButton() {\n            router.replace(`/detail-enterprise/${this.identer}`)\n        }\n    }\n}\n",{"version":3,"sources":["pic-task-list-page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pic-task-list-page.vue","sourceRoot":"src/views/pages/inspector","sourcesContent":["<template>\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n        <div class=\"card-base card-shadow--medium bg-white\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"16\">\n                    <el-button\n                            @click=\"onBackButton\"\n                    >\n                        Back\n                    </el-button>\n                    <el-button\n                            @click=\"newCorp\"\n                            type=\"primary\">\n                        New Pic\n                    </el-button>\n                </el-col>\n                <el-col :span=\"8\">\n                    <el-input placeholder=\"Search\" v-model=\"input\" @change=\"search\">\n                    </el-input>\n                </el-col>\n            </el-row>\n\n            <el-row>\n                <el-col :span=\"24\">\n                    <el-table\n                            v-loading=\"loading\"\n                            :data=\"listData\"\n                            stripe\n                            style=\"width: 100%\">\n                        <el-table-column\n                                type=\"index\"\n                                label=\"No\"\n                                :index=\"indexMethod\"\n                                width=\"80\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"name\"\n                                label=\"PIC Name\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"phonenumber\"\n                                label=\"PIC Mobile Phone\">\n                        </el-table-column>\n                        <el-table-column\n                                fixed=\"right\"\n                                width=\"120\">\n                            <template slot-scope=\"scope\">\n                                <el-button\n                                        type=\"danger\"\n                                        icon=\"el-icon-delete\"\n                                        size=\"mini\"\n                                        @click=\"delButton(scope.row.idinspector)\"\n                                        style=\"margin-top: 10px;\">\n                                </el-button>\n                                <el-button\n                                        type=\"success\"\n                                        icon=\"el-icon-edit\"\n                                        @click=\"handleEdit(scope.row.idinspector)\"\n                                        size=\"mini\"></el-button>\n                            </template>\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n\n            <el-row>\n                <el-col :span=\"24\">\n                    <div class=\"grid-content\">\n                        <el-pagination\n                                background\n                                layout=\"prev, pager, next\"\n                                @current-change=\"handlePageChange\"\n                                :total=\"paginat.totalP\">\n\n                        </el-pagination>\n                    </div>\n                </el-col>\n            </el-row>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import router from '../../../router'\n    import { mapGetters, mapMutations } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as action from '../../../store/action-types'\n    import * as mutation from '../../../store/mutation-types'\n    import Swal from 'sweetalert2'\n\n    export default {\n        name: 'Table',\n        data() {\n            return {\n                currentPage: 1,\n                input:'',\n                affixEnabled: true,\n                indexT: 1\n\n            }\n        },\n        computed: {\n            ...mapGetters({\n                listData : getter.GET_PICTASK_LIST,\n                paginate : getter.GET_PICTASK_PAGINATE,\n                identer  : getter.GET_ID_ENTERPRISE,\n                loading  : getter.GET_LOADING\n            }),\n            paginat(){\n                return this.paginate\n            },\n            indexTam(){\n                return this.indexT\n            }\n        },\n       async created(){\n            let obj = {\n                currentP        : 1,\n                identerpriseS   : this.identer\n            };\n            await this.$store.dispatch(action.PICTASK_LIST, obj)\n        },\n        methods: {\n            ...mapMutations({\n                setIdEnt : mutation.SET_ID_ENTERPRISE,\n                idInspec : mutation.SET_ID_INSPECTOR\n            }),\n\n            newCorp()   {\n                this.$router.replace('/new-pic')\n                this.$store.commit(mutation.SET_ID_ENTERPRISE, this.identer)\n            },\n            handlePageChange(page) {\n                this.currentPage = page\n                let obj = {\n                    currentP        : this.currentPage,\n                    identerpriseS   : this.identer\n                }\n                this.$store.dispatch( action.PICTASK_LIST, obj)\n            },\n            search(){\n            },\n            delButton(e){\n                let obj = {\n                    idList: e,\n                    currPage: this.currentPage,\n                    identer : this.identer\n                }\n                Swal.fire({\n                    title: 'Are you sure?',\n                    text: \"You won't be able to revert this!\",\n                    type: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: 'Yes, delete it!'\n                }).then((result) => {\n                    if (result.value) {\n                        this.$store.dispatch(action.DELETE_INSPECTOR, obj)\n                        // router.replace('/pic-task-list')\n                        // this.$store.dispatch(action.PICTASK_LIST, this.currentPage)\n\n                    }\n                })\n            },\n            indexMethod(index) {\n                return index + this.paginat.fromP;\n            },\n            async handleEdit(e){\n                await this.setIdEnt(this.identer)\n                await this.idInspec(e)\n                this.$router.replace('/edit-inspector')\n            },\n            onBackButton() {\n                router.replace(`/detail-enterprise/${this.identer}`)\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    @import '../../../assets/scss/variables';\n\n    .table-box {\n        overflow: auto;\n    }\n    .el-pagination {\n        padding-top: 20px;\n    }\n    .el-input {\n        width: 300px !important;\n    }\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n</style>\n\n"]}]}