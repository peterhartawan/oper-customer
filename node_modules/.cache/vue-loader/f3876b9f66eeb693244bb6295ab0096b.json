{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/vendor/list-vendor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/vendor/list-vendor.vue","mtime":1628175042631},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types';\n\nexport default {\n    name: \"IndexVendor\",\n    data() {\n        return {\n            currentPage: 1,\n            input: \"\",\n            affixEnabled: true,\n            indexT: 1,\n            vendorId: null,\n            status: 1,\n            vendorName: '',\n            select: [{\n                    name: \"ACTIVE\",\n                    status: 1,\n                },\n                {\n                    name: \"INACTIVE\",\n                    status: 2,\n                },\n                {\n                    name: \"SUSPENDED\",\n                    status: 3\n                }\n            ],\n        };\n    },\n    components: {\n        Affix\n    },\n    computed: {\n        ...mapGetters({\n            listData: getter.GET_LIST_VEN,\n            paginate: getter.GET_PAGINATE_VEN,\n            totalVen: getter.GET_VEN_TOTAL,\n            dropDown: getter.GET_DROPDOWN_VENDOR,\n            loading: getter.GET_LOADING\n        }),\n        paginat() {\n            return this.paginate;\n        },\n        indexTam() {\n            return this.indexT;\n        },\n        forTotal() {\n            if (this.listData) {\n                return this.totalVen;\n            }\n        },\n    },\n\n    mounted() {\n        this.$store.dispatch(action.LIST_DATA_VEN, {\n            page: this.currentPage,\n            vendor_name: this.vendorName,\n            status: this.status\n        });\n        this.$store.dispatch(action.DROPDOWN_VENDOR);\n    },\n\n    methods: {\n          Create() {\n            this.$store.commit(mutation.BUTTON_STATUS, false);\n            this.$router.push({\n                name: \"NewVendor\"\n            });\n        },\n        async clearInputButton(){\n            this.$store.commit(mutation.SET_LOADING, true);\n            await this.$store.dispatch(action.LIST_DATA_VEN, {\n                page: 1,\n                vendor_name: this.vendorName,\n                status: this.status\n            });\n        },\n        handlePageChange(page) {\n            this.currentPage = page;\n            this.$store.commit(mutation.SET_LOADING, true);\n            this.$store.dispatch(action.LIST_DATA_VEN, {\n                page: this.currentPage,\n                vendor_name: this.vendorName,\n                status: this.status\n            });\n        },\n        nameE(){\n            let trimName = this.vendorName.trim();\n            this.$store.commit(mutation.SET_LOADING, true);\n            this.$store.dispatch(action.LIST_DATA_VEN, {\n                page: 1,\n                vendor_name: trimName,\n                status: this.status\n            });\n        },\n        filterStatus(status) {\n            this.status = status;\n            this.$store.commit(mutation.SET_LOADING, true);\n            this.$store.dispatch(action.LIST_DATA_VEN, {\n                page: 1,\n                vendor_name: this.vendorName,\n                status: this.status\n            });\n        },\n\n        getId(id) {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$store.dispatch(action.DATA_ID_VENDOR, id.idvendor);\n            this.$router.replace({\n                path: \"/detail-vendor/\" + id.idvendor\n            });\n        }\n    }\n};\n",{"version":3,"sources":["list-vendor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"list-vendor.vue","sourceRoot":"src/views/pages/vendor","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-row :gutter=\"10\">\n            <el-col :lg=\"3\" :xl=\"3\">\n                <el-button @click=\"Create()\" style=\"width: 100%\" type=\"primary\">Create</el-button>\n            </el-col>\n\n            <el-col :lg=\"{ span:5, offset:10}\" :xl=\"{ span:5, offset:10}\">\n                <el-input\n                        placeholder=\"Search\"\n                        prefix-icon=\"el-icon-search\"\n                        clearable\n                        @keyup.native=\"nameE\"\n                        @clear=\"clearInputButton\"\n                        v-model=\"vendorName\">\n                </el-input>\n            </el-col>\n\n            <el-col :lg=\"6\" :xl=\"6\">\n                <el-select @change=\"filterStatus\" v-model=\"status\" filterable placeholder=\"Select\">\n                    <el-option v-for=\"item in select\" :key=\"item.status\" :label=\"item.name\" :value=\"item.status\"></el-option>\n                </el-select>\n            </el-col>\n            <!-- <el-col :offset=\"15\" :lg=\"6\">\n          <el-select v-model=\"vendorId\" filterable placeholder=\"Select\">\n            <el-option label=\"All Vendor\" value=\"0\">All Vendor</el-option>\n            <el-option v-for=\"item in dropDown\" :key=\"item.idvendor\" :label=\"item.name\" :value=\"item.idvendor\">\n            </el-option>\n          </el-select>\n        </el-col> -->\n        </el-row>\n        <el-row :gutter=\"10\">\n            <el-col :lg=\"24\">\n                <el-table v-loading=\"loading\" :data=\"listData\" style=\"width: 100%\" @row-click=\"getId\">\n                    <el-table-column type=\"index\" :index=\"paginate.fromP\" label=\"No\" width=\"100\"></el-table-column>\n                    <el-table-column prop=\"name\" label=\"Name\"></el-table-column>\n                    <el-table-column prop=\"office_phone_number\" label=\"Mobile\"></el-table-column>\n                    <el-table-column prop=\"email\" label=\"Email\"></el-table-column>\n                </el-table>\n            </el-col>\n        </el-row>\n        <div align=\"right\">\n            <el-pagination background layout=\"prev, pager, next\" @current-change=\"handlePageChange\" :total=\"forTotal\"></el-pagination>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types';\n\nexport default {\n    name: \"IndexVendor\",\n    data() {\n        return {\n            currentPage: 1,\n            input: \"\",\n            affixEnabled: true,\n            indexT: 1,\n            vendorId: null,\n            status: 1,\n            vendorName: '',\n            select: [{\n                    name: \"ACTIVE\",\n                    status: 1,\n                },\n                {\n                    name: \"INACTIVE\",\n                    status: 2,\n                },\n                {\n                    name: \"SUSPENDED\",\n                    status: 3\n                }\n            ],\n        };\n    },\n    components: {\n        Affix\n    },\n    computed: {\n        ...mapGetters({\n            listData: getter.GET_LIST_VEN,\n            paginate: getter.GET_PAGINATE_VEN,\n            totalVen: getter.GET_VEN_TOTAL,\n            dropDown: getter.GET_DROPDOWN_VENDOR,\n            loading: getter.GET_LOADING\n        }),\n        paginat() {\n            return this.paginate;\n        },\n        indexTam() {\n            return this.indexT;\n        },\n        forTotal() {\n            if (this.listData) {\n                return this.totalVen;\n            }\n        },\n    },\n\n    mounted() {\n        this.$store.dispatch(action.LIST_DATA_VEN, {\n            page: this.currentPage,\n            vendor_name: this.vendorName,\n            status: this.status\n        });\n        this.$store.dispatch(action.DROPDOWN_VENDOR);\n    },\n\n    methods: {\n          Create() {\n            this.$store.commit(mutation.BUTTON_STATUS, false);\n            this.$router.push({\n                name: \"NewVendor\"\n            });\n        },\n        async clearInputButton(){\n            this.$store.commit(mutation.SET_LOADING, true);\n            await this.$store.dispatch(action.LIST_DATA_VEN, {\n                page: 1,\n                vendor_name: this.vendorName,\n                status: this.status\n            });\n        },\n        handlePageChange(page) {\n            this.currentPage = page;\n            this.$store.commit(mutation.SET_LOADING, true);\n            this.$store.dispatch(action.LIST_DATA_VEN, {\n                page: this.currentPage,\n                vendor_name: this.vendorName,\n                status: this.status\n            });\n        },\n        nameE(){\n            let trimName = this.vendorName.trim();\n            this.$store.commit(mutation.SET_LOADING, true);\n            this.$store.dispatch(action.LIST_DATA_VEN, {\n                page: 1,\n                vendor_name: trimName,\n                status: this.status\n            });\n        },\n        filterStatus(status) {\n            this.status = status;\n            this.$store.commit(mutation.SET_LOADING, true);\n            this.$store.dispatch(action.LIST_DATA_VEN, {\n                page: 1,\n                vendor_name: this.vendorName,\n                status: this.status\n            });\n        },\n\n        getId(id) {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$store.dispatch(action.DATA_ID_VENDOR, id.idvendor);\n            this.$router.replace({\n                path: \"/detail-vendor/\" + id.idvendor\n            });\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    padding: 0px 10px;\n    margin-bottom: 20px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.el-select {\n    width: 100%;\n}\n\n.thumbnail {\n    position: relative;\n    width: 300px;\n    height: 300px;\n    overflow: hidden;\n}\n\n.thumbnail img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    height: 100%;\n    width: auto;\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n}\n\n.thumbnail img.portrait {\n    width: 100%;\n    height: auto;\n}\n\na {\n    border-style: dotted;\n    border-radius: 15px;\n    padding: 10px;\n    height: 150px;\n}\n\ntd {\n    padding: 10px;\n}\n</style>\n"]}]}