{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/components/employee/total-account.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/components/employee/total-account.vue","mtime":1628175042599},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.el-pagination.is-background .el-pager li:not(.disabled).active {\n    background-color: #D50000 !important;\n}\n",{"version":3,"sources":["total-account.vue"],"names":[],"mappingskiBA;AACA;AACA","file":"total-account.vue","sourceRoot":"src/components/employee","sourcesContent":["<template>\n<div class=\"container mb-200\">\n    <p class=\"font-weight-600\">ACCOUNT</p>\n    <el-row :gutter=\"50\">\n        <el-col :span=\"17\">\n            <el-card shadow=\"always\" :body-style=\"{padding: '5px'}\" class=\"card-border\">\n                <el-row :gutter=\"20\" v-if=\"totalEmployee !== null\">\n                    <el-col :span=\"8\">\n                        <div class=\"line\">\n                            <p class=\"pb-20 font-weight-600 mt-8\">TOTAL EMPLOYEE</p>\n                            <span class=\"font-size-44 font-weight-600\">{{totalEmployee.total_driver}}</span>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <div class=\"line\">\n                            <p class=\"pb-20 font-weight-600 mt-8\">ACTIVE ACCOUNT</p>\n                            <span class=\"font-size-44 font-weight-600\">{{totalEmployee.total_driver_active}}</span>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <div class=\"text-center\">\n                            <p class=\"pb-20 font-weight-600 mt-8\">SUSPENDED ACCOUNT</p>\n                            <span class=\"font-size-44 font-weight-600\">{{totalEmployee.total_driver_suspend}}</span>\n                        </div>\n                    </el-col>\n                </el-row>\n            </el-card>\n        </el-col>\n        <el-col :span=\"3\">\n            <el-button @click=\"CreateEmployee\" shadow=\"always\" :body-style=\"{padding: '10px'}\" class=\"card-border plus-bg text-center\">\n                <i class=\"mdi mdi-plus font-size-60 font-weight-500 white-text\"></i>\n                <span class=\"text-p\">Add New</span>\n                <span class=\"text-p\">Employee</span>\n            </el-button>\n        </el-col>\n         <el-col :span=\"2\">\n            <el-button @click=\"Position\" shadow=\"always\" :body-style=\"{padding: '10px'}\" class=\"card-border plus-bg2 text-center\">\n                <i class=\"mdi mdi-clipboard-account font-size-60 font-weight-500 white-text\"></i>\n                <span class=\"text-p\">List</span>\n                <span class=\"text-p\">Position</span>\n            </el-button>\n        </el-col>\n    </el-row>\n\n    <p class=\"font-weight-600 mt-40\">INFO</p>\n    <el-row class=\"mt-20\">\n        <el-card shadow=\"always\" class=\"card-border\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"12\" class=\"line-not-center\">\n                    <div class=\"avatar2 align-vertical text-center\">\n                        <img :src=\"form.photo\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\n                        <h1 class=\"name-of\">{{ form.name }}</h1>\n                        <span>\n                            <h3>{{form.status == 1 ? 'ACTIVE' : (form.status == 2 ? 'INACTIVE' : 'SUSPENDED')}}</h3>\n                        </span>\n                    </div>\n                    <el-row type=\"flex\" justify=\"center\">\n                        <el-col :span=\"9\">\n                            <div>\n                                <dl>\n                                    <dt>PHONE</dt>\n                                    <dd>{{ form.phone }}</dd>\n                                    <dt>TYPE</dt>\n                                    <dd>{{ form.job }}</dd>\n                                    <dt>GENDER</dt>\n                                    <dd>{{form.gender == 1 ? 'Male' : 'Female'}}</dd>\n                                    <dt>EMAIL</dt>\n                                    <dd>{{ form.email }}</dd>\n                                </dl>\n                            </div>\n                        </el-col>\n                        <el-col :span=\"9\">\n                            <div>\n                                <dl>\n                                    <dt>BIRTHDATE</dt>\n                                    <dd>{{ form.birthdate }}</dd>\n                                    <dt v-if=\"form.address !== ''\">ADDRESS</dt>\n                                    <dd>{{ form.address }}</dd>\n                                    <dt>NIK</dt>\n                                    <dd>{{ form.nik }}</dd>\n                                </dl>\n                            </div>\n                        </el-col>\n                    </el-row>\n                    <el-row type=\"flex\" justify=\"center\" class=\"mt-10\">\n                        <el-col :span=\"12\">\n                            <el-button @click=\"editButton\" type=\"info\" size=\"small\" class=\"small-edit\">Edit</el-button>\n                            <el-button @click=\"additionalImage\" plain type=\"success\" size=\"small\" >Additional Image</el-button>\n                        </el-col>\n                        <el-col :span=\"12\">\n                            <el-button type=\"danger\" size=\"small\" @click=\"suspendButton\" :loading=\"buttonSuspend\" v-if=\"status === 1\">Suspend</el-button>\n                            <el-button type=\"success\" size=\"small\" @click=\"resendActivation\" :loading=\"buttonResendPIN\" v-if=\"status === 2\">Resend Activation</el-button>\n                            <el-button type=\"danger\" size=\"small\" @click=\"deleteB\" :loading=\"buttonDelete\" v-if=\"status === 3\"> Delete </el-button>\n                            <el-button type=\"primary\" size=\"small\" @click=\"activeButton\" :loading=\"buttonActive\" v-if=\"status === 3\">Activate</el-button>\n                        </el-col>\n                    </el-row>\n                </el-col>\n                <el-col :span=\"12\">\n                    <el-row type=\"flex\" justify=\"center\" :gutter=\"20\" class=\"mt-10\">\n                        <el-col :span=\"10\">\n                            <el-input size=\"mini\" placeholder=\"Search\" @keyup.native=\"searchChange\" v-model=\"input4\">\n                                <i slot=\"suffix\" class=\"el-input__icon el-icon-search\"></i>\n                            </el-input>\n                        </el-col>\n                        <el-col :span=\"6\">\n                            <el-select @change=\"filterStatus\" v-model=\"status\" filterable size=\"mini\" placeholder=\"All Status\">\n                                <el-option v-for=\"item in select\" :key=\"item.status\" :label=\"item.name\" :value=\"item.status\">\n                                </el-option>\n                            </el-select>\n                        </el-col>\n                    </el-row>\n                    <div class=\"contacts-list box grow scrollable only-y\" v-loading=\"loading\">\n                        <el-row :gutter=\"20\">\n                            <div v-for=\"c in listData\" :key=\"c.id\" class=\"flex contact\" @click=\"openDialog(c)\">\n                                <div class=\"avatar align-vertical el-col el-col-4\">\n                                    <img :src=\"c.profile_picture\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\n                                </div>\n                                <div class=\"info box grow flex el-col el-col-20\">\n                                            <div class=\"name box grow flex column justify-center p-10 scrollable only-x\">\n                                                <div class=\"fullname fs-18\"><strong>{{c.name}}</strong></div>\n                                                <div class=\"phone fs-14 secondary-text\">{{c.phonenumber}}</div>\n                                                <div class=\"email fs-14 secondary-text\">{{c.email}}</div>\n                                            </div>\n                                            <div class=\"phone align-vertical p-10\" style=\"color: green\" v-if=\"c.status === 1\"><span class=\"align-vertical-middle font-weight-600\">ACTIVE</span></div>\n                                            <div class=\"phone align-vertical p-10\" v-if=\"c.status === 2\"><span class=\"align-vertical-middle font-weight-600\">IN ACTIVE</span></div>\n                                            <div class=\"phone align-vertical p-10\" style=\"color: red\" v-if=\"c.status === 3\"><span class=\"align-vertical-middle font-weight-600\">SUSPENDED</span></div>\n                                </div>\n                            </div>\n                        </el-row>\n                        <div class=\"grid-content\">\n                            <el-pagination background layout=\"prev, pager, next\" @current-change=\"handlePageChange\" :total=\"forTotal\">\n                            </el-pagination>\n                        </div>\n                    </div>\n                </el-col>\n            </el-row>\n        </el-card>\n    </el-row>\n    <el-dialog\n            :visible.sync=\"centerDialogVisible\"\n            width=\"20%\"\n            center>\n            <img\n                    style=\"width: 100%\"\n                    :src=\"form.photo_2\"\n                    alt=\"user avatar\"\n                    @error=\"imgAlt\">\n    </el-dialog>\n</div>\n</template>\n\n<script>\nimport router from '../../router'\nimport Swal from 'sweetalert2'\nimport Contacts from '@/assets/data/CONTACTS_MOCK_DATA.json'\nimport {\n    mapGetters,\n    mapActions\n} from 'vuex'\nimport * as getter from '../../store/getters-types'\nimport * as action from '../../store/action-types'\nimport * as mutation from '../../store/mutation-types'\n\nexport default {\n    name: 'Contacts',\n    data() {\n        return {\n            currentPage: 1,\n            status: 1,\n            type: '',\n            search: '',\n            dialogvisible: false,\n            pageWidth: 0,\n            userdata: {},\n            contacts: Contacts.slice(0, 30),\n            options: [{\n                value: 'Option1',\n                label: 'Option1'\n            }, {\n                value: 'Option2',\n                label: 'Option2',\n                disabled: true\n            }, {\n                value: 'Option3',\n                label: 'Option3'\n            }, {\n                value: 'Option4',\n                label: 'Option4'\n            }, {\n                value: 'Option5',\n                label: 'Option5'\n            }],\n            alt: 'require(\"@/assets/images/avatar-2.jpg\");',\n            value: '',\n            input4: '',\n            centerDialogVisible: false,\n            form: {\n                name: '',\n                photo: '',\n                photo_2: '',\n                status: '',\n                company: '',\n                phone: '',\n                email: '',\n                address: '',\n                nik: '',\n                id: '',\n                users_id: '',\n                gender: '',\n                job: '',\n            },\n            payload: {\n                reason_suspend: \"\",\n                users_id: null,\n                status: null,\n                page: 1,\n            },\n            select: [{\n                    name: \"ACTIVE\",\n                    status: 1,\n                },\n                {\n                    name: \"INACTIVE\",\n                    status: 2,\n                },\n                {\n                    name: \"SUSPENDED\",\n                    status: 3\n                }\n            ],\n        }\n    },\n    methods: {\n        searchChange(v) {\n            let trimName = this.input4.trim()\n            if (trimName.length > 0) {\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.$store.dispatch(action.LIST_EMPLOYEE, {\n                    page: 1,\n                    employee_search: trimName,\n                    status: this.status\n                });\n            } else {\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.$store.dispatch(action.LIST_EMPLOYEE, {\n                    page: 1,\n                    employee_search: trimName,\n                    status: this.status\n                });\n            }\n        },\n        newDispatcher() {\n            this.$router.replace('new-dispatcher')\n        },\n        imgAlt(event) {\n            event.target.src = require(\"../../assets/images/avatar-2.jpg\");\n        },\n        handlePageChange(page) {\n            this.currentPage = page\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.$store.dispatch(action.LIST_EMPLOYEE, {\n                page: this.currentPage,\n                status: this.status\n            });\n        },\n        async filterStatus(status) {\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.status = status;\n            await this.$store.dispatch(action.LIST_EMPLOYEE, {\n                page: 1,\n                status: this.status\n            });\n            this.formData()\n        },\n        openDialog(data) {\n            // this.form.photos = data.profile_pictures;\n            this.form.phone = data.phonenumber;\n            this.form.email = data.email;\n            this.form.nik = data.nik;\n            this.form.photo = data.profile_picture;\n            this.form.id = data.idemployee;\n            this.form.name = data.name;\n            this.form.address = data.address;\n            this.form.birthdate = data.birthdate;\n            this.form.users_id = data.users_id;\n            this.form.status = data.status;\n            this.form.job = data.employee_position.job_name;\n            this.form.gender = data.gender;\n            this.form.photo_2 = data.profil_picture_2;\n        },\n        additionalImage(){\n            if(this.form.photo_2 === null){ this.form.photo_2 = this.alt}\n            this.centerDialogVisible = true\n        },\n        async deleteB() {\n            await Swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, delete it!'\n            }).then( async result => {\n                if (result.value) {\n                    this.payload.users_id = this.form.users_id;\n                    this.payload.status = this.form.status;\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    this.$store.commit(mutation.SET_BUTTON_DELETE, true);\n                    this.$store.dispatch(action.DELETE_EMPLOYEE, this.payload)\n                    await this.dataBeforeCreated();\n                }\n            });\n        },\n        resendActivation() {\n            let obj = {\n                pin_type: \"/employee/resend-pin\",\n                id: this.form.users_id\n            };\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            this.$store.dispatch(action.RESEND_PIN, obj);\n        },\n        async activeButton() {\n            await Swal.fire({\n                title: \"Are you sure?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, activate it!\"\n            }).then( async result => {\n                if (result.value) {\n                    this.payload.users_id = this.form.users_id;\n                    this.payload.status = this.form.status;\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    this.$store.commit(mutation.SET_BUTTON_ACTIVE, true);\n                    await this.$store.dispatch(action.ACTIVATE_EMPLOYEE, this.payload);\n                    this.dataBeforeCreated();\n                }\n            });\n        },\n        CreateEmployee() {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$router.push({\n                name: \"NewEmployee\"\n            });\n        },\n        Position() {\n            this.$router.push({\n                name: \"ListPosition\"\n            });\n        },\n        async suspendButton() {\n            const {\n                value: reason\n            } = await Swal.fire({\n                title: 'Enter the reason of suspending',\n                input: 'text',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, suspend it!',\n                inputValidator: (value) => {\n                    if (!value) {\n                        return 'You need to write something!'\n                    }\n                }\n            });\n            if (reason) {\n                this.payload.reason_suspend = reason;\n                this.payload.users_id = this.form.users_id;\n                this.payload.status = this.form.status;\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                await this.$store.dispatch(action.SUSPEND_EMPLOYEE, this.payload);\n                this.dataBeforeCreated();\n            }\n        },\n        async editButton() {\n            this.$store.commit(mutation.BUTTON_STATUS, false);\n            await this.$store.dispatch(action.DETAIL_EMPLOYEE, this.form.id);\n            router.push({\n                path: `/edit-employee/` + this.form.id\n            });\n        },\n        formData(){\n            // this.form.photos = this.listData[0].profile_pictures;\n            this.form.phone = this.listData[0].phonenumber;\n            this.form.email = this.listData[0].email;\n            this.form.id = this.listData[0].idemployee;\n            this.form.nik = this.listData[0].nik;\n            this.form.photo = this.listData[0].profile_picture;\n            this.form.name = this.listData[0].name;\n            this.form.address = this.listData[0].address;\n            this.form.birthdate = this.listData[0].birthdate;\n            this.form.users_id = this.listData[0].id;\n            this.form.status = this.listData[0].status;\n            this.form.job = this.listData[0].employee_position.job_name;\n            this.form.gender = parseInt(this.listData[0].gender);\n            this.form.photo_2 = this.listData[0].profil_picture_2;\n        },\n        async dataBeforeCreated(){\n            await this.$store.dispatch(action.LIST_EMPLOYEE, {\n                page: this.currentPage,\n                status: this.status\n            });\n            if (this.listData !== null) {\n                if (this.listData.length > 0) {\n                    this.formData();\n                }\n            }\n        }\n    },\n    async created() {\n        this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.dataBeforeCreated()\n    },\n    async mounted() {\n        await this.$store.dispatch(action.ACCOUNT_EMPLOYEE)\n        if (this.listData !== null) {\n            if (this.listData.length > 0) {\n                this.formData();\n            }\n        }\n    },\n    computed: {\n        ...mapGetters({\n            total           : getter.GET_EMPLOYEE_TOTAL,\n            listData        : getter.GET_LIST_EMPLOYEE,\n            paginate        : getter.GET_PAGINATE_EMPLOYEE,\n            loading         : getter.GET_BUTTON,\n            totalEmployee   : getter.GET_ACCOUNT_EMPLOYEE,\n            buttonDelete    : getter.GET_BUTTON_DELETE,\n            buttonResendPIN : getter.GET_BUTTON_RESEND_PIN,\n            buttonActive    : getter.GET_BUTTON_ACTIVE,\n            buttonSuspend   : getter.GET_BUTTON_SUSPEND,\n            buttonEdit      : getter.GET_BUTTON_EDIT\n        }),\n        contactsFiltered() {\n            return this.contacts.filter(({\n                full_name,\n                email,\n                phone\n            }) => (full_name + email + phone).toString().toLowerCase().indexOf(this.search.toString().toLowerCase()) !== -1)\n        },\n        contactsClass() {\n            return this.pageWidth >= 870 ? 'large' : this.pageWidth >= 760 ? 'medium' : 'small'\n        },\n        forTotal() {\n            if (this.listData) {\n                return this.total;\n            }\n        }\n    },\n    paginato() {\n        return this.paginate\n    },\n    indexTam() {\n        return this.indexT\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/scss/_variables\";\n\n.card-border {\n    border-radius: 11px;\n}\n\n.line-not-center {\n    border-right: 3px solid #3333;\n}\n\n.line {\n    border-right: 3px solid #3333;\n    text-align: center;\n}\n\n.text-p {\n    display: block;\n    color: white;\n    font-weight: 600;\n}\n\n.plus-bg {\n    background-color: #a31424;\n    height: 139px;\n\n}\n.plus-bg2 {\n    background-color: #e64a19\n\n;\n    height: 139px;\n\n}\n\n.avatar {\n    img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 60px;\n        height: 60px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n    }\n}\n\n.avatar2 {\n    img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 120px;\n        height: 120px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n    }\n}\n\n.name-of {\n    margin-bottom: 10px;\n    color: #a31424;\n}\n\n.contacts-list {\n    //margin: 0 auto;\n    height: 600px;\n    width: 100%;\n    max-width: 965px;\n    padding: 0px 30px;\n    box-sizing: border-box;\n\n    .contact {\n        margin: 10px 0;\n        padding: 5px;\n        box-sizing: border-box;\n        cursor: pointer;\n        border-bottom: 1px solid $text-color-info;\n    }\n}\n\n.small-edit {\n    width: 90px;\n}\n</style>\n<style lang=\"scss\">\n.el-pagination.is-background .el-pager li:not(.disabled).active {\n    background-color: #D50000 !important;\n}\n</style>\n"]}]}