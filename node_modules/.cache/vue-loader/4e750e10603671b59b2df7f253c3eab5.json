{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/vendor/edit-admin-vendor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/vendor/edit-admin-vendor.vue","mtime":1628175042631},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types';\nimport Swal from \"sweetalert2\";\nexport default {\n    name: \"EditAdminVendor\",\n    data() {\n        return {\n            payload: {\n                idadmin: \"\",\n                reason_suspend: null,\n                idvendor: \"\",\n\n            },\n            form: {\n                idvendor: \"\",\n                idadmin: \"\",\n                admin_name: \"\",\n                admin_phonenumber: \"\",\n                admin_email: \"\",\n                status: \"\",\n            },\n            rules: {\n                admin_name: [{\n                    required: true,\n                    message: \"Admin Name is required!\",\n                    trigger: \"blur\"\n                }],\n                admin_phonenumber: [{\n                    required: true,\n                    message: \"Admin Mobile Number is required!\",\n                    trigger: \"blur\"\n                }],\n                admin_email: [{\n                    required: true,\n                    message: \"Admin Email is required!\",\n                    trigger: \"blur\"\n                }]\n            }\n        };\n    },\n    created() {\n        this.form.idvendor = this.vendor.idvendor;\n        this.form.idadmin = this.adminVendor.id;\n        this.form.admin_name = this.adminVendor.name;\n        this.form.status = this.adminVendor.status;\n        this.form.admin_phonenumber = this.adminVendor.phonenumber;\n        this.form.admin_email = this.adminVendor.email;\n        this.payload.idadmin = this.adminVendor.id;\n        this.payload.idvendor = this.vendor.idvendor;\n    },\n    methods: {\n        onSubmit() {\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            this.$store.dispatch(action.UPDATE_DATA_ADMIN, this.form);\n        },\n        Cancel() {\n            this.$router.replace({\n                path: \"/detail-vendor/\" + this.vendor.idvendor\n            });\n        },\n        isNumber(evt) {\n            evt = evt ? evt : window.event;\n            var charCode = evt.which ? evt.which : evt.keyCode;\n            if (\n                charCode > 31 &&\n                (charCode < 48 || charCode > 57)\n            ) {\n                evt.preventDefault();\n            } else {\n                return true;\n            }\n        },\n        async suspend() {\n            const {\n                value: reason\n            } = await Swal.fire({\n                title: 'Enter the reason of suspending',\n                input: 'text',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, suspend it!',\n                inputValidator: (value) => {\n                    if (!value) {\n                        return 'You need to write something!'\n                    }\n                }\n            })\n            if (reason) {\n                this.$store.commit(mutation.BUTTON_STATUS, true)\n                this.payload.reason_suspend = reason;\n                this.$store.dispatch(action.SUSPEND_ADMIN, this.payload)\n            }\n        },\n        activeButton() {\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, activate it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.ACTIVATE_ADMIN_VENDOR, this.payload);\n                }\n            });\n        },\n        deleteB() {\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    this.$store.dispatch(action.DELETE_ADMIN_VENDOR, this.payload);\n                }\n            });\n        }\n    },\n    computed: {\n        ...mapGetters({\n            button: getter.GET_BUTTON,\n            vendor: getter.VENDOR,\n            adminVendor: getter.GET_ADMIN_DATA_VEND\n        })\n    }\n};\n",{"version":3,"sources":["edit-admin-vendor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-admin-vendor.vue","sourceRoot":"src/views/pages/vendor","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n            <el-row :gutter=\"20\">\n                <el-col>Admin</el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"8\">\n                    <el-form-item prop=\"admin_name\">\n                        <el-input placeholder=\"Admin Name\" v-model=\"form.admin_name\"></el-input>\n                    </el-form-item>\n                </el-col>\n                <el-col :lg=\"8\">\n                    <el-form-item prop=\"admin_phonenumber\">\n                        <el-input v-on:keypress.native=\"isNumber\" placeholder=\"Admin Mobile Phone\" v-model=\"form.admin_phonenumber\">\n                        </el-input>\n                    </el-form-item>\n                </el-col>\n                <el-col :lg=\"8\">\n                    <el-form-item prop=\"admin_email\">\n                        <el-input placeholder=\"Admin Email\" v-model=\"form.admin_email\"></el-input>\n                    </el-form-item>\n                </el-col>\n            </el-row>\n        </el-form>\n        <div style=\"margin: 50px 0;\"></div>\n        <el-row>\n            <el-col :lg=\"2\">\n                <el-button :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\" index=\"/vendor\">Save</el-button>\n            </el-col>\n            <el-col :offset=\"1\" :lg=\"2\">\n                <el-button @click=\"Cancel()\" type=\"succes\" index=\"/vendor\">Cancel</el-button>\n            </el-col>\n            <div v-if=\"form.status===1\">\n                <el-col :offset=\"16\" :lg=\"2\">\n                    <el-button :loading=\"button\" type=\"danger\" @click=\"suspend\">Suspend</el-button>\n                </el-col>\n            </div>\n            <div v-else-if=\"form.status===3\">\n                <el-col :offset=\"13\" :lg=\"3\">\n                    <el-button :loading=\"button\" @click=\"deleteB\" type=\"danger\">Delete</el-button>\n                </el-col>\n                <el-col :lg=\"3\">\n                    <el-button :loading=\"button\" @click=\"activeButton\" type=\"primary\">Active</el-button>\n                </el-col>\n            </div>\n        </el-row>\n    </div>\n</div>\n</template>\n\n<style lang=\"scss\" scoped>\n.el-row {\n    margin-bottom: 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n</style>\n\n<script>\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types';\nimport Swal from \"sweetalert2\";\nexport default {\n    name: \"EditAdminVendor\",\n    data() {\n        return {\n            payload: {\n                idadmin: \"\",\n                reason_suspend: null,\n                idvendor: \"\",\n\n            },\n            form: {\n                idvendor: \"\",\n                idadmin: \"\",\n                admin_name: \"\",\n                admin_phonenumber: \"\",\n                admin_email: \"\",\n                status: \"\",\n            },\n            rules: {\n                admin_name: [{\n                    required: true,\n                    message: \"Admin Name is required!\",\n                    trigger: \"blur\"\n                }],\n                admin_phonenumber: [{\n                    required: true,\n                    message: \"Admin Mobile Number is required!\",\n                    trigger: \"blur\"\n                }],\n                admin_email: [{\n                    required: true,\n                    message: \"Admin Email is required!\",\n                    trigger: \"blur\"\n                }]\n            }\n        };\n    },\n    created() {\n        this.form.idvendor = this.vendor.idvendor;\n        this.form.idadmin = this.adminVendor.id;\n        this.form.admin_name = this.adminVendor.name;\n        this.form.status = this.adminVendor.status;\n        this.form.admin_phonenumber = this.adminVendor.phonenumber;\n        this.form.admin_email = this.adminVendor.email;\n        this.payload.idadmin = this.adminVendor.id;\n        this.payload.idvendor = this.vendor.idvendor;\n    },\n    methods: {\n        onSubmit() {\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            this.$store.dispatch(action.UPDATE_DATA_ADMIN, this.form);\n        },\n        Cancel() {\n            this.$router.replace({\n                path: \"/detail-vendor/\" + this.vendor.idvendor\n            });\n        },\n        isNumber(evt) {\n            evt = evt ? evt : window.event;\n            var charCode = evt.which ? evt.which : evt.keyCode;\n            if (\n                charCode > 31 &&\n                (charCode < 48 || charCode > 57)\n            ) {\n                evt.preventDefault();\n            } else {\n                return true;\n            }\n        },\n        async suspend() {\n            const {\n                value: reason\n            } = await Swal.fire({\n                title: 'Enter the reason of suspending',\n                input: 'text',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, suspend it!',\n                inputValidator: (value) => {\n                    if (!value) {\n                        return 'You need to write something!'\n                    }\n                }\n            })\n            if (reason) {\n                this.$store.commit(mutation.BUTTON_STATUS, true)\n                this.payload.reason_suspend = reason;\n                this.$store.dispatch(action.SUSPEND_ADMIN, this.payload)\n            }\n        },\n        activeButton() {\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, activate it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.ACTIVATE_ADMIN_VENDOR, this.payload);\n                }\n            });\n        },\n        deleteB() {\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    this.$store.dispatch(action.DELETE_ADMIN_VENDOR, this.payload);\n                }\n            });\n        }\n    },\n    computed: {\n        ...mapGetters({\n            button: getter.GET_BUTTON,\n            vendor: getter.VENDOR,\n            adminVendor: getter.GET_ADMIN_DATA_VEND\n        })\n    }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.card-base {\n  padding: 20px;\n}\n\n.el-row {\n  // display: flex;\n  // align-items: center;\n  // justify-content: center;\n  padding: 0px 10px;\n  margin-bottom: 20px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.el-col {\n  border-radius: 5px;\n}\n\n.el-select {\n  width: 100%;\n}\n\n.thumbnail {\n  position: relative;\n  width: 300px;\n  height: 300px;\n  overflow: hidden;\n}\n\n.thumbnail img {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  height: 100%;\n  width: auto;\n  -webkit-transform: translate(-50%, -50%);\n  -ms-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n}\n\n.thumbnail img.portrait {\n  width: 100%;\n  height: auto;\n}\n\na {\n  border-style: dotted;\n  border-radius: 15px;\n  padding: 10px;\n  height: 150px;\n}\n\ntd {\n  padding: 10px;\n}\n</style>\n"]}]}