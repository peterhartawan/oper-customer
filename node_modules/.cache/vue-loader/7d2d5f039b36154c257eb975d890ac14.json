{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/components/Affix.vue?vue&type=style&index=0&id=74f464ac&lang=scss&scoped=true&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/components/Affix.vue","mtime":1628175042598},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.affix{\n  position: fixed;\n}\n",{"version":3,"sources":["Affix.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA","file":"Affix.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div class=\"affix-placeholder\" :style=\"wrapStyle\">\n\t\t<div :class=\"{'affix': affixed}\" :style=\"styles\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</template>\n<script>\nexport default {\n\tprops: {\n\t\toffset: {\n\t\t\ttype: Number,\n\t\t\tdefault: 0,\n\t\t},\n\t\tonAffix: {\n\t\t\ttype: Function,\n\t\t\tdefault() {},\n\t\t},\n\t\tboundary: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tscrollerid: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tscroller: window,\n\t\t\tscrollerIsWindow: true,\n\t\t\taffixed: false,\n\t\t\tstyles: {},\n\t\t\taffixedClientHeight: 0,\n\t\t\taffixedClientWidth: 0,\n\t\t\twrapStyle: {},\n\t\t};\n\t},\n\n\tmethods: {\n\t\tgetScroll(w, top) {\n\t\t\tlet prop = this.scrollerIsWindow || w === window ? `page${(top ? 'Y' : 'X')}Offset` : `scroll${top ? 'Top' : 'Left'}`\n\n\t\t\treturn this.scroller[prop]\n\t\t},\n\t\tgetOffset(element) {\n\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\tconst body = document.body;\n\t\t\t//console.log(rect, element.clientTop, body.clientTop)\n\t\t\tconst clientTop = element.clientTop || body.clientTop || 0;\n\t\t\tconst clientLeft = element.clientLeft || body.clientLeft || 0;\n\t\t\t//const clientHeight = element.clientHeight || 0;\n\t\t\tconst scrollTop = this.getScroll(this.scroller, true);\n\t\t\tconst scrollLeft = this.getScroll(this.scroller);\n\t\t\treturn {\n\t\t\t\ttop: rect.bottom + scrollTop - clientTop - this.affixedClientHeight,\n\t\t\t\tleft: rect.left + scrollLeft - clientLeft,\n\t\t\t};\n\t\t},\n\n\t\thandleScroll() {\n\t\t\tconst scrollTop = this.getScroll(this.scroller, true) + this.offsets;// handle setting offset\n\t\t\tconst elementOffset = this.getOffset(this.$el);\n\n\t\t\tconst scrollerOffset = 60\n\n\t\t\tif (!this.affixed && scrollTop + scrollerOffset > elementOffset.top ) {\n\t\t\t\tthis.affixed = true;\n\t\t\t\tthis.styles = {\n\t\t\t\t\ttop: `${this.offsets + scrollerOffset }px`,\n\t\t\t\t\tleft: `${elementOffset.left}px`,\n\t\t\t\t\twidth: `${this.$el.offsetWidth}px`,\n\t\t\t\t};\n\t\t\t\tthis.onAffix(this.affixed);\n\t\t\t}\n\n\t\t\t// if setting boundary\n\t\t\tif (this.boundary && scrollTop > elementOffset.top) {\n\t\t\t\tconst el = window.document.getElementById(this.boundary);\n\t\t\t\tif (el) {\n\t\t\t\t\tconst boundaryOffset = this.getOffset(el);\n\t\t\t\t\tif ((scrollTop + this.offsets + scrollerOffset) > boundaryOffset.top) {\n\t\t\t\t\t\t//const top = scrollTop - boundaryOffset.top;\n\t\t\t\t\t\tconst top = boundaryOffset.top - scrollTop;\n\t\t\t\t\t\tthis.styles.top = `${top}px`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.affixed && scrollTop + scrollerOffset  < elementOffset.top) {\n\t\t\t\tthis.affixed = false;\n\t\t\t\tthis.styles = {};\n\t\t\t\tthis.onAffix(this.affixed);\n\t\t\t}\n\n\t\t\tif (this.affixed && this.boundary) {\n\t\t\t\tconst el = window.document.getElementById(this.boundary);\n\t\t\t\tif (el) {\n\t\t\t\t\tconst boundaryOffset = this.getOffset(el);\n\t\t\t\t\tif ((scrollTop + this.offsets + scrollerOffset) <= boundaryOffset.top) {\n\t\t\t\t\t\t//this.styles.top = 0 ;\n\t\t\t\t\t\tthis.styles.top = `${0 + scrollerOffset }px` ;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\n\tcomputed: {\n\t\toffsets() {\n\t\t\tif (this.boundary) return 0;\n\t\t\treturn this.offset;\n\t\t},\n\t},\n\n\tmounted() {\n\t\tif(this.scrollerid){\n\t\t\tthis.scrollerIsWindow = false\n\t\t\tthis.scroller = window.document.getElementById(this.scrollerid)\n\t\t}\n\n\t\tthis.affixedClientHeight = this.$el.children[0].clientHeight;\n\t\tthis.affixedClientWidth = this.$el.children[0].clientWidth;\n\n\t\tthis.wrapStyle = { height: `${this.affixedClientHeight}px`, width: `${this.affixedClientWidth}px` };\n\t\tthis.scroller.addEventListener('scroll', this.handleScroll);\n\t\tthis.scroller.addEventListener('resize', this.handleScroll);\n\t},\n\n\tbeforeDestroy() {\n\t\tthis.scroller.removeEventListener('scroll', this.handleScroll);\n\t\tthis.scroller.removeEventListener('resize', this.handleScroll);\n\t},\n\n};\n</script>\n<style lang=\"scss\" scoped>\n.affix{\n  position: fixed;\n}\n</style>\n\n"]}]}