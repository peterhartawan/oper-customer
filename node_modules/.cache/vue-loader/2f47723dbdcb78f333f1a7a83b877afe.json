{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\components\\employee\\task-employee.vue?vue&type=style&index=0&id=4d173ec4&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\components\\employee\\task-employee.vue","mtime":1644413760057},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '../../assets/scss/_variables';\n.container {\n    font-family: Arial;\n}\n.font-icon {\n    font-size: 20px;\n}\n.line {\n    border-right: 1px solid $line-color;\n    padding-right: 30px;\n}\n.view-text {\n    display: block;\n    font-size: 15px;\n}\n.drive-acount {\n    height: 40px;\n    margin-top: 10px;\n}\n.font-button {\n    font-size: 19px;\n}\n.template {\n    padding: 30px 40px;\n    @extend .font-button;\n}\n.assign {\n    padding: 30px 50px;\n    @extend .font-button;\n}\n.tempAss {\n    background:  #AB0000;\n    color: white\n}\n",{"version":3,"sources":["task-employee.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task-employee.vue","sourceRoot":"src/components/employee","sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <el-row :gutter=\"10\" class=\"mb-70\">\r\n            <el-col :span=\"12\">\r\n                <div v-if=\"createAss\" class=\"mb-30\">\r\n                    <span class=\"font-weight-600 view-text mb-20\">TASK</span>\r\n                    <el-button\r\n                            @click=\"templateButton\"\r\n                            class=\"template tempAss\">\r\n                        Template\r\n                    </el-button>\r\n                    <el-button\r\n                            @click=\"assignButton\"\r\n                            class=\"assign tempAss\">\r\n                        Assign\r\n                    </el-button>\r\n                </div>\r\n                <div>\r\n                    <span class=\"font-weight-600 view-text\">VIEW</span>\r\n                    <el-radio-group v-model=\"tabTask\" @change=\"totalTrack\" fill=\"#AB0000\" class=\"mt-25\" >\r\n                        <el-radio-button label=\"graphic\"><span class=\"font-button padding-20\">Graphic</span></el-radio-button>\r\n                        <el-radio-button label=\"tracking\"><span class=\"font-button padding-20\" >Tracking</span></el-radio-button>\r\n                    </el-radio-group>\r\n                </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <el-row>\r\n                        <span class=\"font-weight-600 view-text\" >TOTAL ORDER</span>\r\n                    <el-col :span=\"10\" :offset=\"14\">\r\n                        <el-radio-group v-model=\"tabOrder\" @change=\"totalOrder\" fill=\"#ababab\" size=\"small\">\r\n                            <el-radio-button label=\"today\">Today</el-radio-button>\r\n                            <el-radio-button label=\"week\">Week</el-radio-button>\r\n                            <el-radio-button label=\"month\">Month</el-radio-button>\r\n                        </el-radio-group>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n                <el-row >\r\n                    <el-col :lg=\"24\">\r\n                        <el-card shadow=\"always\" class=\"card-border\" :body-style=\"{padding: '0px'}\">\r\n                            <el-row :gutter=\"20\">\r\n                                <el-col :span=\"8\">\r\n                                    <el-row class=\"font-icon line\" justify=\"center\">\r\n                                        <el-col :span=\"9\">\r\n                                            <img src=\"../../assets/oper_asset/open.png\" class=\"drive-acount padding-left-3\">\r\n                                        </el-col>\r\n                                        <el-col :span=\"15\" class=\"text-center font-weight-500 font-size-45\">\r\n                                            0\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                                <el-col :span=\"8\" v-if=\"orderBar !== null\">\r\n                                    <el-row class=\"font-icon line\" justify=\"center\">\r\n                                        <el-col :span=\"9\">\r\n                                            <img src=\"../../assets/oper_asset/progress.png\" class=\"drive-acount\">\r\n                                        </el-col>\r\n                                        <el-col :span=\"15\" class=\"text-center font-weight-500 font-size-45\">\r\n                                            {{orderBar.order_inprogress}}\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                                <el-col :span=\"8\" v-if=\"orderBar !== null\">\r\n                                    <el-row class=\"font-icon\" justify=\"center\" style=\"padding-right: 30px\">\r\n                                        <el-col :span=\"9\">\r\n                                            <img src=\"../../assets/oper_asset/completed.png\" class=\"drive-acount\">\r\n                                        </el-col>\r\n                                        <el-col :span=\"15\" class=\"text-center font-weight-500 font-size-45\">\r\n                                            {{orderBar.order_complete}}\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                            </el-row>\r\n                        </el-card>\r\n                    </el-col>\r\n                </el-row>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <div v-if=\"mapsGraph\">\r\n            <h4>ORDER DETAILS</h4>\r\n            <!--v-if=\"orderGraphic !== null\"-->\r\n            <div class=\"card-base card-shadow--medium p-30 mt-25 bg-white border-line-hight\">\r\n                <vue-chartist :data=\"lineChart\" type=\"Line\"></vue-chartist>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-else>\r\n            <h4>ORDER DETAILS</h4>\r\n            <div class=\"card-base card-shadow--medium bg-white\">\r\n                <gmap-map :center=\"markDefault\" :zoom=\"16\" style=\"width: 100%; height: 500px\">\r\n                    <div v-if=\"mapMark\">\r\n                        <gmap-marker :key=\"index\" v-for=\"(m, index) in markers\" :position=\"m.position\" :clickable=\"true\" @click=\"openWindow(m.position)\"></gmap-marker>\r\n                        <gmap-info-window @closeclick=\"window_open=false\" :opened=\"window_open\" :position=\"infowindow\" :options=\"{ pixelOffset: { width: 0, height: -35},}\">\r\n                            {{infowindow.name}}\r\n                        </gmap-info-window>\r\n                        <gmap-polyline :path=\"path\" :options=\"{ strokeColor:'#BB0000'}\">\r\n                        </gmap-polyline>\r\n                    </div>\r\n                </gmap-map>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import { mapGetters } from 'vuex';\r\n    import * as getter from \"../../store/getters-types\";\r\n    import * as mutation from \"../../store/mutation-types\";\r\n    import * as action from \"../../store/action-types\";\r\n    export default {\r\n        data(){\r\n            return {\r\n                tabTask     : 'graphic',\r\n                tabOrder    : 'today',\r\n                mapMark: null,\r\n                markers: [],\r\n                path: [],\r\n                infowindow: {\r\n                    lat: 0,\r\n                    lng: 0,\r\n                    name: null,\r\n                },\r\n                markDefault: {\r\n                    lat: -6.21462,\r\n                    lng: 106.84513\r\n                },\r\n                window_open: false,\r\n                mapsGraph: true,\r\n                options: {\r\n                    fullWidth: true,\r\n                    chartPadding: {\r\n                        right: 40\r\n                    }\r\n                },\r\n                createAss: true,\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                orderGraphic : getter.GET_ORDER_BAR_GRAPHIC,\r\n                orderBar     : getter.GET_ORDER_BAR,\r\n                listData     : getter.GET_TRACKING_ORDER,\r\n                idorder      : getter.GET_ID_ORDER,\r\n                trackingType : getter.GET_TRACKING_TYPE\r\n            }),\r\n            lineChart (){\r\n                if(this.orderGraphic !== null){\r\n                    return {\r\n                        labels: this.orderGraphic.label,\r\n                        series: this.orderGraphic.data\r\n                    }\r\n                } else {\r\n                    return {}\r\n                }\r\n            }\r\n        },\r\n        async created(){\r\n            await this.$store.dispatch(action.ORDER_GRAPHIC_BAR, {\r\n                v       : 'today',\r\n                type    : 'employee'\r\n            });\r\n            (this.$route.path === '/employee/inprogress') ? this.createAss = true : this.createAss = false;\r\n            if(this.$route.path === '/detail-task-employee'){\r\n                let obj = {\r\n                    id      : this.idorder,\r\n                    page    : 1,\r\n                    type    : this.trackingType\r\n                };\r\n                await this.$store.dispatch(action.TRACKING, obj);\r\n                for (let i = 0; i < this.listData.length; i++) {\r\n                    const marker = {\r\n                        lat: parseFloat(this.listData[i].latitude),\r\n                        lng: parseFloat(this.listData[i].longitude),\r\n                        name: this.listData[i].created_at\r\n                    };\r\n                    this.markDefault.lat = parseFloat(this.listData[i].latitude);\r\n                    this.markDefault.lng = parseFloat(this.listData[i].longitude);\r\n                    this.markers.push({\r\n                        position: marker\r\n                    });\r\n                    this.path.push(marker);\r\n                    this.mapMark = 1;\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            async totalTrack(v){\r\n                (v === 'graphic') ? this.mapsGraph = true : this.mapsGraph = false;\r\n            },\r\n            totalOrder(v) {\r\n                this.$store.dispatch(action.ORDER_GRAPHIC_BAR, {\r\n                    v,\r\n                    type    : 'employee'\r\n                })\r\n            },\r\n            openWindow(position) {\r\n                this.window_open = true;\r\n                this.infowindow.lat = position.lat;\r\n                this.infowindow.lng = position.lng;\r\n                this.infowindow.name = position.name;\r\n            },\r\n            templateButton(){\r\n                this.$router.replace('/template-list')\r\n            },\r\n            assignButton(){\r\n                this.$router.replace('/employee/assign-task')\r\n            },\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import '../../assets/scss/_variables';\r\n    .container {\r\n        font-family: Arial;\r\n    }\r\n    .font-icon {\r\n        font-size: 20px;\r\n    }\r\n    .line {\r\n        border-right: 1px solid $line-color;\r\n        padding-right: 30px;\r\n    }\r\n    .view-text {\r\n        display: block;\r\n        font-size: 15px;\r\n    }\r\n    .drive-acount {\r\n        height: 40px;\r\n        margin-top: 10px;\r\n    }\r\n    .font-button {\r\n        font-size: 19px;\r\n    }\r\n    .template {\r\n        padding: 30px 40px;\r\n        @extend .font-button;\r\n    }\r\n    .assign {\r\n        padding: 30px 50px;\r\n        @extend .font-button;\r\n    }\r\n    .tempAss {\r\n        background:  #AB0000;\r\n        color: white\r\n    }\r\n</style>"]}]}