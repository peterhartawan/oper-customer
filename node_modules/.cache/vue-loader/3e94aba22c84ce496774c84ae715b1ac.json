{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/components/Search.vue","mtime":1628175042598},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\tname: 'Search',\n\tdata() {\n\t\treturn {\n\t\t\tsearch: '',\n\t\t\tlist: []\n\t\t}\n\t},\n\tmethods: {\n\t\tquerySearch(queryString, cb) {\n\t\t\tvar list = this.list;\n\t\t\tvar results = queryString ? list.filter(this.createFilter(queryString)) : list\n\t\t\t// call callback function to return suggestions\n\t\t\tcb(results);\n\t\t},\n\t\tcreateFilter(queryString) {\n\t\t\treturn (link) => {\n\t\t\t\treturn (link.meta.toLowerCase().indexOf(queryString.toLowerCase()) !== -1)\n\t\t\t};\n\t\t},\n\t\thandleSelect(item) {\n\t\t\tthis.goto(item.name)\n\t\t},\n\t\tflattenObject(object) {\n\t\t\tlet obj = {};\n\t\t\tObject.keys(object).forEach(key => {\n\t\t\t\tif (typeof object[key] !== 'object') {\n\t\t\t\t\tobj[key] = object[key];\n\t\t\t\t} else {\n\t\t\t\t\tobj = { ...obj, ...this.flattenObject(object[key]) };\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn obj;\n\t\t},\n\t\tflatten(list, key, cb) {\n\t\t\tlet newList = []\n\n\t\t\tfor(let k in list) {\n\t\t\t\tlet temp = Object.assign({}, list[k])\n\t\t\t\tif(temp[key] && temp[key].length)\n\t\t\t\t\tdelete temp[key]\n\n\t\t\t\tnewList.push(temp)\n\n\t\t\t\tif(list[k][key] && list[k][key].length){\n\t\t\t\t\tnewList = newList.concat(list[k][key])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet check = false\n\t\t\tfor(let i in newList){\n\t\t\t\tif(newList[i][key] && newList[i][key].length)\n\t\t\t\t\tcheck = true\n\t\t\t}\n\n\t\t\tif(check)\n\t\t\t\tthis.flatten(newList, key, cb)\n\t\t\telse\n\t\t\t\tcb(newList)\t\t\t\t\n\n\t\t\treturn true\n\t\t},\n\t\tparseList(list) {\n\t\t\tlet parsed = []\n\n\t\t\tfor(let k in list) {\n\t\t\t\tif(list[k].name && list[k].meta && list[k].meta.searchable) {\n\t\t\t\t\tlet name = list[k].name\n\t\t\t\t\tlet value = list[k].meta.title || name || ''\n\t\t\t\t\tlet tags = ''\n\t\t\t\t\tif(list[k].meta.tags && list[k].meta.tags.length)\n\t\t\t\t\t\ttags = list[k].meta.tags.join(', ')\n\t\t\t\t\t\n\t\t\t\t\tlet meta = name+value+tags\n\n\t\t\t\t\tif(value) {\n\t\t\t\t\t\tparsed.push({\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\ttags,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tmeta\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn parsed\n\t\t},\n\t\tgoto(name) {\n\t\t\tthis.$router.push({name})\n\t\t}\n    },\n    mounted() {\n\t\t//console.log(this.$router.options.routes)\n\t\tthis.flatten(this.$router.options.routes, 'children', (data)=>{\n\t\t\tthis.list = this.parseList(data)\n\t\t})\n    }\n}\n",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div class=\"search-box\">\n\t\t<el-autocomplete\n\t\tclass=\"search-input\"\n\t\tpopper-class=\"search-box-popper card-base card-shadow--small\"\n\t\tv-model=\"search\"\n\t\t:fetch-suggestions=\"querySearch\"\n\t\tplaceholder=\"Search...\"\n\t\t:trigger-on-focus=\"true\"\n\t\tclearable\n\t\tprefix-icon=\"el-icon-search\"\n\t\tsize=\"small\"\n\t\t@select=\"handleSelect\"\n\t\t>\n\t\t\t<i slot=\"suffix\" class=\"el-input__icon el-icon-circle-close-outline mt-19\" @click=\"search=''\" v-if=\"search\"></i>\n\t\t\t<template slot-scope=\"props\">\n\t\t\t\t<span class=\"value\">{{ props.item.value }}</span>\n\t\t\t\t<span class=\"tags\">{{ props.item.tags }}</span>\n\t\t\t</template>\n\t\t\t<!--<template slot=\"suffix\">-->\n\t\t\t<!--</template>-->\n\t\t</el-autocomplete>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Search',\n\tdata() {\n\t\treturn {\n\t\t\tsearch: '',\n\t\t\tlist: []\n\t\t}\n\t},\n\tmethods: {\n\t\tquerySearch(queryString, cb) {\n\t\t\tvar list = this.list;\n\t\t\tvar results = queryString ? list.filter(this.createFilter(queryString)) : list\n\t\t\t// call callback function to return suggestions\n\t\t\tcb(results);\n\t\t},\n\t\tcreateFilter(queryString) {\n\t\t\treturn (link) => {\n\t\t\t\treturn (link.meta.toLowerCase().indexOf(queryString.toLowerCase()) !== -1)\n\t\t\t};\n\t\t},\n\t\thandleSelect(item) {\n\t\t\tthis.goto(item.name)\n\t\t},\n\t\tflattenObject(object) {\n\t\t\tlet obj = {};\n\t\t\tObject.keys(object).forEach(key => {\n\t\t\t\tif (typeof object[key] !== 'object') {\n\t\t\t\t\tobj[key] = object[key];\n\t\t\t\t} else {\n\t\t\t\t\tobj = { ...obj, ...this.flattenObject(object[key]) };\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn obj;\n\t\t},\n\t\tflatten(list, key, cb) {\n\t\t\tlet newList = []\n\n\t\t\tfor(let k in list) {\n\t\t\t\tlet temp = Object.assign({}, list[k])\n\t\t\t\tif(temp[key] && temp[key].length)\n\t\t\t\t\tdelete temp[key]\n\n\t\t\t\tnewList.push(temp)\n\n\t\t\t\tif(list[k][key] && list[k][key].length){\n\t\t\t\t\tnewList = newList.concat(list[k][key])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet check = false\n\t\t\tfor(let i in newList){\n\t\t\t\tif(newList[i][key] && newList[i][key].length)\n\t\t\t\t\tcheck = true\n\t\t\t}\n\n\t\t\tif(check)\n\t\t\t\tthis.flatten(newList, key, cb)\n\t\t\telse\n\t\t\t\tcb(newList)\t\t\t\t\n\n\t\t\treturn true\n\t\t},\n\t\tparseList(list) {\n\t\t\tlet parsed = []\n\n\t\t\tfor(let k in list) {\n\t\t\t\tif(list[k].name && list[k].meta && list[k].meta.searchable) {\n\t\t\t\t\tlet name = list[k].name\n\t\t\t\t\tlet value = list[k].meta.title || name || ''\n\t\t\t\t\tlet tags = ''\n\t\t\t\t\tif(list[k].meta.tags && list[k].meta.tags.length)\n\t\t\t\t\t\ttags = list[k].meta.tags.join(', ')\n\t\t\t\t\t\n\t\t\t\t\tlet meta = name+value+tags\n\n\t\t\t\t\tif(value) {\n\t\t\t\t\t\tparsed.push({\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\ttags,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tmeta\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn parsed\n\t\t},\n\t\tgoto(name) {\n\t\t\tthis.$router.push({name})\n\t\t}\n    },\n    mounted() {\n\t\t//console.log(this.$router.options.routes)\n\t\tthis.flatten(this.$router.options.routes, 'children', (data)=>{\n\t\t\tthis.list = this.parseList(data)\n\t\t})\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n@import '../assets/scss/_variables';\n@import '../assets/scss/card-shadow';\n\n.search-box {\n\tmax-width: 300px;\n\twidth: 100%;\n\n\t.search-input {\n\t\toverflow: hidden;\n\t\ttransition: all .5s;\n\t\tbackground: transparent;\n\t\t@extend .card-base;\n\t\t@extend .card-shadow--small;\n\n\t}\n}\n</style>\n\n<style lang=\"scss\">\n@import '../assets/scss/_variables';\n\n.search-box {\n\t.el-autocomplete {\n\t\twidth: 100%;\n\n\t\tinput {\n\t\t\tborder-color: transparent;\n\t\t\tborder-radius: 0px;\n\t\t\tbackground-color: transparent;\n\t\t\tline-height: 33px;\n\t\t\tborder-bottom-color: transparentize($text-color-accent, .8);\n\t\t\ttransition: all .5s;\n\t\t\t\n\t\t\t&:hover {\n\t\t\t\tborder-color: transparent;\n\t\t\t}\n\t\t\t&:focus {\n\t\t\t\tborder-color: $text-color-accent; \n\t\t\t}\n\t\t\t&:hover, &:active, &:focus {\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tbackground-color: #fff;\n\t\t\t}\n\t\t}\n\n\t\t.el-input__suffix {\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n}\n\n.search-box-popper {\n\tmargin-top: 2px !important;\n\tborder-radius: 5px;\n\toverflow: hidden;\n\n\t.el-scrollbar__wrap {\n\t\tborder: none;\n\t\tmax-height: 240px;\n\t}\n\n\t.value {\n\t\tcolor: $text-color-accent;\n\t\tfont-weight: bold;\n\t\tmargin-right: 10px;\n\t\ttext-transform: capitalize;\n\t}\n\t.tags {\n\t\topacity: .5;\n\t\ttext-transform: lowercase;\n\t}\n\n\t.popper__arrow {\n\t\tdisplay: none;\n\t}\n}\n</style>\n\n"]}]}