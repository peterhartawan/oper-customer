{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\ui\\Element\\ElementCheckbox.vue?vue&type=style&index=0&id=2b9257aa&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\ui\\Element\\ElementCheckbox.vue","mtime":1644413760716},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.demo-box {\r\n\tpadding: 20px;\r\n\tmargin-bottom: 20px;\r\n}\r\npre {\r\n\tmargin: 0;\r\n\tbackground: white;\r\n}\r\ncode {\r\n\tpadding: 0;\r\n}\r\n\r\n@media (max-width: 768px) {code{font-size: 70%;}}\r\n\r\n",{"version":3,"sources":["ElementCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"ElementCheckbox.vue","sourceRoot":"src/views/ui/Element","sourcesContent":["<template>\r\n\t<vue-scroll class=\"page-element-checkbox\">\r\n\t\t<div class=\"page-header\">\r\n\t\t\t<h1>Element Checkbox\r\n\t\t\t\t<theme-picker style=\"float:right\"></theme-picker>\r\n\t\t\t</h1>\r\n\t\t\t<h4><a href=\"http://element.eleme.io/#/en-US/component/checkbox\" target=\"_blank\"><i class=\"mdi mdi-book-open-page-variant\"></i> see from the complete documentation</a></h4>\r\n\t\t</div>\r\n\t\t<div class=\"card-base card-shadow--medium demo-box bg-white\">\r\n\t\t\t<el-collapse value=\"1\">\r\n\t\t\t\t<el-collapse-item title=\"Basic usage\" name=\"1\">\r\n\t\t\t\t\t<el-checkbox v-model=\"checked\">Option</el-checkbox>\r\n\t\t\t\t</el-collapse-item>\r\n\t\t\t\t<el-collapse-item title=\"Code\" name=\"2\">\r\n\t\t\t\t\t<pre v-highlightjs=\"code1\"><code class=\"html\"></code></pre>\r\n\t\t\t\t</el-collapse-item>\r\n\t\t\t</el-collapse>\r\n\t\t</div>\r\n\t\t<div class=\"card-base card-shadow--medium demo-box bg-white\">\r\n\t\t\t<el-collapse value=\"1\">\r\n\t\t\t\t<el-collapse-item title=\"Indeterminate\" name=\"1\">\r\n\t\t\t\t\t<el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">Check all</el-checkbox>\r\n\t\t\t\t\t<div style=\"margin: 15px 0;\"></div>\r\n\t\t\t\t\t<el-checkbox-group v-model=\"checkedCities\" @change=\"handleCheckedCitiesChange\">\r\n\t\t\t\t\t\t<el-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{city}}</el-checkbox>\r\n\t\t\t\t\t</el-checkbox-group>\r\n\t\t\t\t</el-collapse-item>\r\n\t\t\t\t<el-collapse-item title=\"Code\" name=\"2\">\r\n\t\t\t\t\t<pre v-highlightjs=\"code2\"><code class=\"html\"></code></pre>\r\n\t\t\t\t</el-collapse-item>\r\n\t\t\t</el-collapse>\r\n\t\t</div>\r\n\t</vue-scroll>\r\n</template>\r\n\r\n<script>\r\nimport ThemePicker from '@/components/theme-picker'\r\nconst cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\r\nexport default {\r\n\tname: 'ElementCheckbox',\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tchecked: true,\r\n\t\t\tcheckAll: false,\r\n\t\t\tcheckedCities: ['Shanghai', 'Beijing'],\r\n\t\t\tcities: cityOptions,\r\n\t\t\tisIndeterminate: true,\r\n\t\t\tcode1: \r\n`\r\n<!-- 'checked' should be true or false -->\r\n<el-checkbox v-model=\"checked\">Option</el-checkbox>\r\n`\r\n\t\t,code2 : \r\n`\r\n<template>\r\n  <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">Check all</el-checkbox>\r\n  <div style=\"margin: 15px 0;\"></div>\r\n  <el-checkbox-group v-model=\"checkedCities\" @change=\"handleCheckedCitiesChange\">\r\n    <el-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{city}}</el-checkbox>\r\n  </el-checkbox-group>\r\n</template>\r\n<script>\r\n  const cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\r\n  export default {\r\n    data() {\r\n      return {\r\n        checkAll: false,\r\n        checkedCities: ['Shanghai', 'Beijing'],\r\n        cities: cityOptions,\r\n        isIndeterminate: true\r\n      };\r\n    },\r\n    methods: {\r\n      handleCheckAllChange(val) {\r\n        this.checkedCities = val ? cityOptions : [];\r\n        this.isIndeterminate = false;\r\n      },\r\n      handleCheckedCitiesChange(value) {\r\n        let checkedCount = value.length;\r\n        this.checkAll = checkedCount === this.cities.length;\r\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\r\n      }\r\n    }\r\n  };\r\n<\\/script>\r\n`\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\thandleCheckAllChange(val) {\r\n\t\t\tthis.checkedCities = val ? cityOptions : [];\r\n\t\t\tthis.isIndeterminate = false;\r\n\t\t},\r\n\t\thandleCheckedCitiesChange(value) {\r\n\t\t\tlet checkedCount = value.length;\r\n\t\t\tthis.checkAll = checkedCount === this.cities.length;\r\n\t\t\tthis.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\r\n\t\t}\r\n    },\r\n\tcomponents: {\r\n\t\tThemePicker\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.demo-box {\r\n\tpadding: 20px;\r\n\tmargin-bottom: 20px;\r\n}\r\npre {\r\n\tmargin: 0;\r\n\tbackground: white;\r\n}\r\ncode {\r\n\tpadding: 0;\r\n}\r\n\r\n@media (max-width: 768px) {code{font-size: 70%;}}\r\n\r\n</style>\r\n\r\n"]}]}