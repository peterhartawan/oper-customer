{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/employee/edit-position.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/employee/edit-position.vue","mtime":1640440454000},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":1641690456207},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1641690444038},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1641690456354}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types';\nimport Swal from \"sweetalert2\";\nexport default {\n    name: \"EditPosition\",\n    data() {\n        return {\n            form: {\n                job_name: \"\",\n                idemployee_position: \"\",\n                price: \"\",\n            },\n            // payload: {\n            //     identerprise: null,\n            //     page: 1,\n            // },\n            rules: {\n                job_name: [{\n                    required: true,\n                    message: \"Job Name is required!\",\n                    trigger: \"blur\"\n                }],\n                price: [{\n                    required: true,\n                    message: \"Price is required!\",\n                    trigger: \"blur\",\n\n                }],\n            }\n        };\n    },\n    methods: {\n        onSubmit(formName) {\n            if (!this.form.price) {\n                let obj = {\n                    job_name: this.job_name,\n                };\n            } else {\n                let obj = {\n                    job_name: this.job_name,\n                    price: this.price\n                };\n            }\n            this.$refs[formName].validate(valid => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.UPDATE_POSITION, this.form);\n                } else {\n                    return false;\n                }\n            });\n        },\n        Cancel() {\n            this.$store.dispatch(action.LIST_POSITION, {\n                page: 1,\n                status: this.status\n            });\n            this.$router.replace({\n                path: \"/employee/list-position\"\n            });\n        },\n        deleteButton() {\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.DELETE_POSITION, this.form.idemployee_position);\n                }\n            });\n        },\n    },\n    computed: {\n        ...mapGetters({\n            button: getter.GET_BUTTON,\n            error: getter.GET_ERROR,\n            position: getter.GET_DETAIL_POSITION,\n            profile: getter.GET_DATA_PROFILE\n        }),\n        showPrice() {\n            if (this.profile.vendor.show_employee_price === 1) {\n                return true\n            } else {\n                return false\n            }\n        }\n    },\n    created() {\n        this.form.job_name = this.position.job_name\n        this.form.price = this.position.price\n        this.form.idemployee_position = this.position.idemployee_position\n    }\n};\n",{"version":3,"sources":["edit-position.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-position.vue","sourceRoot":"src/views/pages/employee","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"job_name\">\n                        <el-input placeholder=\"Location Name\" v-model=\"form.job_name\"></el-input>\n                    </el-form-item>\n                </el-col>\n                <el-col :lg=\"12\">\n                    <div v-if=\"showPrice === true\">\n                        <el-form-item prop=\"price\">\n                            <el-input placeholder=\"Price\" v-model=\"form.price\"></el-input>\n                        </el-form-item>\n                    </div>\n                </el-col>\n            </el-row>\n        </el-form>\n        <el-row>\n            <el-col :lg=\"2\">\n                <el-button :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\n            </el-col>\n            <el-col :lg=\"2\">\n                <el-button @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\n            </el-col>\n            <el-col :offset=\"17\" :lg=\"3\">\n                <el-button @click=\"deleteButton\" type=\"danger\">Delete</el-button>\n            </el-col>\n        </el-row>\n    </div>\n</div>\n</template>\n\n<script>\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types';\nimport Swal from \"sweetalert2\";\nexport default {\n    name: \"EditPosition\",\n    data() {\n        return {\n            form: {\n                job_name: \"\",\n                idemployee_position: \"\",\n                price: \"\",\n            },\n            // payload: {\n            //     identerprise: null,\n            //     page: 1,\n            // },\n            rules: {\n                job_name: [{\n                    required: true,\n                    message: \"Job Name is required!\",\n                    trigger: \"blur\"\n                }],\n                price: [{\n                    required: true,\n                    message: \"Price is required!\",\n                    trigger: \"blur\",\n\n                }],\n            }\n        };\n    },\n    methods: {\n        onSubmit(formName) {\n            if (!this.form.price) {\n                let obj = {\n                    job_name: this.job_name,\n                };\n            } else {\n                let obj = {\n                    job_name: this.job_name,\n                    price: this.price\n                };\n            }\n            this.$refs[formName].validate(valid => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.UPDATE_POSITION, this.form);\n                } else {\n                    return false;\n                }\n            });\n        },\n        Cancel() {\n            this.$store.dispatch(action.LIST_POSITION, {\n                page: 1,\n                status: this.status\n            });\n            this.$router.replace({\n                path: \"/employee/list-position\"\n            });\n        },\n        deleteButton() {\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.DELETE_POSITION, this.form.idemployee_position);\n                }\n            });\n        },\n    },\n    computed: {\n        ...mapGetters({\n            button: getter.GET_BUTTON,\n            error: getter.GET_ERROR,\n            position: getter.GET_DETAIL_POSITION,\n            profile: getter.GET_DATA_PROFILE\n        }),\n        showPrice() {\n            if (this.profile.vendor.show_employee_price === 1) {\n                return true\n            } else {\n                return false\n            }\n        }\n    },\n    created() {\n        this.form.job_name = this.position.job_name\n        this.form.price = this.position.price\n        this.form.idemployee_position = this.position.idemployee_position\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    padding: 0px 10px;\n    margin-bottom: 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.el-radio {\n    margin: 0 160px 0 10px;\n}\n\n.el-select {\n    width: 100%;\n}\n\n.thumbnail {\n    position: relative;\n    width: 300px;\n    height: 300px;\n    overflow: hidden;\n}\n\n.thumbnail img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    height: 100%;\n    width: auto;\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n}\n\n.thumbnail img.portrait {\n    width: 100%;\n    height: auto;\n}\n\na {\n    border-style: dotted;\n    border-radius: 15px;\n    padding: 10px;\n    height: 150px;\n}\n\ntd {\n    padding: 10px;\n}\n</style>\n"]}]}