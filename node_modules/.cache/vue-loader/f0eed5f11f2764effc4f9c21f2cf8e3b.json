{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\src\\components\\order\\order-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\src\\components\\order\\order-bar.vue","mtime":1646793990142},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-request-driver-automation-update\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { mapGetters } from 'vuex';\nimport * as getter from \"../../store/getters-types\";\nimport * as mutation from \"../../store/mutation-types\";\nimport * as action from \"../../store/action-types\";\n\nexport default {\n    data(){\n        return {\n            tabTask: 'graphic',\n            tabOrder: 'today',\n            mapMark: null,\n            markers: [],\n            path: [],\n            infowindow: {\n                lat: 0,\n                lng: 0,\n                name: null,\n            },\n            markDefault: {\n                lat: -6.21462,\n                lng: 106.84513\n            },\n            window_open: false,\n            mapsGraph: true,\n            options: {\n                fullWidth: true,\n                chartPadding: {\n                    right: 40\n                }\n            }\n        }\n    },\n    computed: {\n        ...mapGetters({\n            orderGraphic : getter.GET_ORDER_BAR_GRAPHIC,\n            orderBar     : getter.GET_ORDER_BAR,\n            listData     : getter.GET_TRACKING_ORDER,\n            idorder      : getter.GET_ID_ORDER,\n            trackingType : getter.GET_TRACKING_TYPE\n        }),\n        lineChart (){\n            if(this.orderGraphic !== null){\n                return {\n                    labels: this.orderGraphic.label,\n                    series: this.orderGraphic.data\n                }\n            }\n        }\n    },\n    methods: {\n        async totalTrack(v){\n            (v === 'graphic') ? this.mapsGraph = true : this.mapsGraph = false;\n            if(this.$route.path === '/order/complete' || this.$route.path === '/order/open' || this.$route.path === '/order/inprogress'){\n                let objList = {\n                    dataList    : null,\n                    nextC       : null,\n                    prevC       : null,\n                    firstP      : null,\n                    fromPA      : null,\n                    totalPE     : null\n                };\n               await this.$store.commit(mutation.TRACKING_ORDER, objList)\n            }\n        },\n        totalOrder(v) {\n            this.$store.dispatch(action.ORDER_GRAPHIC_BAR, {\n                v,\n                type    : 'order'\n            })\n        },\n        openWindow(position) {\n            this.window_open = true;\n            this.infowindow.lat = position.lat;\n            this.infowindow.lng = position.lng;\n            this.infowindow.name = position.name;\n        },\n    },\n    async created(){\n        await this.$store.dispatch(action.ORDER_GRAPHIC_BAR, {\n            v       : 'today',\n            type    : 'order'\n        });\n        if(this.$route.path === '/order/detail' || this.$route.path === '/detail-order'){\n            let obj = {\n                id      : this.idorder,\n                page    : 1,\n                type    : this.trackingType\n            };\n            await this.$store.dispatch(action.TRACKING, obj);\n            for (let i = 0; i < this.listData.length; i++) {\n                const marker = {\n                    lat: parseFloat(this.listData[i].latitude),\n                    lng: parseFloat(this.listData[i].longitude),\n                    name: this.listData[i].created_at\n                };\n                this.markDefault.lat = parseFloat(this.listData[i].latitude)\n                this.markDefault.lng = parseFloat(this.listData[i].longitude)\n                this.markers.push({\n                    position: marker\n                });\n                this.path.push(marker)\n                this.mapMark = 1;\n            }\n        }\n    }\n}\n",{"version":3,"sources":["order-bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"order-bar.vue","sourceRoot":"src/components/order","sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <el-row :gutter=\"10\" class=\"mb-70\">\r\n            <el-col :span=\"12\">\r\n                <span class=\"font-weight-600 view-text\">VIEW</span>\r\n                    <el-radio-group v-model=\"tabTask\" @change=\"totalTrack\" fill=\"#AB0000\" class=\"mt-33\" >\r\n                        <el-radio-button label=\"graphic\"><span class=\"button-font\">Graphic</span></el-radio-button>\r\n                        <el-radio-button label=\"tracking\"><span class=\"button-font\">Tracking</span></el-radio-button>\r\n                    </el-radio-group>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <span class=\"font-weight-600 view-text\">TOTAL ORDER</span>\r\n                <el-row>\r\n                    <el-col :span=\"12\" :offset=\"12\">\r\n                        <el-radio-group v-model=\"tabOrder\" @change=\"totalOrder\" fill=\"#ababab\" size=\"small\">\r\n                            <el-radio-button label=\"today\">Today</el-radio-button>\r\n                            <el-radio-button label=\"week\">Week</el-radio-button>\r\n                            <el-radio-button label=\"month\">Month</el-radio-button>\r\n                        </el-radio-group>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n                <el-row v-if=\"orderBar\">\r\n                    <el-col :lg=\"24\">\r\n                        <el-card shadow=\"always\" class=\"card-border\" :body-style=\"{padding: '5px'}\">\r\n                            <el-row :gutter=\"20\">\r\n                                <el-col :span=\"6\">\r\n                                    <el-row class=\"font-icon line\" justify=\"center\">\r\n                                        <el-col :span=\"21\">\r\n                                            <img src=\"../../assets/oper_asset/open.png\" class=\"drive-acount\">\r\n                                        </el-col>\r\n                                        <el-col :span=\"3\" class=\"text-center font-weight-600 font-size-45\">\r\n                                            {{orderBar.order_open}}\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                                <el-col :span=\"6\">\r\n                                    <el-row class=\"font-icon line\" justify=\"center\">\r\n                                        <el-col :span=\"21\">\r\n                                            <img src=\"../../assets/oper_asset/progress.png\" class=\"drive-acount\">\r\n                                        </el-col>\r\n                                        <el-col :span=\"3\" class=\"text-center font-weight-600 font-size-45\">\r\n                                            {{orderBar.order_inprogress}}\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                                <el-col :span=\"6\">\r\n                                    <el-row class=\"font-icon line\" justify=\"center\">\r\n                                        <el-col :span=\"21\">\r\n                                            <img src=\"../../assets/oper_asset/cancel_red.png\" class=\"drive-acount\">\r\n                                        </el-col>\r\n                                        <el-col :span=\"3\" class=\"text-center font-weight-600 font-size-45\">\r\n                                            {{orderBar.order_canceled}}\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                                <el-col :span=\"6\">\r\n                                    <el-row class=\"font-icon\" justify=\"center\">\r\n                                        <el-col :span=\"9\">\r\n                                            <img src=\"../../assets/oper_asset/completed.png\" class=\"drive-acount\">\r\n                                        </el-col>\r\n                                        <el-col :span=\"15\" class=\"text-center font-weight-600 font-size-45\">\r\n                                            {{orderBar.order_complete}}\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                            </el-row>\r\n                        </el-card>\r\n                    </el-col>\r\n                </el-row>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <div v-if=\"mapsGraph\">\r\n            <h4>ORDER DETAILS</h4>\r\n            <div class=\"card-base card-shadow--medium p-30 mt-25 bg-white border-line-hight\" v-if=\"orderGraphic !== null\">\r\n                <vue-chartist :data=\"lineChart\" type=\"Line\"></vue-chartist>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-else>\r\n            <h4>ORDER DETAILS</h4>\r\n            <div class=\"card-base card-shadow--medium bg-white\">\r\n                <gmap-map :center=\"markDefault\" :zoom=\"16\" style=\"width: 100%; height: 500px\">\r\n                    <div v-if=\"mapMark\">\r\n                        <gmap-marker :key=\"index\" v-for=\"(m, index) in markers\" :position=\"m.position\" :clickable=\"true\" @click=\"openWindow(m.position)\"></gmap-marker>\r\n                        <gmap-info-window @closeclick=\"window_open=false\" :opened=\"window_open\" :position=\"infowindow\" :options=\"{ pixelOffset: { width: 0, height: -35},}\">\r\n                            {{infowindow.name}}\r\n                        </gmap-info-window>\r\n                        <gmap-polyline :path=\"path\" :options=\"{ strokeColor:'#BB0000'}\">\r\n                        </gmap-polyline>\r\n                    </div>\r\n                </gmap-map>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import { mapGetters } from 'vuex';\r\n    import * as getter from \"../../store/getters-types\";\r\n    import * as mutation from \"../../store/mutation-types\";\r\n    import * as action from \"../../store/action-types\";\r\n\r\n    export default {\r\n        data(){\r\n            return {\r\n                tabTask: 'graphic',\r\n                tabOrder: 'today',\r\n                mapMark: null,\r\n                markers: [],\r\n                path: [],\r\n                infowindow: {\r\n                    lat: 0,\r\n                    lng: 0,\r\n                    name: null,\r\n                },\r\n                markDefault: {\r\n                    lat: -6.21462,\r\n                    lng: 106.84513\r\n                },\r\n                window_open: false,\r\n                mapsGraph: true,\r\n                options: {\r\n                    fullWidth: true,\r\n                    chartPadding: {\r\n                        right: 40\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                orderGraphic : getter.GET_ORDER_BAR_GRAPHIC,\r\n                orderBar     : getter.GET_ORDER_BAR,\r\n                listData     : getter.GET_TRACKING_ORDER,\r\n                idorder      : getter.GET_ID_ORDER,\r\n                trackingType : getter.GET_TRACKING_TYPE\r\n            }),\r\n            lineChart (){\r\n                if(this.orderGraphic !== null){\r\n                    return {\r\n                        labels: this.orderGraphic.label,\r\n                        series: this.orderGraphic.data\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            async totalTrack(v){\r\n                (v === 'graphic') ? this.mapsGraph = true : this.mapsGraph = false;\r\n                if(this.$route.path === '/order/complete' || this.$route.path === '/order/open' || this.$route.path === '/order/inprogress'){\r\n                    let objList = {\r\n                        dataList    : null,\r\n                        nextC       : null,\r\n                        prevC       : null,\r\n                        firstP      : null,\r\n                        fromPA      : null,\r\n                        totalPE     : null\r\n                    };\r\n                   await this.$store.commit(mutation.TRACKING_ORDER, objList)\r\n                }\r\n            },\r\n            totalOrder(v) {\r\n                this.$store.dispatch(action.ORDER_GRAPHIC_BAR, {\r\n                    v,\r\n                    type    : 'order'\r\n                })\r\n            },\r\n            openWindow(position) {\r\n                this.window_open = true;\r\n                this.infowindow.lat = position.lat;\r\n                this.infowindow.lng = position.lng;\r\n                this.infowindow.name = position.name;\r\n            },\r\n        },\r\n        async created(){\r\n            await this.$store.dispatch(action.ORDER_GRAPHIC_BAR, {\r\n                v       : 'today',\r\n                type    : 'order'\r\n            });\r\n            if(this.$route.path === '/order/detail' || this.$route.path === '/detail-order'){\r\n                let obj = {\r\n                    id      : this.idorder,\r\n                    page    : 1,\r\n                    type    : this.trackingType\r\n                };\r\n                await this.$store.dispatch(action.TRACKING, obj);\r\n                for (let i = 0; i < this.listData.length; i++) {\r\n                    const marker = {\r\n                        lat: parseFloat(this.listData[i].latitude),\r\n                        lng: parseFloat(this.listData[i].longitude),\r\n                        name: this.listData[i].created_at\r\n                    };\r\n                    this.markDefault.lat = parseFloat(this.listData[i].latitude)\r\n                    this.markDefault.lng = parseFloat(this.listData[i].longitude)\r\n                    this.markers.push({\r\n                        position: marker\r\n                    });\r\n                    this.path.push(marker)\r\n                    this.mapMark = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import '../../assets/scss/_variables';\r\n    .container {\r\n        font-family: Arial;\r\n    }\r\n    .font-icon {\r\n        font-size: 40px;\r\n    }\r\n    .button-font {\r\n        font-size: 20px;\r\n        padding: 20px;\r\n    }\r\n    .line {\r\n        border-right: 1px solid $line-color;\r\n        padding-right: 30px;\r\n    }\r\n    .view-text {\r\n        display: block;\r\n        font-size: 15px;\r\n        margin-bottom: 13px;\r\n    }\r\n    .drive-acount {\r\n        height: 44px;\r\n        margin-top: 10px;\r\n    }\r\n</style>"]}]}