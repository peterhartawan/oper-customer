{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\employee\\list-employee.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\employee\\list-employee.vue","mtime":1647032353995},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport EmployeeCount from '@/components/employee/total-account'\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from '../../../store/mutation-types';\r\n\r\nexport default {\r\n    name: \"Employee\",\r\n    data() {\r\n        return {\r\n            currentPage: 1,\r\n            input: \"\",\r\n            affixEnabled: true,\r\n            indexT: 1,\r\n            vendorId: null,\r\n            status: 1,\r\n            select: [{\r\n                    name: \"ACTIVE\",\r\n                    status: 1,\r\n                },\r\n                {\r\n                    name: \"INACTIVE\",\r\n                    status: 2,\r\n                },\r\n                {\r\n                    name: \"SUSPENDED\",\r\n                    status: 3\r\n                }\r\n            ],\r\n        };\r\n    },\r\n    components: {\r\n        Affix,\r\n        EmployeeCount\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            listData: getter.GET_LIST_EMPLOYEE,\r\n            paginate: getter.GET_PAGINATE_EMPLOYEE,\r\n            total: getter.GET_EMPLOYEE_TOTAL,\r\n            //   dropDown    : getter.GET_DROPDOWN_EMPLOYEE \r\n        }),\r\n        paginator() {\r\n            return this.paginate;\r\n        },\r\n        indexTam() {\r\n            return this.indexT;\r\n        },\r\n        forTotal() {\r\n            if (this.listData) {\r\n                return this.total;\r\n            }\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.$store.dispatch(action.LIST_EMPLOYEE, {\r\n            page: this.currentPage,\r\n            status: this.status\r\n        });\r\n    },\r\n\r\n    methods: {\r\n        newVen() {\r\n            this.$router.push(\"NewVendor\");\r\n        },\r\n        handlePageChange(page) {\r\n            this.currentPage = page;\r\n            this.$store.dispatch(action.LIST_EMPLOYEE, {\r\n                page: this.currentPage,\r\n                status: this.status\r\n            });\r\n        },\r\n\r\n        Create() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$router.push({\r\n                name: \"NewEmployee\"\r\n            });\r\n        },\r\n        Position() {\r\n            this.$router.push({\r\n                name: \"ListPosition\"\r\n            });\r\n        },\r\n        filterStatus(status) {\r\n            this.status = status;\r\n            this.$store.dispatch(action.LIST_EMPLOYEE, {\r\n                page: 1,\r\n                status: this.status\r\n            });\r\n        },\r\n\r\n        getId(id) {\r\n            this.$store.dispatch(action.DETAIL_EMPLOYEE, id.idemployee);\r\n            this.$router.push({\r\n                path: '/detail-employee'\r\n            });\r\n        },\r\n    }\r\n};\r\n",{"version":3,"sources":["list-employee.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list-employee.vue","sourceRoot":"src/views/pages/employee","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <employee-count />\r\n    <!-- <div class=\"card-base card-shadow--medium bg-white\">\r\n      <div v-if=\"listData\">\r\n      <el-row :gutter=\"10\">\r\n        <el-col :lg=\"4\">\r\n          <el-button @click=\"Create()\" style=\"width: 100%\" type=\"primary\">New Employee</el-button>\r\n        </el-col>\r\n        <el-col :lg=\"4\">\r\n          <el-button @click=\"Position()\" style=\"width: 100%\" type=\"success\">List Position</el-button>\r\n        </el-col>\r\n        <el-col :offset=\"10\" :lg=\"6\">\r\n           <el-select @change=\"filterStatus\" v-model=\"status\" filterable placeholder=\"Select\">\r\n                <el-option v-for=\"item in select\" :key=\"item.status\" :label=\"item.name\" :value=\"item.status\"></el-option>\r\n          </el-select>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row :gutter=\"10\">\r\n        <el-col :lg=\"24\">\r\n          <el-table :data=\"listData\" style=\"width: 100%\" @row-click=\"getId\">\r\n            <el-table-column type=\"index\" :index=\"paginate.fromP\"  label=\"No\" width=\"100\"></el-table-column>\r\n            <el-table-column prop=\"name\" label=\"Name\"></el-table-column>\r\n            <el-table-column prop=\"phonenumber\" label=\"Mobile\"></el-table-column>\r\n            <el-table-column prop=\"email\" label=\"Email\"></el-table-column>\r\n          </el-table>\r\n        </el-col>\r\n      </el-row>\r\n      <div align=\"right\">\r\n        <el-pagination\r\n          background\r\n          layout=\"prev, pager, next\"\r\n          @current-change=\"handlePageChange\"\r\n          :total=\"forTotal\"\r\n        ></el-pagination>\r\n      </div>\r\n      </div>\r\n    </div> -->\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport EmployeeCount from '@/components/employee/total-account'\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from '../../../store/mutation-types';\r\n\r\nexport default {\r\n    name: \"Employee\",\r\n    data() {\r\n        return {\r\n            currentPage: 1,\r\n            input: \"\",\r\n            affixEnabled: true,\r\n            indexT: 1,\r\n            vendorId: null,\r\n            status: 1,\r\n            select: [{\r\n                    name: \"ACTIVE\",\r\n                    status: 1,\r\n                },\r\n                {\r\n                    name: \"INACTIVE\",\r\n                    status: 2,\r\n                },\r\n                {\r\n                    name: \"SUSPENDED\",\r\n                    status: 3\r\n                }\r\n            ],\r\n        };\r\n    },\r\n    components: {\r\n        Affix,\r\n        EmployeeCount\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            listData: getter.GET_LIST_EMPLOYEE,\r\n            paginate: getter.GET_PAGINATE_EMPLOYEE,\r\n            total: getter.GET_EMPLOYEE_TOTAL,\r\n            //   dropDown    : getter.GET_DROPDOWN_EMPLOYEE \r\n        }),\r\n        paginator() {\r\n            return this.paginate;\r\n        },\r\n        indexTam() {\r\n            return this.indexT;\r\n        },\r\n        forTotal() {\r\n            if (this.listData) {\r\n                return this.total;\r\n            }\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.$store.dispatch(action.LIST_EMPLOYEE, {\r\n            page: this.currentPage,\r\n            status: this.status\r\n        });\r\n    },\r\n\r\n    methods: {\r\n        newVen() {\r\n            this.$router.push(\"NewVendor\");\r\n        },\r\n        handlePageChange(page) {\r\n            this.currentPage = page;\r\n            this.$store.dispatch(action.LIST_EMPLOYEE, {\r\n                page: this.currentPage,\r\n                status: this.status\r\n            });\r\n        },\r\n\r\n        Create() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$router.push({\r\n                name: \"NewEmployee\"\r\n            });\r\n        },\r\n        Position() {\r\n            this.$router.push({\r\n                name: \"ListPosition\"\r\n            });\r\n        },\r\n        filterStatus(status) {\r\n            this.status = status;\r\n            this.$store.dispatch(action.LIST_EMPLOYEE, {\r\n                page: 1,\r\n                status: this.status\r\n            });\r\n        },\r\n\r\n        getId(id) {\r\n            this.$store.dispatch(action.DETAIL_EMPLOYEE, id.idemployee);\r\n            this.$router.push({\r\n                path: '/detail-employee'\r\n            });\r\n        },\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    // display: flex;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    padding: 0px 10px;\r\n    margin-bottom: 20px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.el-select {\r\n    width: 100%;\r\n}\r\n\r\n.thumbnail {\r\n    position: relative;\r\n    width: 300px;\r\n    height: 300px;\r\n    overflow: hidden;\r\n}\r\n\r\n.thumbnail img {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    height: 100%;\r\n    width: auto;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    -ms-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.thumbnail img.portrait {\r\n    width: 100%;\r\n    height: auto;\r\n}\r\n\r\na {\r\n    border-style: dotted;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n    height: 150px;\r\n}\r\n\r\ntd {\r\n    padding: 10px;\r\n}\r\n</style>\r\n"]}]}