{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\dispathcer\\dispatcher.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\dispathcer\\dispatcher.vue","mtime":1644413760461},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport DispatcherCount from '@/components/dispatcher/total-acount'\nimport Affix from '@/components/Affix'\nimport { mapGetters } from 'vuex'\nimport * as getter from '../../../store/getters-types'\nimport * as mutation from '../../../store/mutation-types'\nimport * as action from '../../../store/action-types'\n\nexport default {\n    name: 'Table',\n    data() {\n        return {\n            currentPage: 1,\n            input:'',\n            affixEnabled: true,\n            indexT: 1,\n            status:1 ,\n            select: [\n            {\n                name: \"ACTIVE\",\n                status: 1,\n            },\n            {\n                name: \"INACTIVE\",\n                status: 2,\n            },\n            {\n                name: \"SUSPENDED\",\n                status: 3\n            }\n        ],\n            type : '',\n            dispatcher_type: [\n                {\n                    name: \"REGULER\",\n                    status: 4\n                },\n                {\n                    name: \"PLUS\",\n                    status: 5\n                }\n            ]\n        }\n    },\n    components: {\n        Affix,\n        DispatcherCount\n    },\n    computed: {\n        ...mapGetters({\n            listData : getter.GET_LIST_DISPATCHER,\n            paginate : getter.GET_PAGINATE_DISPATCHER,\n            loading  : getter.GET_BUTTON\n        }),\n        paginato(){\n            return this.paginate\n        },\n        indexTam(){\n            return this.indexT\n        }\n    },\n//    async created(){\n//         this.$store.commit(mutation.BUTTON_STATUS, true);\n//         await this.$store.dispatch(action.LIST_DISPATCHER,{\n//             page: this.currentPage,\n//             typedispatcher : this.type,\n//             status: this.status});\n//         },\n    methods: {\n        newCorp()   {\n            this.$router.replace('new-dispatcher')\n        },\n        handlePageChange(page) {\n            this.currentPage = page\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.$store.dispatch( action.LIST_DISPATCHER,\n                {\n                    page: this.currentPage,\n                    typedispatcher : this.type,\n                    status: this.status\n                });\n            },\n        search(){\n            this.$store.dispatch( action.LIST_DATA_COR, this.input.trim() )\n        },\n        async getId(id){\n            await this.$store.dispatch(action.DATA_ID_DISPATCHER, id.id)\n            this.$router.replace({ path: '/detail-dispatcher' })\n        },\n        indexMethod(index) {\n            return index + this.paginato.fromP;\n        },\n        filterStatus(status){\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.status = status;\n            this.$store.dispatch(action.LIST_DISPATCHER,\n                {\n                    page: 1,\n                    typedispatcher : this.type,\n                    status: this.status\n                });\n        },\n        filterTypeDispatcher(type){\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.type = type;\n            this.$store.dispatch(action.LIST_DISPATCHER,\n                {\n                    page: 1,\n                    typedispatcher : this.type,\n                    status: this.status\n                });\n        }\n    }\n}\n",{"version":3,"sources":["dispatcher.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dispatcher.vue","sourceRoot":"src/views/pages/dispathcer","sourcesContent":["<template>\r\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n        <dispatcher-count />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DispatcherCount from '@/components/dispatcher/total-acount'\r\n    import Affix from '@/components/Affix'\r\n    import { mapGetters } from 'vuex'\r\n    import * as getter from '../../../store/getters-types'\r\n    import * as mutation from '../../../store/mutation-types'\r\n    import * as action from '../../../store/action-types'\r\n\r\n    export default {\r\n        name: 'Table',\r\n        data() {\r\n            return {\r\n                currentPage: 1,\r\n                input:'',\r\n                affixEnabled: true,\r\n                indexT: 1,\r\n                status:1 ,\r\n                select: [\r\n                {\r\n                    name: \"ACTIVE\",\r\n                    status: 1,\r\n                },\r\n                {\r\n                    name: \"INACTIVE\",\r\n                    status: 2,\r\n                },\r\n                {\r\n                    name: \"SUSPENDED\",\r\n                    status: 3\r\n                }\r\n            ],\r\n                type : '',\r\n                dispatcher_type: [\r\n                    {\r\n                        name: \"REGULER\",\r\n                        status: 4\r\n                    },\r\n                    {\r\n                        name: \"PLUS\",\r\n                        status: 5\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        components: {\r\n            Affix,\r\n            DispatcherCount\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                listData : getter.GET_LIST_DISPATCHER,\r\n                paginate : getter.GET_PAGINATE_DISPATCHER,\r\n                loading  : getter.GET_BUTTON\r\n            }),\r\n            paginato(){\r\n                return this.paginate\r\n            },\r\n            indexTam(){\r\n                return this.indexT\r\n            }\r\n        },\r\n    //    async created(){\r\n    //         this.$store.commit(mutation.BUTTON_STATUS, true);\r\n    //         await this.$store.dispatch(action.LIST_DISPATCHER,{\r\n    //             page: this.currentPage,\r\n    //             typedispatcher : this.type,\r\n    //             status: this.status});\r\n    //         },\r\n        methods: {\r\n            newCorp()   {\r\n                this.$router.replace('new-dispatcher')\r\n            },\r\n            handlePageChange(page) {\r\n                this.currentPage = page\r\n                this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                this.$store.dispatch( action.LIST_DISPATCHER,\r\n                    {\r\n                        page: this.currentPage,\r\n                        typedispatcher : this.type,\r\n                        status: this.status\r\n                    });\r\n                },\r\n            search(){\r\n                this.$store.dispatch( action.LIST_DATA_COR, this.input.trim() )\r\n            },\r\n            async getId(id){\r\n                await this.$store.dispatch(action.DATA_ID_DISPATCHER, id.id)\r\n                this.$router.replace({ path: '/detail-dispatcher' })\r\n            },\r\n            indexMethod(index) {\r\n                return index + this.paginato.fromP;\r\n            },\r\n            filterStatus(status){\r\n                this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                this.status = status;\r\n                this.$store.dispatch(action.LIST_DISPATCHER,\r\n                    {\r\n                        page: 1,\r\n                        typedispatcher : this.type,\r\n                        status: this.status\r\n                    });\r\n            },\r\n            filterTypeDispatcher(type){\r\n                this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                this.type = type;\r\n                this.$store.dispatch(action.LIST_DISPATCHER,\r\n                    {\r\n                        page: 1,\r\n                        typedispatcher : this.type,\r\n                        status: this.status\r\n                    });\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n    .table-box {\r\n        overflow: auto;\r\n    }\r\n    .el-pagination {\r\n        padding-top: 20px;\r\n    }\r\n    .el-input {\r\n        width: 300px !important;\r\n    }\r\n    .card-base {\r\n        padding: 20px;\r\n    }\r\n    .el-row {\r\n        padding: 0px 10px 10px;\r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n    .el-col {\r\n        border-radius: 5px;\r\n    }\r\n\r\n</style>\r\n\r\n"]}]}