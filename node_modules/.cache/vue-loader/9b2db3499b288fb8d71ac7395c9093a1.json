{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\authentication\\ResetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\authentication\\ResetPassword.vue","mtime":1644413760449},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport localAxios from '../../../services/http/client'\r\nimport formMixin from '../../../mixins/form.js'\r\nimport { required, sameAs, minLength } from 'vuelidate/lib/validators'\r\nimport * as getter from '../../../store/getters-types'\r\nimport * as action from '../../../store/action-types'\r\nimport * as mutation from '../../../store/mutation-types'\r\n\r\nexport default {\r\n\tname: 'change-password',\r\n\tmixins: [formMixin],\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\t\tpassword: '',\r\n\t\t\t\tconfirmPassword: '',\r\n\t\t\t\ttoken: '',\r\n\t\t\t\tisValid: null\r\n\t\t}\r\n\t},\r\n\tvalidations: {\r\n\t\tpassword: {\r\n\t\t\trequired,\r\n\t\t\tminLen: minLength(6)\r\n\t\t},\r\n\t\tconfirmPassword: {\r\n\t\t\tsameAs: sameAs('password')\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters({\r\n\t\t\t\tgetError\t: getter.GET_ERROR,\r\n\t\t\t\terrorMessage \t: getter.GET_ERROR_MESSAGE,\r\n\t\t\t\tbutton\t\t\t: getter.GET_BUTTON,\r\n\t\t}),\r\n\t\tisLogged() {\r\n\t\t\treturn this.$store.getters.isLogged;\r\n\t\t},\r\n\t\terrorButton(){\r\n\t\t\tif(this.getError){\t\t\t\r\n\t\t\t\treturn true\r\n\t\t\t}else{\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tasync created(){\r\n\t\ttry {\r\n\t\tconst tokent = this.$route.params.token\r\n\t\tlet cekToken = await localAxios.get('/password/find/' + tokent)\r\n\t\t\tif(cekToken.data.status){\r\n\t\t\t\tthis.isValid = true, \r\n\t\t\t\tthis.token = tokent\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t// ...mapActions(['login']),\r\n\t\treset() {\r\n\t\t\tconst formData = {\r\n\t\t\t\tpassword: this.password,\r\n\t\t\t\tconfirmPassword: this.confirmPassword,\r\n\t\t\t\ttoken: this.token\r\n\t\t\t};\r\n\t\t\tthis.$store.commit(mutation.BUTTON_STATUS, true)\r\n\t\t\tthis.$store.dispatch(action.CHANGE_PASSWORD,formData)\r\n\t\t},\r\n\t}\r\n}\r\n",{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ResetPassword.vue","sourceRoot":"src/views/pages/authentication","sourcesContent":["<template>\r\n\t<vue-scroll class=\"login-page align-vertical\">\r\n\t\t<div class=\"form-wrapper align-vertical-middle\">\r\n\t\t\t<div class=\"form-box card-base card-shadow--extraLarge\" v-if=\"isValid\">\r\n\t\t\t\t<img class=\"image-logo\" src=\"@/assets/images/logo.svg\" alt=\"logo\"/>\r\n\t\t\t\t<p style=\"color: red\" v-show=\"errorButton\">{{ errorMessage.message }}</p>\r\n\t\t\t\t<float-label class=\"styled\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t:class=\"{'is-danger': errors.has('password')}\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tref=\"password\"\r\n\t\t\t\t\t\t\tv-validate=\"'required|min:8|max:16'\"\r\n\t\t\t\t\t\t\tv-model=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"New Password\">\r\n\t\t\t\t\t\t\t<span v-if=\"errors.has('password')\" style=\"color : red\">\r\n\t\t\t\t\t\t\t\t{{ errors.first('password') }}\r\n\t\t\t\t\t\t\t</span>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<!-- <p v-show=\"!$v.password.required\" style=\"color: red\">password tidak boleh kosong</p>\r\n\t\t\t\t\t\t\t<p v-show=\"!$v.password.minLen\" style=\"color: red\">minimal password 6 karakter</p> -->\r\n\t\t\t\t</float-label>\r\n\t\t\t\t<float-label class=\"styled\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t:class=\"{'is-danger': errors.has('password_confirmation')}\"\r\n\t\t\t\t\t\t\tname=\"password_confirmation\"\r\n\t\t\t\t\t\t\tdata-vv-as=\"password\"\r\n\t\t\t\t\t\t\tv-validate=\"'confirmed:password|required'\"\r\n\t\t\t\t\t\t\tv-model=\"confirmPassword\"\r\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\">\r\n\t\t\t\t\t\t\t<!-- <p v-show=\"!$v.confirmPassword.sameAs\" style=\"color: red\">Confirm Password tidak sama dengan New Password</p> -->\r\n\t\t\t\t\t\t\t<span v-if=\"errors.has('password_confirmation')\" style=\"color : red\">\r\n\t\t\t\t\t\t\t\t<!--{{ errors.first('password_confirmation') }}-->\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t</float-label>\r\n\r\n\t\t\t\t<div class=\"flex text-center center pt-30 pb-10\">\t\t\t\r\n\t\t\t\t\t<el-button plain size=\"small\" @click=\"reset\" :loading=\"button\" class=\"login-btn tada animated\">\r\n\t\t\t\t\t\tCREATE\r\n\t\t\t\t\t</el-button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- <div class=\"text-divider mv-10\">or</div>\r\n\r\n\t\t\t\t<div class=\"flex column center pt-10 pb-10\">\t\t\t\r\n\t\t\t\t\t<el-button plain size=\"small\" @click=\"login\" class=\"social-btn google\">\r\n\t\t\t\t\t\tLog in with Google\r\n\t\t\t\t\t</el-button>\r\n\t\t\t\t\t<el-button plain size=\"small\" @click=\"login\" class=\"social-btn facebook\">\r\n\t\t\t\t\t\tLog in with Facebook\r\n\t\t\t\t\t</el-button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"text-center signin-box pt-20\">\r\n\t\t\t\t\tDon't have an account? <a>Sign in</a>\r\n\t\t\t\t</div> -->\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-box card-base card-shadow--extraLarge\" v-else>\r\n\t\t\t\t<img class=\"image-logo\" src=\"@/assets/images/logo.svg\" alt=\"logo\"/>\r\n\t\t\t\t<h3> Your Link Is Expired </h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</vue-scroll>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport localAxios from '../../../services/http/client'\r\nimport formMixin from '../../../mixins/form.js'\r\nimport { required, sameAs, minLength } from 'vuelidate/lib/validators'\r\nimport * as getter from '../../../store/getters-types'\r\nimport * as action from '../../../store/action-types'\r\nimport * as mutation from '../../../store/mutation-types'\r\n\r\nexport default {\r\n\tname: 'change-password',\r\n\tmixins: [formMixin],\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\t\tpassword: '',\r\n\t\t\t\tconfirmPassword: '',\r\n\t\t\t\ttoken: '',\r\n\t\t\t\tisValid: null\r\n\t\t}\r\n\t},\r\n\tvalidations: {\r\n\t\tpassword: {\r\n\t\t\trequired,\r\n\t\t\tminLen: minLength(6)\r\n\t\t},\r\n\t\tconfirmPassword: {\r\n\t\t\tsameAs: sameAs('password')\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters({\r\n\t\t\t\tgetError\t: getter.GET_ERROR,\r\n\t\t\t\terrorMessage \t: getter.GET_ERROR_MESSAGE,\r\n\t\t\t\tbutton\t\t\t: getter.GET_BUTTON,\r\n\t\t}),\r\n\t\tisLogged() {\r\n\t\t\treturn this.$store.getters.isLogged;\r\n\t\t},\r\n\t\terrorButton(){\r\n\t\t\tif(this.getError){\t\t\t\r\n\t\t\t\treturn true\r\n\t\t\t}else{\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tasync created(){\r\n\t\ttry {\r\n\t\tconst tokent = this.$route.params.token\r\n\t\tlet cekToken = await localAxios.get('/password/find/' + tokent)\r\n\t\t\tif(cekToken.data.status){\r\n\t\t\t\tthis.isValid = true, \r\n\t\t\t\tthis.token = tokent\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t// ...mapActions(['login']),\r\n\t\treset() {\r\n\t\t\tconst formData = {\r\n\t\t\t\tpassword: this.password,\r\n\t\t\t\tconfirmPassword: this.confirmPassword,\r\n\t\t\t\ttoken: this.token\r\n\t\t\t};\r\n\t\t\tthis.$store.commit(mutation.BUTTON_STATUS, true)\r\n\t\t\tthis.$store.dispatch(action.CHANGE_PASSWORD,formData)\r\n\t\t},\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../../../assets/scss/_variables';\r\n\r\n.login-page {\r\n\tbackground: $text-color;\r\n\tmargin-left: -30px;\r\n\tmargin-right: -30px;\r\n\r\n\t.form-wrapper {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.form-box {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 340px;\r\n\t\tpadding: 30px;\r\n\t\tbox-sizing: border-box;\r\n\t\tmargin: 20px auto;\r\n\r\n\t\ta {\r\n\t\t\tfont-size: 14px;\r\n\t\t\tcolor: $text-color-accent;\r\n\t\t\ttext-decoration: none;\r\n\t\t\tfont-weight: 500;\r\n\t\t}\r\n\r\n\t\t.image-logo {\r\n\t\t\twidth: 80px;\r\n\t\t\tmargin: 0px auto;\r\n\t\t\tmargin-bottom: 30px;\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t\t.input.invalid input {\r\n\t\t\tborder: 1px solid red;\r\n\t\t\tbackground-color: #ffc9aa;\r\n\t\t}\r\n\t\t.input.invalid label {\r\n\t\t\tcolor: red;\r\n\t\t}\r\n\r\n\t\t.login-btn ,\r\n\t\t.social-btn {\r\n\t\t\twidth: 160px;\r\n\r\n\t\t\t&.google {\r\n\t\t\t\tmargin-bottom: 10px;\r\n\t\t\t\tbackground-color: #d73d32;\r\n\t\t\t\tcolor: white;\r\n\r\n\t\t\t\t&:hover {\r\n\t\t\t\t\tborder-color: #d73d32;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t&.facebook {\r\n\t\t\t\tbackground-color: #3f5c9a;\r\n\t\t\t\tcolor: white;\r\n\r\n\t\t\t\t&:hover {\r\n\t\t\t\t\tborder-color: #3f5c9a;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.signin-box {\r\n\t\t\tfont-size: 14px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@media (max-width: 768px) {\r\n\t.layout-container .container .view.login-page {\r\n\t\tmargin-left: -5px;\r\n\t\tmargin-right: -5px;\r\n\t\tmax-width: calc(100% + 10px);\r\n\t}\r\n}\r\n</style>"]}]}