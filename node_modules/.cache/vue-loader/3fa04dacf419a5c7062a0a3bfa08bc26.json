{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/employee/listemployee/list-complete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/employee/listemployee/list-complete.vue","mtime":1640440454982},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1640440454211}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Affix from '@/components/Affix'\nimport { mapGetters } from 'vuex'\nimport * as getter from '../../../../store/getters-types'\nimport * as action from '../../../../store/action-types'\nimport * as mutation from '../../../../store/mutation-types'\nimport swal from 'sweetalert2'\n\nexport default {\n    name: 'Table',\n    data() {\n        return {\n            currentPage     : 1,\n            path            : null,\n            input           :'',\n            affixEnabled    : true,\n            indexT          : 1,\n            offset          : null,\n            form            : {\n                enterprise_name : '',\n                month           : '',\n                trx_id          : '',\n                to              : '',\n                formP            : '',\n            }\n        }\n    },\n    components: {\n        Affix\n    },\n    computed: {\n        ...mapGetters({\n            listData : getter.GET_LIST_EMPLOYEE,\n            paginate : getter.GET_PAGINATE_EMPLOYEE,\n            loading  : getter.GET_BUTTON,\n            total    : getter.GET_EMPLOYEE_TOTAL\n        }),\n        paginato(){\n            return this.paginate\n        },\n        indexTam(){\n            return this.indexT\n        }\n    },\n    async created(){\n        // this.path = this.$route.path == '/order/open';\n        // (this.$route.path == '/order/open') ? this.offset = 0 : this.offset = 16\n\n        let objList = {\n            dataList    : null,\n            nextC       : null,\n            prevC       : null,\n            firstP      : null,\n            fromPA      : null,\n            total       : null\n        }\n        await this.$store.commit(mutation.SET_EMPLOYEE_LIST, objList)\n\n        let obj = {\n            page    : this.currentPage,\n            path    : '/employee/task/complete',\n            month           : this.form.month,\n            trx_id          : this.form.trx_id,\n            form            : this.form.formP,\n            to              : this.form.to\n        }\n        this.$store.commit(mutation.BUTTON_STATUS, true)\n        let data = await this.$store.dispatch(action.LIST_EMPLOYEE_TASK, obj)\n    },\n    methods: {\n        // newCorp()   {\n        //     this.$router.replace('/order/create')\n        // },\n        // exportExcel(){\n        //     if(this.form.month === '' || this.form.month === '0' ){\n        //         swal('please select month (except all month)','', 'error')\n        //     }else {\n        //         let obj = {\n        //             path    : this.$route.path,\n        //             month   : this.form.month\n        //         }\n        //         this.$store.dispatch(action.EXPORT_ORDER_LIST, obj)\n        //     }\n        // },\n        handlePageChange(page) {\n            let obj = {\n                page    : page,\n                path    : '/employee/task/complete',\n                month           : this.form.month,\n                trx_id          : this.form.trx_id,\n                form            : this.form.formP,\n                to              : this.form.to\n            };\n            this.currentPage = page\n            this.$store.dispatch(action.LIST_EMPLOYEE_TASK, obj)\n        },\n        search(){\n            this.$store.dispatch( action.LIST_ORDER_CLIENT, this.input.trim() )\n        },\n        templateButton(){\n            this.$router.replace('/template-list')\n        },\n        assignButton(){\n            this.$router.replace('/employee/assign-task')\n        },\n       async getId(id){\n            let obj = {\n                id    : id.idorder,\n                path  : '/employee/task/complete'\n            };\n           await this.$store.dispatch(action.EMPLOYEE_TASK_ID, obj)\n            this.$router.replace('/detail-task-employee')\n        },\n        indexMethod(index) {\n            return index + this.paginate.fromP;\n        },\n        searchSquare(){\n            let obj = {\n                page    : '1',\n                path    : '/employee/task/complete',\n                month           : this.form.month,\n                trx_id          : this.form.trx_id,\n                form            : this.form.formP,\n                to              : this.form.to\n            }\n            this.$store.dispatch(action.LIST_EMPLOYEE_TASK, obj)\n        }\n    }\n}\n",{"version":3,"sources":["list-complete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"list-complete.vue","sourceRoot":"src/views/pages/employee/listemployee","sourcesContent":["<template>\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n        <div class=\"card-base card-shadow--medium bg-white\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"24\" style=\"margin-bottom: 20px\">\n                    <el-breadcrumb separator=\"/\">\n                        <el-breadcrumb-item :to=\"{ path: '/employee/inprogress' }\">Inprogress</el-breadcrumb-item>\n                        <el-breadcrumb-item :to=\"{ path:'/employee/complete' }\">Complete</el-breadcrumb-item>\n                        <el-breadcrumb-item ></el-breadcrumb-item>\n                    </el-breadcrumb>\n                </el-col>\n<!--                <el-col :span=\"16\">-->\n<!--                    <div >-->\n<!--                        <el-button-->\n<!--                                v-if=\"path\"-->\n<!--                                @click=\"newCorp\"-->\n<!--                                type=\"primary\">-->\n<!--                            New Order-->\n<!--                        </el-button>-->\n<!--                    </div>-->\n<!--                </el-col>-->\n                <!--<el-col :lg=\"{span: 8, offset}\">-->\n                <!--<el-input-->\n                <!--placeholder=\"Search\"-->\n                <!--style=\"width: 300px\"-->\n                <!--v-model=\"input\"-->\n                <!--@change=\"search\">-->\n                <!--</el-input>-->\n                <!--</el-col>-->\n            </el-row>\n\n            <el-row :gutter=\"10\" style=\"margin-top: 20px\">\n                    <el-col :lg=\"{span: 10, offset:0}\">\n                        <el-button type=\"danger\" @click=\"templateButton\">\n                            Template\n                        </el-button>\n                        <el-button type=\"danger\" @click=\"assignButton\">\n                            Assign\n                        </el-button>\n                    </el-col>\n\n                <el-col :span=\"6\">\n                    <el-select v-model=\"form.month\" placeholder=\"Select Month\">\n                        <el-option label=\"All Months\" selected value=\"0\">All Months</el-option>\n                        <el-option label=\"January\" selected value=\"1\">January</el-option>\n                        <el-option label=\"February\" value=\"2\">February</el-option>\n                        <el-option label=\"March\" value=\"3\">March</el-option>\n                        <el-option label=\"April\" value=\"4\">April</el-option>\n                        <el-option label=\"May\" value=\"5\">May</el-option>\n                        <el-option label=\"June\" value=\"6\">June</el-option>\n                        <el-option label=\"July\" value=\"7\">July</el-option>\n                        <el-option label=\"August\" value=\"8\">August</el-option>\n                        <el-option label=\"September\" value=\"9\">September</el-option>\n                        <el-option label=\"October\" value=\"10\">October</el-option>\n                        <el-option label=\"November\" value=\"11\">November</el-option>\n                        <el-option label=\"December\" value=\"12\">December</el-option>\n                    </el-select>\n                </el-col>\n\n                <!--<el-col :span=\"6\">-->\n                    <!--<el-input-->\n                            <!--placeholder=\"Enterprise Name\"-->\n                            <!--v-model=\"form.enterprise_name\">-->\n                    <!--</el-input>-->\n                <!--</el-col>-->\n\n                <el-col :span=\"6\">\n                    <el-input\n                            placeholder=\"Transaction ID\"\n                            v-model=\"form.trx_id\">\n                    </el-input>\n                </el-col>\n\n                <el-col :span=\"1\">\n                    <el-button\n                            icon=\"el-icon-search\"\n                            @click=\"searchSquare\"\n                            square\n                            size=\"small\">\n\n                    </el-button>\n                </el-col>\n\n            </el-row>\n\n\n            <el-row>\n                <el-col :span=\"24\">\n                    <el-table\n                            v-loading=\"loading\"\n                            element-loading-text=\"Loading...\"\n                            element-loading-spinner=\"el-icon-loading\"\n                            element-loading-background=\"rgba(0, 0, 0, 0.8)\"\n                            :data=\"listData\"\n                            stripe\n                            style=\"width: 100%\"\n                            @row-click=\"getId\">\n                        <el-table-column\n                                type=\"index\"\n                                :index=\"indexMethod\"\n                                label=\"No\"\n                                width=\"80\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"trx_id\"\n                                label=\"Transaction ID\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"employee.user.name\"\n                                label=\"Name\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"employee.employee_position.job_name\"\n                                label=\"Position\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"status_text\"\n                                label=\"Status\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"created_at\"\n                                label=\"Date\">\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n\n            <el-row>\n                <el-col :lg=\"20\">\n                    <div class=\"grid-content\">\n                        <el-pagination\n                                background\n                                layout=\"prev, pager, next\"\n                                @current-change=\"handlePageChange\"\n                                :total=\"total\">\n\n                        </el-pagination>\n                    </div>\n                </el-col>\n                <!--<el-col :lg=\"4\">-->\n                    <!--<el-button-->\n                            <!--type=\"primary\"-->\n                            <!--@click=\"exportExcel\"-->\n                            <!--style=\"margin-top: 15px\">-->\n                        <!--Export-->\n                    <!--</el-button>-->\n                <!--</el-col>-->\n            </el-row>\n        </div>\n    </div>\n</template>\n\n<script>\n    import Affix from '@/components/Affix'\n    import { mapGetters } from 'vuex'\n    import * as getter from '../../../../store/getters-types'\n    import * as action from '../../../../store/action-types'\n    import * as mutation from '../../../../store/mutation-types'\n    import swal from 'sweetalert2'\n\n    export default {\n        name: 'Table',\n        data() {\n            return {\n                currentPage     : 1,\n                path            : null,\n                input           :'',\n                affixEnabled    : true,\n                indexT          : 1,\n                offset          : null,\n                form            : {\n                    enterprise_name : '',\n                    month           : '',\n                    trx_id          : '',\n                    to              : '',\n                    formP            : '',\n                }\n            }\n        },\n        components: {\n            Affix\n        },\n        computed: {\n            ...mapGetters({\n                listData : getter.GET_LIST_EMPLOYEE,\n                paginate : getter.GET_PAGINATE_EMPLOYEE,\n                loading  : getter.GET_BUTTON,\n                total    : getter.GET_EMPLOYEE_TOTAL\n            }),\n            paginato(){\n                return this.paginate\n            },\n            indexTam(){\n                return this.indexT\n            }\n        },\n        async created(){\n            // this.path = this.$route.path == '/order/open';\n            // (this.$route.path == '/order/open') ? this.offset = 0 : this.offset = 16\n\n            let objList = {\n                dataList    : null,\n                nextC       : null,\n                prevC       : null,\n                firstP      : null,\n                fromPA      : null,\n                total       : null\n            }\n            await this.$store.commit(mutation.SET_EMPLOYEE_LIST, objList)\n\n            let obj = {\n                page    : this.currentPage,\n                path    : '/employee/task/complete',\n                month           : this.form.month,\n                trx_id          : this.form.trx_id,\n                form            : this.form.formP,\n                to              : this.form.to\n            }\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            let data = await this.$store.dispatch(action.LIST_EMPLOYEE_TASK, obj)\n        },\n        methods: {\n            // newCorp()   {\n            //     this.$router.replace('/order/create')\n            // },\n            // exportExcel(){\n            //     if(this.form.month === '' || this.form.month === '0' ){\n            //         swal('please select month (except all month)','', 'error')\n            //     }else {\n            //         let obj = {\n            //             path    : this.$route.path,\n            //             month   : this.form.month\n            //         }\n            //         this.$store.dispatch(action.EXPORT_ORDER_LIST, obj)\n            //     }\n            // },\n            handlePageChange(page) {\n                let obj = {\n                    page    : page,\n                    path    : '/employee/task/complete',\n                    month           : this.form.month,\n                    trx_id          : this.form.trx_id,\n                    form            : this.form.formP,\n                    to              : this.form.to\n                };\n                this.currentPage = page\n                this.$store.dispatch(action.LIST_EMPLOYEE_TASK, obj)\n            },\n            search(){\n                this.$store.dispatch( action.LIST_ORDER_CLIENT, this.input.trim() )\n            },\n            templateButton(){\n                this.$router.replace('/template-list')\n            },\n            assignButton(){\n                this.$router.replace('/employee/assign-task')\n            },\n           async getId(id){\n                let obj = {\n                    id    : id.idorder,\n                    path  : '/employee/task/complete'\n                };\n               await this.$store.dispatch(action.EMPLOYEE_TASK_ID, obj)\n                this.$router.replace('/detail-task-employee')\n            },\n            indexMethod(index) {\n                return index + this.paginate.fromP;\n            },\n            searchSquare(){\n                let obj = {\n                    page    : '1',\n                    path    : '/employee/task/complete',\n                    month           : this.form.month,\n                    trx_id          : this.form.trx_id,\n                    form            : this.form.formP,\n                    to              : this.form.to\n                }\n                this.$store.dispatch(action.LIST_EMPLOYEE_TASK, obj)\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n\n    .table-box {\n        overflow: auto;\n    }\n    .el-pagination {\n        padding-top: 20px;\n    }\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n    .el-select {\n        width: 100%;\n    }\n</style>\n\n"]}]}