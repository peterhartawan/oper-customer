{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/enterprise/edit-driver-enterprise.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/enterprise/edit-driver-enterprise.vue","mtime":1628175042624},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types';\nexport default {\n    name: \"EditDriverEnterprise\",\n    data() {\n        return {\n            form: {\n                name: \"\",\n                email: \"\",\n                phonenumber: \"\",\n                birthdate: \"\",\n                address: \"\",\n                gender: \"\",\n                nik: \"\",\n                photo: null,\n                photoname: \"\",\n                iddriver: \"\",\n                address: \"\",\n                typedriver: null,\n                pkwt: 1,\n            },\n            rules: {\n                name: [{\n                    required: true,\n                    message: \"Driver Name is required!\",\n                    trigger: \"blur\"\n                }],\n                email: [{\n                    required: true,\n                    message: \"Driver Email is required!\",\n                    trigger: \"blur\"\n                }],\n                nik: [{\n                    required: true,\n                    message: \"Driver NIK is required!\",\n                    trigger: \"blur\"\n                }],\n                phonenumber: [{\n                    required: true,\n                    message: \"Driver Phone Number is required!\",\n                    trigger: \"blur\"\n                }],\n                address: [{\n                    required: true,\n                    message: \"Driver Address is required!\",\n                    trigger: \"blur\"\n                }],\n                gender: [{\n                    required: true,\n                    message: \"Driver Gender is required!\",\n                    trigger: \"blur\"\n                }],\n                birthdate: [{\n                    required: true,\n                    message: \"Driver Birthdate is required!\",\n                    trigger: \"blur\"\n                }],\n                // photoname: [{\n                //     required: true,\n                //     message: \"Driver Photo is required!\",\n                //     trigger: \"blur\"\n                // }],\n            }\n        };\n    },\n    methods: {\n        onSubmit(formName) {\n            let obj = {\n                name: this.form.name,\n                email: this.form.email,\n                phonenumber: this.form.phonenumber,\n                birthdate: this.form.birthdate,\n                nik: this.form.nik,\n                address: this.form.address,\n                gender: this.form.gender,\n                photo: this.form.photo,\n                iddriver: this.form.iddriver,\n                typedriver: this.form.typedriver,\n                pkwt: this.form.pkwt\n            }\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.UPDATE_DATA_DRIVER, obj)\n                } else {\n                    return false;\n                }\n            });\n        },\n        Cancel() {\n              router.push({\n                path: `/list-driver-enterprise/` + this.enterprise.identerprise\n            })\n        },\n        onPickFile() {\n            this.$refs.fileInput.click();\n        },\n        handleFileChange(event) {\n            this.form.photo = event.target.files[0];\n            this.form.photoname = event.target.files[0].name;\n        },\n        isNumber(evt) {\n            evt = evt ? evt : window.event;\n            var charCode = evt.which ? evt.which : evt.keyCode;\n            if (\n                charCode > 31 &&\n                (charCode < 48 || charCode > 57)\n            ) {\n                evt.preventDefault();\n            } else {\n                return true;\n            }\n        },\n    },\n\n    computed: {\n        ...mapGetters({\n            error: getter.GET_ERROR,\n            button: getter.GET_BUTTON,\n            driverType: getter.GET_DRIVER_TYPE,\n            driver: getter.DRIVER,\n            enterprise: getter.ENTERPRISE\n        }),\n        select() {\n            if (this.driver.drivertype_iddrivertype === 1) {\n                return {\n                    select: [{\n                            iddrivertype: 1,\n                            name: \"PKWT\",\n                            descriptuon: null\n                        },\n                        {\n                            iddrivertype: 2,\n                            name: \"PKWT BACKUP\",\n                            descriptuon: null,\n                        },\n                        {\n                            iddrivertype: 3,\n                            name: \"FREELANCE\",\n                            descriptuon: null\n                        }\n                    ],\n                }\n            } else {\n                return {\n                    select: [{\n                            iddrivertype: 2,\n                            name: \"PKWT BACKUP\",\n                            descriptuon: null,\n                        },\n                        {\n                            iddrivertype: 3,\n                            name: \"FREELANCE\",\n                            descriptuon: null\n                        }\n                    ],\n                }\n\n            }\n        },\n    },\n    mounted() {\n     \n        this.$store.dispatch(action.DRIVER_TYPE);\n    },\n\n    created() {\n        this.form.name = this.driver.name;\n        this.form.nik = this.driver.nik;\n        this.form.email = this.driver.email;\n        this.form.phonenumber = this.driver.phonenumber;\n        this.form.birthdate = this.driver.birthdate;\n        this.form.address = this.driver.address;\n        this.form.typedriver = this.driver.drivertype_iddrivertype;\n        this.form.iddriver = this.driver.users_id;\n        this.form.gender = this.driver.gender.toString();\n        // this.form.idvendor = this.vendor.idvendor;\n        // this.form.idadmin = this.vendor.admins[0].id;\n        // this.form.admin_name = this.vendor.admins[0].name;\n        // this.form.admin_phonenumber = this.vendor.admins[0].phonenumber;\n        // this.form.admin_email = this.vendor.admins[0].email;\n    },\n     mounted() {\n        this.$store.dispatch(action.DRIVER_TYPE);\n    }\n\n};\n",{"version":3,"sources":["edit-driver-enterprise.vue"],"names":[],"mappingsfile":"edit-driver-enterprise.vue","sourceRoot":"src/views/pages/enterprise","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"name\">\n                        <el-input placeholder=\"Driver Name\" v-model=\"form.name\"></el-input>\n                    </el-form-item>\n                </el-col>\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"nik\">\n                        <el-input placeholder=\"Driver NIK\" v-model=\"form.nik\"></el-input>\n                    </el-form-item>\n                </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"email\">\n                        <el-input placeholder=\"Driver Email\" v-model=\"form.email\"></el-input>\n                    </el-form-item>\n                </el-col>\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"phonenumber\">\n                        <el-input placeholder=\"Driver Phone Number\" v-model=\"form.phonenumber\"></el-input>\n                    </el-form-item>\n                </el-col>\n            </el-row>\n            <el-row :gutter=\"10\">\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"gender\">\n\n                        <el-radio v-model=\"form.gender\" label=\"1\">Male</el-radio>\n                        <el-radio v-model=\"form.gender\" label=\"2\">Female</el-radio>\n\n                    </el-form-item>\n                </el-col>\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"birthdate\">\n                        <el-date-picker value-format=\"yyyy-MM-dd\" style=\"width: 100%;\" v-model=\"form.birthdate\" type=\"date\" placeholder=\"Driver Birthdate\"></el-date-picker>\n                    </el-form-item>\n                </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"24\">\n                    <el-form-item prop=\"address\">\n                        <el-input type=\"textarea\" :autosize=\"{ minRows: 5, maxRows: 8}\" placeholder=\"Driver Address\" v-model=\"form.address\"></el-input>\n                    </el-form-item>\n                </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n                <el-col :span=\"9\">\n                    <el-form-item prop=\"photoname\">\n                        <div class=\"grid-content\">\n                            <el-input disabled placeholder=\"Browse Foto\" v-model=\"form.photoname\" disable></el-input>\n                        </div>\n                    </el-form-item>\n                </el-col>\n                <el-row :gutter=\"10\">\n                    <el-col :lg=\"9\">\n                        <el-select v-model=\"form.typedriver\" filterable placeholder=\"Select\">\n                            <el-option v-for=\"item in select.select\" :key=\"item.iddrivertype\" :label=\"item.name\" :value=\"item.iddrivertype\"></el-option>\n                        </el-select>\n                    </el-col>\n                </el-row>\n\n                <el-col :span=\"3\">\n                    <div class=\"grid-content\">\n                        <el-form-item prop=\"photo\">\n                            <el-button @click=\"onPickFile\">Browse</el-button>\n                            <input\n                                        type=\"file\"\n                                        style=\"display: none\"\n                                        ref=\"fileInput\"\n                                        accept=\"image/*\"\n                                        @change=\"handleFileChange\">\n                        </el-form-item>\n                    </div>\n                </el-col>\n            </el-row>\n        </el-form>\n        <el-row>\n            <el-col :offset=\"20\" :lg=\"2\">\n                <el-button :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\n            </el-col>\n            <el-col :lg=\"2\">\n                <el-button @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\n            </el-col>\n        </el-row>\n    </div>\n</div>\n</template>\n\n<script>\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types';\nexport default {\n    name: \"EditDriverEnterprise\",\n    data() {\n        return {\n            form: {\n                name: \"\",\n                email: \"\",\n                phonenumber: \"\",\n                birthdate: \"\",\n                address: \"\",\n                gender: \"\",\n                nik: \"\",\n                photo: null,\n                photoname: \"\",\n                iddriver: \"\",\n                address: \"\",\n                typedriver: null,\n                pkwt: 1,\n            },\n            rules: {\n                name: [{\n                    required: true,\n                    message: \"Driver Name is required!\",\n                    trigger: \"blur\"\n                }],\n                email: [{\n                    required: true,\n                    message: \"Driver Email is required!\",\n                    trigger: \"blur\"\n                }],\n                nik: [{\n                    required: true,\n                    message: \"Driver NIK is required!\",\n                    trigger: \"blur\"\n                }],\n                phonenumber: [{\n                    required: true,\n                    message: \"Driver Phone Number is required!\",\n                    trigger: \"blur\"\n                }],\n                address: [{\n                    required: true,\n                    message: \"Driver Address is required!\",\n                    trigger: \"blur\"\n                }],\n                gender: [{\n                    required: true,\n                    message: \"Driver Gender is required!\",\n                    trigger: \"blur\"\n                }],\n                birthdate: [{\n                    required: true,\n                    message: \"Driver Birthdate is required!\",\n                    trigger: \"blur\"\n                }],\n                // photoname: [{\n                //     required: true,\n                //     message: \"Driver Photo is required!\",\n                //     trigger: \"blur\"\n                // }],\n            }\n        };\n    },\n    methods: {\n        onSubmit(formName) {\n            let obj = {\n                name: this.form.name,\n                email: this.form.email,\n                phonenumber: this.form.phonenumber,\n                birthdate: this.form.birthdate,\n                nik: this.form.nik,\n                address: this.form.address,\n                gender: this.form.gender,\n                photo: this.form.photo,\n                iddriver: this.form.iddriver,\n                typedriver: this.form.typedriver,\n                pkwt: this.form.pkwt\n            }\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.UPDATE_DATA_DRIVER, obj)\n                } else {\n                    return false;\n                }\n            });\n        },\n        Cancel() {\n              router.push({\n                path: `/list-driver-enterprise/` + this.enterprise.identerprise\n            })\n        },\n        onPickFile() {\n            this.$refs.fileInput.click();\n        },\n        handleFileChange(event) {\n            this.form.photo = event.target.files[0];\n            this.form.photoname = event.target.files[0].name;\n        },\n        isNumber(evt) {\n            evt = evt ? evt : window.event;\n            var charCode = evt.which ? evt.which : evt.keyCode;\n            if (\n                charCode > 31 &&\n                (charCode < 48 || charCode > 57)\n            ) {\n                evt.preventDefault();\n            } else {\n                return true;\n            }\n        },\n    },\n\n    computed: {\n        ...mapGetters({\n            error: getter.GET_ERROR,\n            button: getter.GET_BUTTON,\n            driverType: getter.GET_DRIVER_TYPE,\n            driver: getter.DRIVER,\n            enterprise: getter.ENTERPRISE\n        }),\n        select() {\n            if (this.driver.drivertype_iddrivertype === 1) {\n                return {\n                    select: [{\n                            iddrivertype: 1,\n                            name: \"PKWT\",\n                            descriptuon: null\n                        },\n                        {\n                            iddrivertype: 2,\n                            name: \"PKWT BACKUP\",\n                            descriptuon: null,\n                        },\n                        {\n                            iddrivertype: 3,\n                            name: \"FREELANCE\",\n                            descriptuon: null\n                        }\n                    ],\n                }\n            } else {\n                return {\n                    select: [{\n                            iddrivertype: 2,\n                            name: \"PKWT BACKUP\",\n                            descriptuon: null,\n                        },\n                        {\n                            iddrivertype: 3,\n                            name: \"FREELANCE\",\n                            descriptuon: null\n                        }\n                    ],\n                }\n\n            }\n        },\n    },\n    mounted() {\n     \n        this.$store.dispatch(action.DRIVER_TYPE);\n    },\n\n    created() {\n        this.form.name = this.driver.name;\n        this.form.nik = this.driver.nik;\n        this.form.email = this.driver.email;\n        this.form.phonenumber = this.driver.phonenumber;\n        this.form.birthdate = this.driver.birthdate;\n        this.form.address = this.driver.address;\n        this.form.typedriver = this.driver.drivertype_iddrivertype;\n        this.form.iddriver = this.driver.users_id;\n        this.form.gender = this.driver.gender.toString();\n        // this.form.idvendor = this.vendor.idvendor;\n        // this.form.idadmin = this.vendor.admins[0].id;\n        // this.form.admin_name = this.vendor.admins[0].name;\n        // this.form.admin_phonenumber = this.vendor.admins[0].phonenumber;\n        // this.form.admin_email = this.vendor.admins[0].email;\n    },\n     mounted() {\n        this.$store.dispatch(action.DRIVER_TYPE);\n    }\n\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    padding: 0px 10px;\n    margin-bottom: 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.el-radio {\n    margin: 0 150px 0 10px;\n}\n\n.el-select {\n    width: 100%;\n}\n\n.thumbnail {\n    position: relative;\n    width: 300px;\n    height: 300px;\n    overflow: hidden;\n}\n\n.thumbnail img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    height: 100%;\n    width: auto;\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n}\n\n.thumbnail img.portrait {\n    width: 100%;\n    height: auto;\n}\n\na {\n    border-style: dotted;\n    border-radius: 15px;\n    padding: 10px;\n    height: 150px;\n}\n\ntd {\n    padding: 10px;\n}\n</style>\n"]}]}