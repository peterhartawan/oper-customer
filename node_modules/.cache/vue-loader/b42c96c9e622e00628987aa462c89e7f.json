{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/faq/edit-faq.vue?vue&type=style&index=0&id=c050af9e&lang=scss&scoped=true&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/faq/edit-faq.vue","mtime":1628175042626},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../../../assets/scss/_variables\";\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    padding: 0px 10px;\n    margin-bottom: 10px;\n\n    &:last-child {\n        margin-bottom: 20px;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.el-radio {\n    margin: 0 160px 0 10px;\n}\n\n.el-select {\n    width: 100%;\n}\n\n.page-quill {\n    .card-base {\n        box-sizing: border-box;\n\n        .quill-editor {\n            .ql-toolbar.ql-snow {\n                border: none;\n                background: lighten($background-color, 2%);\n                border-bottom: 1px solid $background-color;\n            }\n\n            .ql-container.ql-snow {\n                border: none;\n            }\n        }\n\n        &.t-bubble {\n            overflow: inherit;\n        }\n    }\n}\n\n@media (max-width: 768px) {\n    .page-quill {\n        .card-base {\n            &.t-bubble {\n                padding: 40px 20px;\n            }\n        }\n    }\n}\n",{"version":3,"sources":["edit-faq.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-faq.vue","sourceRoot":"src/views/pages/faq","sourcesContent":["<template>\n<div class=\"page-quill scrollable only-y\" id=\"affix-container\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n            <el-row :gutter=\"10\">\n                <el-col :lg=\"9\">\n                    <el-select v-model=\"form.idrole\" filterable placeholder=\"Role\">\n                        <el-option v-for=\"item in select\" :key=\"item.idrole\" :label=\"item.name\" :value=\"item.idrole\"></el-option>\n                    </el-select>\n                </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"24\">\n                    <el-form-item prop=\"question\">\n                        <el-input placeholder=\"Question\" v-model=\"form.question\"></el-input>\n                    </el-form-item>\n                </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"24\">\n                    <div class=\"card-base card-shadow--medium\" style=\"min-height: 300px;\">\n                        <quill-editor :options=\"editor\" v-model=\"form.answer\">\n                        </quill-editor>\n                    </div>\n                </el-col>\n            </el-row>\n        </el-form>\n        <el-row>\n            <el-col :offset=\"20\" :lg=\"2\">\n                <el-button @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\n            </el-col>\n            <el-col :lg=\"2\">\n                <el-button @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\n            </el-col>\n        </el-row>\n    </div>\n</div>\n</template>\n\n<script>\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as mutation from '../../../store/mutation-types';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nexport default {\n    name: \"EditLocation\",\n    data() {\n        return {\n            form: {\n                question: \"\",\n                answer: \"\",\n                idrole: \"\",\n                idfaq: \"\",\n                page: 1,\n            },\n            select: [\n                {\n                    idrole: 2,\n                    name: \"Vendor\"\n                },\n                {\n                    idrole: 3,\n                    name: \"Enterprise\"\n                },\n            ],\n            rules: {\n                question: [{\n                    required: true,\n                    message: \"Question is required!\",\n                    trigger: \"blur\"\n                }],\n                answer: [{\n                    required: true,\n                    message: \"Answer is required!\",\n                    trigger: \"blur\"\n                }],\n                role: [{\n                    required: true,\n                    message: \"Role is required!\",\n                    trigger: \"blur\"\n                }],\n            },\n            editor: {\n                placeholder: 'Put an answer here..',\n                theme: 'snow',\n                modules: {\n                    toolbar: [\n                    ['bold', 'italic', 'underline', 'strike'],\n                    ['blockquote', 'code-block'],\n                    [{ 'header': 1 }, { 'header': 2 }],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                    [{ 'script': 'sub' }, { 'script': 'super' }],\n                    [{ 'indent': '-1' }, { 'indent': '+1' }],\n                    [{ 'direction': 'rtl' }],\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                    [{ 'font': [] }],\n                    [{ 'color': [] }, { 'background': [] }],\n                    [{ 'align': [] }],\n                    ['clean'],\n                    ['link']\n                    ],\n                }\n            },\n        };\n    },\n    methods: {\n         onSubmit(formName) {\n            let obj = {\n                question: this.form.question,\n                idrole: this.form.idrole,\n                answer: this.form.answer,\n            };\n            this.$refs[formName].validate(valid => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.UPDATE_FAQ, this.form);\n                } else {\n                    return false;\n                }\n            });\n        },\n        Cancel() {\n            this.$router.replace({\n                path: \"/manage-faq\"\n            });\n        }\n    },\n     computed: {\n        ...mapGetters({\n            content: getter.GET_FAQ_DETAIL\n        }),\n    },\n    async created() {\n        this.form.idrole = this.content.idrole\n        this.form.question = this.content.question;\n        this.form.answer = this.content.answer;\n        this.form.idfaq = this.content.id;\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    padding: 0px 10px;\n    margin-bottom: 10px;\n\n    &:last-child {\n        margin-bottom: 20px;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.el-radio {\n    margin: 0 160px 0 10px;\n}\n\n.el-select {\n    width: 100%;\n}\n\n.page-quill {\n    .card-base {\n        box-sizing: border-box;\n\n        .quill-editor {\n            .ql-toolbar.ql-snow {\n                border: none;\n                background: lighten($background-color, 2%);\n                border-bottom: 1px solid $background-color;\n            }\n\n            .ql-container.ql-snow {\n                border: none;\n            }\n        }\n\n        &.t-bubble {\n            overflow: inherit;\n        }\n    }\n}\n\n@media (max-width: 768px) {\n    .page-quill {\n        .card-base {\n            &.t-bubble {\n                padding: 40px 20px;\n            }\n        }\n    }\n}\n</style>\n"]}]}