{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/helper/edit-content.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/helper/edit-content.vue","mtime":1628175042627},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions,\n    mapState\n} from \"vuex\";\nimport * as mutation from '../../../store/mutation-types';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nexport default {\n    name: \"EditContent\",\n    data() {\n        return {\n            form: {\n                name: \"\",\n                description: \"\",\n                content: \"\",\n                idcontent: \"\",\n            },\n            editor: {\n                theme: 'snow',\n                modules: {\n                    toolbar: [\n                    ['bold', 'italic', 'underline', 'strike'],\n                    ['blockquote', 'code-block'],\n                    [{ 'header': 1 }, { 'header': 2 }],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                    [{ 'script': 'sub' }, { 'script': 'super' }],\n                    [{ 'indent': '-1' }, { 'indent': '+1' }],\n                    [{ 'direction': 'rtl' }],\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                    [{ 'font': [] }],\n                    [{ 'color': [] }, { 'background': [] }],\n                    [{ 'align': [] }],\n                    ['clean'],\n                    ['link']\n                    ],\n                }\n            },\n            rules: {\n                content: [{\n                    required: true,\n                    message: \"Content is required!\",\n                    trigger: \"blur\"\n                }],\n                description: [{\n                    required: true,\n                    message: \"Description is required!\",\n                    trigger: \"blur\"\n                }],\n            }\n        };\n    },\n    methods: {\n        onSubmit() {\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            this.$store.dispatch(action.UPDATE_PAGES, this.form);\n        },\n        Cancel() {\n\n            this.$router.replace({\n                path: \"/pages\"\n            });\n        }\n    },\n    computed: {\n        ...mapGetters({\n            button: getter.GET_BUTTON,\n            content: getter.GET_DATA_CONTENT\n        }),\n    },\n    created() {\n        this.form.name = this.content.name;\n        this.form.description = this.content.description;\n        this.form.content = this.content.content;\n        this.form.idcontent = this.content.idstatic_content\n    },\n};\n",{"version":3,"sources":["edit-content.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-content.vue","sourceRoot":"src/views/pages/helper","sourcesContent":["<template>\n<div class=\"page-quill scrollable\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n            <el-row :gutter=\"20\">\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"name\">\n                        <el-input disabled placeholder=\"Content Name\" v-model=\"form.name\"></el-input>\n                    </el-form-item>\n                </el-col>\n                <el-col :lg=\"12\">\n                    <el-form-item prop=\"description\">\n                        <el-input placeholder=\"Description\" v-model=\"form.description\"></el-input>\n                    </el-form-item>\n                </el-col>\n            </el-row>\n            <div class=\"card-base card-shadow--medium\" style=\"min-height: 300px;\">\n                <quill-editor :options=\"editor\" v-model=\"form.content\">\n                </quill-editor>\n            </div>\n        </el-form>\n        <div style=\"min-height: 20px;\">\n        </div>\n        <el-row>\n\n            <el-col :offset=\"17\" :lg=\"3\">\n                <el-button style=\"width: 100%\" :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\n            </el-col>\n            <el-col :offset=\"1\" :lg=\"3\">\n                <el-button style=\"width: 100%\" @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\n            </el-col>\n        </el-row>\n    </div>\n</div>\n</template>\n\n<script>\nimport router from \"../../../router\";\nimport moment from \"moment\";\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions,\n    mapState\n} from \"vuex\";\nimport * as mutation from '../../../store/mutation-types';\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nexport default {\n    name: \"EditContent\",\n    data() {\n        return {\n            form: {\n                name: \"\",\n                description: \"\",\n                content: \"\",\n                idcontent: \"\",\n            },\n            editor: {\n                theme: 'snow',\n                modules: {\n                    toolbar: [\n                    ['bold', 'italic', 'underline', 'strike'],\n                    ['blockquote', 'code-block'],\n                    [{ 'header': 1 }, { 'header': 2 }],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                    [{ 'script': 'sub' }, { 'script': 'super' }],\n                    [{ 'indent': '-1' }, { 'indent': '+1' }],\n                    [{ 'direction': 'rtl' }],\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                    [{ 'font': [] }],\n                    [{ 'color': [] }, { 'background': [] }],\n                    [{ 'align': [] }],\n                    ['clean'],\n                    ['link']\n                    ],\n                }\n            },\n            rules: {\n                content: [{\n                    required: true,\n                    message: \"Content is required!\",\n                    trigger: \"blur\"\n                }],\n                description: [{\n                    required: true,\n                    message: \"Description is required!\",\n                    trigger: \"blur\"\n                }],\n            }\n        };\n    },\n    methods: {\n        onSubmit() {\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            this.$store.dispatch(action.UPDATE_PAGES, this.form);\n        },\n        Cancel() {\n\n            this.$router.replace({\n                path: \"/pages\"\n            });\n        }\n    },\n    computed: {\n        ...mapGetters({\n            button: getter.GET_BUTTON,\n            content: getter.GET_DATA_CONTENT\n        }),\n    },\n    created() {\n        this.form.name = this.content.name;\n        this.form.description = this.content.description;\n        this.form.content = this.content.content;\n        this.form.idcontent = this.content.idstatic_content\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    padding: 0px 10px;\n    margin-bottom: 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.page-quill {\n    .card-base {\n        box-sizing: border-box;\n\n        .quill-editor {\n            .ql-toolbar.ql-snow {\n                border: none;\n                background: lighten($background-color, 2%);\n                border-bottom: 1px solid $background-color;\n            }\n\n            .ql-container.ql-snow {\n                border: none;\n            }\n        }\n\n        &.t-bubble {\n            overflow: inherit;\n        }\n    }\n}\n\n@media (max-width: 768px) {\n    .page-quill {\n        .card-base {\n            &.t-bubble {\n                padding: 40px 20px;\n            }\n        }\n    }\n}\n</style>\n"]}]}