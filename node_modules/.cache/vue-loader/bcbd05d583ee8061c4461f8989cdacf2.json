{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/order-client/edit-order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/order-client/edit-order.vue","mtime":1628175042629},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { mapGetters } from 'vuex'\nimport * as getter from '../../../store/getters-types'\nimport * as action from '../../../store/action-types'\nimport * as mutation from '../../../store/mutation-types'\n\nexport default {\n    data() {\n        let validateVehicleNum = (rule, value, callback) => {\n            if(!value.match(/^[A-Z0-9 _]*[A-Z0-9][A-Z0-9 _]*$/g)) {\n                callback(new Error('Please Input Valid Vehicle Number'))\n            } else {\n                callback()\n            }\n        };\n        let validatePhone = (rule, value, callback) => {\n            if((value+'').length > 13 ) {\n                callback(new Error('Phone must be less than 13 digits'))\n            } else {\n                if((value+'').length < 10){\n                    callback(new Error('Phone must be more than 10 digits'))\n                }else {\n                    callback()\n                }\n            }\n        };\n        return {\n            options                     : null,\n            vehicle_brands              : null,\n            origin                      : '',\n            destination                 : '',\n            form: {\n                fullscreen_loading      : false,\n                task_template_id        : '',\n                booking_time            : '',\n                origin_latitude         : '',\n                origin_longitude        : '',\n                destination_latitude    : '',\n                destination_longitude   : '',\n                client_vehicle_license  : '',\n                user_fullname           : '',\n                user_phonenumber        : '',\n                vehicle_owner           : '',\n                vehicle_brand           : '',\n                vehicle_type            : '',\n                vehicle_transmission    : '',\n                vehicle_year            : '',\n                vehicle_color           : '',\n                message                 : '',\n                order_type              : '',\n                idorder                 : '',\n                origin_name             : '',\n                destination_name        : '',\n                tasks                   : null\n            },\n            rules: {\n                task_templatex_id: [\n                    { required: true, message:'Please Input Task Template ID', trigger: ['blur','change']}\n                ],\n                booking_time: [\n                    { required: true, message:'Please Input Date & Time', trigger: ['blur','change', 'focus']},\n                ],\n                origin_latitude: [\n                    { required: true, message:'Please Input Origin Latitude', trigger: ['blur','change']}\n                ],\n                origin_longitude:  [\n                    { required: true, message:'Please Input Origin Longitude', trigger: ['blur','change']}\n                ],\n                destination_latitude: [\n                    { required: true, message: 'Please Input Destination Latitude', trigger: ['blur','change']}\n                ],\n                destination_longitude: [\n                    { required: true, message: 'Please Input Destination Longitude', trigger: ['blur','change']}\n                ],\n                client_vehicle_license: [\n                    { required: true, message:'Please Input Vehicle License', trigger: ['blur','change']},\n                    { validator: validateVehicleNum, trigger:['change', 'blur'] }\n                ],\n                user_fullname: [\n                    { required: true, message: 'Please Input FullName', trigger: ['blur','change']}\n                ],\n                user_phonenumber:   [\n                    { required: true, message: 'Please Input Phone Number', trigger: ['blur','change']},\n                    { validator: validatePhone, trigger:['change', 'blur'] }\n                ],\n                vehicle_owner:   [\n                    { required: true, message: 'Please Input Vehicle Owner', trigger: ['blur','change']}\n                ],\n                vehicle_brand:   [\n                    { required: true, message: 'Please Input Vehicle Brand', trigger: ['blur','change'] }\n                ],\n                vehicle_type:   [\n                    { required: true, message: 'Please Input Vehicle Type', trigger: ['blur','change'] }\n                ],\n                vehicle_transmission:   [\n                    { required: true, message: 'Please Input Vehicle Transmission', trigger: ['blur','change'] }\n                ],\n                vehicle_year:   [\n                    { required: true, message: 'Please Input Vehicle Year', trigger: ['blur','change'] }\n                ],\n                vehicle_color:   [\n                    { required: true, message: 'Please Input Vehicle Color', trigger: ['blur','change'] }\n                ],\n                message:   [\n                    { required: true, message: 'Please Input Message', trigger: ['blur','change'] }\n                ],\n                order_type:   [\n                    { required: true, message: 'Please Input Order Type', trigger: ['blur','change'] }\n                ]\n            }\n        }\n    },\n    methods: {\n        onSubmit(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.UPDATE_ORDER_CLIENT, this.form)\n                } else {\n                    return false;\n                }\n            });\n        },\n        addButton() {\n            this.form.inspectors.push({\n                key: Date.now(),\n                name:'',\n                phone:''\n            })\n        },\n        isCancel(){\n            this.$router.replace('/order/detail')\n        },\n        removeDomain(item){\n            let index = this.form.inspectors.indexOf(item);\n            if(index !== -1) {\n                this.form.inspectors.splice(index, 1);\n            }\n        },\n        remoteMethod(query) {\n        },\n        isNumber(evt) {\n            evt = (evt) ? evt : window.event;\n            var charCode = (evt.which) ? evt.which : evt.keyCode;\n            if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\n                evt.preventDefault();;\n            } else {\n                return true;\n            }\n        },\n        originL(val){\n            this.form.origin_longitude  = val.longitude\n            this.form.origin_latitude   = val.latitude\n            this.form.origin_name       = val.name\n        },\n        destionationL(val){\n            this.form.destination_longitude  = val.longitude\n            this.form.destination_latitude   = val.latitude\n            this.form.destination_name       = val.name\n        },\n        vehicleBrand(val){\n            this.$store.dispatch(action.VEHICLE_TYPE, val)\n        },\n        querySearch(queryString, cb) {\n            var links = this.vehicleTypeS;\n            var results = queryString ? links.filter(this.createFilter(queryString)) : links;\n            // call callback function to return suggestions\n            cb(results);\n        },\n        createFilter(queryString) {\n            return (link) => {\n                return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n            };\n        },\n       async taskT(value){\n           let wah = await this.$store.dispatch(action.TEMPLATE_ID, value)\n           this.form.tasks = wah.tasks\n        }\n    },\n    computed: {\n        ...mapGetters({\n            error           : getter.GET_ERROR,\n            button          : getter.GET_BUTTON,\n            templateTasks   : getter.GET_TEMPLATE_LIST,\n            data            : getter.GET_TEMPLATE_ID,\n            idorder         : getter.GET_ID_ORDER,\n            vehicleTypeS    : getter.GET_VEHICLE_TYPE\n        }),\n        buttonStatuz: function  () {\n            return this.form.fullscreen_loading = this.button\n        }\n    },\n    async created(){\n        this.$store.dispatch(action.TEMPLATE_LIST, 1)\n        let obj = {\n            id      : this.idorder,\n            path    : 'order/open'\n        }\n        let data = await this.$store.dispatch(action.ID_ORDER_CLIENT, obj)\n            this.form.task_template_id        = data.task_template_task_template_id\n            this.form.booking_time            = data.booking_time\n            this.form.origin_latitude         = data.origin_latitude\n            this.form.origin_longitude        = data.origin_longitude\n            this.form.destination_latitude    = data.destination_latitude\n            this.form.destination_longitude   = data.destination_longitude\n            this.form.client_vehicle_license  = data.client_vehicle_license\n            this.form.user_fullname           = data.user_fullname\n            this.form.user_phonenumber        = data.user_phonenumber\n            this.form.vehicle_owner           = data.vehicle_owner\n            this.form.vehicle_brand           = data.vehicle_brand_id\n            this.form.vehicle_type            = data.vehicle_type\n            this.form.vehicle_transmission    = data.vehicle_transmission\n            this.form.vehicle_year            = data.vehicle_year\n            this.form.vehicle_color           = data.vehicle_color\n            this.form.message                 = data.message\n            this.form.order_type              = data.order_type\n            this.form.idorder                 = data.idorder\n            this.form.origin_name             = data.origin_name\n            this.form.destination_name        = data.destination_name\n            this.origin                       = data.origin_name\n            this.destination                  = data.destination_name\n\n        let wah = await this.$store.dispatch(action.TEMPLATE_ID, data.task_template_task_template_id)\n            // this.form.task_template_id = wah.task_template_name\n            this.form.tasks = wah.tasks\n        let dataLoc = await this.$store.dispatch(action.DROPDOWN_LOCATION)\n            this.options = dataLoc;\n        let dataVehicle = await this.$store.dispatch(action.VEHICLE_BRAND)\n            this.vehicle_brands = dataVehicle\n    }\n}\n",{"version":3,"sources":["edit-order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2QA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-order.vue","sourceRoot":"src/views/pages/order-client","sourcesContent":["<template>\n    <!--<vue-scroll class=\"page-typography\">-->\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n        <div class=\"card-base card-shadow--medium bg-white\">\n            <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n                <el-row>\n                    <el-col :span=\"24\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"booking_time\">\n                                <el-date-picker\n                                        v-model=\"form.booking_time\"\n                                        type=\"datetime\"\n                                        placeholder=\"Booking Time\"\n                                        value-format=\"yyyy-MM-dd HH:mm:ss\"\n                                        size=\"large\"\n                                        prefix-icon=\"el-icon-date\">\n                                </el-date-picker>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"24\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"message\" >\n                                <el-input\n                                        type=\"textarea\"\n                                        v-model=\"form.message\"\n                                        placeholder=\"Order Message\"\n                                        :autosize=\"{ minRows: 5, maxRows: 7}\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-col>\n                            <p>User</p>\n                            <hr>\n                        </el-col>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"user_fullname\">\n                                <el-input\n                                        placeholder=\"Name\"\n                                        v-model=\"form.user_fullname\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"12\">\n                        <el-form-item prop=\"user_phonenumber\">\n                            <el-input\n                                    placeholder=\"Phone\"\n                                    v-on:keypress.native=\"isNumber\"\n                                    v-model=\"form.user_phonenumber\"></el-input>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-col>\n                            <p>Locations</p>\n                            <hr>\n                        </el-col>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"origin_latitude\">\n                                <el-select\n                                        v-model=\"origin\"\n                                        @change=\"originL\"\n                                        filterable\n                                        placeholder=\"Select Origin\" >\n                                    <el-option\n                                            v-for=\"item in options\"\n                                            :key=\"item.value\"\n                                            :label=\"item.name\"\n                                            :value=\"item\"></el-option>\n                                </el-select>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"12\">\n                        <el-form-item prop=\"destination_latitude\">\n                            <el-select\n                                    v-model=\"destination\"\n                                    @change=\"destionationL\"\n                                    placeholder=\"Select Destination\" >\n                                <el-option\n                                        v-for=\"item in options\"\n                                        :key=\"item.value\"\n                                        :label=\"item.name\"\n                                        :value=\"item\"></el-option>\n                            </el-select>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-col>\n                            <p>Vehicle</p>\n                            <hr>\n                        </el-col>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"8\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"vehicle_brand\">\n                                <el-select\n                                        style=\"width: 100%\"\n                                        v-model=\"form.vehicle_brand\"\n                                        @change=\"vehicleBrand\"\n                                        filterable\n                                        placeholder=\"Vehicle Brand\" >\n                                    <el-option\n                                            v-for=\"item in vehicle_brands\"\n                                            :key=\"item.id\"\n                                            :label=\"item.brand_name\"\n                                            :value=\"item.id\"></el-option>\n                                </el-select>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"vehicle_type\">\n                                <el-autocomplete\n                                        class=\"inline-input\"\n                                        v-model=\"form.vehicle_type\"\n                                        :fetch-suggestions=\"querySearch\"\n                                        placeholder=\"Vehicle Type\"\n                                        :trigger-on-focus=\"false\"\n                                        style=\"width: 100%\"\n                                ></el-autocomplete>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"vehicle_transmission\">\n                                <el-select\n                                        v-model=\"form.vehicle_transmission\"\n                                        style=\"width: 100%\"\n                                        placeholder=\"Select Vehicle Transmission\" >\n                                    <el-option label=\"Manual\" value=\"Manual\"></el-option>\n                                    <el-option label=\"Automatic\" value=\"Automatic\"></el-option>\n                                </el-select>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"8\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"client_vehicle_license\">\n                                <el-input\n                                        placeholder=\"Vehicle Number\"\n                                        v-model=\"form.client_vehicle_license\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <el-form-item prop=\"vehicle_owner\">\n                            <el-input  placeholder=\"Vehicle Owner / License\" v-model=\"form.vehicle_owner\"></el-input>\n                        </el-form-item>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <el-form-item prop=\"vehicle_year\">\n                            <el-input\n                                    placeholder=\"Vehicle Year\"\n                                    v-on:keypress.native=\"isNumber\"\n                                    v-model=\"form.vehicle_year\"></el-input>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-col>\n                            <p>Template & Task</p>\n                            <hr>\n                        </el-col>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"24\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"task_template_id\">\n                                <el-select\n                                        v-model=\"form.task_template_id\"\n                                        @change=\"taskT\"\n                                        :remote-method=\"remoteMethod\"\n                                        placeholder=\"Select Template\" >\n                                    <el-option\n                                            v-for=\"item in templateTasks\"\n                                            :key=\"item.task_template_id\"\n                                            :label=\"item.task_template_name\"\n                                            :value=\"item.task_template_id\"></el-option>\n                                </el-select>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-col>\n                            <p><b> Description </b> <span style=\"padding-left: 1.8em\"> : Description of template</span></p>\n                        </el-col>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-table\n                                :data=\"form.tasks\"\n                                stripe\n                                style=\"width: 100%\">\n                            <el-table-column\n                                    prop=\"name\"\n                                    label=\"Task Name\">\n                            </el-table-column>\n                            <el-table-column\n                                    prop=\"description\"\n                                    label=\"Task Description\">\n                            </el-table-column>\n                        </el-table>\n                    </el-col>\n                </el-row>\n                <el-row >\n                    <el-col :lg=\"{offset:18, span:6}\" style=\"display: flex; justify-content: flex-end; margin-top: 20px\">\n                        <div class=\"grid-content\">\n                            <el-form-item>\n                                <el-button @click=\"isCancel\">Cancel</el-button>\n                                <el-button\n                                        type=\"success\"\n                                        v-loading.fullscreen.lock=\"buttonStatuz\"\n                                        @click=\"onSubmit('form')\">Save</el-button>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n            </el-form>\n        </div>\n    </div>\n    <!--</vue-scroll>-->\n</template>\n\n<script>\n\n    import { mapGetters } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as action from '../../../store/action-types'\n    import * as mutation from '../../../store/mutation-types'\n\n    export default {\n        data() {\n            let validateVehicleNum = (rule, value, callback) => {\n                if(!value.match(/^[A-Z0-9 _]*[A-Z0-9][A-Z0-9 _]*$/g)) {\n                    callback(new Error('Please Input Valid Vehicle Number'))\n                } else {\n                    callback()\n                }\n            };\n            let validatePhone = (rule, value, callback) => {\n                if((value+'').length > 13 ) {\n                    callback(new Error('Phone must be less than 13 digits'))\n                } else {\n                    if((value+'').length < 10){\n                        callback(new Error('Phone must be more than 10 digits'))\n                    }else {\n                        callback()\n                    }\n                }\n            };\n            return {\n                options                     : null,\n                vehicle_brands              : null,\n                origin                      : '',\n                destination                 : '',\n                form: {\n                    fullscreen_loading      : false,\n                    task_template_id        : '',\n                    booking_time            : '',\n                    origin_latitude         : '',\n                    origin_longitude        : '',\n                    destination_latitude    : '',\n                    destination_longitude   : '',\n                    client_vehicle_license  : '',\n                    user_fullname           : '',\n                    user_phonenumber        : '',\n                    vehicle_owner           : '',\n                    vehicle_brand           : '',\n                    vehicle_type            : '',\n                    vehicle_transmission    : '',\n                    vehicle_year            : '',\n                    vehicle_color           : '',\n                    message                 : '',\n                    order_type              : '',\n                    idorder                 : '',\n                    origin_name             : '',\n                    destination_name        : '',\n                    tasks                   : null\n                },\n                rules: {\n                    task_templatex_id: [\n                        { required: true, message:'Please Input Task Template ID', trigger: ['blur','change']}\n                    ],\n                    booking_time: [\n                        { required: true, message:'Please Input Date & Time', trigger: ['blur','change', 'focus']},\n                    ],\n                    origin_latitude: [\n                        { required: true, message:'Please Input Origin Latitude', trigger: ['blur','change']}\n                    ],\n                    origin_longitude:  [\n                        { required: true, message:'Please Input Origin Longitude', trigger: ['blur','change']}\n                    ],\n                    destination_latitude: [\n                        { required: true, message: 'Please Input Destination Latitude', trigger: ['blur','change']}\n                    ],\n                    destination_longitude: [\n                        { required: true, message: 'Please Input Destination Longitude', trigger: ['blur','change']}\n                    ],\n                    client_vehicle_license: [\n                        { required: true, message:'Please Input Vehicle License', trigger: ['blur','change']},\n                        { validator: validateVehicleNum, trigger:['change', 'blur'] }\n                    ],\n                    user_fullname: [\n                        { required: true, message: 'Please Input FullName', trigger: ['blur','change']}\n                    ],\n                    user_phonenumber:   [\n                        { required: true, message: 'Please Input Phone Number', trigger: ['blur','change']},\n                        { validator: validatePhone, trigger:['change', 'blur'] }\n                    ],\n                    vehicle_owner:   [\n                        { required: true, message: 'Please Input Vehicle Owner', trigger: ['blur','change']}\n                    ],\n                    vehicle_brand:   [\n                        { required: true, message: 'Please Input Vehicle Brand', trigger: ['blur','change'] }\n                    ],\n                    vehicle_type:   [\n                        { required: true, message: 'Please Input Vehicle Type', trigger: ['blur','change'] }\n                    ],\n                    vehicle_transmission:   [\n                        { required: true, message: 'Please Input Vehicle Transmission', trigger: ['blur','change'] }\n                    ],\n                    vehicle_year:   [\n                        { required: true, message: 'Please Input Vehicle Year', trigger: ['blur','change'] }\n                    ],\n                    vehicle_color:   [\n                        { required: true, message: 'Please Input Vehicle Color', trigger: ['blur','change'] }\n                    ],\n                    message:   [\n                        { required: true, message: 'Please Input Message', trigger: ['blur','change'] }\n                    ],\n                    order_type:   [\n                        { required: true, message: 'Please Input Order Type', trigger: ['blur','change'] }\n                    ]\n                }\n            }\n        },\n        methods: {\n            onSubmit(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        this.$store.commit(mutation.BUTTON_STATUS, true)\n                        this.$store.dispatch(action.UPDATE_ORDER_CLIENT, this.form)\n                    } else {\n                        return false;\n                    }\n                });\n            },\n            addButton() {\n                this.form.inspectors.push({\n                    key: Date.now(),\n                    name:'',\n                    phone:''\n                })\n            },\n            isCancel(){\n                this.$router.replace('/order/detail')\n            },\n            removeDomain(item){\n                let index = this.form.inspectors.indexOf(item);\n                if(index !== -1) {\n                    this.form.inspectors.splice(index, 1);\n                }\n            },\n            remoteMethod(query) {\n            },\n            isNumber(evt) {\n                evt = (evt) ? evt : window.event;\n                var charCode = (evt.which) ? evt.which : evt.keyCode;\n                if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\n                    evt.preventDefault();;\n                } else {\n                    return true;\n                }\n            },\n            originL(val){\n                this.form.origin_longitude  = val.longitude\n                this.form.origin_latitude   = val.latitude\n                this.form.origin_name       = val.name\n            },\n            destionationL(val){\n                this.form.destination_longitude  = val.longitude\n                this.form.destination_latitude   = val.latitude\n                this.form.destination_name       = val.name\n            },\n            vehicleBrand(val){\n                this.$store.dispatch(action.VEHICLE_TYPE, val)\n            },\n            querySearch(queryString, cb) {\n                var links = this.vehicleTypeS;\n                var results = queryString ? links.filter(this.createFilter(queryString)) : links;\n                // call callback function to return suggestions\n                cb(results);\n            },\n            createFilter(queryString) {\n                return (link) => {\n                    return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n                };\n            },\n           async taskT(value){\n               let wah = await this.$store.dispatch(action.TEMPLATE_ID, value)\n               this.form.tasks = wah.tasks\n            }\n        },\n        computed: {\n            ...mapGetters({\n                error           : getter.GET_ERROR,\n                button          : getter.GET_BUTTON,\n                templateTasks   : getter.GET_TEMPLATE_LIST,\n                data            : getter.GET_TEMPLATE_ID,\n                idorder         : getter.GET_ID_ORDER,\n                vehicleTypeS    : getter.GET_VEHICLE_TYPE\n            }),\n            buttonStatuz: function  () {\n                return this.form.fullscreen_loading = this.button\n            }\n        },\n        async created(){\n            this.$store.dispatch(action.TEMPLATE_LIST, 1)\n            let obj = {\n                id      : this.idorder,\n                path    : 'order/open'\n            }\n            let data = await this.$store.dispatch(action.ID_ORDER_CLIENT, obj)\n                this.form.task_template_id        = data.task_template_task_template_id\n                this.form.booking_time            = data.booking_time\n                this.form.origin_latitude         = data.origin_latitude\n                this.form.origin_longitude        = data.origin_longitude\n                this.form.destination_latitude    = data.destination_latitude\n                this.form.destination_longitude   = data.destination_longitude\n                this.form.client_vehicle_license  = data.client_vehicle_license\n                this.form.user_fullname           = data.user_fullname\n                this.form.user_phonenumber        = data.user_phonenumber\n                this.form.vehicle_owner           = data.vehicle_owner\n                this.form.vehicle_brand           = data.vehicle_brand_id\n                this.form.vehicle_type            = data.vehicle_type\n                this.form.vehicle_transmission    = data.vehicle_transmission\n                this.form.vehicle_year            = data.vehicle_year\n                this.form.vehicle_color           = data.vehicle_color\n                this.form.message                 = data.message\n                this.form.order_type              = data.order_type\n                this.form.idorder                 = data.idorder\n                this.form.origin_name             = data.origin_name\n                this.form.destination_name        = data.destination_name\n                this.origin                       = data.origin_name\n                this.destination                  = data.destination_name\n\n            let wah = await this.$store.dispatch(action.TEMPLATE_ID, data.task_template_task_template_id)\n                // this.form.task_template_id = wah.task_template_name\n                this.form.tasks = wah.tasks\n            let dataLoc = await this.$store.dispatch(action.DROPDOWN_LOCATION)\n                this.options = dataLoc;\n            let dataVehicle = await this.$store.dispatch(action.VEHICLE_BRAND)\n                this.vehicle_brands = dataVehicle\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n</style>\n"]}]}