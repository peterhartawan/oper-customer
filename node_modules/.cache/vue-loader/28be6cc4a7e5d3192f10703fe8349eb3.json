{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\helper\\edit-content.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\helper\\edit-content.vue","mtime":1644413760575},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport router from \"../../../router\";\r\nimport moment from \"moment\";\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions,\r\n    mapState\r\n} from \"vuex\";\r\nimport * as mutation from '../../../store/mutation-types';\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nexport default {\r\n    name: \"EditContent\",\r\n    data() {\r\n        return {\r\n            form: {\r\n                name: \"\",\r\n                description: \"\",\r\n                content: \"\",\r\n                idcontent: \"\",\r\n            },\r\n            editor: {\r\n                theme: 'snow',\r\n                modules: {\r\n                    toolbar: [\r\n                    ['bold', 'italic', 'underline', 'strike'],\r\n                    ['blockquote', 'code-block'],\r\n                    [{ 'header': 1 }, { 'header': 2 }],\r\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n                    [{ 'script': 'sub' }, { 'script': 'super' }],\r\n                    [{ 'indent': '-1' }, { 'indent': '+1' }],\r\n                    [{ 'direction': 'rtl' }],\r\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\r\n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n                    [{ 'font': [] }],\r\n                    [{ 'color': [] }, { 'background': [] }],\r\n                    [{ 'align': [] }],\r\n                    ['clean'],\r\n                    ['link']\r\n                    ],\r\n                }\r\n            },\r\n            rules: {\r\n                content: [{\r\n                    required: true,\r\n                    message: \"Content is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                description: [{\r\n                    required: true,\r\n                    message: \"Description is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        onSubmit() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            this.$store.dispatch(action.UPDATE_PAGES, this.form);\r\n        },\r\n        Cancel() {\r\n\r\n            this.$router.replace({\r\n                path: \"/pages\"\r\n            });\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            button: getter.GET_BUTTON,\r\n            content: getter.GET_DATA_CONTENT\r\n        }),\r\n    },\r\n    created() {\r\n        this.form.name = this.content.name;\r\n        this.form.description = this.content.description;\r\n        this.form.content = this.content.content;\r\n        this.form.idcontent = this.content.idstatic_content\r\n    },\r\n};\r\n",{"version":3,"sources":["edit-content.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-content.vue","sourceRoot":"src/views/pages/helper","sourcesContent":["<template>\r\n<div class=\"page-quill scrollable\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\r\n            <el-row :gutter=\"20\">\r\n                <el-col :lg=\"12\">\r\n                    <el-form-item prop=\"name\">\r\n                        <el-input disabled placeholder=\"Content Name\" v-model=\"form.name\"></el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n                <el-col :lg=\"12\">\r\n                    <el-form-item prop=\"description\">\r\n                        <el-input placeholder=\"Description\" v-model=\"form.description\"></el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n            </el-row>\r\n            <div class=\"card-base card-shadow--medium\" style=\"min-height: 300px;\">\r\n                <quill-editor :options=\"editor\" v-model=\"form.content\">\r\n                </quill-editor>\r\n            </div>\r\n        </el-form>\r\n        <div style=\"min-height: 20px;\">\r\n        </div>\r\n        <el-row>\r\n\r\n            <el-col :offset=\"17\" :lg=\"3\">\r\n                <el-button style=\"width: 100%\" :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\r\n            </el-col>\r\n            <el-col :offset=\"1\" :lg=\"3\">\r\n                <el-button style=\"width: 100%\" @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport router from \"../../../router\";\r\nimport moment from \"moment\";\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions,\r\n    mapState\r\n} from \"vuex\";\r\nimport * as mutation from '../../../store/mutation-types';\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nexport default {\r\n    name: \"EditContent\",\r\n    data() {\r\n        return {\r\n            form: {\r\n                name: \"\",\r\n                description: \"\",\r\n                content: \"\",\r\n                idcontent: \"\",\r\n            },\r\n            editor: {\r\n                theme: 'snow',\r\n                modules: {\r\n                    toolbar: [\r\n                    ['bold', 'italic', 'underline', 'strike'],\r\n                    ['blockquote', 'code-block'],\r\n                    [{ 'header': 1 }, { 'header': 2 }],\r\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n                    [{ 'script': 'sub' }, { 'script': 'super' }],\r\n                    [{ 'indent': '-1' }, { 'indent': '+1' }],\r\n                    [{ 'direction': 'rtl' }],\r\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\r\n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n                    [{ 'font': [] }],\r\n                    [{ 'color': [] }, { 'background': [] }],\r\n                    [{ 'align': [] }],\r\n                    ['clean'],\r\n                    ['link']\r\n                    ],\r\n                }\r\n            },\r\n            rules: {\r\n                content: [{\r\n                    required: true,\r\n                    message: \"Content is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                description: [{\r\n                    required: true,\r\n                    message: \"Description is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        onSubmit() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            this.$store.dispatch(action.UPDATE_PAGES, this.form);\r\n        },\r\n        Cancel() {\r\n\r\n            this.$router.replace({\r\n                path: \"/pages\"\r\n            });\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            button: getter.GET_BUTTON,\r\n            content: getter.GET_DATA_CONTENT\r\n        }),\r\n    },\r\n    created() {\r\n        this.form.name = this.content.name;\r\n        this.form.description = this.content.description;\r\n        this.form.content = this.content.content;\r\n        this.form.idcontent = this.content.idstatic_content\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    // display: flex;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    padding: 0px 10px;\r\n    margin-bottom: 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.page-quill {\r\n    .card-base {\r\n        box-sizing: border-box;\r\n\r\n        .quill-editor {\r\n            .ql-toolbar.ql-snow {\r\n                border: none;\r\n                background: lighten($background-color, 2%);\r\n                border-bottom: 1px solid $background-color;\r\n            }\r\n\r\n            .ql-container.ql-snow {\r\n                border: none;\r\n            }\r\n        }\r\n\r\n        &.t-bubble {\r\n            overflow: inherit;\r\n        }\r\n    }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .page-quill {\r\n        .card-base {\r\n            &.t-bubble {\r\n                padding: 40px 20px;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n"]}]}