{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/dispathcer/new-dispatcher.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/dispathcer/new-dispatcher.vue","mtime":1628175042620},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { mapGetters } from 'vuex'\nimport * as getter from '../../../store/getters-types'\nimport * as action from '../../../store/action-types'\nimport * as mutation from '../../../store/mutation-types'\nexport default {\n    data() {\n        let validatePhone = (rule, value, callback) => {\n            if((value+'').length > 13 ) {\n                callback(new Error('Phone must be less than 13 digits'))\n            } else {\n                if((value+'').length < 10){\n                    callback(new Error('Phone must be more than 10 digits'))\n                }else {\n                    callback()\n                }\n            }\n        };\n        return {\n                radio: '',\n            form: {\n                name                : '',\n                nik                 : '',\n                email               : '',\n                phone               : '',\n                birthdate           : '',\n                gender              : '',\n                office_address      : '',\n                browse              : '',\n                id_dispatcher_type  : '',\n                file                : null,\n                fullscreen_loading  : false\n            },\n            rules: {\n                name: [\n                    { required: true, message:'Please Input Dispatcher Name', trigger: 'blur'}\n                ],\n                nik: [\n                    { required: true, message:'Please Input Dispatcher Nik', trigger: 'blur'}\n                ],\n                email:  [\n                    { required: true, message:'Please Input Dispatcher Email', trigger: 'blur'},\n                    {type: 'email', message:'Pleas Input Valid Email', trigger:['blur', 'change']}\n                ],\n                phone:  [\n                    { required: true, message:'Please Input Dispatcher Phone Number', trigger: 'blur'},\n                    { validator: validatePhone, trigger : ['change','blur'] }\n                ],\n                gender: [\n                    { required: true, message:'Please Select Gender', trigger: 'blur'}\n                ],\n                id_dispatcher_type: [\n                    { required: true, message:'Please Input Id Dispatcher Type', trigger: 'blur'}\n                ],\n                browse: [\n                    { required: true, message:'Please Upload Foto', trigger: 'blur'}\n                ],\n                birthdate: [\n                    { required: true, message:'Please Fill Birth Date', trigger: 'blur'}\n                ],\n                office_address: [\n                    { required: true, message:'Please Input Address', trigger: 'blur'}\n                ]\n            }\n        }\n    },\n    methods: {\n        onSubmit(formName) {\n            let obj = {\n                name            : this.form.name,\n                email           : this.form.email,\n                phonenumber     : this.form.phone,\n                birthdate       : this.form.birthdate,\n                nik             : this.form.nik,\n                address         : this.form.office_address,\n                gender          : this.form.gender,\n                idvendor        : this.form.id_dispatcher_type,\n                photo           : this.form.file\n            }\n            this.$refs[formName].validate((valid) => {\n            if (valid) {\n                this.$store.commit(mutation.BUTTON_STATUS, true)\n                this.$store.dispatch(action.CREATE_DISPATCHER, obj)\n            } else {\n                return false;\n            }\n            });\n        },\n        onPickFile() {\n            this.$refs.fileInput.click()\n        },\n        addButton() {\n            this.form.inspectors.push({\n                key: Date.now(),\n                name:'',\n                phone:''\n            })\n        },\n        isCancel()  {\n            this.$router.replace('/dispatcher')\n        },\n        removeDomain(item){\n            let index = this.form.inspectors.indexOf(item);\n            if(index !== -1) {\n                this.form.inspectors.splice(index, 1);\n            }\n        },\n        isNumber(evt) {\n            evt = (evt) ? evt : window.event;\n            var charCode = (evt.which) ? evt.which : evt.keyCode;\n            if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\n                evt.preventDefault();;\n            } else {\n                return true;\n            }\n        },\n        handleFileChange(event) {\n            this.form.file      = event.target.files[0]\n            this.form.browse    = event.target.files[0].name\n        }\n    },\n    computed: {\n        ...mapGetters({\n            error : getter.GET_ERROR,\n            button: getter.GET_BUTTON\n        }),\n        buttonStatuz: function () {\n            return this.form.fullscreen_loading = this.button\n        }\n    }\n}\n",{"version":3,"sources":["new-dispatcher.vue"],"names":[],"mappingsfile":"new-dispatcher.vue","sourceRoot":"src/views/pages/dispathcer","sourcesContent":["<template>\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n        <div class=\"card-base card-shadow--medium bg-white\">\n            <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"name\">\n                                <el-input\n                                        placeholder=\"Dispatcher Name\"\n                                        v-model=\"form.name\">\n                                </el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col >\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"nik\">\n                                <el-input\n                                        placeholder=\"Dispatcher NIK\"\n                                        v-model=\"form.nik\">\n                                </el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col >\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <el-form-item prop=\"email\">\n                            <el-input  placeholder=\"Dispatcher Email\" v-model=\"form.email\"></el-input>\n                        </el-form-item>\n                    </el-col>\n\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"phone\">\n                                <el-input\n                                        placeholder=\"Dispatcher Phone Number\"\n                                        v-model=\"form.phone\"\n                                        v-on:keypress.native=\"isNumber\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"radio\">\n                                <el-radio v-model=\"form.gender\" label=\"1\">Male</el-radio>\n                                <el-radio v-model=\"form.gender\" label=\"2\">Female</el-radio>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"birthdate\">\n                                <el-date-picker\n                                        v-model=\"form.birthdate\"\n                                        type=\"date\"\n                                        placeholder=\"Birth date\"\n                                        format=\"yyyy/MM/dd\"\n                                        value-format=\"yyyy-MM-dd\">\n                                </el-date-picker>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"office_address\" >\n                                <el-input\n                                        type=\"textarea\"\n                                        v-model=\"form.office_address\"\n                                        placeholder=\"Enterprise Office Address\"\n                                        :autosize=\"{ minRows: 5, maxRows: 7}\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n\n                    <el-col :span=\"9\">\n                        <el-form-item prop=\"browse\">\n                            <div class=\"grid-content\">\n                                <el-input disabled placeholder=\"Browse Foto\" v-model=\"form.browse\" disable></el-input>\n                            </div>\n                        </el-form-item>\n                    </el-col>\n\n                    <el-col :span=\"3\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"file\">\n                                <el-button @click=\"onPickFile\">Browse</el-button>\n                                <input\n                                        type=\"file\"\n                                        style=\"display: none\"\n                                        ref=\"fileInput\"\n                                        accept=\"image/*\"\n                                        @change=\"handleFileChange\">\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row >\n                    <el-col :lg=\"{offset:18, span:6}\" style=\"display: flex; justify-content: flex-end\">\n                        <div class=\"grid-content\">\n                            <el-form-item>\n                                <el-button @click=\"isCancel\">Cancel</el-button>\n                                <el-button\n                                        type=\"success\"\n                                        @click=\"onSubmit('form')\">Save</el-button>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n            </el-form>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import { mapGetters } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as action from '../../../store/action-types'\n    import * as mutation from '../../../store/mutation-types'\n    export default {\n        data() {\n            let validatePhone = (rule, value, callback) => {\n                if((value+'').length > 13 ) {\n                    callback(new Error('Phone must be less than 13 digits'))\n                } else {\n                    if((value+'').length < 10){\n                        callback(new Error('Phone must be more than 10 digits'))\n                    }else {\n                        callback()\n                    }\n                }\n            };\n            return {\n                    radio: '',\n                form: {\n                    name                : '',\n                    nik                 : '',\n                    email               : '',\n                    phone               : '',\n                    birthdate           : '',\n                    gender              : '',\n                    office_address      : '',\n                    browse              : '',\n                    id_dispatcher_type  : '',\n                    file                : null,\n                    fullscreen_loading  : false\n                },\n                rules: {\n                    name: [\n                        { required: true, message:'Please Input Dispatcher Name', trigger: 'blur'}\n                    ],\n                    nik: [\n                        { required: true, message:'Please Input Dispatcher Nik', trigger: 'blur'}\n                    ],\n                    email:  [\n                        { required: true, message:'Please Input Dispatcher Email', trigger: 'blur'},\n                        {type: 'email', message:'Pleas Input Valid Email', trigger:['blur', 'change']}\n                    ],\n                    phone:  [\n                        { required: true, message:'Please Input Dispatcher Phone Number', trigger: 'blur'},\n                        { validator: validatePhone, trigger : ['change','blur'] }\n                    ],\n                    gender: [\n                        { required: true, message:'Please Select Gender', trigger: 'blur'}\n                    ],\n                    id_dispatcher_type: [\n                        { required: true, message:'Please Input Id Dispatcher Type', trigger: 'blur'}\n                    ],\n                    browse: [\n                        { required: true, message:'Please Upload Foto', trigger: 'blur'}\n                    ],\n                    birthdate: [\n                        { required: true, message:'Please Fill Birth Date', trigger: 'blur'}\n                    ],\n                    office_address: [\n                        { required: true, message:'Please Input Address', trigger: 'blur'}\n                    ]\n                }\n            }\n        },\n        methods: {\n            onSubmit(formName) {\n                let obj = {\n                    name            : this.form.name,\n                    email           : this.form.email,\n                    phonenumber     : this.form.phone,\n                    birthdate       : this.form.birthdate,\n                    nik             : this.form.nik,\n                    address         : this.form.office_address,\n                    gender          : this.form.gender,\n                    idvendor        : this.form.id_dispatcher_type,\n                    photo           : this.form.file\n                }\n                this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.CREATE_DISPATCHER, obj)\n                } else {\n                    return false;\n                }\n                });\n            },\n            onPickFile() {\n                this.$refs.fileInput.click()\n            },\n            addButton() {\n                this.form.inspectors.push({\n                    key: Date.now(),\n                    name:'',\n                    phone:''\n                })\n            },\n            isCancel()  {\n                this.$router.replace('/dispatcher')\n            },\n            removeDomain(item){\n                let index = this.form.inspectors.indexOf(item);\n                if(index !== -1) {\n                    this.form.inspectors.splice(index, 1);\n                }\n            },\n            isNumber(evt) {\n                evt = (evt) ? evt : window.event;\n                var charCode = (evt.which) ? evt.which : evt.keyCode;\n                if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\n                    evt.preventDefault();;\n                } else {\n                    return true;\n                }\n            },\n            handleFileChange(event) {\n                this.form.file      = event.target.files[0]\n                this.form.browse    = event.target.files[0].name\n            }\n        },\n        computed: {\n            ...mapGetters({\n                error : getter.GET_ERROR,\n                button: getter.GET_BUTTON\n            }),\n            buttonStatuz: function () {\n                return this.form.fullscreen_loading = this.button\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n</style>\n"]}]}