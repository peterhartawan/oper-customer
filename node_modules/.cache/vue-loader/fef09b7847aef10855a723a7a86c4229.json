{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\driver\\request-driver.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\driver\\request-driver.vue","mtime":1647032353995},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport router from \"../../../router\";\r\nimport moment from \"moment\";\r\nimport Affix from \"@/components/Affix\";\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport * as mutation from \"../../../store/mutation-types\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nexport default {\r\n  name: \"RequestDriver\",\r\n  data() {\r\n    return {\r\n      pickerOptions: {\r\n        disabledDate(time) {\r\n          let date = new Date();\r\n          return time.getTime() < date.setDate(date.getDate() - 1);\r\n        },\r\n      },\r\n      options: null,\r\n      loc: null,\r\n      vendor_profile: null,\r\n      form: {\r\n        number_of_drivers: \"\",\r\n        fullscreen_loading: false,\r\n        enterprise_id: \"\",\r\n        place_id: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n        purpose_time: \"\",\r\n        note: \"\",\r\n      },\r\n      rules: {\r\n        location: [\r\n          {\r\n            required: true,\r\n            message: \"Please choose the location\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n        date: [\r\n          {\r\n            required: true,\r\n            message: \"Please input the date\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n        time: [\r\n          {\r\n            required: true,\r\n            message: \"Please input the time\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n        number_of_drivers: [\r\n          {\r\n            required: true,\r\n            message: \"Please input the number of drivers\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n        note: [\r\n          {\r\n            required: true,\r\n            message: \"Please input the note\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    onSubmit(formName) {\r\n      let obj = {\r\n        enterprise_id: this.form.enterprise_id,\r\n        place_id: this.form.place_id,\r\n        number_of_drivers: this.form.number_of_drivers,\r\n        note: this.form.note,\r\n        purpose_time: this.form.purpose_time,\r\n      };\r\n      this.$refs[formName].validate((valid) => {\r\n        this.loading = true;\r\n        if (valid) {\r\n          this.$store.commit(mutation.BUTTON_STATUS, true);\r\n          this.$store.dispatch(action.CREATE_REQ_DRIVER, obj);\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    isCancel() {\r\n      this.$router.push(\"/driver/request-list\");\r\n    },\r\n    isNumber(evt) {\r\n      evt = evt ? evt : window.event;\r\n      var charCode = evt.which ? evt.which : evt.keyCode;\r\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n        evt.preventDefault();\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    changeLocation(val) {\r\n      this.form.place_id = val;\r\n    },\r\n    changeDriverNumber(val) {\r\n      this.form.number_of_drivers = parseInt(val);\r\n    },\r\n    formatTime() {\r\n      this.form.purpose_time = moment(\r\n        this.form.date + \" \" + this.form.time\r\n      ).format(\"YYYY-MM-DD hh:mm:ss\");\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      error: getter.GET_ERROR,\r\n      venID: getter.GET_VENDOR_PROFILE,\r\n      button: getter.GET_BUTTON,\r\n      data: getter.GET_TEMPLATE_ID,\r\n      profile: getter.GET_DATA_PROFILE,\r\n    }),\r\n    buttonStatuz: function () {\r\n      return (this.form.fullscreen_loading = this.button);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(action.VENDOR_PROFILE);\r\n  },\r\n  async created() {\r\n    let data = await this.$store.dispatch(action.DROPDOWN_LOCATION);\r\n    this.options = data;\r\n    this.form.enterprise_id = this.profile.enterprise.identerprise;\r\n  },\r\n};\r\n",{"version":3,"sources":["request-driver.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"request-driver.vue","sourceRoot":"src/views/pages/driver","sourcesContent":["<template>\r\n  <div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n      <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\r\n        <el-row>\r\n          <el-col :span=\"24\">\r\n            <el-col>\r\n              <p>Request Driver</p>\r\n              <hr />\r\n            </el-col>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <div class=\"grid-content\">\r\n              <el-form-item label=\"Location\" label-width=\"120px\" prop=\"loc\">\r\n                <el-select\r\n                  v-model=\"form.place_id\"\r\n                  @change=\"changeLocation\"\r\n                  placeholder=\"Order location\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in options\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.idplaces\"\r\n                  ></el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <div class=\"grid-content\">\r\n              <el-form-item prop=\"date\" label=\"Date\" label-width=\"120px\">\r\n                <el-date-picker\r\n                  v-model=\"form.date\"\r\n                  type=\"date\"\r\n                  placeholder=\"Date\"\r\n                  format=\"dd MMM yyyy\"\r\n                  value-format=\"dd MMM yyyy\"\r\n                  size=\"large\"\r\n                  prefix-icon=\"el-icon-date\"\r\n                  :picker-options=\"pickerOptions\"\r\n                  @change=\"formatTime\"\r\n                >\r\n                </el-date-picker>\r\n              </el-form-item>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item prop=\"time\" label=\"Time\" label-width=\"120px\">\r\n              <el-time-picker\r\n                v-model=\"form.time\"\r\n                type=\"time\"\r\n                placeholder=\"00:00\"\r\n                format=\"HH:mm\"\r\n                value-format=\"HH:mm\"\r\n                size=\"large\"\r\n                prefix-icon=\"el-icon-date\"\r\n                @change=\"formatTime\"\r\n              >\r\n              </el-time-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item\r\n              prop=\"number_of_drivers\"\r\n              label=\"Jumlah Driver\"\r\n              label-width=\"120px\"\r\n            >\r\n              <el-input-number\r\n                v-model=\"form.number_of_drivers\"\r\n                :min=\"1\"\r\n                @change=\"changeDriverNumber\"\r\n              ></el-input-number>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"12\">\r\n            <el-form-item prop=\"note\" label=\"Note\" label-width=\"120px\">\r\n              <el-input\r\n                type=\"textarea\"\r\n                placeholder=\"Request Driver 10\"\r\n                v-model=\"form.note\"\r\n                :autosize=\"{ minRows: 5, maxRows: 7 }\"\r\n              ></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col\r\n            :lg=\"{ offset: 18, span: 6 }\"\r\n            style=\"display: flex; justify-content: flex-end; margin-top: 20px\"\r\n          >\r\n            <div class=\"grid-content\">\r\n              <el-form-item>\r\n                <el-button @click=\"isCancel\">Cancel</el-button>\r\n                <el-button\r\n                  type=\"success\"\r\n                  v-loading.fullscreen.lock=\"buttonStatuz\"\r\n                  @click=\"onSubmit('form')\"\r\n                  >Send Request</el-button\r\n                >\r\n              </el-form-item>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport router from \"../../../router\";\r\nimport moment from \"moment\";\r\nimport Affix from \"@/components/Affix\";\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport * as mutation from \"../../../store/mutation-types\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nexport default {\r\n  name: \"RequestDriver\",\r\n  data() {\r\n    return {\r\n      pickerOptions: {\r\n        disabledDate(time) {\r\n          let date = new Date();\r\n          return time.getTime() < date.setDate(date.getDate() - 1);\r\n        },\r\n      },\r\n      options: null,\r\n      loc: null,\r\n      vendor_profile: null,\r\n      form: {\r\n        number_of_drivers: \"\",\r\n        fullscreen_loading: false,\r\n        enterprise_id: \"\",\r\n        place_id: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n        purpose_time: \"\",\r\n        note: \"\",\r\n      },\r\n      rules: {\r\n        location: [\r\n          {\r\n            required: true,\r\n            message: \"Please choose the location\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n        date: [\r\n          {\r\n            required: true,\r\n            message: \"Please input the date\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n        time: [\r\n          {\r\n            required: true,\r\n            message: \"Please input the time\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n        number_of_drivers: [\r\n          {\r\n            required: true,\r\n            message: \"Please input the number of drivers\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n        note: [\r\n          {\r\n            required: true,\r\n            message: \"Please input the note\",\r\n            trigger: [\"blur\", \"change\"],\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    onSubmit(formName) {\r\n      let obj = {\r\n        enterprise_id: this.form.enterprise_id,\r\n        place_id: this.form.place_id,\r\n        number_of_drivers: this.form.number_of_drivers,\r\n        note: this.form.note,\r\n        purpose_time: this.form.purpose_time,\r\n      };\r\n      this.$refs[formName].validate((valid) => {\r\n        this.loading = true;\r\n        if (valid) {\r\n          this.$store.commit(mutation.BUTTON_STATUS, true);\r\n          this.$store.dispatch(action.CREATE_REQ_DRIVER, obj);\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    isCancel() {\r\n      this.$router.push(\"/driver/request-list\");\r\n    },\r\n    isNumber(evt) {\r\n      evt = evt ? evt : window.event;\r\n      var charCode = evt.which ? evt.which : evt.keyCode;\r\n      if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n        evt.preventDefault();\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    changeLocation(val) {\r\n      this.form.place_id = val;\r\n    },\r\n    changeDriverNumber(val) {\r\n      this.form.number_of_drivers = parseInt(val);\r\n    },\r\n    formatTime() {\r\n      this.form.purpose_time = moment(\r\n        this.form.date + \" \" + this.form.time\r\n      ).format(\"YYYY-MM-DD hh:mm:ss\");\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      error: getter.GET_ERROR,\r\n      venID: getter.GET_VENDOR_PROFILE,\r\n      button: getter.GET_BUTTON,\r\n      data: getter.GET_TEMPLATE_ID,\r\n      profile: getter.GET_DATA_PROFILE,\r\n    }),\r\n    buttonStatuz: function () {\r\n      return (this.form.fullscreen_loading = this.button);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(action.VENDOR_PROFILE);\r\n  },\r\n  async created() {\r\n    let data = await this.$store.dispatch(action.DROPDOWN_LOCATION);\r\n    this.options = data;\r\n    this.form.enterprise_id = this.profile.enterprise.identerprise;\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.card-base {\r\n  padding: 20px;\r\n}\r\n\r\n.el-row {\r\n  // display: flex;\r\n  // align-items: center;\r\n  // justify-content: center;\r\n  padding: 0px 10px;\r\n  margin-bottom: 10px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.el-col {\r\n  border-radius: 5px;\r\n}\r\n\r\n.el-radio {\r\n  margin: 0 160px 0 10px;\r\n}\r\n\r\n.el-select {\r\n  width: 100%;\r\n}\r\n\r\n.thumbnail {\r\n  position: relative;\r\n  width: 300px;\r\n  height: 300px;\r\n  overflow: hidden;\r\n}\r\n\r\n.thumbnail img {\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  height: 100%;\r\n  width: auto;\r\n  -webkit-transform: translate(-50%, -50%);\r\n  -ms-transform: translate(-50%, -50%);\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.thumbnail img.portrait {\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\na {\r\n  border-style: dotted;\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  height: 150px;\r\n}\r\n\r\ntd {\r\n  padding: 10px;\r\n}\r\n</style>\r\n"]}]}