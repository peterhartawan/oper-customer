{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\pages\\enterprise\\location-enterprise.vue?vue&type=style&index=0&id=51221890&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\pages\\enterprise\\location-enterprise.vue","mtime":1646604344789},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.text-p {\r\n    display: block;\r\n    color: white;\r\n    font-weight: 600;\r\n}\r\n\r\n.plus-bg {\r\n    background-color: #a31424;\r\n    height: 139px;\r\n\r\n}\r\n\r\n.avatar {\r\n    img {\r\n        border: 1px solid transparentize($text-color, .9);\r\n        box-sizing: border-box;\r\n        width: 60px;\r\n        height: 60px;\r\n        border-radius: 50%;\r\n        transition: all .5s .25s;\r\n    }\r\n}\r\n\r\n.avatar2 {\r\n    img {\r\n        border: 1px solid transparentize($text-color, .9);\r\n        box-sizing: border-box;\r\n        width: 120px;\r\n        height: 120px;\r\n        border-radius: 50%;\r\n        transition: all .5s .25s;\r\n    }\r\n}\r\n\r\n.name-of {\r\n    margin-bottom: 10px;\r\n    color: #a31424;\r\n}\r\n\r\n.contacts-list {\r\n    //margin: 0 auto;\r\n    height: 400px;\r\n    width: 108%;\r\n    max-width: 965px;\r\n    padding: 0px 30px;\r\n    box-sizing: border-box;\r\n\r\n    .contact {\r\n        margin: 10px 0;\r\n        padding: 5px;\r\n        box-sizing: border-box;\r\n        cursor: pointer;\r\n\r\n    }\r\n}\r\n\r\n.small-edit {\r\n    width: 90px;\r\n}\r\n\r\n/*.card-base {*/\r\n/*padding: 20px;*/\r\n/*}*/\r\n\r\n/*.el-row {*/\r\n/*// display: flex;*/\r\n/*// align-items: center;*/\r\n/*// justify-content: center;*/\r\n/*padding: 0px 10px;*/\r\n/*margin-bottom: 20px;*/\r\n\r\n/*&:last-child {*/\r\n/*margin-bottom: 0;*/\r\n/*}*/\r\n/*}*/\r\n\r\n/*.el-col {*/\r\n/*border-radius: 5px;*/\r\n/*}*/\r\n\r\n/*.el-select {*/\r\n/*width: 100%;*/\r\n/*}*/\r\n",{"version":3,"sources":["location-enterprise.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsTA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"location-enterprise.vue","sourceRoot":"src/views/pages/enterprise","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <p class=\"font-weight-600 mt-40\">LOCATION</p>\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <!-- <el-row :gutter=\"10\">\r\n            <el-col :span=\"4\" :xl=\"1\">\r\n                <el-button @click=\"Create()\" style=\"width: 100%\" type=\"primary\">New Location</el-button>\r\n            </el-col>\r\n        </el-row> -->\r\n        <el-row :gutter=\"10\">\r\n            <el-col :span=\"14\">\r\n                <gmap-map :center=\"markDefault\" :zoom=\"16\" map-type-id=\"terrain\" style=\"width: 100%; height: 490px\">\r\n                    <div v-if=\"mapMark\">\r\n                        <gmap-marker :key=\"index\" v-for=\"(m, index) in markers\" :position=\"m.position\" :clickable=\"true\" @click=\"openWindow(m.position)\"></gmap-marker>\r\n                        <gmap-info-window v-if=\"infowindow.name\" @closeclick=\"window_open=false\" :opened=\"window_open\" :position=\"infowindow\" :options=\"{ pixelOffset: { width: 0, height: -35},}\">\r\n                            {{infowindow.name}}\r\n                        </gmap-info-window>\r\n                    </div>\r\n                </gmap-map>\r\n            </el-col>\r\n            <el-col :span=\"9\">\r\n                <el-row style=\"margin-top: 10px\">\r\n                    <div v-if=\"isAdminVendor\">\r\n                        <el-col :span=\"4\">\r\n                            <el-button @click=\"Cancel()\" size=\"mini\" type=\"info\">Back</el-button>\r\n                        </el-col>\r\n                        <el-col :offset=\"1\" :span=\"12\">\r\n                            <el-input placeholder=\"Search\" @keyup.native=\"searchChange\" v-model=\"input4\">\r\n                                <i slot=\"suffix\" class=\"el-input__icon el-icon-search\"></i>\r\n                            </el-input>\r\n                        </el-col>\r\n                    </div>\r\n                    <div v-else>\r\n                        <el-col :offset=\"1\" :span=\"16\">\r\n                            <el-input placeholder=\"Search\" @keyup.native=\"searchChange\" v-model=\"input4\">\r\n                                <i slot=\"suffix\" class=\"el-input__icon el-icon-search\"></i>\r\n                            </el-input>\r\n                        </el-col>\r\n                    </div>\r\n                    <el-col :offset=\"1\" :span=\"1\">\r\n                        <el-button @click=\"Create()\" style=\"text-align: center; background-color: #D50000;\" type=\"danger\"><i class=\"mdi mdi-plus\"></i></el-button>\r\n                    </el-col>\r\n                </el-row>\r\n                <el-row>\r\n                    <div class=\"contacts-list box grow scrollable only-y\">\r\n                        <div v-for=\"c in listData\" :key=\"c.id\" class=\"flex contact\" @click=\"getId(c)\">\r\n\r\n                            <div class=\"info box grow flex\">\r\n                                <div class=\"name box grow flex column justify-center p-10\">\r\n\r\n                                    <!-- <i class=\"mdi mdi-tooltip-edit mdi-36px;\"></i>\r\n                                    <br>\r\n                                    <i class=\"mdi mdi-delete mdi-24px\"></i> -->\r\n\r\n                                    <strong><i style=\"color: #D50000\" class=\"mdi mdi-map-marker-outline mdi-24px\"></i>&nbsp;{{c.name}} </strong>\r\n                                    <div class=\"phone fs-14 secondary-text\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{c.address}}</div>\r\n                                    <el-row :gutter=\"20\">\r\n                                        <el-col :offset=\"18\" :span=\"3\">\r\n                                            <i @click=\"Edit(c)\" class=\"mdi mdi-tooltip-edit mdi-24px\"></i>\r\n                                        </el-col>\r\n                                        <el-col :span=\"3\">\r\n                                            <i @click=\"Delete(c)\" class=\"mdi mdi-delete mdi-24px\"></i>\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </el-row>\r\n                <div align=\"center\" class=\"grid-content\">\r\n                    <el-pagination background layout=\"prev, pager, next\" @current-change=\"handlePageChange\" :total=\"forTotal\"></el-pagination>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport router from \"../../../router\";\r\n\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from \"vuex\";\r\nimport * as mutation from '../../../store/mutation-types';\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n    name: \"ListDriver\",\r\n    data() {\r\n        return {\r\n            visible2: false,\r\n            mapMark: null,\r\n            affixEnabled: true,\r\n            resultTrack: null,\r\n            image_url: null,\r\n            info_marker: null,\r\n            markers: [],\r\n            infowindow: {\r\n                lat: 0,\r\n                lng: 0,\r\n                name: null,\r\n            },\r\n            markDefault: {\r\n                lat: -6.21462,\r\n                lng: 106.84513\r\n            },\r\n            indexT: 1,\r\n            idplaces: \"\",\r\n            payload: {\r\n                idplaces: null,\r\n                identerprise: null,\r\n                page: 1,\r\n            },\r\n            tableData: null,\r\n            input4: null,\r\n            place: null,\r\n            isAdminVendor: false\r\n        };\r\n    },\r\n    components: {\r\n        Affix\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            listData: getter.GET_LIST_LOCATION,\r\n            paginate: getter.GET_PAGINATE_LOCATION,\r\n            enterprise: getter.ENTERPRISE,\r\n            total: getter.GET_LOCATION_TOTAL\r\n        }),\r\n        paginator() {\r\n            return this.paginate;\r\n        },\r\n        indexTam() {\r\n            return this.indexT;\r\n        },\r\n        forTotal() {\r\n            if (this.listData) {\r\n                return this.total;\r\n            }\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        openWindow(position) {\r\n            this.window_open = true\r\n            this.infowindow.lat = position.lat;\r\n            this.infowindow.lng = position.lng;\r\n            this.infowindow.name = position.name;\r\n        },\r\n        async searchChange(v) {\r\n            let trimName = this.input4.trim()\r\n            if (trimName.length > 0) {\r\n                this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                await this.$store.dispatch(action.LIST_LOCATION, {\r\n                    page: 1,\r\n                    q: trimName,\r\n                    identerprise: this.enterprise.identerprise\r\n                });\r\n                await this.listData\r\n                this.markers = [];\r\n                for (var i = 0; i < this.listData.length; i++) {\r\n                    const marker = {\r\n                        lat: parseFloat(this.listData[i].latitude),\r\n                        lng: parseFloat(this.listData[i].longitude),\r\n                        name: this.listData[i].name + ', ' + this.listData[i].address,\r\n                        popover: false,\r\n                        id: this.listData[i].idplaces,\r\n                    };\r\n                    this.markDefault.lat = parseFloat(this.listData[i].latitude)\r\n                    this.markDefault.lng = parseFloat(this.listData[i].longitude)\r\n                    this.markers.push({\r\n                        position: marker\r\n                    });\r\n                    this.mapMark = 1;\r\n                }\r\n            } else {\r\n                this.$store.commit(mutation.BUTTON_STATUS, true);\r\n                await this.$store.dispatch(action.LIST_LOCATION, {\r\n                    page: 1,\r\n                    q: trimName,\r\n                    identerprise: this.enterprise.identerprise\r\n                });\r\n                await this.listData\r\n                this.markers = [];\r\n                for (var i = 0; i < this.listData.length; i++) {\r\n                    const marker = {\r\n                        lat: parseFloat(this.listData[i].latitude),\r\n                        lng: parseFloat(this.listData[i].longitude),\r\n                        name: this.listData[i].name + ', ' + this.listData[i].address,\r\n                        popover: false,\r\n                        id: this.listData[i].idplaces,\r\n                    };\r\n                    this.markDefault.lat = parseFloat(this.listData[i].latitude)\r\n                    this.markDefault.lng = parseFloat(this.listData[i].longitude)\r\n                    this.markers.push({\r\n                        position: marker\r\n                    });\r\n                    this.mapMark = 1;\r\n                }\r\n            }\r\n        },\r\n        async handlePageChange(page) {\r\n            this.markers = [];\r\n            this.payload.page = page;\r\n            await this.$store.dispatch(action.LIST_LOCATION, {\r\n                page: page,\r\n                q: this.input4,\r\n                identerprise: this.enterprise.identerprise\r\n            });\r\n            for (var i = 0; i < this.listData.length; i++) {\r\n                const marker = {\r\n                    lat: parseFloat(this.listData[i].latitude),\r\n                    lng: parseFloat(this.listData[i].longitude),\r\n                    name: this.listData[i].name + ', ' + this.listData[i].address,\r\n                    popover: false,\r\n                    id: this.listData[i].idplaces,\r\n                };\r\n                this.markDefault.lat = parseFloat(this.listData[i].latitude)\r\n                this.markDefault.lng = parseFloat(this.listData[i].longitude)\r\n                this.markers.push({\r\n                    position: marker\r\n                });\r\n                this.mapMark = 1;\r\n            }\r\n        },\r\n\r\n        Create() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$router.push({\r\n                name: \"NewLocation\"\r\n            });\r\n        },\r\n        clearMarkers() {\r\n            this.markers = [];\r\n        },\r\n        async getId(id) {\r\n            await this.clearMarkers();\r\n            const marker = {\r\n                lat: parseFloat(id.latitude),\r\n                lng: parseFloat(id.longitude),\r\n                name: id.name + ', ' + id.address,\r\n                popover: false,\r\n\r\n            }\r\n            this.markDefault.lat = parseFloat(id.latitude)\r\n            this.markDefault.lng = parseFloat(id.longitude)\r\n            this.markers.push({\r\n                position: marker\r\n            });\r\n            this.mapMark = 1;\r\n\r\n        },\r\n        Cancel() {\r\n            this.$store.dispatch(action.DATA_ID_CORP, this.enterprise.identerprise);\r\n            this.$router.replace({\r\n                path: \"/detail-enterprise/\" + this.enterprise.identerprise\r\n            });\r\n        },\r\n        Edit(e) {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$store.dispatch(action.DETAIL_LOCATION, e.idplaces);\r\n        },\r\n        Delete(e) {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.dispatch(action.DELETE_LOCATION, e);\r\n                }\r\n            });\r\n        }\r\n    },\r\n    async created() {\r\n        this.isAdminVendor = JSON.parse(localStorage.getItem('user')).idrole == 2\r\n        this.payload.identerprise = await this.enterprise.identerprise\r\n        await this.$store.dispatch(action.LIST_LOCATION, this.payload);\r\n        await this.listData\r\n        this.markers = [];\r\n        for (var i = 0; i < this.listData.length; i++) {\r\n            const marker = {\r\n                lat: parseFloat(this.listData[i].latitude),\r\n                lng: parseFloat(this.listData[i].longitude),\r\n                name: this.listData[i].name + ', ' + this.listData[i].address,\r\n                popover: false,\r\n                id: this.listData[i].idplaces,\r\n            };\r\n            this.markDefault.lat = parseFloat(this.listData[i].latitude)\r\n            this.markDefault.lng = parseFloat(this.listData[i].longitude)\r\n            this.markers.push({\r\n                position: marker\r\n            });\r\n            this.mapMark = 1;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.text-p {\r\n    display: block;\r\n    color: white;\r\n    font-weight: 600;\r\n}\r\n\r\n.plus-bg {\r\n    background-color: #a31424;\r\n    height: 139px;\r\n\r\n}\r\n\r\n.avatar {\r\n    img {\r\n        border: 1px solid transparentize($text-color, .9);\r\n        box-sizing: border-box;\r\n        width: 60px;\r\n        height: 60px;\r\n        border-radius: 50%;\r\n        transition: all .5s .25s;\r\n    }\r\n}\r\n\r\n.avatar2 {\r\n    img {\r\n        border: 1px solid transparentize($text-color, .9);\r\n        box-sizing: border-box;\r\n        width: 120px;\r\n        height: 120px;\r\n        border-radius: 50%;\r\n        transition: all .5s .25s;\r\n    }\r\n}\r\n\r\n.name-of {\r\n    margin-bottom: 10px;\r\n    color: #a31424;\r\n}\r\n\r\n.contacts-list {\r\n    //margin: 0 auto;\r\n    height: 400px;\r\n    width: 108%;\r\n    max-width: 965px;\r\n    padding: 0px 30px;\r\n    box-sizing: border-box;\r\n\r\n    .contact {\r\n        margin: 10px 0;\r\n        padding: 5px;\r\n        box-sizing: border-box;\r\n        cursor: pointer;\r\n\r\n    }\r\n}\r\n\r\n.small-edit {\r\n    width: 90px;\r\n}\r\n\r\n/*.card-base {*/\r\n/*padding: 20px;*/\r\n/*}*/\r\n\r\n/*.el-row {*/\r\n/*// display: flex;*/\r\n/*// align-items: center;*/\r\n/*// justify-content: center;*/\r\n/*padding: 0px 10px;*/\r\n/*margin-bottom: 20px;*/\r\n\r\n/*&:last-child {*/\r\n/*margin-bottom: 0;*/\r\n/*}*/\r\n/*}*/\r\n\r\n/*.el-col {*/\r\n/*border-radius: 5px;*/\r\n/*}*/\r\n\r\n/*.el-select {*/\r\n/*width: 100%;*/\r\n/*}*/\r\n</style>\r\n"]}]}