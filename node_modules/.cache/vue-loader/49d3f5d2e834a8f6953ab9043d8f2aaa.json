{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\src\\views\\pages\\employee\\edit-position.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\src\\views\\pages\\employee\\edit-position.vue","mtime":1644413760502},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer(new)\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport router from \"../../../router\";\r\nimport moment from \"moment\";\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from '../../../store/mutation-types';\r\nimport Swal from \"sweetalert2\";\r\nexport default {\r\n    name: \"EditPosition\",\r\n    data() {\r\n        return {\r\n            form: {\r\n                job_name: \"\",\r\n                idemployee_position: \"\",\r\n                price: \"\",\r\n            },\r\n            // payload: {\r\n            //     identerprise: null,\r\n            //     page: 1,\r\n            // },\r\n            rules: {\r\n                job_name: [{\r\n                    required: true,\r\n                    message: \"Job Name is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                price: [{\r\n                    required: true,\r\n                    message: \"Price is required!\",\r\n                    trigger: \"blur\",\r\n\r\n                }],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        onSubmit(formName) {\r\n            if (!this.form.price) {\r\n                let obj = {\r\n                    job_name: this.job_name,\r\n                };\r\n            } else {\r\n                let obj = {\r\n                    job_name: this.job_name,\r\n                    price: this.price\r\n                };\r\n            }\r\n            this.$refs[formName].validate(valid => {\r\n                if (valid) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.UPDATE_POSITION, this.form);\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        Cancel() {\r\n            this.$store.dispatch(action.LIST_POSITION, {\r\n                page: 1,\r\n                status: this.status\r\n            });\r\n            this.$router.replace({\r\n                path: \"/employee/list-position\"\r\n            });\r\n        },\r\n        deleteButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.DELETE_POSITION, this.form.idemployee_position);\r\n                }\r\n            });\r\n        },\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            button: getter.GET_BUTTON,\r\n            error: getter.GET_ERROR,\r\n            position: getter.GET_DETAIL_POSITION,\r\n            profile: getter.GET_DATA_PROFILE\r\n        }),\r\n        showPrice() {\r\n            if (this.profile.vendor.show_employee_price === 1) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.form.job_name = this.position.job_name\r\n        this.form.price = this.position.price\r\n        this.form.idemployee_position = this.position.idemployee_position\r\n    }\r\n};\r\n",{"version":3,"sources":["edit-position.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"edit-position.vue","sourceRoot":"src/views/pages/employee","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\">\r\n            <el-row :gutter=\"20\">\r\n                <el-col :lg=\"12\">\r\n                    <el-form-item prop=\"job_name\">\r\n                        <el-input placeholder=\"Location Name\" v-model=\"form.job_name\"></el-input>\r\n                    </el-form-item>\r\n                </el-col>\r\n                <el-col :lg=\"12\">\r\n                    <div v-if=\"showPrice === true\">\r\n                        <el-form-item prop=\"price\">\r\n                            <el-input placeholder=\"Price\" v-model=\"form.price\"></el-input>\r\n                        </el-form-item>\r\n                    </div>\r\n                </el-col>\r\n            </el-row>\r\n        </el-form>\r\n        <el-row>\r\n            <el-col :lg=\"2\">\r\n                <el-button :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\r\n            </el-col>\r\n            <el-col :lg=\"2\">\r\n                <el-button @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\r\n            </el-col>\r\n            <el-col :offset=\"17\" :lg=\"3\">\r\n                <el-button @click=\"deleteButton\" type=\"danger\">Delete</el-button>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport router from \"../../../router\";\r\nimport moment from \"moment\";\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from '../../../store/mutation-types';\r\nimport Swal from \"sweetalert2\";\r\nexport default {\r\n    name: \"EditPosition\",\r\n    data() {\r\n        return {\r\n            form: {\r\n                job_name: \"\",\r\n                idemployee_position: \"\",\r\n                price: \"\",\r\n            },\r\n            // payload: {\r\n            //     identerprise: null,\r\n            //     page: 1,\r\n            // },\r\n            rules: {\r\n                job_name: [{\r\n                    required: true,\r\n                    message: \"Job Name is required!\",\r\n                    trigger: \"blur\"\r\n                }],\r\n                price: [{\r\n                    required: true,\r\n                    message: \"Price is required!\",\r\n                    trigger: \"blur\",\r\n\r\n                }],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        onSubmit(formName) {\r\n            if (!this.form.price) {\r\n                let obj = {\r\n                    job_name: this.job_name,\r\n                };\r\n            } else {\r\n                let obj = {\r\n                    job_name: this.job_name,\r\n                    price: this.price\r\n                };\r\n            }\r\n            this.$refs[formName].validate(valid => {\r\n                if (valid) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.UPDATE_POSITION, this.form);\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        Cancel() {\r\n            this.$store.dispatch(action.LIST_POSITION, {\r\n                page: 1,\r\n                status: this.status\r\n            });\r\n            this.$router.replace({\r\n                path: \"/employee/list-position\"\r\n            });\r\n        },\r\n        deleteButton() {\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                    this.$store.dispatch(action.DELETE_POSITION, this.form.idemployee_position);\r\n                }\r\n            });\r\n        },\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            button: getter.GET_BUTTON,\r\n            error: getter.GET_ERROR,\r\n            position: getter.GET_DETAIL_POSITION,\r\n            profile: getter.GET_DATA_PROFILE\r\n        }),\r\n        showPrice() {\r\n            if (this.profile.vendor.show_employee_price === 1) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.form.job_name = this.position.job_name\r\n        this.form.price = this.position.price\r\n        this.form.idemployee_position = this.position.idemployee_position\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    // display: flex;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    padding: 0px 10px;\r\n    margin-bottom: 10px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.el-radio {\r\n    margin: 0 160px 0 10px;\r\n}\r\n\r\n.el-select {\r\n    width: 100%;\r\n}\r\n\r\n.thumbnail {\r\n    position: relative;\r\n    width: 300px;\r\n    height: 300px;\r\n    overflow: hidden;\r\n}\r\n\r\n.thumbnail img {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    height: 100%;\r\n    width: auto;\r\n    -webkit-transform: translate(-50%, -50%);\r\n    -ms-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.thumbnail img.portrait {\r\n    width: 100%;\r\n    height: auto;\r\n}\r\n\r\na {\r\n    border-style: dotted;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n    height: 150px;\r\n}\r\n\r\ntd {\r\n    padding: 10px;\r\n}\r\n</style>\r\n"]}]}