{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\order-client\\detail-order-page.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\order-client\\detail-order-page.vue","mtime":1644413760596},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport  OrderBar from '../../../components/order/order-bar'\nimport router from '../../../router'\nimport { mapGetters } from 'vuex'\nimport * as getter from '../../../store/getters-types'\nimport * as action from '../../../store/action-types'\nimport * as mutation from '../../../store/mutation-types'\nimport Swal from 'sweetalert2'\nimport Order from \"./order\";\n\nexport default {\n    data() {\n        return {\n            dropDown: null,\n            alt: require(\"@/assets/images/avatar-2.jpg\"),\n            form: {\n                placeholderName     : 'Select Driver',\n                disableSelect       : false,\n                driver_userid       : '',\n                fullscreen_loading  : false,\n                statusButtonEdit    : null,\n                statusButtonAssign  : null,\n            }\n        }\n    },\n    components: {\n        Order,\n        OrderBar\n    },\n    computed: {\n        ...mapGetters({\n            order           : getter.GET_ORDER_DETAIL,\n            button          : getter.GET_BUTTON,\n            path            : getter.GET_PATH,\n            dropdownDriver  : getter.GET_DRIVER_A_LIST,\n            identerpriseS   : getter.GET_ID_ENTERPRISE,\n            templateS       : getter.GET_TEMPLATE_ID,\n            loading         : getter.GET_LOADING,\n        }),\n        buttonStatuz: function  () {\n            return this.form.fullscreen_loading = this.button\n        },\n        status(){\n            if(this.order.order_status === 1 ) {return \"ORDER_OPEN\" }\n            if(this.order.order_status === 2 ) {return \"ORDER_INPROGRESS\" }\n            if(this.order.order_status === 3 ) {return \"ORDER_COMPLETED\" }\n            if(this.order.order_status === 4 ) {return \"ORDER_MOVED\" }\n            if(this.order.order_status === 5 ) {return \"ORDER_CANCELED\" }\n            if(this.order.order_status === 6 ) {return \"ORDER_DELETED\" }\n        },\n    },\n   async created() {\n        await this.$store.dispatch(action.DROPDOWN_D_AVAILABLE, this.identerpriseS);\n       if(this.dropdownDriver.data.length == 0) {\n           this.form.placeholderName = 'No Driver Available'\n           this.form.disableSelect = true\n       }else {\n           this.dropDown = this.dropdownDriver.data;\n       }\n        let userProfile = JSON.parse(localStorage.getItem('user'));\n        ( userProfile.idrole === 5 || userProfile.idrole == 3) ? this.form.statusButtonEdit =  true : this.form.statusButtonEdit = false,\n        ( userProfile.idrole === 5 || userProfile.idrole == 4) ? this.form.statusButtonAssign =  true : this.form.statusButtonAssign = false\n    },\n    async mounted() {\n        await this.$store.dispatch(action.DROPDOWN_DRIVER, null)\n    },\n    methods:    {\n        edit(){\n            this.$store.commit(mutation.ID_ORDER, this.order.idorder)\n            router.replace('/edit-order')\n        },\n        // async remoteMethod2(query) {\n        //     let trimName = query.trim()\n        // if (trimName.length > 0) {\n        //     await this.$store.commit(mutation.SET_LOADING, true);\n        //     await this.$store.dispatch(action.DROPDOWN_DRIVER, trimName);\n        // } else {\n        //     await this.$store.commit(mutation.SET_LOADING, true);\n        //     await this.$store.dispatch(action.DROPDOWN_DRIVER, trimName);\n        // }\n        //  this.dropDown = this.dropdownDriver;\n        // },\n        saveButton(){\n            let obj = {\n                driver_userid   : this.form.driver_userid,\n                idorder         : this.order.idorder\n            };\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            this.$store.dispatch(action.ASSIGN_ORDER_CLIENT, obj)\n        },\n        enterpriseDriver(){\n        },\n        backLCorp(){\n            router.replace('/order/open')\n        },\n        buttonSearch() {\n        },\n        imgAlt(event) {\n            event.target.src = this.alt;\n        },\n    },\n\n}\n\n",{"version":3,"sources":["detail-order-page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"detail-order-page.vue","sourceRoot":"src/views/pages/order-client","sourcesContent":["<template>\r\n    <!--<vue-scroll class=\"page-typography\">-->\r\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n        <order-bar />\r\n        <div class=\"card-base card-shadow--medium bg-white\">\r\n            <el-form v-if=\"form.statusButtonAssign\">\r\n                <div class=\"grid-content\">\r\n                    <el-form-item prop=\"task_template_id\">\r\n                        <span style=\"font-size: 16px\">\r\n                            <b style=\"padding-left: 0.8em\"> Assign Order</b> <span style=\"padding-left: 1.9em\"></span>\r\n                        </span> :\r\n                        <el-select\r\n                        filterable\r\n                        remote\r\n                        reserve-keyword\r\n                        :disabled=\"form.disableSelect\"\r\n                        :loading=\"loading\"\r\n                        v-model=\"form.driver_userid\"\r\n                        :placeholder=\"form.placeholderName\" >\r\n                            <el-option\r\n                                    v-for=\"item in dropDown\"\r\n                                    :key=\"item.id\"\r\n                                    :label=\"item.name\"\r\n                                    :value=\"item.id\"></el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                </div>\r\n            </el-form>\r\n\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"11\">\r\n                    <el-row :gutter=\"20\" class=\"line margin-top-25\">\r\n                        <el-col :span=\"8\">\r\n                            <div class=\"avatar2 align-vertical text-center\">\r\n                                <img src=\"../../../assets/images/avatar-2.jpg\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\r\n                            </div>\r\n                        </el-col>\r\n                        <el-col :span=\"16\" style=\"overflow-wrap: break-word\">\r\n                            <span class=\"p-name\">{{ order.user_fullname }}</span>\r\n                            <span class=\"p\">{{order.user_phonenumber}}</span>\r\n                            <span class=\"p\">{{order.email}}</span>\r\n                        </el-col>\r\n                    </el-row>\r\n                </el-col>\r\n                <el-col :span=\"13\">\r\n                    <h3 class=\"margin-bottom-1 margin-top-0 margin-left-10\"> DETAIL </h3>\r\n                    <el-row :gutter=\"30\">\r\n                        <el-col :span=\"8\">\r\n                            <dl>\r\n\r\n                                <dt>TRANSACTION ID</dt>\r\n                                <dd>{{ order.trx_id }}</dd>\r\n\r\n                                <dt>BOOKING TIME</dt>\r\n                                <dd>{{ order.booking_time }}</dd>\r\n                            </dl>\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <dl>\r\n                                <dt> TYPE </dt>\r\n                                <dd>{{ order.enterprise.enterprise_type.name }}</dd>\r\n\r\n                                <dt>PLACE</dt>\r\n                                <dd>{{order.enterprise.office_address}}</dd>\r\n                            </dl>\r\n                        </el-col>\r\n                        <el-col :span=\"8\">\r\n                            <dl>\r\n                                <dt>VEHICLE</dt>\r\n                                <dd> {{ order.vehicle_type }} </dd>\r\n\r\n                                <dt>POLICE NO.</dt>\r\n                                <dd> {{ order.client_vehicle_license }} </dd>\r\n                            </dl>\r\n                        </el-col>\r\n                    </el-row>\r\n                </el-col>\r\n            </el-row>\r\n            <hr>\r\n\r\n            <el-row class=\"margin-top-25\">\r\n                <el-col :span=\"11\">\r\n                    <h3>TASK AND TEMPLATE</h3>\r\n                    <!--<h1 class=\"font-size-40\">Lorem Ipsum</h1>-->\r\n                </el-col>\r\n\r\n                <el-col :span=\"8\" class=\"line\">\r\n                    <dl>\r\n                        <dt>MESSAGE</dt>\r\n                        <dd style=\"overflow-wrap: break-word\">{{ `${order.message}` }}</dd>\r\n                    </dl>\r\n                </el-col>\r\n                <el-col :span=\"5\" class=\"text-center\">\r\n                    <span class=\"p font-weight-600 margin-bottom-10\">STATUS</span>\r\n                    <div>\r\n                        <img src=\"../../../assets/oper_asset/open.png\" alt=\"\" style=\"width: 20%\">\r\n                        <span class=\"p margin-top-10\">OPEN</span>\r\n                    </div>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <el-row>\r\n                <el-col :span=\"24\">\r\n                    <el-table\r\n                            :data=\"templateS.tasks\"\r\n                            stripe\r\n                            style=\"width: 100%\">\r\n                        <el-table-column\r\n                                prop=\"name\"\r\n                                label=\"Task Name\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"description\"\r\n                                label=\"Task Description\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"last_update_status\"\r\n                                label=\"Last Update\">\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <el-row :gutter=\"20\" style=\"margin-top: 20px\">\r\n                <el-col :span=\"10\">\r\n                    <el-button\r\n                            type=\"info\"\r\n                            size=\"small\"\r\n                            @click=\"backLCorp\">\r\n                        <span class=\"padding-left-10 padding-right-10\"> Back </span>\r\n                    </el-button>\r\n                    <el-button\r\n                            type=\"primary\"\r\n                            size=\"small\"\r\n                            v-if=\"form.statusButtonEdit\"\r\n                            @click=\"edit\">\r\n                        <span class=\"padding-left-10 padding-right-10\">Edit </span>\r\n                    </el-button>\r\n                </el-col>\r\n                <el-col :lg=\"{span: 2, offset: 11}\" v-if=\"form.statusButtonAssign\">\r\n                    <el-button\r\n                            size=\"small\"\r\n                            @click=\"saveButton\"\r\n                            v-loading.fullscreen.lock=\"buttonStatuz\"\r\n                            type=\"success\">\r\n                        <span class=\"padding-left-10 padding-right-10\"> Dispatch </span>\r\n                    </el-button>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n    </div>\r\n    <!--</vue-scroll>-->\r\n</template>\r\n\r\n<script>\r\n    import  OrderBar from '../../../components/order/order-bar'\r\n    import router from '../../../router'\r\n    import { mapGetters } from 'vuex'\r\n    import * as getter from '../../../store/getters-types'\r\n    import * as action from '../../../store/action-types'\r\n    import * as mutation from '../../../store/mutation-types'\r\n    import Swal from 'sweetalert2'\r\n    import Order from \"./order\";\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                dropDown: null,\r\n                alt: require(\"@/assets/images/avatar-2.jpg\"),\r\n                form: {\r\n                    placeholderName     : 'Select Driver',\r\n                    disableSelect       : false,\r\n                    driver_userid       : '',\r\n                    fullscreen_loading  : false,\r\n                    statusButtonEdit    : null,\r\n                    statusButtonAssign  : null,\r\n                }\r\n            }\r\n        },\r\n        components: {\r\n            Order,\r\n            OrderBar\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                order           : getter.GET_ORDER_DETAIL,\r\n                button          : getter.GET_BUTTON,\r\n                path            : getter.GET_PATH,\r\n                dropdownDriver  : getter.GET_DRIVER_A_LIST,\r\n                identerpriseS   : getter.GET_ID_ENTERPRISE,\r\n                templateS       : getter.GET_TEMPLATE_ID,\r\n                loading         : getter.GET_LOADING,\r\n            }),\r\n            buttonStatuz: function  () {\r\n                return this.form.fullscreen_loading = this.button\r\n            },\r\n            status(){\r\n                if(this.order.order_status === 1 ) {return \"ORDER_OPEN\" }\r\n                if(this.order.order_status === 2 ) {return \"ORDER_INPROGRESS\" }\r\n                if(this.order.order_status === 3 ) {return \"ORDER_COMPLETED\" }\r\n                if(this.order.order_status === 4 ) {return \"ORDER_MOVED\" }\r\n                if(this.order.order_status === 5 ) {return \"ORDER_CANCELED\" }\r\n                if(this.order.order_status === 6 ) {return \"ORDER_DELETED\" }\r\n            },\r\n        },\r\n       async created() {\r\n            await this.$store.dispatch(action.DROPDOWN_D_AVAILABLE, this.identerpriseS);\r\n           if(this.dropdownDriver.data.length == 0) {\r\n               this.form.placeholderName = 'No Driver Available'\r\n               this.form.disableSelect = true\r\n           }else {\r\n               this.dropDown = this.dropdownDriver.data;\r\n           }\r\n            let userProfile = JSON.parse(localStorage.getItem('user'));\r\n            ( userProfile.idrole === 5 || userProfile.idrole == 3) ? this.form.statusButtonEdit =  true : this.form.statusButtonEdit = false,\r\n            ( userProfile.idrole === 5 || userProfile.idrole == 4) ? this.form.statusButtonAssign =  true : this.form.statusButtonAssign = false\r\n        },\r\n        async mounted() {\r\n            await this.$store.dispatch(action.DROPDOWN_DRIVER, null)\r\n        },\r\n        methods:    {\r\n            edit(){\r\n                this.$store.commit(mutation.ID_ORDER, this.order.idorder)\r\n                router.replace('/edit-order')\r\n            },\r\n            // async remoteMethod2(query) {\r\n            //     let trimName = query.trim()\r\n            // if (trimName.length > 0) {\r\n            //     await this.$store.commit(mutation.SET_LOADING, true);\r\n            //     await this.$store.dispatch(action.DROPDOWN_DRIVER, trimName);\r\n            // } else {\r\n            //     await this.$store.commit(mutation.SET_LOADING, true);\r\n            //     await this.$store.dispatch(action.DROPDOWN_DRIVER, trimName);\r\n            // }\r\n            //  this.dropDown = this.dropdownDriver;\r\n            // },\r\n            saveButton(){\r\n                let obj = {\r\n                    driver_userid   : this.form.driver_userid,\r\n                    idorder         : this.order.idorder\r\n                };\r\n                this.$store.commit(mutation.BUTTON_STATUS, true)\r\n                this.$store.dispatch(action.ASSIGN_ORDER_CLIENT, obj)\r\n            },\r\n            enterpriseDriver(){\r\n            },\r\n            backLCorp(){\r\n                router.replace('/order/open')\r\n            },\r\n            buttonSearch() {\r\n            },\r\n            imgAlt(event) {\r\n                event.target.src = this.alt;\r\n            },\r\n        },\r\n\r\n    }\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import \"../../../assets/scss/_variables\";\r\n    hr {\r\n        border-top : 1px solid $line-color\r\n    }\r\n    .card-base {\r\n        padding: 20px;\r\n    }\r\n    .el-row {\r\n        padding: 0px 10px;\r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n    .el-col {\r\n        border-radius: 5px;\r\n    }\r\n    .thumbnail {\r\n        border-radius: 0px;\r\n        position: relative;\r\n        width: 290px;\r\n        height: 300px;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .thumbnail img {\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        height: 100%;\r\n        width: auto;\r\n        -webkit-transform: translate(-50%, -50%);\r\n        -ms-transform: translate(-50%, -50%);\r\n        transform: translate(-50%, -50%);\r\n    }\r\n\r\n    .thumbnail img.portrait {\r\n        width: 100%;\r\n        height: auto;\r\n    }\r\n\r\n    .h3 {\r\n        display: inline;\r\n    }\r\n    .p {\r\n        display: block;\r\n    }\r\n    .p-name {\r\n        display: block;\r\n        font-size: 2em;\r\n        font-weight: bold;\r\n        margin-top: 10px\r\n    }\r\n    .line {\r\n        border-right: 1px solid $line-color;\r\n    }\r\n    .word-wrap {\r\n        word-wrap: break-word;\r\n        overflow-wrap: break-word;\r\n    }\r\n\r\n    .center {\r\n        text-align: center;\r\n        vertical-align: middle;\r\n        line-height: 470px;\r\n    }\r\n\r\n    .middle {\r\n        text-align: center;\r\n        vertical-align: middle;\r\n        line-height: 280px;\r\n    }\r\n    .avatar2 {\r\n        img {\r\n            border: 1px solid transparentize($text-color, .9);\r\n            box-sizing: border-box;\r\n            width: 120px;\r\n            height: 120px;\r\n            border-radius: 50%;\r\n            transition: all .5s .25s;\r\n        }\r\n    }\r\n\r\n</style>"]}]}