{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\ui\\Maps\\GMaps.vue?vue&type=style&index=0&id=01c29857&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\ui\\Maps\\GMaps.vue","mtime":1644413760833},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import '../../../assets/scss/_variables';\r\n\r\n.page-gmaps {\r\n\t.map-app {\r\n\t\tmax-height: 500px;\r\n\r\n\t\t.settings-panel {\r\n\t\t\tbox-sizing: border-box;\r\n\t\t\tmax-width: 400px;\r\n\r\n\t\t\tul, li, select, button {\r\n\t\t\t\tfont-size: 10px;\r\n\t\t\t}\r\n\r\n\t\t\th3 {\r\n\t\t\t\tmargin-bottom: 0px;\r\n\t\t\t}\r\n\t\t\tul {\r\n\t\t\t\tmargin-top: 15px;\r\n\t\t\t}\r\n\t\t\t[type=\"checkbox\"] {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\ttop: 2px;\r\n\t\t\t}\r\n\t\t\tli {\r\n\t\t\t\tmargin-bottom: 2px;\r\n\t\t\t}\r\n\t\t\tpre {\r\n\t\t\t\tmax-height: 200px;\r\n\t\t\t\toverflow: auto;\r\n\t\t\t}\r\n\r\n\t\t\t.marker-box {\r\n\t\t\t\tbackground: $background-color;\r\n\t\t\t\tpadding: 10px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tlist-style: none;\r\n\r\n\t\t\t\tli, select, button {\r\n\t\t\t\t\tfont-size: 14px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n@media (max-width: 768px) {\r\n\t.page-gmaps {\r\n\t\t.map-app {\r\n\t\t\tmax-height: inherit !important;\r\n\t\t\tdisplay: block;\r\n\r\n\t\t\t.settings-panel, .map-panel {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmax-width: 100%;\r\n\t\t\t\theight: 400px;\r\n\t\t\t}\r\n\t\t\t.settings-panel {\r\n\t\t\t\toverflow: auto;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",{"version":3,"sources":["GMaps.vue"],"names":[],"mappingsyhBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GMaps.vue","sourceRoot":"src/views/ui/Maps","sourcesContent":["<template>\r\n\t<div class=\"page-gmaps scrollable\">\r\n\t\t<div class=\"page-header\">\r\n\t\t\t<h1>G Maps</h1>\r\n\t\t\t<el-breadcrumb separator=\"/\">\r\n\t\t\t\t<el-breadcrumb-item :to=\"{ path: '/' }\"><i class=\"mdi mdi-home-outline\"></i></el-breadcrumb-item>\r\n\t\t\t\t<el-breadcrumb-item>Components</el-breadcrumb-item>\r\n\t\t\t\t<el-breadcrumb-item>Maps</el-breadcrumb-item>\r\n\t\t\t\t<el-breadcrumb-item>G Maps</el-breadcrumb-item>\r\n\t\t\t</el-breadcrumb>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card-base card-shadow--medium\">\r\n\t\t\t<h2 class=\"ph-20\">Click twice on the map</h2>\r\n\t\t\t<gmap-map ref=\"map\" @click=\"clicked\"\r\n\t\t\t\t:center=\"{lat:40.720917, lng:-74.001308}\"\r\n\t\t\t\t:zoom=\"12\"\r\n\t\t\t\t:options=\"{gestureHandling:'cooperative'}\"\r\n\t\t\t\tmap-type-id=\"roadmap\"\r\n\t\t\t\tstyle=\"width: 100%; height: 500px\"\r\n\t\t\t>\r\n\t\t\t\t<GmapMarker v-if=\"start\" :position=\"start.latLng\" label=\"S\" />\r\n\t\t\t\t<GmapMarker v-if=\"end\" :position=\"end.latLng\" label=\"E\" />\r\n\t\t\t\t<GmapPolyline v-if=\"curvedPath\" :path=\"curvedPath\" />\r\n\t\t\t</gmap-map>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card-base card-shadow--medium mt-30\">\r\n\t\t\t<h2 class=\"ph-20\">Terrain map</h2>\r\n\t\t\t<gmap-map\r\n\t\t\t\t:center=\"{lat:40.720917, lng:-74.001308}\"\r\n\t\t\t\t:zoom=\"12\"\r\n\t\t\t\t:options=\"{gestureHandling:'cooperative'}\"\r\n\t\t\t\tmap-type-id=\"terrain\"\r\n\t\t\t\tstyle=\"width: 100%; height: 500px\"\r\n\t\t\t></gmap-map>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card-base card-shadow--medium mt-30\">\r\n\t\t\t<h2 class=\"ph-20\">Overlay map</h2>\r\n\t\t\t<gmap-map \r\n\t\t\t\t:center=\"{lat: 1.38, lng: 103.8}\" \r\n\t\t\t\t:zoom=\"12\"\r\n\t\t\t\t:options=\"{gestureHandling:'cooperative'}\"\r\n\t\t\t\tstyle=\"width: 100%; height: 500px\"\r\n\t\t\t>\r\n\t\t\t\t<ground-overlay source=\"/static/maps/overlay.png\" :bounds=\"{\r\n\t\t\t\t\t\tnorth: 1.502,\r\n\t\t\t\t\t\tsouth: 1.185,\r\n\t\t\t\t\t\teast: 104.0262,\r\n\t\t\t\t\t\twest: 103.5998,\r\n\t\t\t\t\t}\" :opacity=\"0.5\">\r\n\t\t\t\t</ground-overlay>\r\n\t\t\t</gmap-map>\r\n\t\t</div>\r\n\r\n\t\t<!--<div class=\"card-base card-shadow--medium mt-30 flex map-app\">\r\n\t\t\t<div class=\"settings-panel box scrollable only-y ph-20\">\r\n\t\t\t\t<h3>Map information</h3> \r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Map center latitude: <strong>{{reportedCenter.lat}}</strong></li>\r\n\t\t\t\t\t<li>Map center longitude: <strong>{{reportedCenter.lng}}</strong></li>\r\n\t\t\t\t\t<li>Map bounds: <strong><pre>{{mapBounds}}</pre></strong></li>\r\n\t\t\t\t\t<li>Map zoom: <strong>{{zoom}}</strong></li>\r\n\t\t\t\t\t<li>Dragged times: <strong>{{drag}}</strong></li>\r\n\t\t\t\t\t<li>Left clicked times: <strong>{{mapClickedCount}}</strong></li>\r\n\t\t\t\t\t<li>Map type: \r\n\t\t\t\t\t\t<select id=\"\" name=\"\" v-model=\"mapType\">\r\n\t\t\t\t\t\t\t<option value=\"roadmap\">roadmap</option>\r\n\t\t\t\t\t\t\t<option value=\"hybrid\">hybrid</option>\r\n\t\t\t\t\t\t\t<option value=\"satellite\">satellite</option>\r\n\t\t\t\t\t\t\t<option value=\"terrain\">terrain</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>Map style: \r\n\t\t\t\t\t\t<select id=\"\" name=\"\" v-model=\"mapStyle\">\r\n\t\t\t\t\t\t\t<option value=\"red\">red</option>\r\n\t\t\t\t\t\t\t<option value=\"green\">green</option>\r\n\t\t\t\t\t\t\t<option value=\"normal\">normal</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>Enable scrollwheel zooming on the map: <input type=\"checkbox\" v-model=\"scrollwheel\"></li>\r\n\t\t\t\t\t<li><button @click=\"addMarker\"> Add a new Marker</button> (or right click on the map)</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t\t\r\n\t\t\t\t<h3>Clusters</h3> \r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Enabled: <input type=\"checkbox\" v-model=\"clustering\" number></li>\r\n\t\t\t\t\t<li>Grid size: <input type=\"number\" v-model=\"gridSize\" number></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h3>Polyline</h3> \r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Editable: <input type=\"checkbox\" v-model=\"pleditable\" number></li>\r\n\t\t\t\t\t<li>Visible: <input type=\"checkbox\" v-model=\"plvisible\" number></li>\r\n\t\t\t\t\t<li><button @click=\"resetPlPath\">Reset path</button></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h3>Polygon</h3> \r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Visible: <input type=\"checkbox\" v-model=\"pgvisible\" number></li>\r\n\t\t\t\t\t<li><button @click=\"pgPath = opgPath\">Reset Polygon to pentagon</button></li>\r\n\t\t\t\t\t<li><button @click=\"pgPath = originalPlPath\">Reset Polygon to a simple polygon</button></li>\r\n\t\t\t\t\t<li>Path: <strong><pre>{{pgPath}}</pre></strong></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h3>Circle</h3> \r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Visible: <input type=\"checkbox\" number v-model=\"displayCircle\"></li>\r\n\t\t\t\t\t<li>Bounds: <strong><pre>{{circleBounds}}</pre></strong></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h3>Rectangle</h3> \r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Visible: <input type=\"checkbox\" number v-model=\"displayRectangle\"></li>\r\n\t\t\t\t\t<li>Bounds: <strong><pre>{{rectangleBounds}}</pre></strong></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h3>PlaceInput</h3> \r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><gmap-place-input label=\"Add a marker at this place \" :select-first-on-enter=\"true\" @place_changed=\"updatePlace($event)\"></gmap-place-input></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h3>Standalone infoWindow</h3> \r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>modal 1 : <input type=\"checkbox\" number v-model=\"ifw\"></li>\r\n\t\t\t\t\t<li>modal 2: <input type=\"checkbox\" number v-model=\"ifw2\"> <input type=\"text\" v-model=\"ifw2text\"></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h3>Markers</h3> \r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Display only markers with even ID (to test filters) <input type=\"checkbox\" number v-model=\"markersEven\"></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<ul class=\"marker-box\" v-if=\"!markers.length\">\r\n\t\t\t\t\t<li>no markers</li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<ul v-for=\"(m, index) in markers\" :key=\"index\" class=\"marker-box\">\r\n\t\t\t\t\t<li>lat: <strong>{{m.position.lat}}</strong></li>\r\n\t\t\t\t\t<li>lng: <strong>{{m.position.lng}}</strong></li>\r\n\t\t\t\t\t<li>opacity: <strong>{{m.opacity}}</strong></li>\r\n\t\t\t\t\t<li>enabled: <input type=\"checkbox\" v-model=\"m.enabled\" number></li>\r\n\t\t\t\t\t<li>draggable: <input type=\"checkbox\" v-model=\"m.draggable\" number></li>\r\n\t\t\t\t\t<li>clicked: <strong>{{m.clicked}}</strong></li>\r\n\t\t\t\t\t<li>right: clicked <strong>{{m.rightClicked}}</strong></li>\r\n\t\t\t\t\t<li>drag-ended: <strong>{{m.dragended}}</strong></li>\r\n\t\t\t\t\t<li>open info window: <input type=\"checkbox\" v-model=\"m.ifw\" number></li>\r\n\t\t\t\t\t<li>infoWIndow text: <input type=\"text\" v-model=\"m.ifw2text\"></li>\r\n\t\t\t\t\t<li><button @click=\"markers.splice(markers.indexOf(m), 1)\">delete me</button></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t<gmap-map \r\n\t\t\t\t:center=\"center\" \r\n\t\t\t\t:zoom=\"zoom\" \r\n\t\t\t\t:map-type-id=\"mapType\" \r\n\t\t\t\t:options=\"{styles: mapStyles, scrollwheel: scrollwheel, gestureHandling:'cooperative'}\" \r\n\t\t\t\t@rightclick=\"mapRclicked\" \r\n\t\t\t\t@drag=\"drag++\" \r\n\t\t\t\t@click=\"mapClickedCount++\" \r\n\t\t\t\tclass=\"map-panel box grow\" \r\n\t\t\t\t@zoom_changed=\"update('zoom', $event)\" \r\n\t\t\t\t@center_changed=\"update('reportedCenter', $event)\"\r\n\t\t\t\t@maptypeid_changed=\"update('mapType', $event)\"\r\n\t\t\t\t@bounds_changed=\"update('bounds', $event)\"\r\n\t\t\t>\r\n\t\t\t\t<gmap-cluster :grid-size=\"gridSize\" v-if=\"clustering\">\r\n\t\t\t\t\t<gmap-marker v-for=\"m in activeMarkers\" :key=\"m.id\" v-if=\"m.enabled\" \r\n\t\t\t\t\t\t:position=\"m.position\" \r\n\t\t\t\t\t\t:opacity=\"m.opacity\" \r\n\t\t\t\t\t\t:draggable=\"m.draggable\" \r\n\t\t\t\t\t\t@click=\"m.clicked++\" \r\n\t\t\t\t\t\t@rightclick=\"m.rightClicked++\" \r\n\t\t\t\t\t\t@dragend=\"m.dragended++\"\r\n\t\t\t\t\t\t@position_changed=\"updateChild(m, 'position', $event)\" \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<gmap-info-window :opened=\"m.ifw\">{{m.ifw2text}}</gmap-info-window>\r\n\t\t\t\t\t</gmap-marker>\r\n\t\t\t\t</gmap-cluster>\r\n\t\t\t\t<div v-if=\"!clustering\">\r\n\t\t\t\t\t<gmap-marker v-for=\"m in activeMarkers\" :key=\"m.id\" v-if=\"m.enabled\"\r\n\t\t\t\t\t\t:position=\"m.position\" \r\n\t\t\t\t\t\t:opacity=\"m.opacity\"\r\n\t\t\t\t\t\t:draggable=\"m.draggable\" \r\n\t\t\t\t\t\t@click=\"m.clicked++\" \r\n\t\t\t\t\t\t@rightclick=\"m.rightClicked++\" \r\n\t\t\t\t\t\t@dragend=\"m.dragended++\" \r\n\t\t\t\t\t\t@position_changed=\"updateChild(m, 'position', $event)\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<gmap-info-window :opened=\"m.ifw\">{{m.ifw2text}}</gmap-info-window>\r\n\t\t\t\t\t</gmap-marker>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<gmap-info-window :position=\"reportedCenter\" :opened=\"ifw\">\r\n\t\t\t\t\tTo show you the bindings are working\r\n\t\t\t\t\t<br/>I will stay on the center of the screen \r\n\t\t\t\t\t<br/>whatever you do.<br>\r\n\t\t\t\t\t<br/>Map clicked: <b>{{mapClickedCount}}</b>\r\n\t\t\t\t</gmap-info-window>\r\n\r\n\t\t\t\t<gmap-info-window :position=\"reportedCenter\" :opened=\"ifw2\">{{ifw2text}}</gmap-info-window>\r\n\r\n\t\t\t\t<gmap-polyline v-if=\"plvisible\" \r\n\t\t\t\t\t:path=\"plPath\" \r\n\t\t\t\t\t:editable=\"pleditable\" \r\n\t\t\t\t\t:draggable=\"true\" \r\n\t\t\t\t\t:options=\"{geodesic:true, strokeColor:'#FF0000'}\" \r\n\t\t\t\t\t@path_changed=\"updatePolylinePath($event)\"\r\n\t\t\t\t></gmap-polyline>\r\n\t\t\t\t<gmap-polygon v-if=\"pgvisible\"\r\n\t\t\t\t\t:paths=\"pgPath\" \r\n\t\t\t\t\t:editable=\"true\" \r\n\t\t\t\t\t:options=\"{geodesic:true, strokeColor:'#FF0000', fillColor:'#000000'}\"\r\n\t\t\t\t\t@paths_changed=\"updatePolygonPaths($event)\"\r\n\t\t\t\t></gmap-polygon>\r\n\t\t\t\t<gmap-circle v-if=\"displayCircle\" \r\n\t\t\t\t\t:bounds=\"circleBounds\" \r\n\t\t\t\t\t:center=\"reportedCenter\" \r\n\t\t\t\t\t:radius=\"100000\" \r\n\t\t\t\t\t:options=\"{editable: true}\" \r\n\t\t\t\t\t@radius_changed=\"updateCircle('radius', $event)\" \r\n\t\t\t\t\t@bounds_changed=\"updateCircle('bounds', $event)\"\r\n\t\t\t\t></gmap-circle>\r\n\t\t\t\t<gmap-rectangle v-if=\"displayRectangle\" \r\n\t\t\t\t\t:bounds=\"rectangleBounds\" \r\n\t\t\t\t\t:options=\"{editable: true}\" \r\n\t\t\t\t\t@bounds_changed=\"updateRectangle('bounds', $event)\"\r\n\t\t\t\t></gmap-rectangle>\r\n\t\t\t</gmap-map>\r\n\t\t</div>-->\r\n\r\n\t\t<h4><a href=\"https://github.com/xkjyeah/vue-google-maps\" target=\"_blank\"><i class=\"mdi mdi-link-variant\"></i> reference</a></h4>\t\r\n\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport * as VueGoogleMaps from 'vue2-google-maps'\r\n\r\nexport default {\r\n\tname: 'GMapsPage',\r\n\tdata () {\r\n\t\treturn {\r\n\t\t\tstart: null,\r\n\t\t\tend: null,\r\n\t\t\tlastId: 1,\r\n\t\t\tcenter: {\r\n\t\t\t\tlat: 48.8538302,\r\n\t\t\t\tlng: 2.2982161\r\n\t\t\t},\r\n\t\t\treportedCenter: {\r\n\t\t\t\tlat: 48.8538302,\r\n\t\t\t\tlng: 2.2982161\r\n\t\t\t},\r\n\t\t\tmapBounds: {},\r\n\t\t\tclustering: true,\r\n\t\t\tzoom: 7,\r\n\t\t\tgridSize: 50,\r\n\t\t\tmapType: 'terrain',\r\n\t\t\tmarkers: [],\r\n\t\t\tmarkersEven: false,\r\n\t\t\tdrag: 0,\r\n\t\t\tmapClickedCount: 0,\r\n\t\t\tifw: true,\r\n\t\t\tifw2: false,\r\n\t\t\tifw2text: 'You can also use the content prop to set your modal',\r\n\t\t\tmapStyle: 'green',\r\n\t\t\tcircleBounds: {},\r\n\t\t\tdisplayCircle: false,\r\n\t\t\tdisplayRectangle: false,\r\n\t\t\trectangleBounds: {\r\n\t\t\t\tnorth: 33.685,\r\n\t\t\t\tsouth: 50.671,\r\n\t\t\t\teast: -70.234,\r\n\t\t\t\twest: -116.251\r\n\t\t\t},\r\n\t\t\toriginalPlPath: [\r\n\t\t\t\t{ lat: 37.772, lng: -122.214 }, \r\n\t\t\t\t{ lat: 21.291, lng: -157.821 }, \r\n\t\t\t\t{ lat: -18.142, lng: 178.431 }, \r\n\t\t\t\t{ lat: -27.467, lng: 153.027 }\r\n\t\t\t],\r\n\t\t\tplPath: [\r\n\t\t\t\t{ lat: 37.772, lng: -122.214 }, \r\n\t\t\t\t{ lat: 21.291, lng: -157.821 }, \r\n\t\t\t\t{ lat: -18.142, lng: 178.431 }, \r\n\t\t\t\t{ lat: -27.467, lng: 153.027 }\r\n\t\t\t],\r\n\t\t\tpleditable: true,\r\n\t\t\tplvisible: false,\r\n\t\t\tpgvisible: false,\r\n\t\t\tpgPath: [\r\n\t\t\t\t[\r\n\t\t\t\t\t{ lat: 38.872886, lng: -77.054720 },\r\n\t\t\t\t\t{ lat: 38.872602, lng: -77.058046 },\r\n\t\t\t\t\t{ lat: 38.870080, lng: -77.058604 },\r\n\t\t\t\t\t{ lat: 38.868894, lng: -77.055664 },\r\n\t\t\t\t\t{ lat: 38.870598, lng: -77.053346 }\r\n\t\t\t\t],\r\n\t\t\t\t[\r\n\t\t\t\t\t{ lat: 38.871684, lng: -77.056780 },\r\n\t\t\t\t\t{ lat: 38.871867, lng: -77.055449 },\r\n\t\t\t\t\t{ lat: 38.870915, lng: -77.054891 },\r\n\t\t\t\t\t{ lat: 38.870113, lng: -77.055836 },\r\n\t\t\t\t\t{ lat: 38.870581, lng: -77.057037 }\r\n\t\t\t\t]\r\n\t\t\t],\r\n\t\t\topgPath: [\r\n\t\t\t\t[\r\n\t\t\t\t\t{ lat: 38.872886, lng: -77.054720 },\r\n\t\t\t\t\t{ lat: 38.872602, lng: -77.058046 },\r\n\t\t\t\t\t{ lat: 38.870080, lng: -77.058604 },\r\n\t\t\t\t\t{ lat: 38.868894, lng: -77.055664 },\r\n\t\t\t\t\t{ lat: 38.870598, lng: -77.053346 }\r\n\t\t\t\t],\r\n\t\t\t\t[\r\n\t\t\t\t\t{ lat: 38.871684, lng: -77.056780 },\r\n\t\t\t\t\t{ lat: 38.871867, lng: -77.055449 },\r\n\t\t\t\t\t{ lat: 38.870915, lng: -77.054891 },\r\n\t\t\t\t\t{ lat: 38.870113, lng: -77.055836 },\r\n\t\t\t\t\t{ lat: 38.870581, lng: -77.057037 }\r\n\t\t\t\t]\r\n\t\t\t],\r\n\t\t\tscrollwheel: true\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\tcurvedPath () {\r\n\t\t\tif (this.start && this.end) {\r\n\t\t\t\treturn _.range(100).map(i => {\r\n\t\t\t\t\tconst tick = i / 99\r\n\r\n\t\t\t\t\t/* Bezier curve -- set up the control points */\r\n\t\t\t\t\tconst dlat = this.end.latLng.lat() - this.start.latLng.lat()\r\n\t\t\t\t\tconst dlng = this.end.latLng.lng() - this.start.latLng.lng()\r\n\r\n\t\t\t\t\tconst cp1 = {\r\n\t\t\t\t\t\tlat: this.start.latLng.lat() + 0.33 * dlat + 0.33 * dlng,\r\n\t\t\t\t\t\tlng: this.start.latLng.lng() - 0.33 * dlat + 0.33 * dlng,\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst cp2 = {\r\n\t\t\t\t\t\tlat: this.end.latLng.lat() - 0.33 * dlat + 0.33 * dlng,\r\n\t\t\t\t\t\tlng: this.end.latLng.lng() - 0.33 * dlat - 0.33 * dlng,\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* Bezier curve formula */\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tlat:\r\n\t\t\t\t\t\t\t(tick * tick * tick) * this.start.latLng.lat() +\r\n\t\t\t\t\t\t\t3 * ((1 - tick) * tick * tick) * cp1.lat +\r\n\t\t\t\t\t\t\t3 * ((1 - tick) * (1 - tick) * tick) * cp2.lat +\r\n\t\t\t\t\t\t\t((1 - tick) * (1 - tick) * (1 - tick)) * this.end.latLng.lat(),\r\n\t\t\t\t\t\tlng:\r\n\t\t\t\t\t\t\t(tick * tick * tick) * this.start.latLng.lng() +\r\n\t\t\t\t\t\t\t3 * ((1 - tick) * tick * tick) * cp1.lng +\r\n\t\t\t\t\t\t\t3 * ((1 - tick) * (1 - tick) * tick) * cp2.lng +\r\n\t\t\t\t\t\t\t((1 - tick) * (1 - tick) * (1 - tick)) * this.end.latLng.lng(),\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tactiveMarkers() {\r\n\t\t\tif (this.markersEven) {\r\n\t\t\t\treturn this.markers.filter(\r\n\t\t\t\t\t(v, k) => k % 2 == 0\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\treturn this.markers\r\n\t\t\t}\r\n\t\t},\r\n\t\tmapStyles() {\r\n\t\t\tswitch (this.mapStyle) {\r\n\t\t\t\tcase 'normal':\r\n\t\t\t\t\treturn []\r\n\t\t\t\tcase 'red':\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t\t\t{ hue: '#890000' },\r\n\t\t\t\t\t\t\t\t{ visibility: 'simplified' },\r\n\t\t\t\t\t\t\t\t{ gamma: 0.5 },\r\n\t\t\t\t\t\t\t\t{ weight: 0.5 }\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\telementType: 'labels',\r\n\t\t\t\t\t\t\tstylers: [ { visibility: 'off' } ]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfeatureType: 'water',\r\n\t\t\t\t\t\t\tstylers: [ { color: '#890000' } ]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t];\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstylers: [{ hue: '#899999' }, { visibility: 'on' }, { gamma: 0.5 }, { weight: 0.5 }]\r\n\t\t\t\t\t\t}, \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfeatureType: 'road',\r\n\t\t\t\t\t\t\tstylers: [{ visibility: 'off' }]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfeatureType: 'transit.line',\r\n\t\t\t\t\t\t\tstylers: [{ color: '#FF0000' }]\r\n\t\t\t\t\t\t}, \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfeatureType: 'poi',\r\n\t\t\t\t\t\t\telementType: 'labels.icon',\r\n\t\t\t\t\t\t\tstylers: [{ visibility: 'on' }, { weight: 10 }]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfeatureType: 'water',\r\n\t\t\t\t\t\t\tstylers: [{ color: '#8900FF' }, { weight: 9999900000 }, ]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tclicked (e) {\r\n\t\t\tif (!this.start && !this.end) {\r\n\t\t\t\tthis.start = {\r\n\t\t\t\t\tlatLng: e.latLng\r\n\t\t\t\t}\r\n\t\t\t} else if (this.start && !this.end) {\r\n\t\t\t\tthis.end = {\r\n\t\t\t\t\tlatLng: e.latLng\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.start = {\r\n\t\t\t\t\tlatLng: e.latLng\r\n\t\t\t\t}\r\n\t\t\t\tthis.end = null\r\n\t\t\t}\r\n\t\t},\r\n\t\tmapClicked(mouseArgs) {\r\n\t\t\tconsole.log('map clicked', mouseArgs); // eslint-disable-line no-console\r\n\t\t},\r\n\t\tmapRclicked(mouseArgs) {\r\n\t\t\tconst createdMarker = this.addMarker()\r\n\t\t\tcreatedMarker.position.lat = mouseArgs.latLng.lat()\r\n\t\t\tcreatedMarker.position.lng = mouseArgs.latLng.lng()\r\n\t\t},\r\n\t\taddMarker: function addMarker() {\r\n\t\t\tthis.lastId++;\r\n\t\t\tthis.markers.push({\r\n\t\t\t\tid: this.lastId,\r\n\t\t\t\tposition: { lat: 48.8538302, lng: 2.2982161 },\r\n\t\t\t\topacity: 1,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tclicked: 0,\r\n\t\t\t\trightClicked: 0,\r\n\t\t\t\tdragended: 0,\r\n\t\t\t\tifw: true,\r\n\t\t\t\tifw2text: 'This text is bad please change me :( '\r\n\t\t\t})\r\n\t\t\treturn this.markers[this.markers.length - 1]\r\n\t\t},\r\n\t\tresetPlPath() {\r\n\t\t\tthis.plPath = this.originalPlPath;\r\n\t\t},\r\n\t\tupdate(field, event) {\r\n\t\t\tif (field === 'reportedCenter') {\r\n\t\t\t\t// N.B. It is dangerous to update this.center\r\n\t\t\t\t// Because the center reported by Google Maps is not exactly\r\n\t\t\t\t// the same as the center you pass it.\r\n\t\t\t\t// Instead we update this.center only when the input field is changed.\r\n\t\t\t\tthis.reportedCenter = { lat: event.lat(), lng: event.lng() }\r\n\t\t\t\t// If you wish to test the problem out for yourself, uncomment the following\r\n\t\t\t\t// and see how your browser begins to hang:\r\n\t\t\t\t// this.center = _.clone(this.reportedCenter)\r\n\t\t\t} else if (field === 'bounds') {\r\n\t\t\t\tthis.mapBounds = event\r\n\t\t\t} else {\r\n\t\t\t\tthis.$set(this, field, event)\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateChild(object, field, event) {\r\n\t\t\tif (field === 'position') {\r\n\t\t\t\tobject.position = { lat: event.lat(), lng: event.lng() }\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdatePolygonPaths(paths) { //eslint-disable-line no-unused-vars\r\n\t\t\tconsole.log('updatePolygonPaths', paths)\r\n\t\t},\r\n\t\tupdatePolylinePath(paths) { //eslint-disable-line no-unused-vars\r\n\t\t\tconsole.log('updatePolylinePath', paths)\r\n\t\t},\r\n\t\tupdateCircle(prop, value) {\r\n\t\t\tif (prop === 'radius') {\r\n\t\t\t\tthis.radius = value\r\n\t\t\t} else if (prop === 'bounds') {\r\n\t\t\t\tthis.circleBounds = value\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdateRectangle(prop, value) {\r\n\t\t\tif (prop === 'bounds') {\r\n\t\t\t\tthis.rectangleBounds = value\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdatePlace(place) {\r\n\t\t\tif (place && place.geometry && place.geometry.location) {\r\n\t\t\t\tvar marker = this.addMarker()\r\n\t\t\t\tmarker.position.lat = place.geometry.location.lat()\r\n\t\t\t\tmarker.position.lng = place.geometry.location.lng()\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomponents: {\r\n\t\t'ground-overlay': {\r\n\t\t\trender() {\r\n\t\t\t\treturn '';\r\n\t\t\t},\r\n\t\t\tmixins: [VueGoogleMaps.MapElementMixin],\r\n\t\t\tprops: ['source', 'bounds', 'opacity'],\r\n\t\t\tdeferredReady: function() {\r\n\t\t\t\tthis.$overlay = new google.maps.GroundOverlay(\r\n\t\t\t\t\tthis.source,\r\n\t\t\t\t\tthis.bounds\r\n\t\t\t\t)\r\n\t\t\t\tthis.$overlay.setOpacity(this.opacity)\r\n\t\t\t\tthis.$overlay.setMap(this.$map)\r\n\t\t\t},\r\n\t\t\tdestroyed: function() {\r\n\t\t\t\tif(this.$overlay) this.$overlay.setMap(null)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../../../assets/scss/_variables';\r\n\r\n.page-gmaps {\r\n\t.map-app {\r\n\t\tmax-height: 500px;\r\n\r\n\t\t.settings-panel {\r\n\t\t\tbox-sizing: border-box;\r\n\t\t\tmax-width: 400px;\r\n\r\n\t\t\tul, li, select, button {\r\n\t\t\t\tfont-size: 10px;\r\n\t\t\t}\r\n\r\n\t\t\th3 {\r\n\t\t\t\tmargin-bottom: 0px;\r\n\t\t\t}\r\n\t\t\tul {\r\n\t\t\t\tmargin-top: 15px;\r\n\t\t\t}\r\n\t\t\t[type=\"checkbox\"] {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\ttop: 2px;\r\n\t\t\t}\r\n\t\t\tli {\r\n\t\t\t\tmargin-bottom: 2px;\r\n\t\t\t}\r\n\t\t\tpre {\r\n\t\t\t\tmax-height: 200px;\r\n\t\t\t\toverflow: auto;\r\n\t\t\t}\r\n\r\n\t\t\t.marker-box {\r\n\t\t\t\tbackground: $background-color;\r\n\t\t\t\tpadding: 10px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tlist-style: none;\r\n\r\n\t\t\t\tli, select, button {\r\n\t\t\t\t\tfont-size: 14px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n@media (max-width: 768px) {\r\n\t.page-gmaps {\r\n\t\t.map-app {\r\n\t\t\tmax-height: inherit !important;\r\n\t\t\tdisplay: block;\r\n\r\n\t\t\t.settings-panel, .map-panel {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmax-width: 100%;\r\n\t\t\t\theight: 400px;\r\n\t\t\t}\r\n\t\t\t.settings-panel {\r\n\t\t\t\toverflow: auto;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n.page-gmaps {\r\n\t.map-app {\r\n\r\n\t\t.settings-panel {\r\n\r\n\t\t\t[type=\"text\"] { \r\n\t\t\t\tbackground-color: rgba(255, 255, 255, 0.2);\r\n\t\t\t\tborder: 1px solid rgba(255, 255, 255, 0.3);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n.gm-style .gm-style-iw {\r\n\tcolor: black;\r\n}\r\n</style>\r\n\r\n\r\n"]}]}