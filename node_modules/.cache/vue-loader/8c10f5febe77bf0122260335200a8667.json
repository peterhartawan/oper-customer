{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/tasktemplate/template-list.vue?vue&type=style&index=0&id=62e31446&lang=scss&scoped=true&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/tasktemplate/template-list.vue","mtime":1628175042630},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '../../../assets/scss/variables';\n\n.table-box {\n    overflow: auto;\n}\n.el-pagination {\n    padding-top: 20px;\n}\n.el-input {\n    width: 300px !important;\n}\n.card-base {\n    padding: 20px;\n}\n.el-row {\n    padding: 0px 10px;\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n.el-col {\n    border-radius: 5px;\n}\n",{"version":3,"sources":["template-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"template-list.vue","sourceRoot":"src/views/pages/tasktemplate","sourcesContent":["<template>\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\n        <div class=\"card-base card-shadow--medium bg-white\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"16\">\n                    <el-button\n                            @click=\"onBackButton\"\n                    >\n                        Back\n                    </el-button>\n                    <el-button @click=\"newTemplate\" type=\"primary\">\n                        + New Template\n                    </el-button>\n                </el-col>\n            </el-row>\n\n            <el-row>\n                <el-col :span=\"24\">\n                    <el-table\n                            :data=\"listData\"\n                            stripe\n                            style=\"width: 100%\">\n                        <el-table-column\n                                type=\"index\"\n                                label=\"No\"\n                                :index=\"indexMethod\"\n                                width=\"200\">\n                        </el-table-column>\n                        <el-table-column\n                                prop=\"task_template_name\"\n                                label=\"Template Name\">\n                        </el-table-column>\n                        <el-table-column\n                                fixed=\"right\"\n                                width=\"120\">\n                            <template slot-scope=\"scope\">\n                                <el-button\n                                        type=\"danger\"\n                                        icon=\"el-icon-delete\"\n                                        size=\"mini\"\n                                        @click=\"delButton(scope.row.task_template_id)\"\n                                        style=\"margin-top: 10px;\">\n                                </el-button>\n                                <el-button\n                                        type=\"success\"\n                                        icon=\"el-icon-edit\"\n                                        @click=\"handleEdit(scope.row.task_template_id)\"\n                                        size=\"mini\"></el-button>\n                            </template>\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n\n            <el-row>\n                <el-col :span=\"24\">\n                    <div class=\"grid-content\">\n                        <el-pagination\n                                background\n                                layout=\"prev, pager, next\"\n                                @current-change=\"handlePageChange\"\n                                :total=\"paginat.totalP\">\n\n                        </el-pagination>\n                    </div>\n                </el-col>\n            </el-row>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import router from '../../../router'\n    import { mapGetters } from 'vuex'\n    import * as getter from '../../../store/getters-types'\n    import * as action from '../../../store/action-types'\n    import * as mutation from '../../../store/mutation-types'\n    import Swal from 'sweetalert2'\n\n    export default {\n        name: 'Table',\n        data() {\n            return {\n                currentPage: 1,\n                input:'',\n                buttonStatus: null,\n                affixEnabled: true,\n                indexT: 1\n\n            }\n        },\n        computed: {\n            ...mapGetters({\n                listData : getter.GET_TEMPLATE_LIST,\n                paginate : getter.GET_TEMPLATE_PAGINATE,\n                identer  : getter.GET_ID_ENTERPRISE\n            }),\n            paginat(){\n                return this.paginate\n            },\n            indexTam(){\n                return this.indexT\n            }\n        },\n        created(){\n            (JSON.parse(localStorage.getItem('user')).idrole === 2) ? this.buttonStatus = false : this.buttonStatus = true;\n            let obj = {\n                    id : this.identer,\n                    page: this.currentPage\n            };\n            this.$store.dispatch(action.TEMPLATE_LIST, obj)\n        },\n        methods: {\n            newTemplate()   {\n                this.$router.replace('/new-template-task')\n                this.$store.commit(mutation.SET_ID_ENTERPRISE, this.identer)\n            },\n            handlePageChange(page) {\n                this.currentPage = page;\n                let obj = {\n                    id : this.identer,\n                    page: this.currentPage\n                };\n                this.$store.dispatch( action.TEMPLATE_LIST, obj )\n            },\n            delButton(e){\n                let obj = {\n                    idList: e,\n                    id: this.identer,\n                    currPage: this.currentPage\n                }\n                Swal.fire({\n                    title: 'Are you sure?',\n                    text: \"You won't be able to revert this!\",\n                    type: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: 'Yes, delete it!'\n                }).then((result) => {\n                    if (result.value) {\n                        this.$store.dispatch(action.DELETE_TEMPLATE, obj)\n                    }\n                })\n            },\n            indexMethod(index) {\n                return index + this.paginat.fromP;\n            },\n            handleEdit(e){\n                this.$router.replace('/edit-template-task')\n                this.$store.commit(mutation.SET_ID_ENTERPRISE, e)\n            },\n            onBackButton() {\n                if(this.buttonStatus){\n                    router.replace(`/detail-enterprise/${this.identer}`)\n                }else {\n                    router.replace(`/employee/inprogress`)\n                }\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    @import '../../../assets/scss/variables';\n\n    .table-box {\n        overflow: auto;\n    }\n    .el-pagination {\n        padding-top: 20px;\n    }\n    .el-input {\n        width: 300px !important;\n    }\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n</style>\n\n"]}]}