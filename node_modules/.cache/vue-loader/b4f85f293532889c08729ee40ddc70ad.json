{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/order-client/new-order.vue?vue&type=template&id=12f8dc81&scoped=true&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/order-client/new-order.vue","mtime":1628175042629},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"page-table scrollable only-y\",\n      attrs: { id: \"affix-container\" }\n    },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"card-base card-shadow--medium bg-white\" },\n        [\n          _c(\n            \"el-form\",\n            { ref: \"form\", attrs: { rules: _vm.rules, model: _vm.form } },\n            [\n              _c(\n                \"el-row\",\n                [\n                  _c(\"el-col\", { attrs: { span: 24 } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"grid-content\" },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"booking_time\" } },\n                          [\n                            _c(\"el-date-picker\", {\n                              attrs: {\n                                type: \"datetime\",\n                                placeholder: \"Booking Time\",\n                                \"value-format\": \"yyyy-MM-dd HH:mm:ss\",\n                                size: \"large\",\n                                \"prefix-icon\": \"el-icon-date\"\n                              },\n                              model: {\n                                value: _vm.form.booking_time,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.form, \"booking_time\", $$v)\n                                },\n                                expression: \"form.booking_time\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 20 } },\n                [\n                  _c(\"el-col\", { attrs: { span: 24 } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"grid-content\" },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"message\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: {\n                                type: \"textarea\",\n                                placeholder: \"Order Message\",\n                                autosize: { minRows: 5, maxRows: 7 }\n                              },\n                              model: {\n                                value: _vm.form.message,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.form, \"message\", $$v)\n                                },\n                                expression: \"form.message\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 24 } },\n                    [_c(\"el-col\", [_c(\"p\", [_vm._v(\"User\")]), _c(\"hr\")])],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 20 } },\n                [\n                  _c(\"el-col\", { attrs: { span: 12 } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"grid-content\" },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"user_fullname\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"Name\" },\n                              model: {\n                                value: _vm.form.user_fullname,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.form, \"user_fullname\", $$v)\n                                },\n                                expression: \"form.user_fullname\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { prop: \"user_phonenumber\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { placeholder: \"Phone\" },\n                            nativeOn: {\n                              keypress: function($event) {\n                                return _vm.isNumber.apply(null, arguments)\n                              }\n                            },\n                            model: {\n                              value: _vm.form.user_phonenumber,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"user_phonenumber\", $$v)\n                              },\n                              expression: \"form.user_phonenumber\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 24 } },\n                    [_c(\"el-col\", [_c(\"p\", [_vm._v(\"Locations\")]), _c(\"hr\")])],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 20 } },\n                [\n                  _c(\"el-col\", { attrs: { span: 12 } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"grid-content\" },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"origin_latitude\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                attrs: { placeholder: \"Select Origin\" },\n                                on: { change: _vm.originL },\n                                model: {\n                                  value: _vm.origin,\n                                  callback: function($$v) {\n                                    _vm.origin = $$v\n                                  },\n                                  expression: \"origin\"\n                                }\n                              },\n                              _vm._l(_vm.options, function(item) {\n                                return _c(\"el-option\", {\n                                  key: item.value,\n                                  attrs: { label: item.name, value: item }\n                                })\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { prop: \"destination_latitude\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"Select Destination\" },\n                              on: { change: _vm.destionationL },\n                              model: {\n                                value: _vm.destination,\n                                callback: function($$v) {\n                                  _vm.destination = $$v\n                                },\n                                expression: \"destination\"\n                              }\n                            },\n                            _vm._l(_vm.options, function(item) {\n                              return _c(\"el-option\", {\n                                key: item.value,\n                                attrs: { label: item.name, value: item }\n                              })\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 24 } },\n                    [_c(\"el-col\", [_c(\"p\", [_vm._v(\"Vehicle\")]), _c(\"hr\")])],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 20 } },\n                [\n                  _c(\"el-col\", { attrs: { span: 8 } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"grid-content\" },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"vehicle_brand\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                staticStyle: { width: \"100%\" },\n                                attrs: {\n                                  filterable: \"\",\n                                  placeholder: \"Vehicle Brand\"\n                                },\n                                on: { change: _vm.vehicleBrand },\n                                model: {\n                                  value: _vm.form.vehicle_brand,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form, \"vehicle_brand\", $$v)\n                                  },\n                                  expression: \"form.vehicle_brand\"\n                                }\n                              },\n                              _vm._l(_vm.vehicle_brands, function(item) {\n                                return _c(\"el-option\", {\n                                  key: item.id,\n                                  attrs: {\n                                    label: item.brand_name,\n                                    value: item.id\n                                  }\n                                })\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\"el-col\", { attrs: { span: 8 } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"grid-content\" },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"vehicle_type\" } },\n                          [\n                            _c(\"el-autocomplete\", {\n                              staticClass: \"inline-input\",\n                              staticStyle: { width: \"100%\" },\n                              attrs: {\n                                \"fetch-suggestions\": _vm.querySearch,\n                                placeholder: \"Vehicle Type\",\n                                \"trigger-on-focus\": false\n                              },\n                              model: {\n                                value: _vm.form.vehicle_type,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.form, \"vehicle_type\", $$v)\n                                },\n                                expression: \"form.vehicle_type\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\"el-col\", { attrs: { span: 8 } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"grid-content\" },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"vehicle_transmission\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                staticStyle: { width: \"100%\" },\n                                attrs: {\n                                  placeholder: \"Select Vehicle Transmission\"\n                                },\n                                model: {\n                                  value: _vm.form.vehicle_transmission,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.form,\n                                      \"vehicle_transmission\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"form.vehicle_transmission\"\n                                }\n                              },\n                              [\n                                _c(\"el-option\", {\n                                  attrs: { label: \"Manual\", value: \"Manual\" }\n                                }),\n                                _c(\"el-option\", {\n                                  attrs: {\n                                    label: \"Automatic\",\n                                    value: \"Automatic\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 20 } },\n                [\n                  _c(\"el-col\", { attrs: { span: 8 } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"grid-content\" },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"client_vehicle_license\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"Vehicle Number\" },\n                              model: {\n                                value: _vm.form.client_vehicle_license,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.form,\n                                    \"client_vehicle_license\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"form.client_vehicle_license\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { prop: \"vehicle_owner\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { placeholder: \"Vehicle Owner / License\" },\n                            model: {\n                              value: _vm.form.vehicle_owner,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"vehicle_owner\", $$v)\n                              },\n                              expression: \"form.vehicle_owner\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { prop: \"vehicle_year\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { placeholder: \"Vehicle Year\" },\n                            nativeOn: {\n                              keypress: function($event) {\n                                return _vm.isNumber.apply(null, arguments)\n                              }\n                            },\n                            model: {\n                              value: _vm.form.vehicle_year,\n                              callback: function($$v) {\n                                _vm.$set(_vm.form, \"vehicle_year\", $$v)\n                              },\n                              expression: \"form.vehicle_year\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 24 } },\n                    [\n                      _c(\"el-col\", [\n                        _c(\"p\", [_vm._v(\"Template & Task\")]),\n                        _c(\"hr\")\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 20 } },\n                [\n                  _c(\"el-col\", { attrs: { span: 24 } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"grid-content\" },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"task_template_id\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                attrs: {\n                                  \"remote-method\": _vm.remoteMethod,\n                                  placeholder: \"Select Template\"\n                                },\n                                on: { change: _vm.taskT },\n                                model: {\n                                  value: _vm.form.task_template_id,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form, \"task_template_id\", $$v)\n                                  },\n                                  expression: \"form.task_template_id\"\n                                }\n                              },\n                              _vm._l(_vm.templateTasks, function(item) {\n                                return _c(\"el-option\", {\n                                  key: item.task_template_id,\n                                  attrs: {\n                                    label: item.task_template_name,\n                                    value: item.task_template_id\n                                  }\n                                })\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 24 } },\n                    [\n                      _c(\"el-col\", [\n                        _c(\"p\", [\n                          _c(\"b\", [_vm._v(\" Description \")]),\n                          _vm.data != null\n                            ? _c(\n                                \"span\",\n                                { staticStyle: { \"padding-left\": \"1.8em\" } },\n                                [\n                                  _vm._v(\n                                    \" :   \" +\n                                      _vm._s(_vm.data.task_template_description)\n                                  )\n                                ]\n                              )\n                            : _vm._e()\n                        ])\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 24 } },\n                    [\n                      _c(\n                        \"el-table\",\n                        {\n                          staticStyle: { width: \"100%\" },\n                          attrs: { data: _vm.dataTAsk, stripe: \"\" }\n                        },\n                        [\n                          _c(\"el-table-column\", {\n                            attrs: { prop: \"name\", label: \"Task Name\" }\n                          }),\n                          _c(\"el-table-column\", {\n                            attrs: {\n                              prop: \"description\",\n                              label: \"Task Description\"\n                            }\n                          }),\n                          _c(\"el-table-column\", {\n                            attrs: { prop: \"updated_at\", label: \"Last Update\" }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    {\n                      staticStyle: {\n                        display: \"flex\",\n                        \"justify-content\": \"flex-end\",\n                        \"margin-top\": \"20px\"\n                      },\n                      attrs: { lg: { offset: 18, span: 6 } }\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        { staticClass: \"grid-content\" },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            [\n                              _c(\"el-button\", { on: { click: _vm.isCancel } }, [\n                                _vm._v(\"Cancel\")\n                              ]),\n                              _c(\n                                \"el-button\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"loading\",\n                                      rawName: \"v-loading.fullscreen.lock\",\n                                      value: _vm.buttonStatuz,\n                                      expression: \"buttonStatuz\",\n                                      modifiers: {\n                                        fullscreen: true,\n                                        lock: true\n                                      }\n                                    }\n                                  ],\n                                  attrs: { type: \"success\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.onSubmit(\"form\")\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"Create\")]\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}