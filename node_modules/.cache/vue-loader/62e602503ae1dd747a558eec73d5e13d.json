{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/authentication/ChangePassword.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/authentication/ChangePassword.vue","mtime":1628175042618},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '../../../assets/scss/_variables';\n\n.login-page {\n    background: $text-color;\n    margin-left: -30px;\n    margin-right: -30px;\n\n    .form-wrapper {\n        width: 100%;\n    }\n\n    .form-box {\n        width: 100%;\n        max-width: 340px;\n        padding: 30px;\n        box-sizing: border-box;\n        margin: 20px auto;\n\n        a {\n            font-size: 14px;\n            color: $text-color-accent;\n            text-decoration: none;\n            font-weight: 500;\n        }\n\n        .image-logo {\n            width: 80px;\n            margin: 0px auto;\n            margin-bottom: 30px;\n            display: block;\n        }\n        .input.invalid input {\n            border: 1px solid red;\n            background-color: #ffc9aa;\n        }\n        .input.invalid label {\n            color: red;\n        }\n\n        .login-btn ,\n        .social-btn {\n            width: 160px;\n\n            &.google {\n                margin-bottom: 10px;\n                background-color: #d73d32;\n                color: white;\n\n                &:hover {\n                    border-color: #d73d32;\n                }\n            }\n            &.facebook {\n                background-color: #3f5c9a;\n                color: white;\n\n                &:hover {\n                    border-color: #3f5c9a;\n                }\n            }\n        }\n\n        .signin-box {\n            font-size: 14px;\n        }\n    }\n}\n@media (max-width: 768px) {\n    .layout-container .container .view.login-page {\n        margin-left: -5px;\n        margin-right: -5px;\n        max-width: calc(100% + 10px);\n    }\n}\n",{"version":3,"sources":["ChangePassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChangePassword.vue","sourceRoot":"src/views/pages/authentication","sourcesContent":["<template>\n    <vue-scroll class=\"login-page align-vertical\">\n        <div class=\"form-wrapper align-vertical-middle\">\n            <div class=\"form-box card-base card-shadow--extraLarge\">\n                <img class=\"image-logo\" src=\"@/assets/images/logo.svg\" alt=\"logo\"/>\n                    <float-label class=\"styled\" :class=\"{ 'form-group--error': $v.oldPassword.$error }\">\n                        <input\n                                type=\"password\"\n                                name=\"oldPassword\"\n                                @blur=\"$v.oldPassword.$touch\"\n                                @change=\"setOldPassword($event.target.value)\"\n                                placeholder=\"Old Password\">\n                        <span v-if=\"$v.oldPassword.$error\">\n                            <p class=\"error\" style=\"color: red; margin: 4px\" v-if=\"!$v.oldPassword.required\">Field is required</p>\n                            <!--<p class=\"error\" style=\"color: red\" v-if=\"!$v.oldPassword.between\">Must be between {{$v.oldPassword.$params.between.min}} and {{$v.oldPassword.$params.between.max}}</p>-->\n                        </span>\n                            <p style=\"color: red; margin: 4px\" v-show=\"getError\">Please Input Valid Old Password</p>\n                    </float-label>\n\n                    <float-label class=\"styled\">\n                        <input\n                                type=\"password\"\n                                name=\"password\"\n                                @blur=\"$v.password.$touch\"\n                                @change=\"setPassword($event.target.value)\"\n                                placeholder=\"New Password\">\n                        <span v-if=\"$v.password.$error\">\n                            <p class=\"error\" style=\"color: red; margin: 4px\" v-if=\"!$v.password.required\">Field is required</p>\n                            <p class=\"error\" style=\"color: red; margin: 4px\" v-if=\"!$v.password.minlength\">The Password must have at least {{$v.password.$params.minLength.min}} characters.</p>\n                            <p class=\"error\" style=\"color: red; margin: 4px\" v-if=\"!$v.password.maxLength\">The Password must have at most {{$v.password.$params.maxLength.max}} characters.</p>\n                        </span>\n                    </float-label>\n\n                    <float-label class=\"styled\">\n                        <input\n                                type=\"password\"\n                                name=\"password_confirmation\"\n                                @blur=\"$v.confirmPassword.$touch\"\n                                @change=\"setConfirmPassword($event.target.value)\"\n                                placeholder=\"Confirm Password\">\n                        <span v-if=\"$v.confirmPassword.$error\">\n                            <p class=\"error\" style=\"color: red; margin: 4px\" v-if=\"!$v.confirmPassword.sameAsPassword\">Passwords must be identical.</p>\n                        </span>\n                    </float-label>\n                <div class=\"flex text-center center pt-30 pb-10\">\n                    <el-button plain\n                               size=\"small\"\n                               :loading=\"buttonStatus\"\n                               @click=\"reset\"\n                               class=\"login-btn tada animated\">\n                        SUBMIT\n                    </el-button>\n                </div>\n            </div>\n        </div>\n    </vue-scroll>\n</template>\n\n<script>\n    import { mapActions, mapGetters } from 'vuex'\n    import localAxios from '../../../services/http/client'\n    import formMixin from '../../../mixins/form.js'\n    import { required, sameAs, minLength, maxLength } from 'vuelidate/lib/validators'\n    import * as getter from '../../../store/getters-types'\n    import * as action from '../../../store/action-types'\n    import * as mutation from '../../../store/mutation-types'\n\n    export default {\n        name: 'change-password',\n        mixins: [formMixin],\n        data() {\n            return {\n                    oldPassword     : '',\n                    password        : '',\n                    confirmPassword : '',\n                    // loaded          : false\n            }\n        },\n        validations: {\n            password: {\n                required,\n                minLength: minLength(8),\n                maxLength: maxLength(16)\n            },\n            oldPassword: {\n                required,\n                // asyncValidation(v) {\n                //     if (this.loaded === false) {\n                //         console.log('Data isnt loaded yet to asyncValidation returns true');\n                //         return true;\n                //     }\n                //     return new Promise((resolve, reject) => {\n                //         console.log('Checking server for validation...');\n                //         setTimeout(() => {\n                //             console.log('Server responded to validation request');\n                //             if (v === 'foo') {\n                //                 resolve(true);\n                //             } else {\n                //                 resolve(false);\n                //             }\n                //         }, 500);\n                //     });\n                // }\n            },\n            confirmPassword: {\n                sameAsPassword: sameAs('password')\n            }\n        },\n        computed: {\n            ...mapGetters({\n                getError\t: getter.GET_ERROR,\n                buttonStatus: getter.GET_BUTTON\n            })\n        },\n        mounted(){\n            this.$store.commit(mutation.SET_ERROR, null)\n        },\n        methods: {\n            reset() {\n                const formData = {\n                    oldPassword         : this.oldPassword,\n                    password            : this.password,\n                    confirmPassword     : this.confirmPassword\n                };\n                this.$store.commit(mutation.SET_ERROR, null)\n                this.$store.commit(mutation.BUTTON_STATUS, true)\n                this.$store.dispatch(action.CHANGES_PASSWORD,formData)\n            },\n            setOldPassword(value) {\n                this.oldPassword = value\n                this.$v.oldPassword.$touch()\n            },\n            setPassword(value) {\n                this.password = value\n                this.$v.password.$touch()\n            },\n            setConfirmPassword(value) {\n                this.confirmPassword = value\n                this.$v.confirmPassword.$touch()\n            },\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    @import '../../../assets/scss/_variables';\n\n    .login-page {\n        background: $text-color;\n        margin-left: -30px;\n        margin-right: -30px;\n\n        .form-wrapper {\n            width: 100%;\n        }\n\n        .form-box {\n            width: 100%;\n            max-width: 340px;\n            padding: 30px;\n            box-sizing: border-box;\n            margin: 20px auto;\n\n            a {\n                font-size: 14px;\n                color: $text-color-accent;\n                text-decoration: none;\n                font-weight: 500;\n            }\n\n            .image-logo {\n                width: 80px;\n                margin: 0px auto;\n                margin-bottom: 30px;\n                display: block;\n            }\n            .input.invalid input {\n                border: 1px solid red;\n                background-color: #ffc9aa;\n            }\n            .input.invalid label {\n                color: red;\n            }\n\n            .login-btn ,\n            .social-btn {\n                width: 160px;\n\n                &.google {\n                    margin-bottom: 10px;\n                    background-color: #d73d32;\n                    color: white;\n\n                    &:hover {\n                        border-color: #d73d32;\n                    }\n                }\n                &.facebook {\n                    background-color: #3f5c9a;\n                    color: white;\n\n                    &:hover {\n                        border-color: #3f5c9a;\n                    }\n                }\n            }\n\n            .signin-box {\n                font-size: 14px;\n            }\n        }\n    }\n    @media (max-width: 768px) {\n        .layout-container .container .view.login-page {\n            margin-left: -5px;\n            margin-right: -5px;\n            max-width: calc(100% + 10px);\n        }\n    }\n</style>"]}]}