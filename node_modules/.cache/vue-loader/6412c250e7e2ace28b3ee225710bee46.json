{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/components/enterprise/popup_admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/components/enterprise/popup_admin.vue","mtime":1640440454956},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":1640440446305},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1640440446558},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1640440454211}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    mapGetters\n} from 'vuex'\nimport router from '../../router'\nimport * as getter from '../../store/getters-types'\nimport * as action from '../../store/action-types'\nimport Swal from 'sweetalert2'\nimport * as mutation from '../../store/mutation-types'\n\nexport default {\n    props: ['identerprise', 'picture'],\n    data() {\n        return {\n            currentPage: 1,\n            dialogTableVisible: false,\n            form: {\n                search: ''\n            }\n        };\n    },\n    computed: {\n        ...mapGetters({\n            paginate: getter.GET_PAGINATE_DISPATCHER,\n            enterprise: getter.ENTERPRISE,\n            loading: getter.GET_BUTTON,\n        }),\n        paginato() {\n            return this.paginate\n        },\n        indexTam() {\n            return this.indexT\n        },\n        admin() {\n            let idrole = JSON.parse(localStorage.getItem('user')).idrole\n            if (idrole === 1) {\n                return true\n            } else {\n                return false\n            }\n        }\n    },\n    methods: {\n        async handlePageChange(page) {\n            this.currentPage = page;\n            let obj = {\n                role: 4,\n                page: this.currentPage\n            };\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            await this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\n        },\n        addButton() {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            router.replace(`/new-admin-enterprise/${this.enterprise.identerprise}`)\n        },\n        editAdmin(e) {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$store.commit(mutation.SET_DATA_ADMIN_ENTERPRISE, e);\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\n            router.replace('/edit-admin')\n        },\n        indexMethod(index) {\n            return index + this.paginato.fromP;\n        },\n        buttonSearch() {\n            this.$store.dispatch(action.SEARCH_DISPATCHER, this.form.search)\n        },\n        async getId(id) {\n            this.dialogTableVisible = false\n            let obj = {\n                id: id.id,\n                identerprise: this.identerprise\n            }\n            Swal.fire({\n                title: 'Are you sure?',\n                text: \"You want to assign to dispatcher!\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, assign it!'\n            }).then((result) => {\n                if (result.value) {\n                    this.$store.dispatch(action.ASSIGN_TO_ENTERPRISE, obj)\n                } else {\n                    this.dialogTableVisible = true\n                }\n            })\n        },\n    },\n};\n",{"version":3,"sources":["popup_admin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"popup_admin.vue","sourceRoot":"src/components/enterprise","sourcesContent":["<template>\n<span>\n    <div class=\"hoverhand\" slot=\"reference\">\n        <div v-if='enterprise.admins[0].profile_picture == \"\" || enterprise.admins[0].profile_picture == null'>\n            <img @click=\"dialogTableVisible = admin\" src=\"../../../src/assets/images/avatar-2.jpg\" class=\"avatar\">\n        </div>\n        <div v-else>\n            <img @click=\"dialogTableVisible = admin\" :src=\"enterprise.admins[0].profile_picture\" class=\"avatar\">\n        </div>\n    </div>\n    <el-dialog :visible.sync=\"dialogTableVisible\" title=\"Admin Enterprise\">\n        <el-row>\n                <el-button type=\"danger\" style=\"background-color: #D50000;\" @click=\"addButton\">\n                    Add New Admin\n                </el-button>\n        </el-row>\n        <div v-for=\"(domain) in enterprise.admins\" :key=\"domain.key\">\n            <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n                <el-col :span=\"8\">\n                    <b>Admin Name</b>\n                    <br>\n                    {{ domain.name}}\n                </el-col>\n                <el-col :span=\"5\">\n                    <b>Admin Mobile Phone</b>\n                    <br>\n                    {{ domain.phonenumber}}\n                </el-col>\n                <el-col :span=\"9\">\n                    <b>Admin Email</b>\n                    <br>\n                    <span style=\"word-break: break-all\">{{ domain.email}}</span>\n                </el-col>\n                <el-col :span=\"2\">\n                    <el-button type=\"success\" @click=\"editAdmin(domain)\" icon=\"el-icon-edit\" style=\"padding: 12px\"></el-button>\n                </el-col>\n            </el-row>\n        </div>\n    </el-dialog>\n</span>\n</template>\n\n<script>\nimport {\n    mapGetters\n} from 'vuex'\nimport router from '../../router'\nimport * as getter from '../../store/getters-types'\nimport * as action from '../../store/action-types'\nimport Swal from 'sweetalert2'\nimport * as mutation from '../../store/mutation-types'\n\nexport default {\n    props: ['identerprise', 'picture'],\n    data() {\n        return {\n            currentPage: 1,\n            dialogTableVisible: false,\n            form: {\n                search: ''\n            }\n        };\n    },\n    computed: {\n        ...mapGetters({\n            paginate: getter.GET_PAGINATE_DISPATCHER,\n            enterprise: getter.ENTERPRISE,\n            loading: getter.GET_BUTTON,\n        }),\n        paginato() {\n            return this.paginate\n        },\n        indexTam() {\n            return this.indexT\n        },\n        admin() {\n            let idrole = JSON.parse(localStorage.getItem('user')).idrole\n            if (idrole === 1) {\n                return true\n            } else {\n                return false\n            }\n        }\n    },\n    methods: {\n        async handlePageChange(page) {\n            this.currentPage = page;\n            let obj = {\n                role: 4,\n                page: this.currentPage\n            };\n            this.$store.commit(mutation.BUTTON_STATUS, true)\n            await this.$store.dispatch(action.LIST_DISPATCHER_ROLE, obj);\n        },\n        addButton() {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            router.replace(`/new-admin-enterprise/${this.enterprise.identerprise}`)\n        },\n        editAdmin(e) {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$store.commit(mutation.SET_DATA_ADMIN_ENTERPRISE, e);\n            this.$store.commit(mutation.SET_ID_ENTERPRISE, this.enterprise.identerprise)\n            router.replace('/edit-admin')\n        },\n        indexMethod(index) {\n            return index + this.paginato.fromP;\n        },\n        buttonSearch() {\n            this.$store.dispatch(action.SEARCH_DISPATCHER, this.form.search)\n        },\n        async getId(id) {\n            this.dialogTableVisible = false\n            let obj = {\n                id: id.id,\n                identerprise: this.identerprise\n            }\n            Swal.fire({\n                title: 'Are you sure?',\n                text: \"You want to assign to dispatcher!\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, assign it!'\n            }).then((result) => {\n                if (result.value) {\n                    this.$store.dispatch(action.ASSIGN_TO_ENTERPRISE, obj)\n                } else {\n                    this.dialogTableVisible = true\n                }\n            })\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.table-box {\n    overflow: auto;\n}\n\n.el-pagination {\n    padding-top: 20px;\n}\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    padding: 0px 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.image {\n    max-width: 100%;\n    height: 150px;\n    display: block;\n}\n\n.vl {\n    border-left: 3px solid #f2f2f2;\n    height: 90%;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n.avatar {\n    border-radius: 50%;\n    max-width: 80px;\n    height: 80px;\n    border: 1px solid #fff;\n    box-sizing: border-box;\n    display: block;\n    box-shadow: 0 2px 5px 0 rgba(49, 49, 93, 0.1),\n        0 1px 2px 0 rgba(0, 0, 0, 0.08);\n    transition: box-shadow 0.5s;\n}\n\n.left {\n    text-align: left;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n}\n\n.middle {\n    margin-top: -30px\n}\n\n.drive-acount {\n    height: 39px;\n    margin-top: -11px;\n    margin-bottom: -10px;\n}\n\n.hoverhand:hover {\n    cursor: pointer;\n}\n</style>\n"]}]}