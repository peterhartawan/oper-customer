{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/enterprise/edit-admin.vue?vue&type=style&index=0&id=12ca0cf6&lang=scss&scoped=true&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/enterprise/edit-admin.vue","mtime":1640440454000},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/css-loader/index.js","mtime":1641690455692},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1641690456354},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/postcss-loader/src/index.js","mtime":1641690456676},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/sass-loader/dist/cjs.js","mtime":1641690460431},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1641690456354}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    padding: 0px 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n",{"version":3,"sources":["edit-admin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwNA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"edit-admin.vue","sourceRoot":"src/views/pages/enterprise","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-form :model=\"form\" :rules=\"rules\" ref=\"form\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"8\">\n                    <div class=\"grid-content\">\n                        <el-form-item prop=\"name\">\n                            <el-input placeholder=\"Admin Name\" v-model=\"form.name\"></el-input>\n                        </el-form-item>\n                    </div>\n                </el-col>\n                <el-col :span=\"8\">\n                    <div class=\"grid-content\">\n                        <el-form-item prop=\"phone\">\n                            <el-input v-on:keypress.native=\"isNumber\" placeholder=\"Admin Phone Number\" v-model=\"form.phone\"></el-input>\n                        </el-form-item>\n                    </div>\n                </el-col>\n                <el-col :span=\"8\">\n                    <div class=\"grid-content\">\n                        <el-form-item prop=\"email\">\n                            <el-input placeholder=\"Admin Email\" v-model=\"form.email\"></el-input>\n                        </el-form-item>\n                    </div>\n                </el-col>\n            </el-row>\n            <el-row>\n                <el-col :lg=\"2\">\n                    <el-button :loading=\"button\" @click=\"onSubmit('form')\" type=\"success\">Save</el-button>\n                </el-col>\n                <el-col :offset=\"1\" :lg=\"2\">\n                    <el-button @click=\"Cancel()\" type=\"succes\">Cancel</el-button>\n                </el-col>\n                <div v-if=\"form.status===1\">\n                    <el-col :offset=\"16\" :lg=\"2\">\n                        <el-button :loading=\"button\" type=\"danger\" @click=\"suspend\">Suspend</el-button>\n                    </el-col>\n                </div>\n                <div v-else-if=\"form.status===3\">\n                    <el-col :offset=\"13\" :lg=\"3\">\n                        <el-button :loading=\"button\" @click=\"deleteB\" type=\"danger\">Delete</el-button>\n                    </el-col>\n                    <el-col :lg=\"3\">\n                        <el-button :loading=\"button\" @click=\"activeButton\" type=\"primary\">Active</el-button>\n                    </el-col>\n                </div>\n            </el-row>\n        </el-form>\n    </div>\n</div>\n</template>\n\n<script>\nimport router from '../../../router'\nimport * as action from '../../../store/action-types'\nimport * as getter from '../../../store/getters-types'\nimport * as mutation from '../../../store/mutation-types'\nimport {\n    mapGetters\n} from 'vuex'\nimport Swal from \"sweetalert2\";\nexport default {\n    name: 'new-pic',\n    data() {\n        return {\n            form: {\n                fullscreen_loading: false,\n                name: '',\n                phone: '',\n                email: '',\n                idAdmin: '',\n                status: '',\n            },\n            payload: {\n                idadmin: \"\",\n                reason_suspend: null,\n                identerprise: \"\",\n\n            },\n            rules: {\n                name: [{\n                    required: true,\n                    message: 'Please input Activity name',\n                    trigger: ['blur', 'change']\n                }],\n                phone: [{\n                    required: true,\n                    message: 'Please input Admin Phone Number',\n                    trigger: ['blur', 'change']\n                }],\n                email: [{\n                        required: true,\n                        message: 'Please input Admin Email',\n                        trigger: ['blur', 'change']\n                    },\n                    {\n                        type: 'email',\n                        message: 'Please input valid Email',\n                        trigger: ['blur', 'change']\n                    }\n                ]\n            }\n        };\n    },\n    created() {\n        this.form.idAdmin = this.adminEnterprise.id;\n        this.form.name = this.adminEnterprise.name;\n        this.form.phone = this.adminEnterprise.phonenumber;\n        this.form.email = this.adminEnterprise.email;\n        this.form.status = this.adminEnterprise.status;\n        this.payload.idadmin = this.adminEnterprise.id;\n        this.payload.identerprise = this.identer;\n    },\n    methods: {\n        onSubmit(formName) {\n            let newForm = {\n                name: this.form.name,\n                phone: this.form.phone,\n                email: this.form.email,\n                idAdmin: this.form.idAdmin,\n                identer: this.identer\n            }\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.UPDATE_ADMIN_CLIENT, newForm)\n                } else {\n                    return false;\n                }\n            });\n        },\n        async suspend() {\n            const {\n                value: reason\n            } = await Swal.fire({\n                title: 'Enter the reason of suspending',\n                input: 'text',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, suspend it!',\n                inputValidator: (value) => {\n                    if (!value) {\n                        return 'You need to write something!'\n                    }\n                }\n            })\n            if (reason) {\n                this.$store.commit(mutation.BUTTON_STATUS, true)\n                this.payload.reason_suspend = reason;\n                this.$store.dispatch(action.SUSPEND_ADMIN_ENTERPRISE, this.payload)\n            }\n        },\n        activeButton() {\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, activate it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.ACTIVATE_ADMIN_ENTERPRISE, this.payload);\n                }\n            });\n        },\n        deleteB() {\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true);\n                    this.$store.dispatch(action.DELETE_ADMIN_ENTERPRISE, this.payload);\n                }\n            });\n        },\n        isNumber(evt) {\n            evt = evt ? evt : window.event;\n            var charCode = evt.which ? evt.which : evt.keyCode;\n            if (\n                charCode > 31 &&\n                (charCode < 48 || charCode > 57)\n            ) {\n                evt.preventDefault();\n            } else {\n                return true;\n            }\n        },\n        Cancel() {\n            router.replace(`/detail-enterprise/${this.identer}`)\n        }\n    },\n    computed: {\n        ...mapGetters({\n            identer: getter.GET_ID_ENTERPRISE,\n            button: getter.GET_BUTTON,\n            adminEnterprise: getter.GET_ADMIN_DATA_ENTERPRISE\n        }),\n        buttonStatus: function () {\n            return this.form.fullscreen_loading = this.button\n        }\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    padding: 0px 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n</style>\n"]}]}