{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\pages\\employee\\listemployee\\list-complete.vue?vue&type=style&index=0&id=0ed29c48&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\src\\views\\pages\\employee\\listemployee\\list-complete.vue","mtime":1644413760513},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\update-cancel-order-ui\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.table-box {\n    overflow: auto;\n}\n.el-pagination {\n    padding-top: 20px;\n}\n.card-base {\n    padding: 20px;\n}\n.el-row {\n    padding: 0px 10px;\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n.el-col {\n    border-radius: 5px;\n}\n.el-select {\n    width: 100%;\n}\n",{"version":3,"sources":["list-complete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list-complete.vue","sourceRoot":"src/views/pages/employee/listemployee","sourcesContent":["<template>\r\n    <div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n        <div class=\"card-base card-shadow--medium bg-white\">\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"24\" style=\"margin-bottom: 20px\">\r\n                    <el-breadcrumb separator=\"/\">\r\n                        <el-breadcrumb-item :to=\"{ path: '/employee/inprogress' }\">Inprogress</el-breadcrumb-item>\r\n                        <el-breadcrumb-item :to=\"{ path:'/employee/complete' }\">Complete</el-breadcrumb-item>\r\n                        <el-breadcrumb-item ></el-breadcrumb-item>\r\n                    </el-breadcrumb>\r\n                </el-col>\r\n<!--                <el-col :span=\"16\">-->\r\n<!--                    <div >-->\r\n<!--                        <el-button-->\r\n<!--                                v-if=\"path\"-->\r\n<!--                                @click=\"newCorp\"-->\r\n<!--                                type=\"primary\">-->\r\n<!--                            New Order-->\r\n<!--                        </el-button>-->\r\n<!--                    </div>-->\r\n<!--                </el-col>-->\r\n                <!--<el-col :lg=\"{span: 8, offset}\">-->\r\n                <!--<el-input-->\r\n                <!--placeholder=\"Search\"-->\r\n                <!--style=\"width: 300px\"-->\r\n                <!--v-model=\"input\"-->\r\n                <!--@change=\"search\">-->\r\n                <!--</el-input>-->\r\n                <!--</el-col>-->\r\n            </el-row>\r\n\r\n            <el-row :gutter=\"10\" style=\"margin-top: 20px\">\r\n                    <el-col :lg=\"{span: 10, offset:0}\">\r\n                        <el-button type=\"danger\" @click=\"templateButton\">\r\n                            Template\r\n                        </el-button>\r\n                        <el-button type=\"danger\" @click=\"assignButton\">\r\n                            Assign\r\n                        </el-button>\r\n                    </el-col>\r\n\r\n                <el-col :span=\"6\">\r\n                    <el-select v-model=\"form.month\" placeholder=\"Select Month\">\r\n                        <el-option label=\"All Months\" selected value=\"0\">All Months</el-option>\r\n                        <el-option label=\"January\" selected value=\"1\">January</el-option>\r\n                        <el-option label=\"February\" value=\"2\">February</el-option>\r\n                        <el-option label=\"March\" value=\"3\">March</el-option>\r\n                        <el-option label=\"April\" value=\"4\">April</el-option>\r\n                        <el-option label=\"May\" value=\"5\">May</el-option>\r\n                        <el-option label=\"June\" value=\"6\">June</el-option>\r\n                        <el-option label=\"July\" value=\"7\">July</el-option>\r\n                        <el-option label=\"August\" value=\"8\">August</el-option>\r\n                        <el-option label=\"September\" value=\"9\">September</el-option>\r\n                        <el-option label=\"October\" value=\"10\">October</el-option>\r\n                        <el-option label=\"November\" value=\"11\">November</el-option>\r\n                        <el-option label=\"December\" value=\"12\">December</el-option>\r\n                    </el-select>\r\n                </el-col>\r\n\r\n                <!--<el-col :span=\"6\">-->\r\n                    <!--<el-input-->\r\n                            <!--placeholder=\"Enterprise Name\"-->\r\n                            <!--v-model=\"form.enterprise_name\">-->\r\n                    <!--</el-input>-->\r\n                <!--</el-col>-->\r\n\r\n                <el-col :span=\"6\">\r\n                    <el-input\r\n                            placeholder=\"Transaction ID\"\r\n                            v-model=\"form.trx_id\">\r\n                    </el-input>\r\n                </el-col>\r\n\r\n                <el-col :span=\"1\">\r\n                    <el-button\r\n                            icon=\"el-icon-search\"\r\n                            @click=\"searchSquare\"\r\n                            square\r\n                            size=\"small\">\r\n\r\n                    </el-button>\r\n                </el-col>\r\n\r\n            </el-row>\r\n\r\n\r\n            <el-row>\r\n                <el-col :span=\"24\">\r\n                    <el-table\r\n                            v-loading=\"loading\"\r\n                            element-loading-text=\"Loading...\"\r\n                            element-loading-spinner=\"el-icon-loading\"\r\n                            element-loading-background=\"rgba(0, 0, 0, 0.8)\"\r\n                            :data=\"listData\"\r\n                            stripe\r\n                            style=\"width: 100%\"\r\n                            @row-click=\"getId\">\r\n                        <el-table-column\r\n                                type=\"index\"\r\n                                :index=\"indexMethod\"\r\n                                label=\"No\"\r\n                                width=\"80\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"trx_id\"\r\n                                label=\"Transaction ID\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"employee.user.name\"\r\n                                label=\"Name\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"employee.employee_position.job_name\"\r\n                                label=\"Position\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"status_text\"\r\n                                label=\"Status\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                                prop=\"created_at\"\r\n                                label=\"Date\">\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <el-row>\r\n                <el-col :lg=\"20\">\r\n                    <div class=\"grid-content\">\r\n                        <el-pagination\r\n                                background\r\n                                layout=\"prev, pager, next\"\r\n                                @current-change=\"handlePageChange\"\r\n                                :total=\"total\">\r\n\r\n                        </el-pagination>\r\n                    </div>\r\n                </el-col>\r\n                <!--<el-col :lg=\"4\">-->\r\n                    <!--<el-button-->\r\n                            <!--type=\"primary\"-->\r\n                            <!--@click=\"exportExcel\"-->\r\n                            <!--style=\"margin-top: 15px\">-->\r\n                        <!--Export-->\r\n                    <!--</el-button>-->\r\n                <!--</el-col>-->\r\n            </el-row>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Affix from '@/components/Affix'\r\n    import { mapGetters } from 'vuex'\r\n    import * as getter from '../../../../store/getters-types'\r\n    import * as action from '../../../../store/action-types'\r\n    import * as mutation from '../../../../store/mutation-types'\r\n    import swal from 'sweetalert2'\r\n\r\n    export default {\r\n        name: 'Table',\r\n        data() {\r\n            return {\r\n                currentPage     : 1,\r\n                path            : null,\r\n                input           :'',\r\n                affixEnabled    : true,\r\n                indexT          : 1,\r\n                offset          : null,\r\n                form            : {\r\n                    enterprise_name : '',\r\n                    month           : '',\r\n                    trx_id          : '',\r\n                    to              : '',\r\n                    formP            : '',\r\n                }\r\n            }\r\n        },\r\n        components: {\r\n            Affix\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                listData : getter.GET_LIST_EMPLOYEE,\r\n                paginate : getter.GET_PAGINATE_EMPLOYEE,\r\n                loading  : getter.GET_BUTTON,\r\n                total    : getter.GET_EMPLOYEE_TOTAL\r\n            }),\r\n            paginato(){\r\n                return this.paginate\r\n            },\r\n            indexTam(){\r\n                return this.indexT\r\n            }\r\n        },\r\n        async created(){\r\n            // this.path = this.$route.path == '/order/open';\r\n            // (this.$route.path == '/order/open') ? this.offset = 0 : this.offset = 16\r\n\r\n            let objList = {\r\n                dataList    : null,\r\n                nextC       : null,\r\n                prevC       : null,\r\n                firstP      : null,\r\n                fromPA      : null,\r\n                total       : null\r\n            }\r\n            await this.$store.commit(mutation.SET_EMPLOYEE_LIST, objList)\r\n\r\n            let obj = {\r\n                page    : this.currentPage,\r\n                path    : '/employee/task/complete',\r\n                month           : this.form.month,\r\n                trx_id          : this.form.trx_id,\r\n                form            : this.form.formP,\r\n                to              : this.form.to\r\n            }\r\n            this.$store.commit(mutation.BUTTON_STATUS, true)\r\n            let data = await this.$store.dispatch(action.LIST_EMPLOYEE_TASK, obj)\r\n        },\r\n        methods: {\r\n            // newCorp()   {\r\n            //     this.$router.replace('/order/create')\r\n            // },\r\n            // exportExcel(){\r\n            //     if(this.form.month === '' || this.form.month === '0' ){\r\n            //         swal('please select month (except all month)','', 'error')\r\n            //     }else {\r\n            //         let obj = {\r\n            //             path    : this.$route.path,\r\n            //             month   : this.form.month\r\n            //         }\r\n            //         this.$store.dispatch(action.EXPORT_ORDER_LIST, obj)\r\n            //     }\r\n            // },\r\n            handlePageChange(page) {\r\n                let obj = {\r\n                    page    : page,\r\n                    path    : '/employee/task/complete',\r\n                    month           : this.form.month,\r\n                    trx_id          : this.form.trx_id,\r\n                    form            : this.form.formP,\r\n                    to              : this.form.to\r\n                };\r\n                this.currentPage = page\r\n                this.$store.dispatch(action.LIST_EMPLOYEE_TASK, obj)\r\n            },\r\n            search(){\r\n                this.$store.dispatch( action.LIST_ORDER_CLIENT, this.input.trim() )\r\n            },\r\n            templateButton(){\r\n                this.$router.replace('/template-list')\r\n            },\r\n            assignButton(){\r\n                this.$router.replace('/employee/assign-task')\r\n            },\r\n           async getId(id){\r\n                let obj = {\r\n                    id    : id.idorder,\r\n                    path  : '/employee/task/complete'\r\n                };\r\n               await this.$store.dispatch(action.EMPLOYEE_TASK_ID, obj)\r\n                this.$router.replace('/detail-task-employee')\r\n            },\r\n            indexMethod(index) {\r\n                return index + this.paginate.fromP;\r\n            },\r\n            searchSquare(){\r\n                let obj = {\r\n                    page    : '1',\r\n                    path    : '/employee/task/complete',\r\n                    month           : this.form.month,\r\n                    trx_id          : this.form.trx_id,\r\n                    form            : this.form.formP,\r\n                    to              : this.form.to\r\n                }\r\n                this.$store.dispatch(action.LIST_EMPLOYEE_TASK, obj)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n\r\n    .table-box {\r\n        overflow: auto;\r\n    }\r\n    .el-pagination {\r\n        padding-top: 20px;\r\n    }\r\n    .card-base {\r\n        padding: 20px;\r\n    }\r\n    .el-row {\r\n        padding: 0px 10px;\r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n    .el-col {\r\n        border-radius: 5px;\r\n    }\r\n    .el-select {\r\n        width: 100%;\r\n    }\r\n</style>\r\n\r\n"]}]}