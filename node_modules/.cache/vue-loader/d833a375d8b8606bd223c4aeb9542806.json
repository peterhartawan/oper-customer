{"remainingRequest":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/employee/listemployee/detail-list.vue?vue&type=style&index=0&id=59c08d63&lang=scss&scoped=true&","dependencies":[{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/src/views/pages/employee/listemployee/detail-list.vue","mtime":1640440454000},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/css-loader/index.js","mtime":1641690455692},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1641690456354},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/postcss-loader/src/index.js","mtime":1641690456676},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/sass-loader/dist/cjs.js","mtime":1641690460431},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":1641690455583},{"path":"/Users/fnaufalh/www/docker-oper-workshop/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":1641690456354}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../../../../assets/scss/_variables\";\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    padding: 0px 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.thumbnail {\n    border-radius: 0px;\n    position: relative;\n    width: 290px;\n    height: 300px;\n    overflow: hidden;\n}\n\n.thumbnail img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    height: 100%;\n    width: auto;\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n}\n\n.thumbnail img.portrait {\n    width: 100%;\n    height: auto;\n}\n\n.h3 {\n    display: inline;\n}\n\n.word-wrap {\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n}\n\n.center {\n    text-align: center;\n    vertical-align: middle;\n    line-height: 470px;\n}\n\n.middle {\n    text-align: center;\n    vertical-align: middle;\n    line-height: 280px;\n}\n.p {\n    display: block;\n}\n.p-name {\n    display: block;\n    font-size: 2em;\n    font-weight: bold;\n    margin-top: 10px\n}\n.line {\n    border-right: 1px solid $line-color;\n}\n.avatar2 {\n    img {\n        border: 1px solid transparentize($text-color, .9);\n        box-sizing: border-box;\n        width: 120px;\n        height: 120px;\n        border-radius: 50%;\n        transition: all .5s .25s;\n    }\n}\n",{"version":3,"sources":["detail-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyWA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"detail-list.vue","sourceRoot":"src/views/pages/employee/listemployee","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <TaskEmployee />\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"11\">\n                <el-row :gutter=\"20\" class=\"line margin-top-25\">\n                    <el-col :span=\"8\">\n                        <div class=\"avatar2 align-vertical text-center\">\n                            <img :src=\"order.employee.user.profile_picture\" class=\"align-vertical-middle\" alt=\"user avatar\" @error=\"imgAlt\">\n                        </div>\n                    </el-col>\n                    <el-col :span=\"16\" style=\"overflow-wrap: break-word\">\n                        <span class=\"p-name\">{{ order.employee.user.name }}</span>\n                        <span class=\"p\">{{order.employee.user.phonenumber}}</span>\n                        <span class=\"p\">{{order.employee.user.email}}</span>\n                    </el-col>\n                </el-row>\n            </el-col>\n            <el-col :span=\"13\">\n                <h3 class=\"margin-bottom-1 margin-top-0 margin-left-10\"> DETAIL </h3>\n                <el-row :gutter=\"30\">\n                    <el-col :span=\"8\">\n                        <dl>\n\n                            <dt>TRANSACTION ID</dt>\n                            <dd>{{ order.trx_id }}</dd>\n\n                        </dl>\n                    </el-col>\n                    <el-col :span=\"8\">\n                        <dl>\n                            <!--<dt> TYPE </dt>-->\n                            <!--<dd>{{ order.enterprise.enterprise_type.name }}</dd>-->\n                            <dt>BOOKING TIME</dt>\n                            <dd>{{ order.booking_time }}</dd>\n                        </dl>\n                    </el-col>\n                </el-row>\n            </el-col>\n        </el-row>\n        <hr>\n        <el-row class=\"margin-top-25\">\n            <el-col :span=\"11\">\n                <h3>TASK</h3>\n                <!--<h1 class=\"font-size-40\">Lorem Ipsum</h1>-->\n            </el-col>\n\n            <el-col :span=\"8\" class=\"line\">\n                <dl>\n                    <dt>MESSAGE</dt>\n                    <dd style=\"overflow-wrap: break-word\">{{ `${order.message}` }}</dd>\n                </dl>\n            </el-col>\n            <el-col :span=\"5\"class=\"text-center\">\n                <span class=\"p font-weight-600 margin-bottom-10\">STATUS</span>\n                <div v-if=\"status === 'ORDER_INPROGRESS'\">\n                    <img src=\"../../../../assets/oper_asset/progress.png\" alt=\"\" style=\"width: 20%\">\n                    <span class=\"p margin-top-10\">IN PROGRESS</span>\n                </div>\n                <div v-else>\n                    <img src=\"../../../../assets/oper_asset/completed.png\" alt=\"\" style=\"width: 20%\">\n                    <span class=\"p margin-top-10\">COMPLETED</span>\n                </div>\n            </el-col>\n        </el-row>\n\n        <!--<el-row :gutter=\"20\">-->\n            <!--<el-col :span=\"24\">-->\n                <!--<span>-->\n                    <!--<b> Employee Name</b> <span style=\"padding-left: 0.8em\"> : {{ order.employee.user.name }} </span>-->\n                <!--</span> <br>-->\n                <!--<span>-->\n                    <!--<b> Transaction ID </b> <span style=\"padding-left: 1.5em\"> : {{ order.trx_id }} </span>-->\n                <!--</span> <br>-->\n                <!--<span>-->\n                    <!--<b> Booking Time </b> <span style=\"padding-left: 1.8em\"> : {{ order.booking_time }} </span>-->\n                <!--</span> <br>-->\n                <!--<span>-->\n                    <!--<b> Message </b> <span style=\"padding-left: 4.15em\"> : {{ order.message }} </span>-->\n                <!--</span> <br>-->\n                <!--&lt;!&ndash;<span>&ndash;&gt;-->\n                <!--&lt;!&ndash;<b> Vehicle </b> <span style=\"padding-left: 4.7em\"> : {{ order.client_vehicle_license }} - {{ order.vehicle_owner }} ( {{ order.vehicle_type }} - {{ order.vehicle_transmission }} ) </span>&ndash;&gt;-->\n                <!--&lt;!&ndash;</span> <br>&ndash;&gt;-->\n                <!--<span>-->\n                    <!--<b> Order Status </b> <span style=\"padding-left: 2.3em\"> : {{ status }} </span>-->\n                <!--</span>-->\n            <!--</el-col>-->\n        <!--</el-row>-->\n        <!--<el-row>-->\n            <!--<el-col :span=\"24\">-->\n                <!--<el-col>-->\n                    <!--<p>Task</p>-->\n                    <!--<hr>-->\n                <!--</el-col>-->\n            <!--</el-col>-->\n        <!--</el-row>-->\n\n        <el-row>\n            <el-col :span=\"24\">\n                <el-table :data=\"order.order_tasks\" stripe @row-click=\"getId\" style=\"width: 100%\">\n                    <el-table-column\n                            prop=\"name\"\n                            label=\"TASK NAME\">\n                    </el-table-column>\n                    <el-table-column\n                            prop=\"description\"\n                            label=\"TASK DESCRIPTION\">\n                    </el-table-column>\n                    <el-table-column\n                            prop=\"last_update_status\"\n                            label=\"COMPLETED_DATE\">\n                    </el-table-column>\n                    <el-table-column\n                            align=\"center\"\n                            label=\"STATUS\">\n                        <template slot-scope=\"scope\">\n                            {{(scope.row.order_task_status === 0) ? 'NOT STARTED'\n                            : (scope.row.order_task_status === 1) ? 'IN PROGRESS'\n                            : (scope.row.order_task_status === 2) ? 'COMPLETED'\n                            : 'SKIPPED'}}\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </el-col>\n        </el-row>\n\n        <el-row :gutter=\"20\">\n            <el-col :span=\"7\" style=\"margin-top: 20px;\">\n                <el-button @click=\"backLCorp\" type=\"info\" size=\"small\">\n                    <span class=\"padding-left-10 padding-right-10\">\n                        Back\n                    </span>\n                </el-button>\n            </el-col>\n            <el-col :span=\"4\" :offset=\"12\" style=\"margin-top: 20px;\">\n                <el-button\n                        type=\"danger\"\n                        v-loading.fullscreen.lock=\"loading\"\n                        v-if=\"cancelButton\"\n                        size=\"small\"\n                        @click=\"cancelTask\">\n                    <span class=\"padding-left-10 padding-right-10\">\n                        Cancel Task\n                    </span>\n                </el-button>\n            </el-col>\n        </el-row>\n    </div>\n    <el-dialog :visible.sync=\"dialogVisible\" width=\"70%\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"8\">\n                <div v-if='!map.taskphoto == null || !map.taskphoto == \"\"'>\n                    <el-card class=\"middle\" :body-style=\"{ padding: '0px' }\" style=\"width: 100%; height: 300px\">\n                        <div class=\"thumbnail\">\n                            <img class=\"potrait\" :src=\"map.taskphoto\">\n                        </div>\n                    </el-card>\n                </div>\n                <div v-else>\n                    <el-card class=\"middle\" :body-style=\"{ padding: '0px' }\" style=\"width: 100%; height: 300px\">\n                        <h3>User has not taken a picture</h3>\n                    </el-card>\n                </div>\n                <el-col :span=\"24\" style=\"margin-bottom: 5px\">\n                    <h3>\n                        <el-col :span=\"16\" style=\"margin-bottom: 10px\">Task Name</el-col>\n                    </h3>\n                    <el-col :span=\"20\">{{map.taskname}}</el-col>\n                </el-col>\n                <el-col :span=\"24\" style=\"margin-bottom: 5px\">\n                    <h3>\n                        <el-col :span=\"16\" style=\"margin-bottom: 10px\">Completed Date</el-col>\n                    </h3>\n                    <el-col :span=\"20\">{{map.lastupdate}}</el-col>\n                </el-col>\n                <el-col :span=\"24\">\n                    <h3>\n                        <el-col :span=\"16\" style=\"margin-bottom: 10px\">Description</el-col>\n                    </h3>\n                    <el-col :span=\"20\">\n                        <span class=\"word-wrap\">{{map.description}}</span>\n                    </el-col>\n                </el-col>\n            </el-col>\n            <el-col :span=\"16\">\n                <div v-if=\"location\">\n                    <el-card :body-style=\"{ padding: '0px' }\" style=\"width: 100%; height: 500px\">\n                        <gmap-map ref=\"map\" :center=\"location\" :zoom=\"14\" :options=\"{gestureHandling:'cooperative'}\" map-type-id=\"roadmap\" style=\"width: 100%; height: 500px\">\n                            <GmapMarker :position=\"location\" label=\"S\" />\n                        </gmap-map>\n                    </el-card>\n                </div>\n                <div v-else>\n                    <el-card class=\"center\" :body-style=\"{ padding: '0px' }\" style=\"width: 100%; height: 500px\">\n\n                        <h1>User has not completed the task</h1>\n\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" style=\"margin-top: 10px\">\n            <el-col :offset=\"10\">\n                <el-checkbox :checked=\"map.required\" disabled>Is Required</el-checkbox>\n                <el-checkbox :checked=\"map.photo\" disabled>Is Required Photo</el-checkbox>\n                <el-checkbox :checked=\"map.inspector\" disabled>Is Required Inspector Validation</el-checkbox>\n            </el-col>\n        </el-row>\n    </el-dialog>\n</div>\n</template>\n\n<script>\n    import TaskEmployee from '../../../../components/employee/task-employee'\n    import router from '../../../../router'\n    import {\n        mapGetters,\n        mapMutations\n    } from 'vuex'\n    import * as getter from '../../../../store/getters-types'\n    import * as action from '../../../../store/action-types'\n    import * as mutation from '../../../../store/mutation-types'\n    import Swal from 'sweetalert2'\n\nexport default {\n    data() {\n        return {\n            alt: require(\"@/assets/images/avatar-2.jpg\"),\n            dialogVisible: false,\n            location: null,\n            map: {\n                taskname: '',\n                lastupdate: '',\n                photo: '',\n            },\n            payload: {\n                reason_cancel: \"\",\n                idorder: null,\n            },\n        }\n    },\n    components: {\n        TaskEmployee\n    },\n    computed: {\n        ...mapGetters({\n            order: getter.GET_DETAIL_EMPLOYEE,\n            path: getter.GET_PATH,\n            loading: getter.GET_LOADING\n        }),\n        status() {\n            if (this.order.order_status === 1) {\n                return \"ORDER_OPEN\"\n            }\n            if (this.order.order_status === 2) {\n                return \"ORDER_INPROGRESS\"\n            }\n            if (this.order.order_status === 3) {\n                return \"ORDER_COMPLETED\"\n            }\n            if (this.order.order_status === 4) {\n                return \"ORDER_MOVED\"\n            }\n            if (this.order.order_status === 5) {\n                return \"ORDER_CANCELED\"\n            }\n            if (this.order.order_status === 6) {\n                return \"ORDER_DELETED\"\n            }\n        },\n        cancelButton() {\n            let idrole = JSON.parse(localStorage.getItem('user')).idrole\n            if (idrole === 2 && this.order.order_status === 2) {\n                return true\n            } else {\n                return false\n            }\n        }\n    },\n    async created() {\n        this.idOrderButton();\n    },\n    methods: {\n        ...mapMutations({\n            type: mutation.TRACKING_TYPE,\n            id: mutation.ID_ORDER,\n            pathType: mutation.SET_PATH\n        }),\n        imgAlt(event) {\n            event.target.src = this.alt;\n        },\n        editButton() {},\n        enterpriseDriver() {},\n        backLCorp() {\n            router.replace('/employee/inprogress')\n        },\n        async cancelTask() {\n            const {\n                value: reason\n            } = await Swal.fire({\n                title: 'Enter the reason for cancellation',\n                input: 'text',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, Cancel it!',\n                inputValidator: (value) => {\n                    if (!value) {\n                        return 'You need to write something!'\n                    }\n                }\n            });\n            if (reason) {\n                this.payload.reason_cancel = reason;\n                this.payload.idorder = this.order.idorder;\n                this.$store.commit(mutation.SET_LOADING, true)\n                this.$store.dispatch(action.CANCEL_TASK, this.payload)\n            }\n        },\n        idOrderButton() {\n            this.type('task?idorder=');\n            this.id(this.order.idorder);\n            this.pathType(this.path);\n        },\n        async getId(id) {\n            if (id.attachment_url == \"\" || id.attachment_url == null) {\n                this.map.taskphoto = null\n            } else {\n                this.map.taskphoto = id.attachment_url\n            }\n            this.map.description = id.description\n            this.map.taskname = id.name\n            this.map.lastupdate = id.last_update_status\n            this.map.required = id.is_required\n            this.map.photo = id.is_need_photo\n            this.map.inspector = id.is_need_inspector_validation\n            this.dialogVisible = true\n            if (!id.latitude == null || !id.latitude == \"\") {\n                let obj = {\n                    lat: Number(id.latitude),\n                    lng: Number(id.longitude)\n                }\n                this.location = obj\n            } else if (!id.submit_latitude == null || !id.submit_latitude == \"\") {\n                let obj = {\n                    lat: Number(id.submit_latitude),\n                    lng: Number(id.submit_longitude)\n                }\n                this.location = obj\n            } else {\n                this.location = null\n            }\n\n        },\n    }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"../../../../assets/scss/_variables\";\n    .card-base {\n        padding: 20px;\n    }\n\n    .el-row {\n        padding: 0px 10px;\n\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n\n    .el-col {\n        border-radius: 5px;\n    }\n\n    .thumbnail {\n        border-radius: 0px;\n        position: relative;\n        width: 290px;\n        height: 300px;\n        overflow: hidden;\n    }\n\n    .thumbnail img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        height: 100%;\n        width: auto;\n        -webkit-transform: translate(-50%, -50%);\n        -ms-transform: translate(-50%, -50%);\n        transform: translate(-50%, -50%);\n    }\n\n    .thumbnail img.portrait {\n        width: 100%;\n        height: auto;\n    }\n\n    .h3 {\n        display: inline;\n    }\n\n    .word-wrap {\n        word-wrap: break-word;\n        overflow-wrap: break-word;\n    }\n\n    .center {\n        text-align: center;\n        vertical-align: middle;\n        line-height: 470px;\n    }\n\n    .middle {\n        text-align: center;\n        vertical-align: middle;\n        line-height: 280px;\n    }\n    .p {\n        display: block;\n    }\n    .p-name {\n        display: block;\n        font-size: 2em;\n        font-weight: bold;\n        margin-top: 10px\n    }\n    .line {\n        border-right: 1px solid $line-color;\n    }\n    .avatar2 {\n        img {\n            border: 1px solid transparentize($text-color, .9);\n            box-sizing: border-box;\n            width: 120px;\n            height: 120px;\n            border-radius: 50%;\n            transition: all .5s .25s;\n        }\n    }\n</style>\n"]}]}