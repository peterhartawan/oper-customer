{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/inspector/new-inspector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/src/views/pages/inspector/new-inspector.vue","mtime":1628175042627},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-customer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport router from '../../../router'\nimport * as action from '../../../store/action-types'\nimport * as getter from '../../../store/getters-types'\nimport * as mutation from '../../../store/mutation-types'\nimport { mapGetters } from 'vuex'\n\nexport default {\n    name: 'new-pic',\n    data() {\n        let validatePhone = (rule, value, callback) => {\n            if((value+'').length > 13) {\n                callback(new Error('Phone must be less than 13 digits'))\n            } else {\n                if((value+'').length < 10){\n                    callback(new Error('Phone must be more than 10 digits'))\n                }else {\n                    callback()\n                }\n            }\n\n        };\n        return {\n            form : {\n                name   : '',\n                phone  : '',\n                fullscreen_loading: false\n            },\n            rules: {\n                name: [\n                    { required: true, message: 'Please Input Inspector Name', trigger: 'blur' }\n                ],\n                phone: [\n                    { required: true, message: 'Please Input Inspector Phone Number'},\n                    { validator: validatePhone, trigger:['blur', 'change'] }\n                ]\n\n            }\n        };\n    },\n    methods : {\n        onSubmit(formName) {\n            let newForm = {\n                name            : this.form.name,\n                phone           : this.form.phone,\n                identerprise    : this.identer\n            }\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.$store.commit(mutation.BUTTON_STATUS, true)\n                    this.$store.dispatch(action.CREATE_PIC_TASK, newForm)\n                } else {\n                    return false;\n                }\n            });\n        },\n        cancleButton(){\n            router.replace('pic-task-list')\n        },\n        isNumber(evt) {\n            evt = (evt) ? evt : window.event;\n            var charCode = (evt.which) ? evt.which : evt.keyCode;\n            if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\n                evt.preventDefault();;\n            } else {\n                return true;\n            }\n        }\n    },\n    computed: {\n      ...mapGetters({\n          identer: getter.GET_ID_ENTERPRISE,\n          button: getter.GET_BUTTON\n      }),\n        buttonStatuz: function () {\n            return this.form.fullscreen_loading = this.button\n        }\n    },\n}\n",{"version":3,"sources":["new-inspector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"new-inspector.vue","sourceRoot":"src/views/pages/inspector","sourcesContent":["<template>\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <div class=\"card-base card-shadow--medium bg-white\">\n            <el-form :model=\"form\" :rules=\"rules\"  ref=\"form\">\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"name\">\n                                <el-input\n                                        placeholder=\"Inspector Name\"\n                                        v-model=\"form.name\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"12\">\n                        <div class=\"grid-content\">\n                            <el-form-item prop=\"phone\">\n                                <el-input\n                                        placeholder=\"Inspector Phone Number\"\n                                        @keypress.native=\"isNumber\"\n                                        v-model=\"form.phone\"></el-input>\n                            </el-form-item>\n                        </div>\n                    </el-col>\n                </el-row>\n\n                <el-row>\n                    <el-col :lg=\"{offset:18, span:6}\" style=\"display: flex; justify-content: flex-end\">\n                        <el-button @click=\"cancleButton\">Cancel</el-button>\n                        <el-button\n                                type=\"success\"\n                                v-loading.fullscreen.lock=\"form.fullscreen_loading\"\n                                @click=\"onSubmit('form')\">Save</el-button>\n                    </el-col>\n                </el-row>\n            </el-form>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import router from '../../../router'\n    import * as action from '../../../store/action-types'\n    import * as getter from '../../../store/getters-types'\n    import * as mutation from '../../../store/mutation-types'\n    import { mapGetters } from 'vuex'\n\n    export default {\n        name: 'new-pic',\n        data() {\n            let validatePhone = (rule, value, callback) => {\n                if((value+'').length > 13) {\n                    callback(new Error('Phone must be less than 13 digits'))\n                } else {\n                    if((value+'').length < 10){\n                        callback(new Error('Phone must be more than 10 digits'))\n                    }else {\n                        callback()\n                    }\n                }\n\n            };\n            return {\n                form : {\n                    name   : '',\n                    phone  : '',\n                    fullscreen_loading: false\n                },\n                rules: {\n                    name: [\n                        { required: true, message: 'Please Input Inspector Name', trigger: 'blur' }\n                    ],\n                    phone: [\n                        { required: true, message: 'Please Input Inspector Phone Number'},\n                        { validator: validatePhone, trigger:['blur', 'change'] }\n                    ]\n\n                }\n            };\n        },\n        methods : {\n            onSubmit(formName) {\n                let newForm = {\n                    name            : this.form.name,\n                    phone           : this.form.phone,\n                    identerprise    : this.identer\n                }\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        this.$store.commit(mutation.BUTTON_STATUS, true)\n                        this.$store.dispatch(action.CREATE_PIC_TASK, newForm)\n                    } else {\n                        return false;\n                    }\n                });\n            },\n            cancleButton(){\n                router.replace('pic-task-list')\n            },\n            isNumber(evt) {\n                evt = (evt) ? evt : window.event;\n                var charCode = (evt.which) ? evt.which : evt.keyCode;\n                if ((charCode > 31 && (charCode < 48 || charCode > 57))) {\n                    evt.preventDefault();;\n                } else {\n                    return true;\n                }\n            }\n        },\n        computed: {\n          ...mapGetters({\n              identer: getter.GET_ID_ENTERPRISE,\n              button: getter.GET_BUTTON\n          }),\n            buttonStatuz: function () {\n                return this.form.fullscreen_loading = this.button\n            }\n        },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .card-base {\n        padding: 20px;\n    }\n    .el-row {\n        padding: 0px 10px;\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .el-col {\n        border-radius: 5px;\n    }\n</style>\n"]}]}