{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/enterprise/list-enterprise.vue?vue&type=style&index=0&id=4954d007&lang=scss&scoped=true&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/enterprise/list-enterprise.vue","mtime":1628175042625},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.table-box {\n    overflow: auto;\n}\n\n.el-pagination {\n    padding-top: 20px;\n}\n\n/*.el-input {*/\n/*width: 300px !important;*/\n/*}*/\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    padding: 0px 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.image {\n    object-fit: scale-down;\n    width: 100%;\n    height: 100px;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: 50% 50%;\n}\n\n.hoverhand:hover {\n    cursor: pointer;\n}\n",{"version":3,"sources":["list-enterprise.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8MA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"list-enterprise.vue","sourceRoot":"src/views/pages/enterprise","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <el-row :gutter=\"10\" style=\"margin-bottom: 20px;\">\n        <el-col :span=\"4\">\n            <div v-if=\"buttonStatus\">\n                <el-button style=\"width: 100%; background-color:#D50000; border-color:#D50000\" @click=\"newCorp\" type=\"primary\">\n                    New Enterprise\n                </el-button>\n            </div>\n        </el-col>\n        <el-col :span=\"5\" :offset=\"offset\">\n            <el-input style=\"width: 100%\" placeholder=\"Search\" prefix-icon=\"el-icon-search\" clearable @keyup.native=\"nameE\" @clear=\"clearInputButton\" v-model=\"enterpriseName\">\n            </el-input>\n        </el-col>\n        <el-col :span=\"6\">\n            <el-select style=\"width: 100%\" @change=\"filterTypeEnterprise\" v-model=\"type\" filterable placeholder=\"Select Enterprise Type\">\n                <el-option v-for=\"item in enterprise_type\" :key=\"item.status\" :label=\"item.name\" :value=\"item.status\"></el-option>\n            </el-select>\n        </el-col>\n        <el-col :span=\"4\">\n            <el-select style=\"width: 100%\" @change=\"filterStatus\" v-model=\"status\" filterable placeholder=\"Select\">\n                <el-option v-for=\"item in select\" :key=\"item.status\" :label=\"item.name\" :value=\"item.status\"></el-option>\n            </el-select>\n        </el-col>\n    </el-row>\n    <p class=\"font-weight-600 mt-40\">&nbsp;&nbsp; PARTNER</p>\n    <el-row :gutter=\"20\">\n        <div v-for=\"item in listData\" v-bind:key=\"item.idententerprise\">\n            <el-col :span=\"8\">\n                <el-popover placement=\"top-left\" :title=\"item.name\" width=\"180\" trigger=\"hover\">\n                    <div class=\"hoverhand\" slot=\"reference\">\n                        <div class=\"card-base card-shadow--medium mb-30 widget small-widget\" @click=\"getId(item.identerprise)\">\n                            <el-row>\n                                <el-col :offset=\"8\" :span=\"8\">\n                                    <div v-if='item.image_logo == \"\"'>\n                                        <img src=\"../../../../src/assets/images/Oper_Logo_Landscape_Red.png\" class=\"image\">\n                                    </div>\n                                    <div v-else>\n                                        <img :src=\"item.image_logo\" class=\"image\">\n                                    </div>\n                                </el-col>\n                            </el-row>\n                        </div>\n                    </div>\n                </el-popover>\n            </el-col>\n        </div>\n    </el-row>\n    <el-row>\n        <h1></h1>\n        <el-col :span=\"24\">\n            <div class=\"grid-content\">\n                <el-pagination background layout=\"prev, pager, next\" @current-change=\"handlePageChange\" :total=\"paginato.totalP\">\n                </el-pagination>\n            </div>\n        </el-col>\n    </el-row>\n</div>\n</template>\n\n<script>\nimport Affix from '@/components/Affix'\nimport {\n    mapGetters\n} from 'vuex'\nimport * as getter from '../../../store/getters-types'\nimport * as action from '../../../store/action-types'\nimport * as mutation from '../../../store/mutation-types'\n\nexport default {\n    name: 'Table',\n    data() {\n        return {\n            currentPage: 1,\n            input: '',\n            affixEnabled: true,\n            indexT: 1,\n            buttonStatus: null,\n            offset: null,\n            status: 1,\n            enterpriseName: '',\n            select: [{\n                    name: \"ACTIVE\",\n                    status: 1,\n                },\n                {\n                    name: \"INACTIVE\",\n                    status: 2,\n                },\n                {\n                    name: \"SUSPENDED\",\n                    status: 3\n                }\n            ],\n            type: '',\n            enterprise_type: [{\n                    name: \"REGULER\",\n                    status: 1,\n                },\n                {\n                    name: \"PLUS\",\n                    status: 2,\n                }\n            ]\n        };\n    },\n    components: {\n        Affix\n    },\n    computed: {\n        ...mapGetters({\n            listData: getter.GET_LIST,\n            paginate: getter.GET_PAGINATE,\n            loading: getter.GET_BUTTON\n        }),\n        paginato() {\n            return this.paginate\n        },\n        indexTam() {\n            return this.indexT\n        }\n    },\n    async mounted() {\n        this.$store.commit(mutation.BUTTON_STATUS, true)\n        await this.$store.dispatch(action.LIST_DATA_COR, {\n            page: 1,\n            typeenterprise: this.type,\n            enterprise_name: this.enterpriseName,\n            status: this.status\n        });\n        let userProfile = JSON.parse(localStorage.getItem('user')).idrole\n        this.buttonStatus = userProfile === 1;\n        (userProfile === 1) ? this.offset = 5: this.offset = 9\n    },\n    methods: {\n        newCorp() {\n            this.$router.replace('new-enterprise')\n        },\n        handlePageChange(page) {\n            this.currentPage = page;\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.$store.dispatch(action.LIST_DATA_COR, {\n                page: this.currentPage,\n                typeenterprise: this.type,\n                enterprise_name: this.enterpriseName,\n                status: this.status\n            });\n        },\n        clearInputButton() {\n            this.$store.dispatch(action.LIST_DATA_COR, {\n                page: 1,\n                typeenterprise: this.type,\n                enterprise_name: this.enterpriseName,\n                status: this.status\n            });\n        },\n        search() {\n            this.$store.dispatch(action.LIST_DATA_COR, this.input.trim())\n        },\n        async getId(id) {\n            await this.$store.dispatch(action.DATA_ID_CORP, id);\n            this.$router.replace({\n                path: '/detail-enterprise/' + id\n            })\n        },\n        indexMethod(index) {\n            return index + this.paginato.fromP;\n        },\n        nameE() {\n            let trimName = this.enterpriseName.trim()\n            if (trimName.length > 0) {\n                this.$store.commit(mutation.BUTTON_STATUS, true);\n                this.$store.dispatch(action.LIST_DATA_COR, {\n                    page: 1,\n                    typeenterprise: this.type,\n                    enterprise_name: trimName,\n                    status: this.status\n                });\n            }\n        },\n        filterStatus(status) {\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.status = status;\n            this.$store.dispatch(action.LIST_DATA_COR, {\n                page: 1,\n                typeenterprise: this.type,\n                enterprise_name: this.enterpriseName,\n                status: this.status\n            });\n        },\n        filterTypeEnterprise(type) {\n            this.$store.commit(mutation.BUTTON_STATUS, true);\n            this.type = type;\n            this.$store.dispatch(action.LIST_DATA_COR, {\n                page: 1,\n                typeenterprise: this.type,\n                enterprise_name: this.enterpriseName,\n                status: this.status\n            });\n\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.table-box {\n    overflow: auto;\n}\n\n.el-pagination {\n    padding-top: 20px;\n}\n\n/*.el-input {*/\n/*width: 300px !important;*/\n/*}*/\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    padding: 0px 10px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.image {\n    object-fit: scale-down;\n    width: 100%;\n    height: 100px;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: 50% 50%;\n}\n\n.hoverhand:hover {\n    cursor: pointer;\n}\n</style>\n"]}]}