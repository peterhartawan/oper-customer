{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\tasktemplate\\edit-template-tasks.vue?vue&type=template&id=7f3dbc93&scoped=true&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\src\\views\\pages\\tasktemplate\\edit-template-tasks.vue","mtime":1644413760625},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\r\n  var _vm = this\r\n  var _h = _vm.$createElement\r\n  var _c = _vm._self._c || _h\r\n  return _c(\r\n    \"div\",\r\n    {\r\n      staticClass: \"page-table scrollable only-y\",\r\n      attrs: { id: \"affix-container\" }\r\n    },\r\n    [\r\n      _c(\r\n        \"div\",\r\n        { staticClass: \"card-base card-shadow--medium bg-white\" },\r\n        [\r\n          _c(\r\n            \"el-form\",\r\n            { ref: \"form\", attrs: { rules: _vm.rules, model: _vm.form } },\r\n            [\r\n              _c(\r\n                \"el-row\",\r\n                { attrs: { gutter: 20 } },\r\n                [\r\n                  _c(\"el-col\", { attrs: { span: 24 } }, [\r\n                    _c(\r\n                      \"div\",\r\n                      { staticClass: \"grid-content\" },\r\n                      [\r\n                        _c(\r\n                          \"el-form-item\",\r\n                          { attrs: { prop: \"name\" } },\r\n                          [\r\n                            _c(\"el-input\", {\r\n                              staticStyle: { width: \"70%\" },\r\n                              attrs: { placeholder: \"Template Name\" },\r\n                              model: {\r\n                                value: _vm.form.name,\r\n                                callback: function($$v) {\r\n                                  _vm.$set(_vm.form, \"name\", $$v)\r\n                                },\r\n                                expression: \"form.name\"\r\n                              }\r\n                            })\r\n                          ],\r\n                          1\r\n                        )\r\n                      ],\r\n                      1\r\n                    )\r\n                  ])\r\n                ],\r\n                1\r\n              ),\r\n              _c(\r\n                \"el-row\",\r\n                { attrs: { gutter: 20 } },\r\n                [\r\n                  _c(\"el-col\", { attrs: { span: 24 } }, [\r\n                    _c(\r\n                      \"div\",\r\n                      { staticClass: \"grid-content\" },\r\n                      [\r\n                        _c(\r\n                          \"el-form-item\",\r\n                          { attrs: { prop: \"description\" } },\r\n                          [\r\n                            _c(\"el-input\", {\r\n                              attrs: {\r\n                                type: \"textarea\",\r\n                                placeholder: \"Template Description\",\r\n                                autosize: { minRows: 5, maxRows: 7 }\r\n                              },\r\n                              model: {\r\n                                value: _vm.form.description,\r\n                                callback: function($$v) {\r\n                                  _vm.$set(_vm.form, \"description\", $$v)\r\n                                },\r\n                                expression: \"form.description\"\r\n                              }\r\n                            })\r\n                          ],\r\n                          1\r\n                        )\r\n                      ],\r\n                      1\r\n                    )\r\n                  ])\r\n                ],\r\n                1\r\n              ),\r\n              _c(\r\n                \"el-row\",\r\n                [\r\n                  _c(\r\n                    \"el-col\",\r\n                    { attrs: { span: 24 } },\r\n                    [\r\n                      _c(\r\n                        \"el-col\",\r\n                        [\r\n                          _c(\"span\", [_vm._v(\"Task\")]),\r\n                          _c(\"el-button\", {\r\n                            staticClass: \"el-icon-plus\",\r\n                            staticStyle: { \"margin-left\": \"10px\" },\r\n                            attrs: {\r\n                              type: \"success\",\r\n                              size: \"mini\",\r\n                              circle: \"\"\r\n                            },\r\n                            on: { click: _vm.addButton }\r\n                          }),\r\n                          _c(\"hr\")\r\n                        ],\r\n                        1\r\n                      )\r\n                    ],\r\n                    1\r\n                  )\r\n                ],\r\n                1\r\n              ),\r\n              _vm._l(_vm.form.tasks, function(domain, index) {\r\n                return _c(\r\n                  \"div\",\r\n                  { key: domain.key },\r\n                  [\r\n                    _c(\r\n                      \"el-row\",\r\n                      { attrs: { gutter: 20 } },\r\n                      [\r\n                        _c(\"el-col\", { attrs: { span: 24 } }, [\r\n                          _c(\r\n                            \"div\",\r\n                            { staticClass: \"grid-content\" },\r\n                            [\r\n                              _c(\r\n                                \"el-form-item\",\r\n                                {\r\n                                  attrs: {\r\n                                    prop: \"tasks.\" + index + \".name\",\r\n                                    rules: {\r\n                                      required: true,\r\n                                      message: \"Task Name can not be null\",\r\n                                      trigger: [\"blur\", \"change\"]\r\n                                    }\r\n                                  }\r\n                                },\r\n                                [\r\n                                  _c(\"el-input\", {\r\n                                    attrs: { placeholder: \"Task Name\" },\r\n                                    model: {\r\n                                      value: domain.name,\r\n                                      callback: function($$v) {\r\n                                        _vm.$set(domain, \"name\", $$v)\r\n                                      },\r\n                                      expression: \"domain.name\"\r\n                                    }\r\n                                  })\r\n                                ],\r\n                                1\r\n                              )\r\n                            ],\r\n                            1\r\n                          )\r\n                        ])\r\n                      ],\r\n                      1\r\n                    ),\r\n                    _c(\r\n                      \"el-row\",\r\n                      { attrs: { gutter: 20 } },\r\n                      [\r\n                        _c(\r\n                          \"el-col\",\r\n                          { attrs: { span: 24 } },\r\n                          [\r\n                            _c(\r\n                              \"el-form-item\",\r\n                              {\r\n                                attrs: {\r\n                                  prop: \"tasks.\" + index + \".task_description\",\r\n                                  rules: {\r\n                                    required: true,\r\n                                    message: \"Task Description can not be null\",\r\n                                    trigger: [\"blur\", \"change\"]\r\n                                  }\r\n                                }\r\n                              },\r\n                              [\r\n                                _c(\"el-input\", {\r\n                                  staticClass: \"example\",\r\n                                  attrs: {\r\n                                    type: \"textarea\",\r\n                                    placeholder: \"Task Description\",\r\n                                    autosize: { minRows: 5, maxRows: 7 }\r\n                                  },\r\n                                  model: {\r\n                                    value: domain.task_description,\r\n                                    callback: function($$v) {\r\n                                      _vm.$set(domain, \"task_description\", $$v)\r\n                                    },\r\n                                    expression: \"domain.task_description\"\r\n                                  }\r\n                                })\r\n                              ],\r\n                              1\r\n                            )\r\n                          ],\r\n                          1\r\n                        )\r\n                      ],\r\n                      1\r\n                    ),\r\n                    !_vm.buttonStatus\r\n                      ? _c(\r\n                          \"el-row\",\r\n                          { attrs: { gutter: 20 } },\r\n                          [\r\n                            _c(\r\n                              \"el-col\",\r\n                              { attrs: { span: 24 } },\r\n                              [\r\n                                _c(\r\n                                  \"el-form-item\",\r\n                                  {\r\n                                    attrs: {\r\n                                      prop: \"tasks.\" + index + \".location_name\"\r\n                                    }\r\n                                  },\r\n                                  [\r\n                                    _c(\"el-input\", {\r\n                                      staticClass: \"sixsix\",\r\n                                      attrs: {\r\n                                        disabled: \"\",\r\n                                        type: \"textarea\",\r\n                                        placeholder: \"Location Name\",\r\n                                        autosize: { minRows: 1, maxRows: 3 }\r\n                                      },\r\n                                      model: {\r\n                                        value: domain.location_name,\r\n                                        callback: function($$v) {\r\n                                          _vm.$set(domain, \"location_name\", $$v)\r\n                                        },\r\n                                        expression: \"domain.location_name\"\r\n                                      }\r\n                                    })\r\n                                  ],\r\n                                  1\r\n                                )\r\n                              ],\r\n                              1\r\n                            ),\r\n                            _c(\"el-col\", { attrs: { span: 11 } }, [\r\n                              _c(\r\n                                \"div\",\r\n                                { staticClass: \"grid-content\" },\r\n                                [\r\n                                  _c(\r\n                                    \"el-form-item\",\r\n                                    {\r\n                                      attrs: { prop: \"tasks.\" + index + \".lat\" }\r\n                                    },\r\n                                    [\r\n                                      _c(\"el-input\", {\r\n                                        staticClass: \"sixsix\",\r\n                                        attrs: {\r\n                                          placeholder: \"Latitude\",\r\n                                          disabled: \"\"\r\n                                        },\r\n                                        model: {\r\n                                          value: domain.lat,\r\n                                          callback: function($$v) {\r\n                                            _vm.$set(domain, \"lat\", $$v)\r\n                                          },\r\n                                          expression: \"domain.lat\"\r\n                                        }\r\n                                      })\r\n                                    ],\r\n                                    1\r\n                                  )\r\n                                ],\r\n                                1\r\n                              )\r\n                            ]),\r\n                            _c(\r\n                              \"el-col\",\r\n                              { attrs: { span: 11 } },\r\n                              [\r\n                                _c(\r\n                                  \"el-form-item\",\r\n                                  {\r\n                                    attrs: { prop: \"tasks.\" + index + \".long\" }\r\n                                  },\r\n                                  [\r\n                                    _c(\"el-input\", {\r\n                                      staticClass: \"sixsix\",\r\n                                      attrs: {\r\n                                        disabled: \"\",\r\n                                        placeholder: \"Longitude\"\r\n                                      },\r\n                                      model: {\r\n                                        value: domain.long,\r\n                                        callback: function($$v) {\r\n                                          _vm.$set(domain, \"long\", $$v)\r\n                                        },\r\n                                        expression: \"domain.long\"\r\n                                      }\r\n                                    })\r\n                                  ],\r\n                                  1\r\n                                )\r\n                              ],\r\n                              1\r\n                            ),\r\n                            _c(\r\n                              \"el-col\",\r\n                              { attrs: { span: 2 } },\r\n                              [\r\n                                _c(\"el-button\", {\r\n                                  attrs: {\r\n                                    type: \"primary\",\r\n                                    icon: \"el-icon-location\",\r\n                                    circle: \"\"\r\n                                  },\r\n                                  on: {\r\n                                    click: function($event) {\r\n                                      return _vm.dialogTrack(domain)\r\n                                    }\r\n                                  }\r\n                                })\r\n                              ],\r\n                              1\r\n                            )\r\n                          ],\r\n                          1\r\n                        )\r\n                      : _vm._e(),\r\n                    _c(\r\n                      \"el-row\",\r\n                      { attrs: { gutter: 20 } },\r\n                      [\r\n                        _c(\r\n                          \"el-col\",\r\n                          { attrs: { span: 6 } },\r\n                          [\r\n                            _c(\"el-checkbox\", {\r\n                              attrs: { label: \"is Required\" },\r\n                              model: {\r\n                                value: domain.is_required,\r\n                                callback: function($$v) {\r\n                                  _vm.$set(domain, \"is_required\", $$v)\r\n                                },\r\n                                expression: \"domain.is_required\"\r\n                              }\r\n                            })\r\n                          ],\r\n                          1\r\n                        ),\r\n                        _c(\r\n                          \"el-col\",\r\n                          { attrs: { span: 6 } },\r\n                          [\r\n                            _c(\"el-checkbox\", {\r\n                              attrs: { label: \"need Foto\" },\r\n                              model: {\r\n                                value: domain.is_need_photo,\r\n                                callback: function($$v) {\r\n                                  _vm.$set(domain, \"is_need_photo\", $$v)\r\n                                },\r\n                                expression: \"domain.is_need_photo\"\r\n                              }\r\n                            })\r\n                          ],\r\n                          1\r\n                        ),\r\n                        _c(\r\n                          \"el-col\",\r\n                          { attrs: { span: 6 } },\r\n                          [\r\n                            _vm.buttonStatus\r\n                              ? _c(\"el-checkbox\", {\r\n                                  attrs: { label: \"need Validation\" },\r\n                                  model: {\r\n                                    value: domain.is_need_inspector_validation,\r\n                                    callback: function($$v) {\r\n                                      _vm.$set(\r\n                                        domain,\r\n                                        \"is_need_inspector_validation\",\r\n                                        $$v\r\n                                      )\r\n                                    },\r\n                                    expression:\r\n                                      \"domain.is_need_inspector_validation\"\r\n                                  }\r\n                                })\r\n                              : _vm._e()\r\n                          ],\r\n                          1\r\n                        ),\r\n                        _c(\r\n                          \"el-col\",\r\n                          { attrs: { span: 6 } },\r\n                          [\r\n                            _c(\"el-button\", {\r\n                              staticClass: \"el-icon-minus\",\r\n                              staticStyle: {\r\n                                \"margin-bottom\": \"11px\",\r\n                                \"margin-left\": \"20px\"\r\n                              },\r\n                              attrs: {\r\n                                type: \"danger\",\r\n                                size: \"mini\",\r\n                                circle: \"\"\r\n                              },\r\n                              on: {\r\n                                click: function($event) {\r\n                                  $event.preventDefault()\r\n                                  return _vm.removeDomain(domain)\r\n                                }\r\n                              }\r\n                            })\r\n                          ],\r\n                          1\r\n                        )\r\n                      ],\r\n                      1\r\n                    ),\r\n                    _c(\"hr\")\r\n                  ],\r\n                  1\r\n                )\r\n              }),\r\n              _c(\r\n                \"el-row\",\r\n                [\r\n                  _c(\r\n                    \"el-col\",\r\n                    {\r\n                      staticStyle: {\r\n                        display: \"flex\",\r\n                        \"justify-content\": \"flex-end\"\r\n                      },\r\n                      attrs: { lg: { offset: 18, span: 6 } }\r\n                    },\r\n                    [\r\n                      _c(\r\n                        \"div\",\r\n                        { staticClass: \"grid-content\" },\r\n                        [\r\n                          _c(\r\n                            \"el-form-item\",\r\n                            [\r\n                              _c(\r\n                                \"el-button\",\r\n                                {\r\n                                  directives: [\r\n                                    {\r\n                                      name: \"loading\",\r\n                                      rawName: \"v-loading.fullscreen.lock\",\r\n                                      value: _vm.buttonStatuz,\r\n                                      expression: \"buttonStatuz\",\r\n                                      modifiers: {\r\n                                        fullscreen: true,\r\n                                        lock: true\r\n                                      }\r\n                                    }\r\n                                  ],\r\n                                  attrs: { type: \"success\" },\r\n                                  on: {\r\n                                    click: function($event) {\r\n                                      return _vm.onSubmit(\"form\")\r\n                                    }\r\n                                  }\r\n                                },\r\n                                [_vm._v(\"Save\")]\r\n                              ),\r\n                              _c(\"el-button\", { on: { click: _vm.isCancel } }, [\r\n                                _vm._v(\"Cancel\")\r\n                              ])\r\n                            ],\r\n                            1\r\n                          )\r\n                        ],\r\n                        1\r\n                      )\r\n                    ]\r\n                  )\r\n                ],\r\n                1\r\n              )\r\n            ],\r\n            2\r\n          ),\r\n          _c(\r\n            \"el-dialog\",\r\n            {\r\n              attrs: {\r\n                visible: _vm.dialogV,\r\n                \"before-close\": _vm.handleClose,\r\n                width: \"70%\"\r\n              },\r\n              on: {\r\n                \"update:visible\": function($event) {\r\n                  _vm.dialogV = $event\r\n                }\r\n              }\r\n            },\r\n            [\r\n              _c(\r\n                \"div\",\r\n                { staticClass: \"card-base card-shadow--medium\" },\r\n                [\r\n                  _c(\r\n                    \"gmap-map\",\r\n                    {\r\n                      ref: \"map\",\r\n                      staticStyle: { width: \"100%\", height: \"500px\" },\r\n                      attrs: {\r\n                        center: _vm.center,\r\n                        zoom: 12,\r\n                        options: { gestureHandling: \"cooperative\" },\r\n                        \"map-type-id\": \"roadmap\"\r\n                      }\r\n                    },\r\n                    [\r\n                      _c(\"GmapMarker\", {\r\n                        attrs: {\r\n                          draggable: true,\r\n                          position: _vm.markers,\r\n                          label: \"S\"\r\n                        },\r\n                        on: { drag: _vm.updateCoordinates }\r\n                      })\r\n                    ],\r\n                    1\r\n                  )\r\n                ],\r\n                1\r\n              ),\r\n              _c(\r\n                \"el-button\",\r\n                { staticClass: \"mt-10\", on: { click: _vm.closeDialog } },\r\n                [_vm._v(\"Save\")]\r\n              )\r\n            ],\r\n            1\r\n          )\r\n        ],\r\n        1\r\n      )\r\n    ]\r\n  )\r\n}\r\nvar staticRenderFns = []\r\nrender._withStripped = true\r\n\nexport { render, staticRenderFns }"]}