{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\core\\toolbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\core\\toolbar.vue","mtime":1647032354117},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport NotificationBox from \"@/components/NotificationBox\";\r\nimport Search from \"@/components/Search\";\r\nimport * as action from \"../store/action-types\";\r\nimport * as getter from \"../store/getters-types\";\r\nimport { mapGetters, mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"Toolbar\",\r\n  props: [\"menuBurger\"],\r\n  data() {\r\n    return {\r\n      popoverWidth: 300,\r\n      fullscreen: false,\r\n      lang: \"us\"\r\n    };\r\n  },\r\n  methods: {\r\n    // onCommandLang(lang) {\r\n    // \tif(lang.charAt(0) === '/')\r\n    // \t\tthis.onCommand(lang)\r\n    // \telse\r\n    // \t\tthis.lang = lang\r\n    // },\r\n    goProfile() {\r\n      this.$store.dispatch(action.DATA_PROFILE);\r\n      this.$router.push({\r\n        path: \"/profile/\"\r\n      });\r\n    },\r\n    onCommand(path) {\r\n      this.$router.push(path);\r\n    },\r\n    toggleSidebar() {\r\n      this.$emit(\"toggle-sidebar\");\r\n    },\r\n    resizePopoverWidth() {\r\n      if (window.innerWidth <= 768) {\r\n        this.popoverWidth = 250;\r\n      } else {\r\n        this.popoverWidth = 300;\r\n      }\r\n    },\r\n    toggleFullscreen() {\r\n      this.$fullscreen.toggle(document.querySelector(\"body\"), {\r\n        wrap: false,\r\n        callback: () => {\r\n          this.fullscreen = this.$fullscreen.getState();\r\n        }\r\n      });\r\n    },\r\n    async inList(){\r\n      await this.$store.dispatch(action.MARK_AS_READ);\r\n      this.$router.push('/order/open')\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      profile: getter.GET_DATA_PROFILE,\r\n      totalNotif : getter.GET_NOTIF\r\n    })\r\n  },\r\n  components: {\r\n    NotificationBox,\r\n    Search\r\n  },\r\n\r\n  mounted() {\r\n    this.fullscreen = this.$fullscreen.getState();\r\n    this.resizePopoverWidth();\r\n    window.addEventListener(\"resize\", this.resizePopoverWidth);\r\n    this.$store.dispatch(action.DATA_PROFILE);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener(\"resize\", this.resizePopoverWidth);\r\n  }\r\n};\r\n",{"version":3,"sources":["toolbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"toolbar.vue","sourceRoot":"src/core","sourcesContent":["<template>\r\n  <div class=\"toolbar flex align-center justify-space-between\">\r\n    <div class=\"box-left box grow flex\">\r\n      <button\r\n        @click=\"toggleSidebar\"\r\n        v-if=\"menuBurger !== 'right'\"\r\n        class=\"toggle-sidebar card-base card-shadow--small\"\r\n      >\r\n        <i class=\"mdi mdi-menu\"></i>\r\n      </button>\r\n\r\n       <search class=\"hidden-xs-only\"></search>\r\n    </div>\r\n    <div v-if=\"profile\">\r\n      <div class=\"box-right flex align-center pl-10\">\r\n        <!--<el-dropdown trigger=\"click\" @command=\"onCommandLang\">-->\r\n        <!--<span class=\"el-dropdown-link\">-->\r\n        <!--<i class=\"flag-icon\" :class=\"{['flag-icon-'+lang]:true}\"></i>-->\r\n        <!--</span>-->\r\n        <!--<el-dropdown-menu slot=\"dropdown\">-->\r\n        <!--<el-dropdown-item command=\"us\"><i class=\"flag-icon flag-icon-us mr-15\"></i>English</el-dropdown-item>-->\r\n        <!--<el-dropdown-item command=\"it\"><i class=\"flag-icon flag-icon-it mr-15\"></i>Italian</el-dropdown-item>-->\r\n        <!--<el-dropdown-item command=\"fr\"><i class=\"flag-icon flag-icon-fr mr-15\"></i>French</el-dropdown-item>-->\r\n        <!--<el-dropdown-item command=\"de\"><i class=\"flag-icon flag-icon-de mr-15\"></i>German</el-dropdown-item>-->\r\n        <!--<el-dropdown-item command=\"es\"><i class=\"flag-icon flag-icon-es mr-15\"></i>Spanish</el-dropdown-item>-->\r\n        <!--<el-dropdown-item command=\"cn\"><i class=\"flag-icon flag-icon-cn mr-15\"></i>Chinese</el-dropdown-item>-->\r\n        <!--<el-dropdown-item command=\"jp\"><i class=\"flag-icon flag-icon-jp mr-15\"></i>Japanese</el-dropdown-item>-->\r\n        <!--<el-dropdown-item command=\"/multi-language\"><i class=\"mdi mdi-translate mr-15\"></i>Read the docs</el-dropdown-item>-->\r\n        <!--</el-dropdown-menu>-->\r\n        <!--</el-dropdown>-->\r\n        <!--<button class=\"fullscreen-button\" @click=\"toggleFullscreen\">-->\r\n          <!--<i class=\"mdi mdi-fullscreen\" v-if=\"!fullscreen\"></i>-->\r\n\r\n          <!--<i class=\"mdi mdi-fullscreen-exit\" v-if=\"fullscreen\"></i>-->\r\n        <!--</button>-->\r\n      \r\n        <!-- <el-popover ref=\"popover\" placement=\"bottom\" :width=\"popoverWidth\" trigger=\"click\">\r\n\r\n  <notification-box></notification-box>\r\n\r\n        </el-popover>-->\r\n         <el-badge :value=\"totalNotif\" :hidden=\"totalNotif === 0\" class=\"notification-icon-badge  \">\r\n            <el-button\r\n                    icon=\"mdi mdi-clipboard-text\"\r\n                    @click=\"inList\"\r\n                    class=\"notification-icon\"></el-button>\r\n        </el-badge>\r\n        <span class=\"bell\">\r\n            </span>\r\n        <span @click=\"goProfile\" class=\"username\"><router-link to=\"/profile\">{{profile.name}}</router-link></span>\r\n        <el-dropdown trigger=\"click\" @command=\"onCommand\">\r\n          <span class=\"el-dropdown-link\">\r\n            <div v-if=\"profile.profile_picture\">\r\n          <img :src=\"profile.profile_picture\" class=\"avatar\" alt=\"avatar\">\r\n        </div>\r\n            <div v-else>\r\n              <img src=\"../assets/images/avatar-3.jpg\" class=\"avatar\" alt=\"avatar\">\r\n            </div>\r\n          </span>\r\n          <el-dropdown-menu slot=\"dropdown\">\r\n            <!-- <el-dropdown-item command=\"/profile\"><i class=\"mdi mdi-account mr-10\"></i> Profile</el-dropdown-item>\r\n\r\n  <el-dropdown-item command=\"/calendar\"><i class=\"mdi mdi-calendar mr-10\"></i> Calendar</el-dropdown-item>\r\n\r\n  <el-dropdown-item command=\"/contacts\"><i class=\"mdi mdi-account-multiple mr-10\"></i> Contacts</el-dropdown-item>\r\n\r\n            <el-dropdown-item command=\"/logout\" divided ><i class=\"mdi mdi-logout mr-10\"></i> Logout</el-dropdown-item>-->\r\n            <el-dropdown-item command=\"/profile\">\r\n              <i class=\"mdi mdi-textbox-password\"> My Profile</i>\r\n            </el-dropdown-item>\r\n            <el-dropdown-item command=\"/forgot-password-page\">\r\n              <i class=\"mdi mdi-textbox-password\"> Forgot Password</i>\r\n            </el-dropdown-item>\r\n            <el-dropdown-item command=\"/change-password\">\r\n              <i class=\"mdi mdi-textbox\"> Change Password</i>\r\n            </el-dropdown-item>\r\n            <el-dropdown-item command=\"/logout\">\r\n              <i class=\"mdi mdi-logout mr-10\"> Logout </i>\r\n            </el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </el-dropdown>\r\n        <!-- -->\r\n        <button\r\n          @click=\"toggleSidebar\"\r\n          v-if=\"menuBurger === 'right'\"\r\n          class=\"toggle-sidebar toggle-sidebar__right card-base card-shadow--small\"\r\n        >\r\n          <i class=\"mdi mdi-menu\"></i>\r\n        </button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NotificationBox from \"@/components/NotificationBox\";\r\nimport Search from \"@/components/Search\";\r\nimport * as action from \"../store/action-types\";\r\nimport * as getter from \"../store/getters-types\";\r\nimport { mapGetters, mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"Toolbar\",\r\n  props: [\"menuBurger\"],\r\n  data() {\r\n    return {\r\n      popoverWidth: 300,\r\n      fullscreen: false,\r\n      lang: \"us\"\r\n    };\r\n  },\r\n  methods: {\r\n    // onCommandLang(lang) {\r\n    // \tif(lang.charAt(0) === '/')\r\n    // \t\tthis.onCommand(lang)\r\n    // \telse\r\n    // \t\tthis.lang = lang\r\n    // },\r\n    goProfile() {\r\n      this.$store.dispatch(action.DATA_PROFILE);\r\n      this.$router.push({\r\n        path: \"/profile/\"\r\n      });\r\n    },\r\n    onCommand(path) {\r\n      this.$router.push(path);\r\n    },\r\n    toggleSidebar() {\r\n      this.$emit(\"toggle-sidebar\");\r\n    },\r\n    resizePopoverWidth() {\r\n      if (window.innerWidth <= 768) {\r\n        this.popoverWidth = 250;\r\n      } else {\r\n        this.popoverWidth = 300;\r\n      }\r\n    },\r\n    toggleFullscreen() {\r\n      this.$fullscreen.toggle(document.querySelector(\"body\"), {\r\n        wrap: false,\r\n        callback: () => {\r\n          this.fullscreen = this.$fullscreen.getState();\r\n        }\r\n      });\r\n    },\r\n    async inList(){\r\n      await this.$store.dispatch(action.MARK_AS_READ);\r\n      this.$router.push('/order/open')\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      profile: getter.GET_DATA_PROFILE,\r\n      totalNotif : getter.GET_NOTIF\r\n    })\r\n  },\r\n  components: {\r\n    NotificationBox,\r\n    Search\r\n  },\r\n\r\n  mounted() {\r\n    this.fullscreen = this.$fullscreen.getState();\r\n    this.resizePopoverWidth();\r\n    window.addEventListener(\"resize\", this.resizePopoverWidth);\r\n    this.$store.dispatch(action.DATA_PROFILE);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener(\"resize\", this.resizePopoverWidth);\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../assets/scss/_variables\";\r\n@import \"../assets/scss/_mixins\";\r\n\r\n.toolbar {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n\r\n  .username {\r\n    margin-left: 20px;\r\n    font-weight: bold;\r\n    @include text-bordered-shadow();\r\n\r\n    a {\r\n      color: $text-color;\r\n      text-decoration: none;\r\n\r\n      &:hover {\r\n        color: $text-color-accent;\r\n      }\r\n    }\r\n  }\r\n\r\n  .avatar {\r\n    border-radius: 50%;\r\n    width: 45px;\r\n    height: 45px;\r\n    border: 1px solid #fff;\r\n    margin-left: 20px;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    cursor: pointer;\r\n    box-shadow: 0 2px 5px 0 rgba(49, 49, 93, 0.1),\r\n      0 1px 2px 0 rgba(0, 0, 0, 0.08);\r\n    transition: box-shadow 0.5s;\r\n\r\n    &:hover {\r\n      box-shadow: 0px 3px 10px 0 rgba(49, 49, 93, 0.08),\r\n        0px 2px 7px 0 rgba(0, 0, 0, 0.08);\r\n    }\r\n  }\r\n\r\n  .notification-icon {\r\n    font-size: 30px;\r\n    outline: none;\r\n    padding: 0;\r\n    right: 340px;\r\n    background: transparent;\r\n    border: none;\r\n    margin-left: 20px;\r\n    //color: #aab7c5;\r\n    color: transparentize($text-color, 0.7);\r\n    @include text-bordered-shadow();\r\n\r\n    &:hover {\r\n      color: $text-color-accent;\r\n    }\r\n  }\r\n\r\n  .toggle-sidebar {\r\n    border: 1px solid transparent;\r\n    height: 32px;\r\n    min-height: 32px;\r\n    line-height: 32px;\r\n    width: 32px;\r\n    min-width: 32px;\r\n    max-width: 32px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    margin: 0;\r\n    outline: none;\r\n    margin-right: 5px;\r\n    font-size: 24px;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    color: $text-color;\r\n    background: white;\r\n    display: none;\r\n    opacity: 0;\r\n    transition: all 0.5s;\r\n\r\n    &__right {\r\n      margin-right: 0px;\r\n      margin-left: 5px;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      color: $text-color-accent;\r\n      border-color: $text-color-accent;\r\n    }\r\n  }\r\n\r\n  .fullscreen-button {\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    padding: 0;\r\n    background: transparent;\r\n    border: none;\r\n    margin-left: 20px;\r\n    //color: #aab7c5;\r\n    color: transparentize($text-color, 0.7);\r\n    @include text-bordered-shadow();\r\n\r\n    &:hover {\r\n      color: $text-color-accent;\r\n    }\r\n  }\r\n\r\n  .el-dropdown {\r\n    .flag-icon {\r\n      box-shadow: 0 2px 5px 0 rgba(49, 49, 93, 0.1),\r\n        0 1px 2px 0 rgba(0, 0, 0, 0.08);\r\n      cursor: pointer;\r\n      border: 1px solid lighten($background-color, 20%);\r\n      background-color: lighten($background-color, 20%);\r\n    }\r\n  }\r\n}\r\n  .bell {\r\n    padding-right: 20px;\r\n    margin-top: 29px;\r\n    position: relative;\r\n  }\r\n  .bell:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 6px;\r\n    height: 25px;\r\n    width: 100%;\r\n    border-right: 1px solid $text-color-info;\r\n  }\r\n\r\n.el-badge__content .is-fixed::after {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 34px !important;\r\n  -webkit-transform: translateY(-50%) translateX(100%);\r\n  transform: translateY(-50%) translateX(100%);\r\n}\r\n@media (max-width: 650px) {\r\n  .toolbar {\r\n    .username {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .toolbar {\r\n    padding: 0 10px;\r\n\r\n    .toggle-sidebar {\r\n      display: block;\r\n      opacity: 1;\r\n    }\r\n\r\n    .fullscreen-button {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}