{"remainingRequest":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\faq\\list-faq-admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\src\\views\\pages\\faq\\list-faq-admin.vue","mtime":1644413760565},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\babel-loader\\lib\\index.js","mtime":1646338474621},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\GitHub\\operdev\\oper-customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport router from \"../../../router\";\r\n\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from '../../../store/mutation-types';\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n    name: \"ListDriver\",\r\n    data() {\r\n        return {\r\n            affixEnabled: true,\r\n            indexT: 1,\r\n            payload: {\r\n                idrole: 0,\r\n                page: 1,\r\n                idfaq: '',\r\n            },\r\n            select: [\r\n                {\r\n                    name: \"All Roles\",\r\n                    idrole: 0,\r\n                },\r\n                {\r\n                    name: \"Vendor\",\r\n                    idrole: 2,\r\n                },\r\n                {\r\n                    name: \"Enterprise\",\r\n                    idrole: 3,\r\n                },\r\n            ],\r\n        };\r\n    },\r\n    components: {\r\n        Affix\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            listData: getter.GET_LIST_FAQ,\r\n            paginate: getter.GET_PAGINATE_FAQ,\r\n            total: getter.GET_FAQ_TOTAL\r\n        }),\r\n        paginator() {\r\n            return this.paginate;\r\n        },\r\n        indexTam() {\r\n            return this.indexT;\r\n        },\r\n        forTotal() {\r\n            if (this.listData) {\r\n                return this.total;\r\n            }\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        handlePageChange(page) {\r\n            this.payload.page = page;\r\n            this.$store.dispatch(action.LIST_FAQ, this.payload);\r\n        },\r\n\r\n        Create() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$router.push({\r\n                name: \"NewFAQ\"\r\n            });\r\n        },\r\n\r\n        filterStatus(idrole) {\r\n            this.idrole = idrole;\r\n            this.$store.dispatch(action.LIST_FAQ, {\r\n                page: 1,\r\n                idrole: this.idrole\r\n            });\r\n        },\r\n\r\n        Edit(e) {\r\n            this.$store.dispatch(action.DETAIL_FAQ, e.id);\r\n        },\r\n        Delete(e) {\r\n           this.payload.idfaq = e.id\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.dispatch(action.DELETE_FAQ, this.payload);\r\n                }\r\n            });\r\n        }\r\n    },\r\n    async mounted() {\r\n        await this.$store.dispatch(action.LIST_FAQ, this.payload);\r\n    }\r\n};\r\n",{"version":3,"sources":["list-faq-admin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"list-faq-admin.vue","sourceRoot":"src/views/pages/faq","sourcesContent":["<template>\r\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\r\n    <div class=\"card-base card-shadow--medium bg-white\">\r\n        <el-row :gutter=\"10\">\r\n            <el-col :lg=\"4\">\r\n                <el-button @click=\"Create()\" style=\"width: 100%\" type=\"primary\">New FAQ</el-button>\r\n            </el-col>\r\n            <el-col :offset=\"14\" :lg=\"6\">\r\n                <el-select @change=\"filterStatus\" v-model=\"payload.idrole\" filterable placeholder=\"Select\">\r\n                    <el-option v-for=\"item in select\" :key=\"item.idrole\" :label=\"item.name\" :value=\"item.idrole\"></el-option>\r\n                </el-select>\r\n            </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"10\">\r\n            <el-col :lg=\"24\">\r\n                <el-table :default-sort=\"{prop: 'id', order: 'ascending'}\" :data=\"listData\" style=\"width: 100%\">\r\n                    <el-table-column align=\"center\" type=\"index\" :index=\"paginate.fromP\" label=\"No\" width=\"80\"></el-table-column>\r\n                    <el-table-column align=\"left\" prop=\"question\" label=\"Question\"></el-table-column>\r\n                    <el-table-column align=\"center\" width=\"200\" label=\"Role\">\r\n                        <template slot-scope=\"scope\">\r\n                            <div v-if=\"scope.row.idrole===2\">Vendor</div>\r\n                            <div v-else-if=\"scope.row.idrole===3\">Enterprise</div>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column align=\"center\" label=\"Operations\" width=\"120\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button @click=\"Edit(scope.row)\" type=\"primary\" icon=\"el-icon-edit\" circle></el-button>\r\n                            <el-button @click=\"Delete(scope.row)\" type=\"danger\" icon=\"el-icon-delete\" circle></el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n            </el-col>\r\n        </el-row>\r\n        <div align=\"right\">\r\n            <el-pagination background layout=\"prev, pager, next\" @current-change=\"handlePageChange\" :total=\"forTotal\"></el-pagination>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport router from \"../../../router\";\r\n\r\nimport Affix from \"@/components/Affix\";\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from \"vuex\";\r\nimport * as getter from \"../../../store/getters-types\";\r\nimport * as action from \"../../../store/action-types\";\r\nimport * as mutation from '../../../store/mutation-types';\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n    name: \"ListDriver\",\r\n    data() {\r\n        return {\r\n            affixEnabled: true,\r\n            indexT: 1,\r\n            payload: {\r\n                idrole: 0,\r\n                page: 1,\r\n                idfaq: '',\r\n            },\r\n            select: [\r\n                {\r\n                    name: \"All Roles\",\r\n                    idrole: 0,\r\n                },\r\n                {\r\n                    name: \"Vendor\",\r\n                    idrole: 2,\r\n                },\r\n                {\r\n                    name: \"Enterprise\",\r\n                    idrole: 3,\r\n                },\r\n            ],\r\n        };\r\n    },\r\n    components: {\r\n        Affix\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            listData: getter.GET_LIST_FAQ,\r\n            paginate: getter.GET_PAGINATE_FAQ,\r\n            total: getter.GET_FAQ_TOTAL\r\n        }),\r\n        paginator() {\r\n            return this.paginate;\r\n        },\r\n        indexTam() {\r\n            return this.indexT;\r\n        },\r\n        forTotal() {\r\n            if (this.listData) {\r\n                return this.total;\r\n            }\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        handlePageChange(page) {\r\n            this.payload.page = page;\r\n            this.$store.dispatch(action.LIST_FAQ, this.payload);\r\n        },\r\n\r\n        Create() {\r\n            this.$store.commit(mutation.BUTTON_STATUS, false)\r\n            this.$router.push({\r\n                name: \"NewFAQ\"\r\n            });\r\n        },\r\n\r\n        filterStatus(idrole) {\r\n            this.idrole = idrole;\r\n            this.$store.dispatch(action.LIST_FAQ, {\r\n                page: 1,\r\n                idrole: this.idrole\r\n            });\r\n        },\r\n\r\n        Edit(e) {\r\n            this.$store.dispatch(action.DETAIL_FAQ, e.id);\r\n        },\r\n        Delete(e) {\r\n           this.payload.idfaq = e.id\r\n            Swal.fire({\r\n                title: \"Are you sure?\",\r\n                text: \"You won't be able to revert this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"Yes, delete it!\"\r\n            }).then(result => {\r\n                if (result.value) {\r\n                    this.$store.dispatch(action.DELETE_FAQ, this.payload);\r\n                }\r\n            });\r\n        }\r\n    },\r\n    async mounted() {\r\n        await this.$store.dispatch(action.LIST_FAQ, this.payload);\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../../assets/scss/_variables\";\r\n\r\n.card-base {\r\n    padding: 20px;\r\n}\r\n\r\n.el-row {\r\n    // display: flex;\r\n    // align-items: center;\r\n    // justify-content: center;\r\n    padding: 0px 10px;\r\n    margin-bottom: 20px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 5px;\r\n}\r\n\r\n.el-select {\r\n    width: 100%;\r\n}\r\n\r\na {\r\n    border-style: dotted;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n    height: 150px;\r\n}\r\n\r\ntd {\r\n    padding: 10px;\r\n}\r\n</style>\r\n"]}]}