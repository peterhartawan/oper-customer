{"remainingRequest":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/faq/list-faq-admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/src/views/pages/faq/list-faq-admin.vue","mtime":1628175042626},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter.hartawan/Personal/Workspace/docker-config/htdocs/oper/oper-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport router from \"../../../router\";\n\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types';\n\nimport Swal from \"sweetalert2\";\n\nexport default {\n    name: \"ListDriver\",\n    data() {\n        return {\n            affixEnabled: true,\n            indexT: 1,\n            payload: {\n                idrole: 0,\n                page: 1,\n                idfaq: '',\n            },\n            select: [\n                {\n                    name: \"All Roles\",\n                    idrole: 0,\n                },\n                {\n                    name: \"Vendor\",\n                    idrole: 2,\n                },\n                {\n                    name: \"Enterprise\",\n                    idrole: 3,\n                },\n            ],\n        };\n    },\n    components: {\n        Affix\n    },\n    computed: {\n        ...mapGetters({\n            listData: getter.GET_LIST_FAQ,\n            paginate: getter.GET_PAGINATE_FAQ,\n            total: getter.GET_FAQ_TOTAL\n        }),\n        paginator() {\n            return this.paginate;\n        },\n        indexTam() {\n            return this.indexT;\n        },\n        forTotal() {\n            if (this.listData) {\n                return this.total;\n            }\n        },\n    },\n\n    methods: {\n        handlePageChange(page) {\n            this.payload.page = page;\n            this.$store.dispatch(action.LIST_FAQ, this.payload);\n        },\n\n        Create() {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$router.push({\n                name: \"NewFAQ\"\n            });\n        },\n\n        filterStatus(idrole) {\n            this.idrole = idrole;\n            this.$store.dispatch(action.LIST_FAQ, {\n                page: 1,\n                idrole: this.idrole\n            });\n        },\n\n        Edit(e) {\n            this.$store.dispatch(action.DETAIL_FAQ, e.id);\n        },\n        Delete(e) {\n           this.payload.idfaq = e.id\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.dispatch(action.DELETE_FAQ, this.payload);\n                }\n            });\n        }\n    },\n    async mounted() {\n        await this.$store.dispatch(action.LIST_FAQ, this.payload);\n    }\n};\n",{"version":3,"sources":["list-faq-admin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"list-faq-admin.vue","sourceRoot":"src/views/pages/faq","sourcesContent":["<template>\n<div class=\"page-table scrollable only-y\" id=\"affix-container\">\n    <div class=\"card-base card-shadow--medium bg-white\">\n        <el-row :gutter=\"10\">\n            <el-col :lg=\"4\">\n                <el-button @click=\"Create()\" style=\"width: 100%\" type=\"primary\">New FAQ</el-button>\n            </el-col>\n            <el-col :offset=\"14\" :lg=\"6\">\n                <el-select @change=\"filterStatus\" v-model=\"payload.idrole\" filterable placeholder=\"Select\">\n                    <el-option v-for=\"item in select\" :key=\"item.idrole\" :label=\"item.name\" :value=\"item.idrole\"></el-option>\n                </el-select>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"10\">\n            <el-col :lg=\"24\">\n                <el-table :default-sort=\"{prop: 'id', order: 'ascending'}\" :data=\"listData\" style=\"width: 100%\">\n                    <el-table-column align=\"center\" type=\"index\" :index=\"paginate.fromP\" label=\"No\" width=\"80\"></el-table-column>\n                    <el-table-column align=\"left\" prop=\"question\" label=\"Question\"></el-table-column>\n                    <el-table-column align=\"center\" width=\"200\" label=\"Role\">\n                        <template slot-scope=\"scope\">\n                            <div v-if=\"scope.row.idrole===2\">Vendor</div>\n                            <div v-else-if=\"scope.row.idrole===3\">Enterprise</div>\n                        </template>\n                    </el-table-column>\n                    <el-table-column align=\"center\" label=\"Operations\" width=\"120\">\n                        <template slot-scope=\"scope\">\n                            <el-button @click=\"Edit(scope.row)\" type=\"primary\" icon=\"el-icon-edit\" circle></el-button>\n                            <el-button @click=\"Delete(scope.row)\" type=\"danger\" icon=\"el-icon-delete\" circle></el-button>\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </el-col>\n        </el-row>\n        <div align=\"right\">\n            <el-pagination background layout=\"prev, pager, next\" @current-change=\"handlePageChange\" :total=\"forTotal\"></el-pagination>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport router from \"../../../router\";\n\nimport Affix from \"@/components/Affix\";\nimport {\n    mapGetters,\n    mapActions\n} from \"vuex\";\nimport * as getter from \"../../../store/getters-types\";\nimport * as action from \"../../../store/action-types\";\nimport * as mutation from '../../../store/mutation-types';\n\nimport Swal from \"sweetalert2\";\n\nexport default {\n    name: \"ListDriver\",\n    data() {\n        return {\n            affixEnabled: true,\n            indexT: 1,\n            payload: {\n                idrole: 0,\n                page: 1,\n                idfaq: '',\n            },\n            select: [\n                {\n                    name: \"All Roles\",\n                    idrole: 0,\n                },\n                {\n                    name: \"Vendor\",\n                    idrole: 2,\n                },\n                {\n                    name: \"Enterprise\",\n                    idrole: 3,\n                },\n            ],\n        };\n    },\n    components: {\n        Affix\n    },\n    computed: {\n        ...mapGetters({\n            listData: getter.GET_LIST_FAQ,\n            paginate: getter.GET_PAGINATE_FAQ,\n            total: getter.GET_FAQ_TOTAL\n        }),\n        paginator() {\n            return this.paginate;\n        },\n        indexTam() {\n            return this.indexT;\n        },\n        forTotal() {\n            if (this.listData) {\n                return this.total;\n            }\n        },\n    },\n\n    methods: {\n        handlePageChange(page) {\n            this.payload.page = page;\n            this.$store.dispatch(action.LIST_FAQ, this.payload);\n        },\n\n        Create() {\n            this.$store.commit(mutation.BUTTON_STATUS, false)\n            this.$router.push({\n                name: \"NewFAQ\"\n            });\n        },\n\n        filterStatus(idrole) {\n            this.idrole = idrole;\n            this.$store.dispatch(action.LIST_FAQ, {\n                page: 1,\n                idrole: this.idrole\n            });\n        },\n\n        Edit(e) {\n            this.$store.dispatch(action.DETAIL_FAQ, e.id);\n        },\n        Delete(e) {\n           this.payload.idfaq = e.id\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\"\n            }).then(result => {\n                if (result.value) {\n                    this.$store.dispatch(action.DELETE_FAQ, this.payload);\n                }\n            });\n        }\n    },\n    async mounted() {\n        await this.$store.dispatch(action.LIST_FAQ, this.payload);\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../../assets/scss/_variables\";\n\n.card-base {\n    padding: 20px;\n}\n\n.el-row {\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    padding: 0px 10px;\n    margin-bottom: 20px;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n}\n\n.el-col {\n    border-radius: 5px;\n}\n\n.el-select {\n    width: 100%;\n}\n\na {\n    border-style: dotted;\n    border-radius: 15px;\n    padding: 10px;\n    height: 150px;\n}\n\ntd {\n    padding: 10px;\n}\n</style>\n"]}]}